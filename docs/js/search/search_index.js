var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,0.94,1,0.662]],["body/interfaces/Account.html",[0,1.038,1,1.082,2,1.341,3,0.161,4,0.202,5,0.181,6,3.28,7,0.29,8,0.542,9,3.02,10,3.342,11,3.527,12,2.877,13,4.537,14,2.295,15,3.02,16,3.527,17,3.342,18,2.506,19,3.174,20,3.733,21,1.193,22,0.017,23,2.452,24,0.524,25,3.583,26,3.589,27,2.167,28,2.37,29,2.869,30,0.313,31,4.236,32,0.267,33,1.401,34,2.996,35,0.012,36,0.012]],["title/injectables/AccountGQL.html",[37,1.024,38,2.508]],["body/injectables/AccountGQL.html",[1,0.864,3,0.19,4,0.239,5,0.214,7,0.343,8,0.604,9,2.713,10,3.002,11,3.169,12,2.585,14,2.062,15,2.713,16,3.169,18,2.729,19,2.851,20,3.353,21,1.016,22,0.017,24,0.465,30,0.502,32,0.339,35,0.013,36,0.013,37,1.664,38,4.077,39,2.179,40,3.877,41,3.353,42,4.175,43,4.137,44,0.824,45,0.786,46,3.878,47,6.235,48,6.235,49,3.169,50,0.824,51,5.008,52,3.799,53,2.694,54,2.861,55,0.578,56,3.561,57,1.809,58,4.326,59,4.326,60,4.326,61,3.052,62,2.861,63,0.485]],["title/components/AccountInputComponent.html",[64,0.164,65,0.827]],["body/components/AccountInputComponent.html",[1,1.07,3,0.095,4,0.119,5,0.107,7,0.17,8,0.371,18,1.382,21,0.928,22,0.017,23,1.586,24,0.48,27,0.86,30,0.495,32,0.119,35,0.008,36,0.008,44,1.154,45,1.101,50,1.218,55,0.287,57,0.899,63,0.241,64,0.2,65,1.284,66,0.861,67,0.585,68,0.585,69,0.585,70,6.425,71,6.425,72,1.762,73,1.382,74,1.932,75,3.608,76,0.514,77,1.843,78,2.707,79,3.608,80,2.707,81,0.988,82,2.963,83,3.296,84,1.721,85,1.716,86,2.988,87,0.79,88,0.899,89,1.844,90,2.662,91,3.296,92,2.244,93,3.296,94,3.608,95,0.899,96,2.963,97,0.899,98,2.963,99,4.661,100,4.026,101,4.661,102,4.661,103,2.192,104,4.661,105,4.661,106,2.028,107,2.658,108,4.37,109,4.37,110,0.861,111,3.827,112,2.168,113,2.963,114,2.963,115,2.963,116,4.049,117,1.945,118,3.608,119,3.028,120,4.37,121,3.608,122,2.491,123,2.152,124,1.728,125,2.152,126,2.152,127,3.827,128,2.491,129,1.52,130,0.781,131,1.229,132,1.928,133,1.341,134,2.491,135,2.963,136,2.491,137,2.963,138,2.491,139,2.963,140,1.932,141,2.491,142,2.491,143,2.507,144,3.827,145,2.491,146,2.718,147,2.929,148,2.491,149,2.491,150,3.608,151,3.827,152,3.827,153,2.491,154,3.827,155,2.152,156,3.608,157,2.152,158,1.665,159,2.152,160,1.945,161,2.152,162,1.843,163,2.491,164,2.491,165,0.724,166,1.084,167,1.084,168,1.161,169,0.824,170,1.34,171,1.762,172,1.199,173,1.199,174,0.941,175,1.928,176,3.306,177,0.985,178,0.941,179,0.561,180,0.561,181,1.266,182,1.518,183,0.585,184,2.491,185,2.491,186,2.491,187,4.661,188,2.152,189,1.928,190,2.152,191,2.491,192,1.266,193,1.928,194,1.928,195,1.844,196,2.491,197,2.491,198,2.058,199,0.941,200,1.423,201,2.491,202,1.382,203,1.266,204,1.266,205,1.139,206,2.491,207,2.491,208,2.491,209,1.928,210,1.928,211,1.928,212,2.963,213,0.585,214,0.899,215,0.861,216,0.492,217,1.229,218,0.585,219,1.095,220,0.537,221,0.585,222,0.537,223,0.825,224,0.585,225,0.537,226,0.585,227,0.537,228,0.585,229,0.537,230,0.585,231,0.585,232,0.537,233,0.585,234,0.537,235,0.585,236,0.537,237,0.585,238,0.537,239,0.585,240,0.537,241,0.585,242,0.537,243,0.585,244,0.537,245,0.585,246,0.537,247,0.585,248,0.537,249,0.585,250,0.537,251,0.585,252,0.537,253,0.585,254,0.537,255,0.45,256,0.537,257,0.585,258,0.537,259,0.899,260,0.585,261,0.537,262,0.585,263,0.537,264,0.585,265,0.537,266,0.841,267,0.585,268,0.537,269,0.585,270,0.537,271,0.561,272,0.585,273,0.537,274,0.537,275,0.561,276,0.514,277,0.561,278,0.585]],["title/interfaces/AccountModel.html",[0,0.94,56,2.191]],["body/interfaces/AccountModel.html",[0,1.403,2,1.387,3,0.166,4,0.209,5,0.188,7,0.3,8,0.554,9,2.942,10,3.256,11,3.436,12,2.909,14,2.32,15,3.053,16,3.436,17,3.256,18,2.534,19,3.092,20,3.637,21,1.193,22,0.017,23,2.412,24,0.529,25,4.294,26,3.637,27,2.203,28,2.409,29,2.916,30,0.423,32,0.273,35,0.012,36,0.012,56,3.27,57,1.582,182,2.669,279,3.392,280,3.862,281,4.421,282,2.675,283,2.003]],["title/injectables/AccountService.html",[37,1.024,284,2.508]],["body/injectables/AccountService.html",[3,0.183,4,0.23,5,0.207,7,0.33,8,0.59,22,0.017,24,0.457,30,0.545,32,0.23,33,1.596,35,0.013,36,0.013,37,1.626,39,2.1,44,0.795,45,0.758,50,1.099,55,0.557,57,1.743,61,2.941,62,2.757,63,0.467,103,2.114,110,1.371,129,1.771,130,0.743,131,1.431,133,1.371,165,1.403,282,1.91,283,2.208,284,3.984,285,4.17,286,3.156,287,4.722,288,5.264,289,5.264,290,6.093,291,6.058,292,4.827,293,4.717,294,6.093,295,6.058,296,4.827,297,4.722,298,4.309,299,4.827,300,2.941,301,3.156,302,3.414,303,3.097,304,5.264,305,1.743,306,4.17,307,4.17,308,4.17,309,4.17,310,4.17,311,6.093,312,4.827,313,2.2,314,4.17,315,4.827,316,4.827,317,4.827,318,4.827]],["title/interfaces/AccountShortModel.html",[0,0.94,182,2.337]],["body/interfaces/AccountShortModel.html",[0,1.533,2,1.593,3,0.191,4,0.24,5,0.215,7,0.344,8,0.605,9,2.19,10,2.423,11,2.558,12,3.035,14,2.42,15,3.185,16,2.558,17,2.423,18,2.643,19,2.302,20,2.707,21,1.195,22,0.017,23,2.387,24,0.487,25,3.887,26,3.364,27,1.739,28,1.901,29,2.302,30,0.462,32,0.299,35,0.013,36,0.013,56,2.875,57,1.817,182,3.811,279,3.896,280,2.875,281,3.29,282,2.474,283,2.302]],["title/injectables/AccountsInfoByUsernameGQL.html",[37,1.024,83,2.713]],["body/injectables/AccountsInfoByUsernameGQL.html",[3,0.258,4,0.239,5,0.214,7,0.342,8,0.603,12,2.582,14,2.06,15,2.71,18,2.728,21,1.015,22,0.017,24,0.464,28,2.353,30,0.501,32,0.339,35,0.013,36,0.013,37,1.663,39,2.175,41,3.35,42,4.173,43,4.134,44,0.823,45,0.785,46,3.875,50,0.823,52,3.795,53,2.689,54,2.856,55,0.577,57,1.806,63,0.484,83,4.405,100,5.861,156,3.871,182,3.795,319,4.822,320,3.871,321,6.228,322,4.822,323,4.822,324,2.999,325,6.228,326,3.558,327,5,328,4.319,329,4.319]],["title/interfaces/ApiError.html",[0,0.94,330,2.713]],["body/interfaces/ApiError.html",[0,1.629,2,1.76,3,0.211,4,0.265,5,0.238,7,0.381,8,0.643,21,1.194,22,0.016,24,0.504,32,0.317,35,0.014,36,0.014,131,1.561,205,3.368,286,4.922,330,4.7,331,4.305,332,5.828,333,4.815,334,3.933,335,4.803,336,2.677]],["title/components/AppComponent.html",[64,0.164,220,0.827]],["body/components/AppComponent.html",[1,0.488,3,0.107,4,0.135,5,0.121,7,0.194,8,0.408,12,1.748,18,1.022,22,0.017,24,0.288,27,0.978,30,0.554,32,0.135,33,0.936,35,0.009,36,0.009,44,1.03,45,0.982,50,1.141,55,0.327,62,2.408,63,0.274,64,0.216,65,0.61,66,0.949,67,0.665,68,0.665,69,0.665,73,1.522,74,2.088,76,0.584,77,2.03,81,0.796,84,1.743,85,1.739,87,0.87,88,0.99,89,1.992,95,0.99,97,0.99,103,2.254,106,2.192,110,0.949,112,2.314,124,1.662,129,0.822,130,0.83,131,0.665,133,1.134,158,1.834,165,0.822,167,1.231,168,1.528,169,0.936,174,1.069,177,1.119,178,1.069,179,0.637,180,0.637,183,0.665,199,1.069,202,1.022,213,0.665,214,0.99,215,0.949,216,0.559,217,1.311,218,0.665,219,1.183,220,1.203,221,0.665,222,0.61,223,1.286,224,0.665,225,0.61,226,0.665,227,0.61,228,0.665,229,0.61,230,0.665,231,0.665,232,0.61,233,0.665,234,0.61,235,0.665,236,0.61,237,0.665,238,0.61,239,0.665,240,1.203,241,0.665,242,0.61,243,0.665,244,0.61,245,0.665,246,1.203,247,0.665,248,1.203,249,0.665,250,0.61,251,0.665,252,1.203,253,0.665,254,0.61,255,0.511,256,0.61,257,0.665,258,0.61,259,0.99,260,0.665,261,0.61,262,0.665,263,0.61,264,0.665,265,0.61,266,0.909,267,0.665,268,0.61,269,0.665,270,0.61,271,0.637,272,0.665,273,0.61,274,0.61,275,0.949,276,1.291,277,0.637,278,0.665,300,1.724,303,2.142,313,1.022,336,2.426,337,2.445,338,3.293,339,5.037,340,5.037,341,3.563,342,5.037,343,4.351,344,5.037,345,2.877,346,4.215,347,4.215,348,3.069,349,2.552,350,3.9,351,3.293,352,3.641,353,3.649,354,2.56,355,4.215,356,4.215,357,2.83,358,3.641,359,2.142,360,4.215,361,2.83,362,4.215,363,2.83,364,2.83,365,2.142,366,2.83,367,2.981,368,2.83,369,2.03,370,2.83,371,3.641,372,2.83,373,3.069,374,3.641,375,2.83,376,2.001,377,2.191,378,3.263,379,1.022,380,2.445,381,2.191,382,1.119,383,1.438,384,1.724,385,1.231,386,3.263,387,3.263,388,3.263,389,2.191,390,1.85,391,2.83,392,2.83,393,2.83,394,2.445,395,4.215,396,4.351,397,2.83,398,4.215,399,2.191,400,2.83,401,2.83,402,1.85,403,2.408,404,2.83,405,2.83,406,2.191,407,2.83,408,2.445,409,2.83,410,2.83,411,2.83,412,1.85,413,2.83,414,5.037,415,1.438,416,2.001,417,2.83,418,2.83,419,2.83,420,2.83,421,1.85,422,4.215,423,3.263,424,6.257,425,3.641]],["title/components/AuthCallbackComponent.html",[64,0.164,222,0.827]],["body/components/AuthCallbackComponent.html",[1,0.564,3,0.124,4,0.156,5,0.14,7,0.224,8,0.454,22,0.017,24,0.375,30,0.529,32,0.156,33,1.082,35,0.01,36,0.01,44,1.084,45,1.034,50,1.142,55,0.378,63,0.317,64,0.234,65,0.705,66,1.055,67,0.769,68,0.769,69,0.769,73,1.693,74,2.27,76,0.675,81,0.885,84,1.766,85,1.762,87,0.967,88,1.101,89,2.166,95,1.101,97,1.101,103,2.374,110,1.055,112,2.479,124,1.665,130,0.846,133,1.055,143,2.945,165,0.951,168,0.992,169,1.082,177,1.294,178,1.236,179,0.736,180,0.736,183,0.769,195,1.294,199,1.236,202,1.182,213,0.769,214,1.101,215,1.055,216,0.646,217,1.405,218,0.769,219,1.286,220,0.705,221,0.769,222,1.289,223,1.563,224,0.769,225,0.705,226,0.769,227,1.289,228,0.769,229,0.705,230,0.769,231,0.769,232,0.705,233,0.769,234,0.705,235,0.769,236,0.705,237,0.769,238,0.705,239,0.769,240,0.705,241,0.769,242,0.705,243,0.769,244,0.705,245,0.769,246,0.705,247,0.769,248,0.705,249,0.769,250,0.705,251,0.769,252,0.705,253,0.769,254,0.705,255,0.591,256,0.705,257,0.769,258,0.705,259,1.101,260,0.769,261,0.705,262,0.769,263,0.705,264,0.769,265,0.705,266,0.989,267,0.769,268,0.705,269,0.769,270,0.705,271,0.736,272,0.769,273,0.705,274,0.705,275,0.736,276,0.675,277,0.736,278,0.769,301,2.139,305,1.693,338,3.581,345,3.615,349,2.735,351,3.581,353,3.91,359,2.382,365,2.382,369,2.257,373,3.337,379,1.182,382,1.294,385,1.424,390,2.139,402,3.064,403,2.677,415,1.663,421,2.139,423,3.629,426,6.101,427,2.827,428,4.687,429,4.687,430,4.687,431,3.731,432,2.783,433,4.687,434,3.272,435,4.687,436,3.272,437,3.272,438,3.581,439,4.687,440,3.272,441,3.315,442,3.272,443,3.315,444,3.272,445,3.272,446,3.272,447,2.314,448,3.272,449,3.272,450,3.315,451,2.314,452,3.272,453,3.629,454,2.827,455,2.533,456,2.533,457,2.827,458,1.76,459,2.533,460,2.533,461,2.314]],["title/components/AuthComponent.html",[64,0.164,225,0.827]],["body/components/AuthComponent.html",[1,0.642,3,0.141,4,0.178,5,0.159,7,0.255,8,0.497,21,0.768,22,0.017,23,2.014,24,0.351,27,2.187,28,1.939,30,0.52,32,0.178,35,0.011,36,0.011,44,0.967,45,0.922,50,1.042,55,0.43,63,0.36,64,0.251,65,0.802,66,1.155,67,0.875,68,0.875,69,0.875,73,1.854,74,2.435,76,0.768,81,0.969,84,1.783,85,1.781,87,1.059,88,1.206,95,1.206,97,1.206,110,1.155,112,2.625,124,1.429,130,0.837,133,0.838,165,1.082,168,1.129,174,1.407,179,0.838,180,0.838,183,0.875,213,0.875,214,1.206,215,1.155,216,0.735,217,1.487,218,0.875,219,1.38,220,0.802,221,0.875,222,0.802,223,1.431,224,0.875,225,1.364,226,0.875,227,0.802,228,0.875,229,0.802,230,0.875,231,0.875,232,0.802,233,0.875,234,0.802,235,0.875,236,0.802,237,0.875,238,0.802,239,0.875,240,0.802,241,0.875,242,0.802,243,0.875,244,0.802,245,0.875,246,0.802,247,0.875,248,0.802,249,0.875,250,0.802,251,0.875,252,0.802,253,0.875,254,0.802,255,0.672,256,0.802,257,0.875,258,1.364,259,1.487,260,0.875,261,1.364,262,0.875,263,0.802,264,0.875,265,0.802,266,1.06,267,0.875,268,0.802,269,0.875,270,0.802,271,0.838,272,0.875,273,0.802,274,0.802,275,0.838,276,0.768,277,0.838,278,0.875,336,2.472,359,1.892,379,1.345,388,3.974,403,2.127,432,2.985,443,3.63,447,2.633,462,3.217,463,5.873,464,5.132,465,5.132,466,7.034,467,4.547,468,5.132,469,3.723,470,3.723,471,3.723,472,3.723,473,3.974,474,2.883,475,3.723,476,2.883,477,3.723,478,2.883,479,3.723]],["title/interfaces/AuthModel.html",[0,0.94,480,2.713]],["body/interfaces/AuthModel.html",[0,1.42,2,1.833,3,0.22,4,0.276,5,0.248,7,0.396,8,0.659,21,1.154,22,0.016,24,0.466,30,0.428,32,0.276,35,0.014,36,0.014,41,3.661,56,4.13,480,4.815,481,5.002,482,7.463,483,7.463,484,5.79]],["title/components/AuthPassComponent.html",[64,0.164,227,0.827]],["body/components/AuthPassComponent.html",[1,0.489,3,0.108,4,0.135,5,0.121,7,0.194,8,0.409,21,0.425,22,0.017,24,0.429,30,0.503,32,0.135,33,0.938,35,0.009,36,0.009,44,1.097,45,1.019,50,1.158,55,0.327,63,0.275,64,0.216,65,0.612,66,0.951,67,0.667,68,0.667,69,0.667,73,1.525,74,2.092,76,0.585,81,0.798,84,1.743,85,1.74,87,0.872,88,0.992,89,1.996,92,2.43,95,0.992,97,0.992,103,2.319,106,2.195,110,0.951,112,2.317,119,3.037,124,1.664,129,0.825,130,0.83,131,0.667,133,1.135,143,2.714,158,1.838,165,0.825,166,1.235,167,1.235,168,0.861,169,0.938,177,1.122,178,1.072,179,0.639,180,0.639,183,0.667,195,1.122,202,1.025,213,0.667,214,0.992,215,0.951,216,0.56,217,1.313,218,0.667,219,1.185,220,0.612,221,0.667,222,0.612,223,1.437,224,0.667,225,0.612,226,0.667,227,1.205,228,0.667,229,0.612,230,0.667,231,0.667,232,0.612,233,0.667,234,0.612,235,0.667,236,0.612,237,0.667,238,0.612,239,0.667,240,0.612,241,0.667,242,0.612,243,0.667,244,0.612,245,0.667,246,0.612,247,0.667,248,0.612,249,0.667,250,0.612,251,0.667,252,0.612,253,0.667,254,0.612,255,0.512,256,0.612,257,0.667,258,0.612,259,0.992,260,0.667,261,0.612,262,0.667,263,0.612,264,0.667,265,0.612,266,0.911,267,0.667,268,0.612,269,0.667,270,0.612,271,0.639,272,0.667,273,0.612,274,0.612,275,0.639,276,0.585,277,0.639,278,0.667,301,1.855,305,2.541,313,1.025,338,3.299,345,2.882,351,3.299,353,3.654,354,1.442,359,2.147,373,3.074,379,1.025,390,1.855,403,2.413,421,1.855,431,3.369,432,2.564,438,4.242,441,2.987,443,2.987,447,2.007,450,2.987,451,2.007,453,2.197,454,2.451,461,2.007,485,6.154,486,2.451,487,4.626,488,4.224,489,4.224,490,3.906,491,3.299,492,4.327,493,2.197,494,4.327,495,2.837,496,3.27,497,4.224,498,2.837,499,4.224,500,2.837,501,2.837,502,2.837,503,3.578,504,5.162,505,2.837,506,2.987,507,2.837,508,2.837,509,2.837,510,2.837,511,2.837,512,2.987,513,2.007,514,2.837,515,1.855,516,2.837,517,2.197,518,2.197,519,2.987,520,2.451,521,2.197,522,2.837,523,2.197,524,3.27,525,2.837,526,4.224,527,4.224,528,3.649,529,2.837,530,2.837,531,2.837,532,2.837,533,2.007,534,3.568,535,2.451,536,4.327,537,5.045,538,2.837,539,2.837,540,2.451,541,2.837,542,2.197,543,2.197,544,2.197]],["title/injectables/AuthService.html",[37,1.024,382,1.517]],["body/injectables/AuthService.html",[2,1.013,3,0.122,4,0.153,5,0.137,7,0.219,8,0.447,9,2.576,10,1.541,11,1.627,12,1.327,13,2.093,14,1.058,15,1.393,16,1.627,17,1.541,18,1.156,19,1.464,20,1.721,22,0.017,23,2.043,24,0.499,26,1.721,30,0.519,32,0.153,35,0.01,36,0.01,37,1.231,39,1.393,44,1.135,45,1.083,50,1.244,55,0.369,57,1.156,61,1.95,62,1.828,63,0.31,103,1.713,110,1.038,124,1.285,129,1.72,130,0.722,131,1.391,132,2.478,133,1.581,143,4.1,146,2.605,147,3.154,150,5.216,165,0.93,171,2.264,172,1.541,173,1.541,177,1.266,283,1.464,287,3.826,293,5.061,297,3.826,298,3.263,300,1.95,301,2.093,302,2.264,303,2.344,305,1.666,313,2.575,314,2.765,378,3.572,382,1.825,412,3.536,415,1.627,416,2.264,431,3.516,438,3.536,451,4.187,457,3.985,458,2.481,480,4.187,491,2.093,506,3.263,545,2.765,546,5.647,547,5.409,548,5.919,549,5.919,550,5.919,551,3.985,552,3.985,553,5.919,554,3.985,555,3.2,556,3.2,557,3.2,558,3.2,559,4.613,560,3.2,561,4.613,562,5.114,563,3.2,564,4.613,565,3.2,566,3.2,567,4.613,568,5.114,569,3.2,570,4.613,571,3.2,572,4.613,573,3.2,574,4.613,575,4.613,576,3.2,577,4.613,578,3.2,579,4.613,580,3.2,581,3.2,582,4.613,583,3.2,584,3.2,585,2.765,586,2.478,587,3.985,588,3.985,589,1.95,590,2.264,591,3.2,592,3.2,593,3.2,594,3.2,595,3.2,596,3.2,597,3.2,598,3.2,599,3.2,600,3.2,601,3.2,602,3.2,603,3.2,604,3.2,605,4.613,606,4.613,607,3.2,608,3.2,609,3.2,610,3.2,611,3.2,612,3.2,613,3.2,614,2.478,615,2.765,616,3.2,617,3.2,618,3.2,619,3.2,620,3.2,621,3.2,622,3.2,623,3.2]],["title/interfaces/AuthenticatedUser.html",[0,0.94,589,2.337]],["body/interfaces/AuthenticatedUser.html",[0,1.341,1,1.217,2,1.732,3,0.208,4,0.261,5,0.234,7,0.374,8,0.637,9,2.38,10,2.635,11,2.781,12,2.268,13,3.577,14,1.809,15,2.38,16,2.781,17,2.635,18,1.976,19,2.502,20,2.943,21,1.056,22,0.017,23,2.422,24,0.374,30,0.404,32,0.314,33,1.809,35,0.014,36,0.014,41,3.54,491,4.9,589,4.301,590,3.87,624,4.236,625,4.236,626,5.471]],["title/components/ChangeAvatarComponent.html",[64,0.164,229,0.827]],["body/components/ChangeAvatarComponent.html",[1,0.933,3,0.101,4,0.127,5,0.172,7,0.182,8,0.39,9,1.751,14,1.605,21,0.87,22,0.017,23,1.641,24,0.418,30,0.512,32,0.127,35,0.008,36,0.008,44,0.957,45,0.913,50,1.182,55,0.307,57,0.961,63,0.258,64,0.208,65,0.573,66,0.906,67,0.625,68,0.625,69,0.625,76,0.549,81,0.76,84,1.733,85,1.728,87,0.83,88,0.945,89,1.92,90,2.773,92,2.338,95,0.945,97,0.945,103,2.386,106,2.112,107,2.75,110,0.906,124,1.703,129,1.411,130,0.774,131,1.14,133,1.376,140,1.669,146,2.338,147,1.217,158,1.751,160,2.045,165,1.17,166,1.158,167,1.158,168,1.221,169,0.88,170,1.431,172,1.281,173,1.281,174,1.005,177,1.053,178,1.005,179,0.599,180,0.599,183,0.625,192,2.467,193,3.758,195,1.92,198,1.431,199,1.834,200,3.091,202,1.954,203,1.352,205,1.217,213,0.625,214,0.945,215,0.906,216,0.525,217,1.271,218,0.625,219,1.14,220,0.573,221,0.625,222,0.573,223,0.867,224,0.625,225,0.573,226,0.625,227,0.573,228,0.625,229,1.166,230,1.492,231,0.625,232,0.573,233,0.625,234,0.573,235,0.625,236,0.573,237,0.625,238,0.573,239,0.625,240,0.573,241,0.625,242,0.573,243,0.625,244,0.573,245,0.625,246,0.573,247,0.625,248,0.573,249,0.625,250,0.573,251,0.625,252,0.573,253,0.625,254,0.573,255,0.48,256,0.573,257,0.625,258,0.573,259,0.945,260,0.625,261,0.573,262,0.625,263,0.573,264,0.625,265,0.573,266,0.876,267,0.625,268,0.573,269,0.625,270,0.573,271,0.599,272,0.625,273,0.573,274,0.573,275,0.599,276,0.549,277,0.599,278,0.625,282,2.419,284,1.74,288,5.282,289,5.021,305,1.453,313,1.954,345,2.773,354,2.045,385,1.158,415,1.352,431,2.611,503,1.52,585,2.299,587,2.299,614,2.06,627,6.256,628,5.607,629,2.299,630,4.193,631,2.611,632,3.433,633,4.025,634,4.025,635,5.021,636,3.828,637,3.433,638,4.854,639,5.021,640,4.025,641,4.675,642,4.025,643,2.299,644,4.19,645,4.025,646,3.477,647,2.661,648,4.025,649,2.661,650,2.661,651,2.661,652,4.025,653,2.661,654,2.661,655,4.025,656,2.661,657,2.661,658,3.116,659,2.661,660,2.661,661,2.847,662,2.661,663,2.661,664,2.06,665,2.299,666,1.621,667,1.74,668,2.661,669,2.299,670,5.412,671,2.661,672,4.025,673,2.661,674,2.299,675,3.477,676,4.854,677,4.025,678,4.025,679,4.854,680,4.025,681,2.661,682,2.661,683,2.661,684,4.025,685,5.021,686,2.661,687,2.661,688,2.661,689,2.661,690,2.299,691,2.661,692,2.661,693,2.661,694,2.661]],["title/components/ChatsComponent.html",[64,0.164,232,0.827]],["body/components/ChatsComponent.html",[1,0.774,3,0.17,4,0.214,5,0.192,22,0.016,30,0.43,32,0.214,35,0.012,36,0.012,55,0.518,63,0.435,64,0.276,65,0.968,66,1.309,67,1.055,68,1.055,69,1.055,76,0.926,81,1.099,84,1.806,85,1.804,87,1.2,88,1.055,95,1.366,97,1.366,130,0.832,179,1.01,180,1.01,183,1.055,213,1.055,214,1.366,215,1.309,216,0.886,217,1.603,218,1.055,219,1.516,220,0.968,221,1.055,222,0.968,223,1.254,224,1.055,225,0.968,226,1.055,227,0.968,228,1.055,229,0.968,230,1.055,231,1.055,232,1.471,233,1.055,234,0.968,235,1.055,236,0.968,237,1.055,238,0.968,239,1.055,240,0.968,241,1.055,242,0.968,243,1.055,244,0.968,245,1.055,246,0.968,247,1.055,248,0.968,249,1.055,250,0.968,251,1.055,252,0.968,253,1.055,254,0.968,255,0.81,256,0.968,257,1.055,258,0.968,259,1.366,260,1.055,261,0.968,262,1.055,263,0.968,264,1.055,265,0.968,266,1.165,267,1.055,268,0.968,269,1.055,270,0.968,271,1.01,272,1.055,273,0.968,274,0.968,275,1.01,276,0.926,277,1.01,278,1.055,695,3.878,696,5.474,697,5.816,698,5.816,699,3.803]],["title/injectables/ConfigService.html",[37,1.024,383,1.95]],["body/injectables/ConfigService.html",[3,0.168,4,0.212,5,0.19,7,0.304,8,0.559,22,0.017,24,0.439,30,0.52,32,0.212,33,1.467,35,0.012,36,0.012,37,1.541,39,1.931,44,1.16,45,1.106,50,1.241,55,0.512,61,2.704,62,2.535,63,0.43,103,2.287,110,1.299,124,1.608,132,3.436,133,1.444,146,3.541,147,2.029,165,1.29,177,1.755,192,2.255,195,1.755,287,4.538,297,3.139,298,4.083,300,2.704,303,2.934,348,3.518,349,3.108,354,3.261,369,2.78,379,1.603,383,2.934,423,4.968,586,3.436,661,5.108,700,3.834,701,6.416,702,6.416,703,6.416,704,5.87,705,6.795,706,6.795,707,5.773,708,4.437,709,4.437,710,5.773,711,4.437,712,4.437,713,4.437,714,4.437,715,4.437,716,5.773,717,3.834,718,4.437,719,4.437,720,3.834,721,4.437,722,4.437,723,4.437,724,4.437,725,4.437,726,4.437,727,4.437,728,4.437,729,4.437,730,4.437,731,4.437,732,4.437,733,4.437]],["title/components/DashboardComponent.html",[64,0.164,234,0.827]],["body/components/DashboardComponent.html",[1,0.224,3,0.049,4,0.062,5,0.055,14,1.166,22,0.012,30,0.166,32,0.062,35,0.005,36,0.005,55,0.15,63,0.126,64,0.127,65,0.279,66,0.504,67,0.305,68,0.305,69,0.305,76,0.268,81,0.423,84,1.568,85,1.559,87,0.462,88,0.305,95,0.526,97,0.526,130,0.43,179,0.292,180,0.292,183,0.305,202,1.574,213,0.305,214,0.526,215,0.504,216,0.256,217,0.828,218,0.305,219,0.695,220,0.279,221,0.305,222,0.279,223,0.483,224,0.305,225,0.279,226,0.305,227,0.279,228,0.305,229,0.279,230,0.305,231,0.305,232,0.279,233,0.305,234,0.76,235,0.305,236,0.279,237,0.305,238,0.279,239,0.305,240,0.279,241,0.305,242,0.279,243,0.305,244,0.279,245,0.305,246,0.279,247,0.305,248,0.279,249,0.305,250,0.279,251,0.305,252,0.279,253,0.305,254,0.279,255,0.234,256,0.279,257,0.305,258,0.279,259,0.526,260,0.305,261,0.279,262,0.305,263,0.279,264,0.305,265,0.279,266,0.534,267,0.305,268,0.279,269,0.305,270,0.279,271,0.292,272,0.305,273,0.279,274,0.279,275,0.292,276,0.268,277,0.292,278,0.305,699,0.848,734,1.12,735,3.982,736,2.241,737,2.241,738,1.296,739,5.968,740,6.51,741,6.081,742,5.172,743,6.183,744,2.241,745,2.241,746,4.358,747,5.549,748,5.844,749,5.968,750,5.373,751,6.438,752,3.525,753,5.844,754,5.549,755,6.36,756,5.549,757,4.941,758,5.172,759,4.358,760,3.525,761,5.373,762,5.172,763,5.968,764,5.549,765,5.549,766,4.673,767,4.673,768,5.172,769,6.183,770,6.275,771,4.358,772,2.241,773,5.705,774,5.844,775,4.941,776,3.982,777,5.549,778,4.358,779,4.941,780,5.373,781,5.844,782,5.373,783,5.373,784,5.172,785,5.844,786,4.941,787,4.941,788,5.844,789,6.275,790,5.373,791,5.968,792,3.982,793,5.844,794,5.172,795,5.373,796,3.525,797,2.241,798,5.968,799,5.172,800,6.748,801,5.373,802,5.705,803,4.358,804,5.172,805,5.968,806,5.373,807,4.941,808,5.172,809,4.358,810,4.941,811,5.968,812,4.673,813,5.549,814,5.968,815,5.968,816,3.525,817,5.549,818,3.982,819,5.373,820,2.241,821,5.172,822,5.373,823,4.673,824,5.172,825,5.844,826,4.358,827,5.373,828,4.941,829,4.673,830,5.968,831,4.941,832,5.373,833,4.358,834,5.705,835,5.968,836,5.373,837,5.172,838,6.438,839,4.673,840,3.525,841,5.705,842,5.549,843,5.172,844,5.844,845,5.549,846,3.982,847,6.183,848,5.705,849,5.844,850,4.941,851,5.549,852,5.172,853,4.358,854,4.941,855,4.673,856,5.172,857,4.941,858,6.081,859,5.549,860,3.525,861,5.373,862,2.96,863,4.941,864,4.358,865,4.673,866,5.549,867,4.358,868,4.941,869,5.549,870,3.525,871,4.673,872,4.673,873,5.705,874,4.673,875,5.705,876,4.941,877,4.941,878,4.673,879,4.358,880,4.673,881,5.373,882,5.172,883,4.673,884,5.549,885,4.941,886,2.241,887,2.241,888,5.373,889,4.673,890,4.358,891,5.549,892,2.241,893,4.358,894,3.525,895,4.673,896,2.241,897,5.705,898,4.673,899,2.96,900,4.673,901,3.525,902,2.241,903,3.982,904,4.941,905,4.673,906,5.549,907,2.96,908,3.525,909,4.358,910,2.96,911,4.358,912,2.96,913,4.673,914,4.673,915,2.241,916,4.358,917,2.241,918,1.296,919,1.296,920,1.296,921,1.296,922,1.296,923,1.296,924,1.296,925,1.296,926,1.296,927,1.296,928,1.296,929,1.296,930,1.296,931,1.296,932,1.296,933,1.296,934,1.296,935,1.296,936,1.296,937,1.296,938,1.296,939,1.296,940,1.296,941,1.296,942,1.296,943,1.296,944,1.296,945,1.296,946,1.296,947,1.296,948,1.296,949,1.296,950,1.296,951,1.296,952,1.296,953,1.296,954,1.296,955,1.296,956,1.296,957,1.296,958,1.296,959,1.296,960,1.296,961,1.296,962,1.296,963,1.296,964,1.296,965,1.296,966,1.296,967,1.296,968,1.296,969,1.296,970,1.296,971,1.296,972,1.296,973,1.296,974,1.296,975,1.296,976,1.296,977,1.296,978,1.296,979,1.296,980,1.296,981,1.296,982,1.296,983,1.296,984,1.296,985,1.296,986,1.296,987,1.296,988,1.296,989,1.296,990,1.296,991,1.296,992,1.296,993,1.296,994,1.296,995,1.296,996,1.296,997,1.296,998,1.296,999,1.296,1000,1.296,1001,1.296,1002,1.296,1003,1.296,1004,1.296,1005,1.296]],["title/injectables/DeleteUploadByIdGQL.html",[37,1.024,1006,2.713]],["body/injectables/DeleteUploadByIdGQL.html",[3,0.204,4,0.257,5,0.231,7,0.369,8,0.631,14,2.467,21,1.049,22,0.017,24,0.446,30,0.482,32,0.348,33,1.781,35,0.014,36,0.014,37,1.74,39,2.343,41,3.506,43,4.272,44,0.887,45,0.846,46,3.724,50,0.887,53,2.896,54,3.076,55,0.621,63,0.521,266,1.177,1006,4.611,1007,4.611,1008,3.521,1009,6.294,1010,5.428,1011,5.385,1012,4.652,1013,4.652,1014,4.652,1015,4.652]],["title/interfaces/Env.html",[0,0.94,303,1.95]],["body/interfaces/Env.html",[0,1.309,2,1.69,3,0.203,4,0.255,5,0.229,7,0.365,8,0.628,21,1.182,22,0.017,24,0.518,32,0.255,35,0.014,36,0.014,303,3.296,336,3.363,406,5.624,1016,4.612,1017,6.276,1018,6.276,1019,6.276,1020,6.276,1021,6.276,1022,6.034,1023,6.984,1024,6.034,1025,6.034]],["title/components/EventsComponent.html",[64,0.164,236,0.827]],["body/components/EventsComponent.html",[1,0.774,3,0.17,4,0.214,5,0.192,22,0.016,30,0.43,32,0.214,35,0.012,36,0.012,55,0.518,63,0.435,64,0.276,65,0.968,66,1.309,67,1.055,68,1.055,69,1.055,76,0.926,81,1.099,84,1.806,85,1.804,87,1.2,88,1.055,95,1.366,97,1.366,130,0.832,179,1.01,180,1.01,183,1.055,213,1.055,214,1.366,215,1.309,216,0.886,217,1.603,218,1.055,219,1.516,220,0.968,221,1.055,222,0.968,223,1.254,224,1.055,225,0.968,226,1.055,227,0.968,228,1.055,229,0.968,230,1.055,231,1.055,232,0.968,233,1.055,234,0.968,235,1.055,236,1.471,237,1.055,238,0.968,239,1.055,240,0.968,241,1.055,242,0.968,243,1.055,244,0.968,245,1.055,246,0.968,247,1.055,248,0.968,249,1.055,250,0.968,251,1.055,252,0.968,253,1.055,254,0.968,255,0.81,256,0.968,257,1.055,258,0.968,259,1.366,260,1.055,261,0.968,262,1.055,263,0.968,264,1.055,265,0.968,266,1.165,267,1.055,268,0.968,269,1.055,270,0.968,271,1.01,272,1.055,273,0.968,274,0.968,275,1.01,276,0.926,277,1.01,278,1.055,699,3.803,1026,3.878,1027,5.474,1028,5.816,1029,5.816]],["title/components/ExtensionInputComponent.html",[64,0.164,238,0.827]],["body/components/ExtensionInputComponent.html",[1,0.475,3,0.105,4,0.132,5,0.118,7,0.189,8,0.4,21,0.824,22,0.017,24,0.463,28,1.041,30,0.499,32,0.132,35,0.009,36,0.009,44,1.113,45,1.061,50,1.209,55,0.318,63,0.267,64,0.212,65,0.594,66,0.93,67,0.647,68,0.647,69,0.647,72,1.949,73,1.493,74,2.056,75,3.839,76,0.569,77,1.99,78,2.923,79,3.839,80,2.923,81,1.04,82,3.2,84,1.739,85,1.735,86,3.182,87,0.853,88,0.971,89,1.961,90,2.832,91,3.507,92,2.388,93,3.507,94,3.839,95,0.971,96,3.2,97,0.971,98,3.2,103,2.14,106,2.157,107,2.8,108,4.569,109,4.569,110,0.93,112,2.284,113,3.2,114,3.2,115,3.2,116,4.265,117,2.1,118,3.839,119,3.149,120,4.569,121,3.839,123,2.381,124,1.726,125,2.381,126,2.381,129,1.441,130,0.783,131,1.165,133,1.328,135,3.2,137,3.2,139,3.2,140,2.056,146,2.388,147,1.89,155,2.381,157,2.381,158,1.798,159,2.381,160,2.1,161,2.381,162,1.99,165,0.801,166,1.199,167,1.199,168,1.254,169,0.911,170,1.482,172,1.327,173,1.327,174,1.041,178,1.041,179,0.62,180,0.62,181,1.401,183,0.647,195,1.635,198,1.482,199,1.041,202,1.493,203,1.401,204,1.401,205,1.26,209,2.134,210,2.134,211,2.134,212,3.2,213,0.647,214,0.971,215,0.93,216,0.544,217,1.294,218,0.647,219,1.165,220,0.594,221,0.647,222,0.594,223,0.891,224,0.647,225,0.594,226,0.647,227,0.594,228,0.647,229,0.594,230,0.647,231,0.647,232,0.594,233,0.647,234,0.594,235,0.647,236,0.594,237,0.647,238,1.335,239,1.509,240,0.594,241,0.647,242,0.594,243,0.647,244,0.594,245,0.647,246,0.594,247,0.647,248,0.594,249,0.647,250,0.594,251,0.647,252,0.594,253,0.647,254,0.594,255,0.498,256,0.594,257,0.647,258,0.594,259,0.971,260,0.647,261,0.594,262,0.647,263,0.594,264,0.647,265,0.594,266,0.895,267,0.647,268,0.594,269,0.647,270,0.594,271,0.62,272,0.647,273,0.594,274,0.594,275,0.62,276,0.569,277,0.62,278,0.647,324,2.653,326,1.574,385,1.199,458,1.482,1030,6.384,1031,6.384,1032,3.021,1033,4.383,1034,2.923,1035,4.958,1036,2.756,1037,2.381,1038,3.57,1039,3.357,1040,3.57,1041,2.756,1042,2.756,1043,2.756,1044,2.756,1045,2.756,1046,2.381,1047,4.133,1048,2.381,1049,2.923,1050,2.756,1051,2.756,1052,2.134,1053,2.381,1054,2.381,1055,2.756]],["title/interfaces/FileParams.html",[0,0.94,1056,2.713]],["body/interfaces/FileParams.html",[0,1.414,2,1.826,3,0.219,4,0.275,5,0.247,7,0.395,8,0.658,21,1.179,22,0.016,24,0.494,32,0.275,35,0.014,36,0.014,130,0.909,131,1.596,1056,4.804,1057,4.983,1058,4.009,1059,6.439]],["title/interfaces/GetAccountModel.html",[0,0.94,1060,2.97]],["body/interfaces/GetAccountModel.html",[0,1.322,1,1.257,2,1.708,3,0.205,4,0.258,5,0.231,7,0.369,8,0.632,9,2.347,10,2.598,11,2.742,12,2.237,14,1.784,15,2.347,16,2.742,17,2.598,18,1.948,19,2.467,20,2.901,21,1.159,22,0.017,23,2.349,24,0.48,25,4.008,26,3.51,27,1.864,28,2.038,29,2.467,30,0.399,32,0.258,35,0.014,36,0.014,49,2.742,280,3.081,281,3.527,283,2.467,1060,5.053,1061,4.66,1062,5.638]],["title/interfaces/GraphqlError.html",[0,0.94,334,2.713]],["body/interfaces/GraphqlError.html",[0,1.642,2,1.783,3,0.214,4,0.269,5,0.241,7,0.385,8,0.648,21,1.18,22,0.016,24,0.489,32,0.32,35,0.014,36,0.014,131,1.573,205,2.575,286,4.938,330,3.983,331,4.36,332,5.848,333,3.682,334,4.736,335,6.389,336,3.441]],["title/components/HeaderComponent.html",[64,0.164,240,0.827]],["body/components/HeaderComponent.html",[1,0.683,3,0.15,4,0.189,5,0.169,7,0.271,8,0.518,22,0.017,30,0.528,32,0.189,35,0.011,36,0.011,44,0.998,45,0.952,50,0.998,55,0.457,63,0.383,64,0.26,65,0.853,66,1.204,67,0.93,68,0.93,69,0.93,76,0.817,81,1.011,84,1.791,85,1.789,87,1.104,88,1.257,95,1.257,97,1.257,130,0.792,162,2.577,165,1.15,168,1.623,169,1.309,174,1.495,179,0.891,180,0.891,183,0.93,213,0.93,214,1.257,215,1.204,216,0.782,217,1.526,218,0.93,219,1.424,220,0.853,221,0.93,222,0.853,223,1.462,224,0.93,225,0.853,226,0.93,227,0.853,228,0.93,229,0.853,230,0.93,231,0.93,232,0.853,233,0.93,234,0.853,235,0.93,236,0.853,237,0.93,238,0.853,239,0.93,240,1.4,241,0.93,242,1.4,243,0.93,244,0.853,245,0.93,246,0.853,247,0.93,248,0.853,249,0.93,250,0.853,251,0.93,252,0.853,253,0.93,254,0.853,255,0.715,256,0.853,257,0.93,258,0.853,259,1.257,260,0.93,261,0.853,262,0.93,263,0.853,264,0.93,265,0.853,266,1.094,267,0.93,268,0.853,269,0.93,270,0.853,271,0.891,272,0.93,273,0.853,274,0.853,275,0.891,276,0.817,277,0.891,278,0.93,348,3.694,365,2.72,367,3.785,379,1.429,382,1.566,383,2.012,385,1.722,631,3.261,1063,3.419,1064,6.062,1065,4.288,1066,4.288,1067,3.964,1068,6.062,1069,5.351,1070,5.351,1071,6.062,1072,3.958,1073,3.958,1074,3.958,1075,3.958,1076,5.351]],["title/pipes/IFrameUrlPipe.html",[192,1.95,1077,2.713]],["body/pipes/IFrameUrlPipe.html",[3,0.209,4,0.263,5,0.236,21,1.059,22,0.017,23,1.671,24,0.377,30,0.488,32,0.263,35,0.014,36,0.014,49,3.359,50,0.907,55,0.636,63,0.533,73,1.99,76,1.137,81,1.248,87,1.364,110,1.24,129,1.601,130,0.863,131,1.294,133,1.24,192,3.359,313,1.99,515,3.603,1077,4.675,1078,3.603,1079,5.71,1080,4.76,1081,6.61,1082,4.266,1083,6.61,1084,5.51,1085,4.76,1086,6.117,1087,3.897,1088,3.897,1089,5.71,1090,5.51]],["title/components/MeComponent.html",[64,0.164,242,0.827]],["body/components/MeComponent.html",[1,0.627,3,0.138,4,0.174,5,0.156,7,0.249,8,0.489,22,0.017,24,0.249,30,0.486,32,0.174,35,0.011,36,0.011,44,1.084,45,1.034,50,1.173,55,0.42,63,0.352,64,0.248,65,0.784,66,1.136,67,0.854,68,0.854,69,0.854,76,0.75,81,1.095,84,1.78,85,1.778,87,1.042,88,1.186,95,1.186,97,1.186,107,3.184,110,1.136,124,1.406,130,0.764,133,1.136,160,2.566,165,1.057,168,1.103,169,1.202,179,0.818,180,0.818,183,0.854,195,1.438,199,1.373,202,1.823,204,1.848,213,0.854,214,1.186,215,1.136,216,0.718,217,1.472,218,0.854,219,1.362,220,0.784,221,0.854,222,0.784,223,1.419,224,0.854,225,0.784,226,0.854,227,0.784,228,0.854,229,0.784,230,0.854,231,0.854,232,0.784,233,0.854,234,0.784,235,0.854,236,0.784,237,0.854,238,0.784,239,0.854,240,0.784,241,0.854,242,1.35,243,0.854,244,0.784,245,0.854,246,0.784,247,0.854,248,0.784,249,0.854,250,0.784,251,0.854,252,0.784,253,0.854,254,0.784,255,0.656,256,0.784,257,0.854,258,0.784,259,1.186,260,0.854,261,0.784,262,0.854,263,0.784,264,0.854,265,0.784,266,1.047,267,0.854,268,0.784,269,0.854,270,0.784,271,0.818,272,0.854,273,0.784,274,0.784,275,0.818,276,0.75,277,0.818,278,0.854,305,1.313,324,1.751,348,3.534,349,2.866,365,2.566,367,3.571,369,2.431,379,1.313,382,1.438,383,1.848,385,1.582,535,3.141,631,3.119,1034,3.571,1039,2.215,1049,3.571,1091,3.141,1092,5.048,1093,5.048,1094,4.49,1095,6.266,1096,6.266,1097,5.8,1098,4.49,1099,3.635,1100,3.635,1101,3.635,1102,3.635,1103,3.635,1104,3.635,1105,3.571,1106,3.635,1107,3.635,1108,2.571,1109,3.635,1110,3.635,1111,5.8,1112,3.635,1113,2.815,1114,3.635,1115,5.048,1116,5.048,1117,3.635]],["title/components/MemoriesComponent.html",[64,0.164,244,0.827]],["body/components/MemoriesComponent.html",[1,0.774,3,0.17,4,0.214,5,0.192,22,0.016,30,0.43,32,0.214,35,0.012,36,0.012,55,0.518,63,0.435,64,0.276,65,0.968,66,1.309,67,1.055,68,1.055,69,1.055,76,0.926,81,1.099,84,1.806,85,1.804,87,1.2,88,1.055,95,1.366,97,1.366,130,0.832,179,1.01,180,1.01,183,1.055,213,1.055,214,1.366,215,1.309,216,0.886,217,1.603,218,1.055,219,1.516,220,0.968,221,1.055,222,0.968,223,1.254,224,1.055,225,0.968,226,1.055,227,0.968,228,1.055,229,0.968,230,1.055,231,1.055,232,0.968,233,1.055,234,0.968,235,1.055,236,0.968,237,1.055,238,0.968,239,1.055,240,0.968,241,1.055,242,0.968,243,1.055,244,1.471,245,1.055,246,0.968,247,1.055,248,0.968,249,1.055,250,0.968,251,1.055,252,0.968,253,1.055,254,0.968,255,0.81,256,0.968,257,1.055,258,0.968,259,1.366,260,1.055,261,0.968,262,1.055,263,0.968,264,1.055,265,0.968,266,1.165,267,1.055,268,0.968,269,1.055,270,0.968,271,1.01,272,1.055,273,0.968,274,0.968,275,1.01,276,0.926,277,1.01,278,1.055,699,3.803,1118,3.878,1119,5.001,1120,5.816,1121,5.816]],["title/components/MenuComponent.html",[64,0.164,246,0.827]],["body/components/MenuComponent.html",[1,0.769,3,0.169,4,0.213,5,0.191,22,0.016,30,0.475,32,0.213,35,0.012,36,0.012,55,0.514,63,0.431,64,0.275,65,0.961,66,1.303,67,1.047,68,1.047,69,1.047,76,0.92,81,1.093,84,1.805,85,1.803,87,1.195,88,1.36,95,1.36,97,1.36,130,0.83,179,1.003,180,1.003,183,1.047,213,1.047,214,1.36,215,1.303,216,0.88,217,1.599,218,1.047,219,1.51,220,0.961,221,1.047,222,0.961,223,1.248,224,1.047,225,0.961,226,1.047,227,0.961,228,1.047,229,0.961,230,1.047,231,1.047,232,0.961,233,1.047,234,0.961,235,1.047,236,0.961,237,1.047,238,0.961,239,1.047,240,0.961,241,1.047,242,0.961,243,1.047,244,0.961,245,1.047,246,1.467,247,1.047,248,1.467,249,1.047,250,0.961,251,1.047,252,0.961,253,1.047,254,0.961,255,0.805,256,0.961,257,1.047,258,0.961,259,1.36,260,1.047,261,0.961,262,1.047,263,0.961,264,1.047,265,0.961,266,1.161,267,1.047,268,0.961,269,1.047,270,0.961,271,1.003,272,1.047,273,0.961,274,0.961,275,1.003,276,0.92,277,1.003,278,1.047,394,3.85,1122,3.85,1123,6.43,1124,5.789,1125,5.789]],["title/components/NavComponent.html",[64,0.164,248,0.827]],["body/components/NavComponent.html",[1,0.61,2,1.121,3,0.134,4,0.169,5,0.152,7,0.242,8,0.48,22,0.017,24,0.242,30,0.499,32,0.169,33,1.17,35,0.01,36,0.01,44,1.02,45,0.972,49,3.434,50,1.073,55,0.408,63,0.343,64,0.245,65,0.763,66,1.115,67,0.831,68,0.831,69,0.831,76,0.73,81,1.231,84,1.777,85,1.774,86,2.386,87,1.022,88,1.164,95,1.164,97,1.164,110,1.115,117,2.518,124,0.986,130,0.755,133,0.796,140,2.054,162,2.386,165,1.029,168,1.073,169,1.17,179,0.796,180,0.796,183,0.831,213,0.831,214,1.164,215,1.115,216,0.699,217,1.455,218,0.831,219,1.343,220,0.763,221,0.831,222,0.763,223,1.405,224,0.831,225,0.763,226,0.831,227,0.763,228,0.831,229,0.763,230,0.831,231,0.831,232,0.763,233,0.831,234,0.763,235,0.831,236,0.763,237,0.831,238,0.763,239,0.831,240,0.763,241,0.831,242,0.763,243,0.831,244,0.763,245,0.831,246,0.763,247,0.831,248,1.335,249,0.831,250,0.763,251,0.831,252,0.763,253,0.831,254,0.763,255,0.639,256,0.763,257,0.831,258,0.763,259,1.164,260,0.831,261,0.763,262,0.831,263,0.763,264,0.831,265,0.763,266,1.032,267,0.831,268,0.763,269,0.831,270,0.763,271,0.796,272,0.831,273,0.763,274,1.068,275,0.796,276,0.73,277,0.796,278,0.831,348,3.484,365,2.518,367,3.504,379,1.278,382,1.4,383,1.799,385,1.54,396,4.28,425,3.057,432,3.434,631,3.075,696,2.74,704,5.35,1027,2.74,1119,2.503,1126,2.74,1127,5.717,1128,5.717,1129,5.717,1130,4.955,1131,4.955,1132,5.717,1133,4.939,1134,3.539,1135,3.539,1136,3.539,1137,4.426,1138,3.539,1139,3.539,1140,4.418,1141,5.231,1142,3.057,1143,2.74,1144,3.057,1145,3.057,1146,3.836,1147,2.74,1148,3.057,1149,3.057,1150,3.057,1151,3.539,1152,4.955,1153,3.836,1154,4.955]],["title/components/NotFoundComponent.html",[64,0.164,250,0.827]],["body/components/NotFoundComponent.html",[1,0.706,3,0.155,4,0.196,5,0.175,7,0.28,21,0.819,22,0.017,24,0.375,30,0.456,32,0.196,35,0.011,36,0.011,44,0.901,45,0.86,50,0.901,55,0.473,63,0.396,64,0.264,65,0.883,66,1.232,67,0.962,68,0.962,69,0.962,76,0.845,81,1.244,84,1.795,85,1.793,86,2.97,87,1.13,88,1.286,95,1.286,97,1.286,117,2.782,130,0.803,140,2.27,179,0.922,180,0.922,183,0.962,213,0.962,214,1.286,215,1.232,216,0.809,217,1.547,218,0.962,219,1.449,220,0.883,221,0.962,222,0.883,223,1.18,224,0.962,225,0.883,226,0.962,227,0.883,228,0.962,229,0.883,230,0.962,231,0.962,232,0.883,233,0.962,234,0.883,235,0.962,236,0.883,237,0.962,238,0.883,239,0.962,240,0.883,241,0.962,242,0.883,243,0.962,244,0.883,245,0.962,246,0.883,247,0.962,248,0.883,249,0.962,250,1.419,251,0.962,252,0.883,253,0.962,254,0.883,255,0.739,256,0.883,257,0.962,258,0.883,259,1.286,260,0.962,261,0.883,262,0.962,263,0.883,264,0.962,265,0.883,266,1.114,267,0.962,268,0.883,269,0.962,270,0.883,271,0.922,272,0.962,273,0.883,274,0.883,275,0.922,276,0.845,277,0.922,278,0.962,379,1.479,1065,4.362,1140,4.033,1155,5.328,1156,5.328,1157,3.538,1158,4.73,1159,5.475,1160,5.475,1161,6.168,1162,4.095,1163,4.095,1164,4.095,1165,5.475,1166,5.475]],["title/components/OopsComponent.html",[64,0.164,252,0.827]],["body/components/OopsComponent.html",[1,0.761,3,0.168,4,0.211,5,0.189,22,0.017,30,0.425,32,0.211,35,0.012,36,0.012,55,0.509,63,0.427,64,0.274,65,0.951,66,1.294,67,1.036,68,1.036,69,1.036,76,0.91,81,1.086,84,1.804,85,1.802,87,1.187,88,1.036,95,1.351,97,1.351,130,0.827,179,0.993,180,0.993,183,1.036,213,1.036,214,1.351,215,1.294,216,0.871,217,1.593,218,1.036,219,1.503,220,0.951,221,1.036,222,0.951,223,1.24,224,1.036,225,0.951,226,1.036,227,0.951,228,1.036,229,0.951,230,1.036,231,1.036,232,0.951,233,1.036,234,0.951,235,1.036,236,0.951,237,1.036,238,0.951,239,1.036,240,0.951,241,1.036,242,0.951,243,1.036,244,0.951,245,1.036,246,0.951,247,1.036,248,0.951,249,1.036,250,0.951,251,1.036,252,1.461,253,1.036,254,0.951,255,0.797,256,0.951,257,1.036,258,0.951,259,1.351,260,1.036,261,0.951,262,1.036,263,0.951,264,1.036,265,0.951,266,1.155,267,1.036,268,0.951,269,1.036,270,0.951,271,0.993,272,1.036,273,0.951,274,0.951,275,0.993,276,0.91,277,0.993,278,1.036,1167,3.812,1168,6.399,1169,5.751,1170,5.751]],["title/components/PermissionInputComponent.html",[64,0.164,254,0.827]],["body/components/PermissionInputComponent.html",[1,0.528,3,0.116,4,0.146,5,0.131,7,0.209,8,0.432,21,0.963,22,0.017,24,0.475,30,0.476,32,0.146,35,0.009,36,0.009,44,1.094,45,1.043,50,1.191,55,0.353,63,0.296,64,0.226,65,0.66,66,1.005,67,0.719,68,0.719,69,0.719,72,2.165,73,1.613,75,4.083,76,0.631,77,2.151,78,3.159,79,4.083,80,3.159,81,1.095,82,3.458,84,1.756,85,1.752,86,3.345,87,0.921,88,1.049,89,2.086,90,3.012,91,3.729,92,2.539,93,3.729,94,4.083,95,1.049,96,3.458,97,1.049,98,3.458,108,4.773,109,4.773,110,1.005,113,3.458,114,3.458,115,3.458,116,4.488,117,2.27,118,4.083,119,3.271,120,4.773,121,4.083,124,1.717,129,1.532,130,0.81,131,1.239,133,1.305,135,3.458,137,3.458,139,3.458,140,2.186,162,2.151,166,1.332,168,1.355,169,1.012,174,1.156,178,1.156,179,0.689,180,0.689,183,0.719,209,2.37,210,2.37,211,2.37,212,3.458,213,0.719,214,1.049,215,1.005,216,0.604,217,1.362,218,0.719,219,1.239,220,0.66,221,0.719,222,0.66,223,0.963,224,0.719,225,0.66,226,0.719,227,0.66,228,0.719,229,0.66,230,0.719,231,0.719,232,0.66,233,0.719,234,0.66,235,0.719,236,0.66,237,0.719,238,0.66,239,0.719,240,0.66,241,0.719,242,0.66,243,0.719,244,0.66,245,0.719,246,0.66,247,0.719,248,0.66,249,0.719,250,0.66,251,0.719,252,0.66,253,0.719,254,1.387,255,1.2,256,0.66,257,0.719,258,0.66,259,1.049,260,0.719,261,0.66,262,0.719,263,0.66,264,0.719,265,0.66,266,0.952,267,0.719,268,0.66,269,0.719,270,0.66,271,0.689,272,0.719,273,0.66,274,0.66,275,0.689,276,0.631,277,0.689,278,0.719,324,2.539,1037,2.644,1038,3.858,1039,3.532,1040,3.858,1046,2.644,1048,2.644,1171,6.309,1172,6.309,1173,3.012,1174,3.06,1175,3.06,1176,3.06,1177,3.06,1178,3.06,1179,3.06,1180,3.06,1181,3.06,1182,3.06,1183,3.06]],["title/components/ProfileComponent.html",[64,0.164,256,0.827]],["body/components/ProfileComponent.html",[1,0.808,2,0.646,3,0.077,4,0.097,5,0.087,7,0.14,8,0.317,9,2.383,10,0.982,13,1.334,16,2.082,17,2.879,18,0.737,19,0.933,21,0.819,22,0.017,23,1.92,24,0.422,25,1.869,26,2.759,27,0.705,28,1.547,29,1.873,30,0.526,32,0.097,33,1.354,34,1.443,35,0.007,36,0.007,38,3.064,42,2.34,44,1.153,45,1.099,50,1.194,55,0.235,63,0.197,64,0.175,65,0.44,66,0.736,67,0.479,68,0.479,69,0.479,73,1.182,74,1.698,76,0.421,77,1.575,81,0.618,84,1.682,85,1.676,87,0.675,88,0.769,89,1.62,95,0.769,97,0.769,103,2.349,106,1.782,107,2.382,110,0.736,112,1.943,124,1.141,129,0.951,130,0.729,131,0.769,133,1.055,140,0.846,143,2.759,146,2.97,147,2.504,150,3.171,158,1.423,160,1.663,165,0.593,167,0.888,168,1.242,169,0.675,170,1.097,171,1.443,172,0.982,173,0.982,174,0.771,177,0.807,178,0.771,179,0.459,180,0.459,181,1.037,183,0.479,188,1.762,189,1.579,190,1.762,195,1.62,198,1.76,199,1.236,200,3.128,202,1.182,203,1.663,204,1.663,205,1.496,213,0.479,214,0.769,215,0.736,216,0.403,217,1.101,218,0.479,219,0.962,220,0.44,221,0.479,222,0.44,223,1.106,224,0.479,225,0.44,226,0.479,227,0.44,228,0.479,229,0.705,230,0.769,231,0.479,232,0.44,233,0.479,234,0.44,235,0.479,236,0.44,237,0.479,238,0.44,239,0.479,240,0.44,241,0.479,242,0.44,243,0.479,244,0.44,245,0.479,246,0.44,247,0.479,248,0.44,249,0.479,250,0.44,251,0.479,252,0.44,253,0.479,254,0.44,255,0.368,256,1.01,257,0.479,258,0.44,259,0.769,260,0.479,261,0.44,262,0.479,263,0.44,264,0.479,265,0.44,266,0.739,267,0.479,268,0.44,269,0.479,270,0.44,271,0.459,272,0.479,273,0.44,274,0.44,275,0.459,276,0.421,277,0.459,278,0.479,283,0.933,305,0.737,313,1.978,324,0.982,341,2.897,349,2.143,354,2.082,359,1.037,365,1.663,369,1.575,374,2.826,379,0.737,382,0.807,385,0.888,390,1.334,403,1.165,412,1.334,415,1.037,432,2.082,443,2.314,447,1.443,458,2.203,528,3.539,586,1.579,628,1.579,631,2.203,632,2.897,635,1.762,639,4.049,661,2.314,666,1.243,667,1.334,1039,1.243,1052,1.579,1054,1.762,1066,2.897,1067,2.678,1078,1.334,1087,1.443,1088,1.443,1094,3.171,1105,2.314,1108,1.443,1140,3.064,1153,2.533,1184,1.579,1185,3.539,1186,5.979,1187,3.539,1188,2.897,1189,2.897,1190,3.272,1191,3.272,1192,5.979,1193,3.315,1194,4.049,1195,4.096,1196,3.171,1197,3.272,1198,2.04,1199,2.04,1200,3.272,1201,2.04,1202,3.539,1203,2.04,1204,3.272,1205,2.04,1206,3.272,1207,3.272,1208,3.272,1209,3.272,1210,3.272,1211,4.096,1212,2.04,1213,3.272,1214,3.272,1215,3.272,1216,2.04,1217,4.096,1218,3.272,1219,2.04,1220,2.04,1221,2.533,1222,2.04,1223,3.272,1224,2.04,1225,2.04,1226,3.272,1227,2.04,1228,2.04,1229,2.04,1230,2.04,1231,2.04,1232,2.826,1233,2.04,1234,2.04,1235,2.04,1236,2.04,1237,3.272,1238,2.04,1239,1.334,1240,1.762,1241,3.272,1242,2.04,1243,1.579,1244,2.04,1245,1.579,1246,1.762,1247,1.762,1248,1.762,1249,3.272,1250,2.04,1251,2.04,1252,2.04,1253,2.04,1254,1.762,1255,2.04,1256,2.04,1257,2.04,1258,2.04,1259,2.04,1260,2.04,1261,2.04,1262,2.04,1263,2.04,1264,2.04,1265,2.04,1266,2.04,1267,2.04,1268,2.04,1269,2.04,1270,1.579,1271,2.04,1272,2.04,1273,2.04,1274,2.04,1275,1.762,1276,2.04,1277,1.762,1278,2.04,1279,2.04,1280,5.476,1281,5.979,1282,3.272,1283,3.272,1284,3.272,1285,4.686,1286,2.826,1287,2.826,1288,3.272]],["title/interfaces/Route.html",[0,0.94,432,1.95]],["body/interfaces/Route.html",[0,1.363,2,1.76,3,0.211,4,0.265,5,0.238,7,0.381,8,0.643,21,1.172,22,0.016,24,0.515,32,0.265,35,0.014,36,0.014,49,3.743,131,1.73,140,3.167,432,3.377,1140,4.815,1141,5.702,1143,5.702,1146,5.702,1289,4.803]],["title/directives/ScrollNearEndDirective.html",[216,0.757,276,0.792]],["body/directives/ScrollNearEndDirective.html",[3,0.155,4,0.196,5,0.175,7,0.28,8,0.53,22,0.017,24,0.483,30,0.303,32,0.196,33,2.335,35,0.011,36,0.011,44,0.674,45,0.643,50,1.187,55,0.473,63,0.396,64,0.175,73,1.977,74,2.557,76,0.845,81,1.034,84,1.232,86,2.636,87,1.13,103,1.953,110,1.232,112,2.73,117,2.782,124,1.718,129,1.591,130,0.667,131,1.286,133,1.232,215,1.232,216,1.081,275,0.922,276,1.13,277,1.232,305,1.479,326,3.761,336,1.972,350,4.239,352,5.328,354,2.081,359,2.081,412,2.677,515,2.677,1034,3.872,1049,3.872,1053,4.73,1098,5.098,1290,6.329,1291,6.475,1292,3.538,1293,7.42,1294,5.475,1295,6.862,1296,5.475,1297,5.475,1298,4.095,1299,5.688,1300,5.475,1301,5.475,1302,4.095,1303,5.475,1304,5.475,1305,5.475,1306,6.584,1307,4.095,1308,4.095,1309,6.168,1310,5.475,1311,4.095,1312,5.475,1313,6.168,1314,5.475,1315,4.095,1316,4.095,1317,4.095,1318,3.538,1319,4.095,1320,4.095,1321,5.475,1322,4.095,1323,5.475,1324,4.095,1325,4.095,1326,4.095,1327,6.168,1328,4.095,1329,4.095,1330,4.095,1331,4.095,1332,3.538,1333,5.475,1334,4.095,1335,5.475,1336,4.095,1337,4.095,1338,5.475,1339,4.095,1340,4.095,1341,4.095,1342,4.095,1343,4.095,1344,4.095,1345,5.475,1346,4.095,1347,4.095,1348,5.475]],["title/injectables/ScrollService.html",[37,1.024,384,2.337]],["body/injectables/ScrollService.html",[3,0.19,4,0.239,5,0.214,7,0.342,8,0.603,22,0.017,24,0.486,27,2.152,30,0.501,32,0.239,35,0.013,36,0.013,37,1.663,39,2.175,44,1.025,45,0.978,50,1.117,55,0.577,61,3.047,62,2.856,63,0.484,103,2.148,110,1.402,124,1.393,129,1.453,130,0.61,131,1.175,133,1.125,140,2.813,143,3.649,146,3.267,147,3.103,162,2.999,171,3.536,172,2.408,173,2.408,175,3.871,177,1.978,194,4.822,199,2.353,205,2.287,336,3.267,358,6.311,384,3.795,408,5.861,717,4.319,720,6.134,1349,3.871,1350,7.449,1351,5,1352,5,1353,5,1354,6.228,1355,6.228,1356,6.228,1357,5,1358,4.319]],["title/pipes/SexPipe.html",[192,1.95,1189,2.713]],["body/pipes/SexPipe.html",[2,1.696,3,0.203,4,0.256,5,0.229,17,3.647,21,0.972,22,0.017,23,2.122,24,0.367,28,2.024,29,2.45,30,0.48,32,0.256,35,0.014,36,0.014,44,0.882,45,1.02,50,0.882,55,0.618,63,0.519,73,1.935,76,1.105,81,1.227,87,1.341,110,1.206,129,1.557,130,0.853,131,1.258,133,1.206,192,3.303,313,2.526,533,3.789,534,4.596,1078,3.502,1082,4.147,1089,5.614,1189,4.596,1359,4.628,1360,6.498,1361,5.357]],["title/components/SignInComponent.html",[64,0.164,258,0.827]],["body/components/SignInComponent.html",[1,0.452,3,0.1,4,0.125,5,0.112,7,0.179,8,0.385,18,0.947,21,0.72,22,0.017,23,1.629,24,0.432,30,0.493,32,0.125,35,0.008,36,0.008,44,1.097,45,1.047,50,1.189,55,0.303,63,0.254,64,0.206,65,0.565,66,0.896,67,0.616,68,0.616,69,0.616,73,1.438,74,1.995,76,0.541,81,0.752,84,1.73,85,1.726,86,1.917,87,0.821,88,0.935,89,1.903,92,2.317,95,0.935,97,0.935,103,2.336,106,2.093,110,0.896,112,2.227,117,2.023,119,2.935,124,1.76,129,0.762,130,0.842,131,0.616,133,1.209,143,2.588,158,1.732,165,0.762,166,1.141,167,1.141,168,0.795,169,0.867,177,1.037,178,0.991,179,0.59,180,0.59,183,0.616,195,1.903,199,0.991,202,0.947,213,0.616,214,0.935,215,0.896,216,0.518,217,1.262,218,0.616,219,1.13,220,0.565,221,0.616,222,0.565,223,1.245,224,0.616,225,0.565,226,0.616,227,0.565,228,0.616,229,0.565,230,0.616,231,0.616,232,0.565,233,0.616,234,0.565,235,0.616,236,0.565,237,0.616,238,0.565,239,0.616,240,0.565,241,0.616,242,0.565,243,0.616,244,0.565,245,0.616,246,0.565,247,0.616,248,0.565,249,0.616,250,0.565,251,0.616,252,0.565,253,0.616,254,0.565,255,0.473,256,0.565,257,0.616,258,1.158,259,1.529,260,0.616,261,0.565,262,0.616,263,0.565,264,0.616,265,0.565,266,0.869,267,0.616,268,0.565,269,0.616,270,0.565,271,0.59,272,0.616,273,0.565,274,0.565,275,0.59,276,0.541,277,0.59,278,0.616,305,2.455,313,1.438,338,3.146,345,2.748,349,2.457,351,3.146,353,3.512,354,1.333,359,2.73,365,2.023,369,1.917,373,2.932,379,0.947,380,2.265,381,2.03,382,1.037,385,1.141,399,2.03,402,1.715,403,2.748,415,1.333,416,2.815,421,1.715,431,3.27,438,3.146,441,2.815,455,3.082,456,2.03,458,1.41,459,2.03,461,1.855,467,3.725,474,5.636,478,3.082,487,4.159,490,3.725,492,4.159,493,2.03,494,4.159,496,3.082,503,3.473,506,2.815,512,1.855,515,1.715,517,2.03,518,2.03,519,2.815,521,3.082,523,2.03,524,2.03,536,3.082,542,2.03,543,2.03,544,2.03,552,3.439,615,2.265,1113,2.03,1299,4.156,1362,5.636,1363,2.265,1364,4.811,1365,3.98,1366,3.98,1367,4.811,1368,4.811,1369,5.372,1370,2.622,1371,2.622,1372,3.98,1373,2.622,1374,3.98,1375,2.622,1376,3.98,1377,2.622,1378,2.622,1379,2.622,1380,2.622,1381,4.156,1382,2.622,1383,2.622,1384,2.622,1385,2.622,1386,2.622,1387,3.98,1388,2.622,1389,3.98,1390,2.622,1391,2.265,1392,3.439,1393,2.622,1394,2.622,1395,2.622,1396,2.622,1397,2.622,1398,2.622,1399,2.622,1400,2.622,1401,2.622,1402,2.622,1403,2.03,1404,2.265,1405,2.265,1406,2.265,1407,2.265,1408,2.265,1409,2.265,1410,3.439,1411,2.622]],["title/components/SignUpComponent.html",[64,0.164,261,0.827]],["body/components/SignUpComponent.html",[1,0.391,3,0.086,4,0.108,5,0.097,7,0.155,8,0.345,10,2.602,11,2.746,12,0.941,15,0.987,18,0.819,21,0.657,22,0.017,23,1.509,24,0.41,27,1.23,29,1.628,30,0.492,32,0.108,35,0.007,36,0.007,44,1.075,45,1.026,50,1.156,55,0.262,63,0.22,64,0.188,65,0.489,66,0.801,67,0.533,68,0.533,69,0.533,73,1.285,74,1.821,76,0.468,81,0.83,84,1.703,85,1.698,86,1.714,87,0.734,88,0.836,89,1.737,92,2.115,95,0.836,97,0.836,103,2.223,106,1.911,110,0.801,112,2.062,117,1.809,119,3.245,124,1.597,129,0.659,130,0.837,131,0.533,133,1.119,143,2.362,158,1.549,162,1.714,165,0.659,166,0.987,167,0.987,168,1.332,169,0.75,174,0.857,177,0.897,178,0.857,179,0.511,180,0.511,183,0.533,195,2.138,199,0.857,202,0.819,203,1.809,204,1.809,213,0.533,214,0.836,215,0.801,216,0.448,217,1.169,218,0.533,219,1.032,220,0.489,221,0.533,222,0.489,223,1.165,224,0.533,225,0.489,226,0.533,227,0.489,228,0.533,229,0.489,230,0.533,231,0.533,232,0.489,233,0.533,234,0.489,235,0.533,236,0.489,237,0.533,238,0.489,239,0.533,240,0.489,241,0.533,242,0.489,243,0.533,244,0.489,245,0.533,246,0.489,247,0.533,248,0.489,249,0.533,250,0.489,251,0.533,252,0.489,253,0.533,254,0.489,255,0.41,256,0.489,257,0.533,258,0.489,259,1.458,260,0.533,261,1.072,262,0.533,263,0.489,264,0.533,265,0.489,266,0.793,267,0.533,268,0.489,269,0.533,270,0.489,271,0.511,272,0.533,273,0.489,274,0.489,275,0.511,276,0.468,277,0.511,278,0.533,300,1.382,305,2.649,313,1.952,338,2.872,341,3.107,345,2.509,349,2.275,351,2.872,353,3.252,354,1.153,359,1.809,365,1.809,369,1.714,373,2.676,378,2.756,379,0.819,382,0.897,385,0.987,399,1.756,402,1.483,403,2.033,415,1.153,416,1.604,421,1.483,431,3.084,438,2.872,441,2.517,455,3.851,456,1.756,458,1.22,459,1.756,461,1.604,467,3.401,476,5.488,478,2.756,487,3.851,490,3.401,492,3.851,493,1.756,494,3.851,496,2.756,503,4.113,504,5.18,506,2.517,512,1.604,515,1.483,517,1.756,518,2.756,519,3.107,520,1.96,521,4.184,523,1.756,524,1.756,536,3.851,542,1.756,543,1.756,544,1.756,554,3.075,1113,1.756,1362,5.488,1381,3.794,1392,3.075,1404,1.96,1405,1.96,1406,1.96,1407,1.96,1408,1.96,1409,3.075,1410,4.297,1412,1.96,1413,3.075,1414,4.392,1415,3.559,1416,3.559,1417,4.392,1418,4.392,1419,2.268,1420,2.268,1421,2.268,1422,3.559,1423,2.268,1424,3.559,1425,2.268,1426,2.268,1427,2.268,1428,2.268,1429,2.268,1430,4.974,1431,3.559,1432,4.392,1433,4.392,1434,4.392,1435,2.268,1436,2.268,1437,2.268,1438,2.268,1439,2.268,1440,2.268,1441,2.268,1442,1.756,1443,3.075,1444,2.268,1445,2.268,1446,2.268,1447,2.268,1448,2.268,1449,2.268,1450,2.268,1451,2.268,1452,2.268,1453,2.268,1454,2.268,1455,3.851,1456,3.559,1457,3.559,1458,3.559,1459,2.268,1460,2.268,1461,2.268,1462,2.268,1463,2.268,1464,2.268,1465,2.268,1466,2.268,1467,2.268,1468,2.268,1469,2.268,1470,1.756]],["title/components/TimelinesComponent.html",[64,0.164,263,0.827]],["body/components/TimelinesComponent.html",[1,0.774,3,0.17,4,0.214,5,0.192,22,0.016,30,0.43,32,0.214,35,0.012,36,0.012,55,0.518,63,0.435,64,0.276,65,0.968,66,1.309,67,1.055,68,1.055,69,1.055,76,0.926,81,1.099,84,1.806,85,1.804,87,1.2,88,1.055,95,1.366,97,1.366,130,0.832,179,1.01,180,1.01,183,1.055,213,1.055,214,1.366,215,1.309,216,0.886,217,1.603,218,1.055,219,1.516,220,0.968,221,1.055,222,0.968,223,1.254,224,1.055,225,0.968,226,1.055,227,0.968,228,1.055,229,0.968,230,1.055,231,1.055,232,0.968,233,1.055,234,0.968,235,1.055,236,0.968,237,1.055,238,0.968,239,1.055,240,0.968,241,1.055,242,0.968,243,1.055,244,0.968,245,1.055,246,0.968,247,1.055,248,0.968,249,1.055,250,0.968,251,1.055,252,0.968,253,1.055,254,0.968,255,0.81,256,0.968,257,1.055,258,0.968,259,1.366,260,1.055,261,0.968,262,1.055,263,1.471,264,1.055,265,0.968,266,1.165,267,1.055,268,0.968,269,1.055,270,0.968,271,1.01,272,1.055,273,0.968,274,0.968,275,1.01,276,0.926,277,1.01,278,1.055,699,3.803,1147,5.474,1471,3.878,1472,5.816,1473,5.816]],["title/injectables/UploadByIdGQL.html",[37,1.024,1474,2.713]],["body/injectables/UploadByIdGQL.html",[3,0.184,4,0.231,5,0.207,7,0.331,8,0.591,9,2.656,12,2.531,14,2.532,15,2.656,18,2.205,19,2.792,21,1,22,0.017,24,0.458,30,0.494,32,0.335,35,0.013,36,0.013,37,1.63,39,2.107,41,3.284,42,4.134,43,4.074,44,0.797,45,0.76,46,3.819,49,3.755,50,0.797,52,3.72,53,2.605,54,2.766,55,0.559,57,1.749,63,0.469,130,0.744,266,0.874,280,3.487,281,3.992,282,2.415,333,3.992,1008,3.166,1058,3.284,1173,3.487,1474,4.318,1475,4.318,1476,6.105,1477,6.105,1478,5.274,1479,5.274,1480,4.318,1481,3.72,1482,4.842,1483,4.183,1484,4.183,1485,4.183]],["title/injectables/UploadExtensionsGQL.html",[37,1.024,1033,2.713]],["body/injectables/UploadExtensionsGQL.html",[3,0.2,4,0.251,5,0.225,7,0.36,8,0.623,21,0.788,22,0.017,24,0.475,30,0.513,32,0.345,35,0.013,36,0.013,37,1.716,39,2.291,41,3.459,42,4.235,43,4.23,44,0.867,45,0.827,46,3.965,50,0.867,52,3.918,53,2.832,54,3.007,55,0.608,63,0.51,181,2.676,324,3.482,326,4.13,1033,4.548,1475,4.548,1486,4.077,1487,6.43,1488,5.598,1489,6.43,1490,5.265,1491,4.979,1492,4.548,1493,5.265,1494,4.548,1495,4.548]],["title/components/UploadFileComponent.html",[64,0.164,265,0.827]],["body/components/UploadFileComponent.html",[1,0.434,2,0.796,3,0.095,4,0.12,5,0.225,7,0.172,8,0.373,22,0.017,24,0.388,27,0.869,28,1.986,29,2.144,30,0.505,32,0.12,33,1.275,35,0.008,36,0.008,44,1.126,45,1.034,50,1.156,55,0.29,57,0.908,63,0.244,64,0.201,65,0.542,66,0.868,67,0.591,68,0.591,69,0.591,73,1.392,74,1.944,76,0.519,77,1.857,81,0.728,84,1.723,85,1.718,87,0.796,88,0.906,89,1.855,90,2.678,92,2.258,95,0.906,97,0.906,103,2.269,106,2.04,107,2.672,110,0.868,112,2.18,119,2.383,124,1.579,130,0.759,133,1.183,146,2.73,147,1.15,158,1.678,160,1.96,165,0.731,166,1.094,167,1.094,168,1.422,169,0.832,170,1.353,172,1.211,173,1.211,174,0.95,178,0.95,179,0.566,180,0.566,183,0.591,195,2.079,198,2.827,199,0.95,200,1.437,202,1.392,203,2.383,204,2.383,205,1.763,213,0.591,214,0.906,215,0.868,216,0.497,217,1.235,218,0.591,219,1.102,220,0.542,221,0.591,222,0.542,223,0.831,224,0.591,225,0.542,226,0.591,227,0.542,228,0.591,229,0.542,230,0.591,231,0.591,232,0.542,233,0.591,234,0.542,235,0.591,236,0.542,237,0.591,238,0.542,239,0.591,240,0.542,241,0.591,242,0.542,243,0.591,244,0.542,245,0.591,246,0.542,247,0.591,248,0.542,249,0.591,250,0.542,251,0.591,252,0.542,253,0.591,254,0.542,255,0.454,256,0.542,257,0.591,258,0.542,259,0.906,260,0.591,261,0.542,262,0.591,263,0.542,264,0.591,265,1.133,266,1.253,267,0.591,268,0.542,269,0.591,270,0.542,271,0.566,272,0.591,273,0.542,274,0.542,275,0.566,276,0.519,277,0.566,278,0.591,282,0.995,305,2.505,313,1.392,333,1.644,336,1.857,345,2.678,382,0.995,385,1.094,412,3.066,431,2.522,503,1.437,512,3.316,519,2.727,533,2.727,534,4.231,589,2.857,630,4.051,631,2.522,636,4.231,637,3.316,641,4.541,658,2.985,661,2.727,664,1.947,674,2.173,675,2.173,685,3.331,690,4.541,1032,3.454,1058,2.074,1067,3.066,1188,3.316,1239,1.644,1270,1.947,1443,3.331,1455,1.947,1470,1.947,1496,5.022,1497,5.497,1498,2.173,1499,4.689,1500,4.051,1501,4.051,1502,4.689,1503,3.856,1504,3.856,1505,4.689,1506,4.689,1507,4.689,1508,5.257,1509,5.167,1510,2.515,1511,2.515,1512,2.515,1513,2.515,1514,2.515,1515,2.515,1516,2.515,1517,2.515,1518,3.856,1519,3.856,1520,4.689,1521,4.541,1522,2.515,1523,2.515,1524,3.856,1525,2.515,1526,3.331,1527,2.515,1528,3.856,1529,2.515,1530,2.515,1531,2.515,1532,2.515,1533,2.515,1534,2.515,1535,2.515,1536,5.257,1537,2.515,1538,2.515,1539,3.856,1540,2.515,1541,3.856,1542,3.856,1543,2.515,1544,2.515,1545,2.515,1546,2.515,1547,2.515,1548,3.856,1549,2.515]],["title/components/UploadInfoComponent.html",[64,0.164,268,0.827]],["body/components/UploadInfoComponent.html",[1,0.457,3,0.184,4,0.126,5,0.113,7,0.181,8,0.388,14,0.875,21,0.6,22,0.017,23,1.216,24,0.397,30,0.525,32,0.126,33,0.875,35,0.008,36,0.008,44,1.043,45,0.995,50,1.14,55,0.306,57,0.956,63,0.256,64,0.207,65,0.571,66,0.902,67,0.622,68,0.622,69,0.622,73,1.448,74,2.006,76,0.546,77,1.931,81,0.757,84,1.732,85,1.728,87,0.827,88,0.942,89,1.914,90,2.764,92,2.33,95,0.942,97,0.942,103,2.309,106,2.105,107,2.743,110,0.902,112,2.238,119,2.947,124,1.348,129,0.769,130,0.773,131,0.622,133,0.902,146,2.793,147,1.211,158,1.744,160,2.037,165,1.165,166,1.152,167,1.152,168,1.468,169,0.875,170,1.424,172,1.275,173,1.275,174,1,178,1,179,0.596,180,0.596,181,1.345,183,0.622,195,1.047,198,1.424,199,1,200,1.512,202,1.448,203,1.345,204,1.345,205,1.211,213,0.622,214,0.942,215,0.902,216,0.523,217,1.268,218,0.622,219,1.137,220,0.571,221,0.622,222,0.571,223,0.864,224,0.622,225,0.571,226,0.622,227,0.571,228,0.622,229,0.571,230,0.622,231,0.622,232,0.571,233,0.622,234,0.571,235,0.622,236,0.571,237,0.622,238,0.571,239,0.622,240,0.571,241,0.622,242,0.571,243,0.622,244,0.571,245,0.622,246,0.571,247,0.622,248,0.571,249,0.622,250,0.571,251,0.622,252,0.571,253,0.622,254,0.571,255,0.724,256,0.571,257,0.622,258,0.571,259,0.942,260,0.622,261,0.571,262,0.622,263,0.571,264,0.622,265,0.571,266,1.282,267,0.622,268,1.163,269,0.622,270,0.571,271,0.596,272,0.622,273,0.571,274,0.571,275,0.596,276,0.546,277,0.596,278,0.622,282,1.047,283,1.211,305,2.59,349,2.468,354,2.037,369,1.931,379,0.956,402,1.731,503,3.313,636,1.872,643,2.287,644,4.179,646,3.463,658,4.179,665,2.287,666,1.613,667,1.731,669,2.287,1052,2.05,1066,3.423,1067,3.164,1188,3.423,1193,3.423,1221,3.104,1239,1.731,1254,3.463,1470,3.104,1474,4.316,1481,2.443,1496,4.964,1500,4.18,1501,4.18,1521,4.663,1526,3.463,1550,5.434,1551,2.287,1552,4.009,1553,4.009,1554,4.18,1555,4.839,1556,5.398,1557,2.647,1558,2.647,1559,2.647,1560,2.647,1561,2.647,1562,2.647,1563,2.647,1564,2.647,1565,4.009,1566,2.647,1567,2.647,1568,4.009,1569,3.104,1570,4.009,1571,4.009,1572,2.647,1573,2.647,1574,4.009,1575,2.647,1576,2.647,1577,2.647,1578,2.647,1579,2.647,1580,2.647,1581,2.647,1582,2.647,1583,2.647,1584,2.647,1585,2.647,1586,2.647,1587,2.647,1588,4.009,1589,4.009,1590,4.009,1591,2.647,1592,2.647,1593,2.647,1594,2.647,1595,2.647,1596,2.647,1597,4.009,1598,2.647,1599,4.009,1600,4.009,1601,2.647]],["title/components/UploadListItemComponent.html",[64,0.164,270,0.827]],["body/components/UploadListItemComponent.html",[1,0.356,3,0.078,4,0.099,5,0.088,7,0.323,8,0.32,14,0.682,21,0.617,22,0.017,23,1.821,24,0.444,25,1.886,27,1.141,30,0.514,32,0.099,35,0.007,36,0.007,44,1.145,45,1.068,50,1.214,55,0.238,57,0.745,63,0.2,64,0.177,65,0.445,66,0.743,67,0.485,68,0.485,69,0.485,76,0.426,77,1.59,81,0.624,84,1.684,85,1.678,86,0.994,87,0.681,88,0.776,89,1.633,95,0.776,97,0.776,103,1.961,106,1.796,107,2.397,110,0.743,117,1.678,124,1.437,129,0.959,130,0.671,131,1.108,133,1.239,140,1.956,158,1.436,160,1.678,162,2.272,165,0.6,167,0.898,168,1.565,169,0.682,170,1.11,172,0.994,173,0.994,174,0.779,177,0.816,178,0.779,179,0.464,180,0.464,181,1.049,183,0.485,195,2.041,198,2.96,199,0.779,200,1.886,202,1.192,203,1.678,204,2.098,205,1.51,213,0.485,214,0.776,215,0.743,216,0.407,217,1.108,218,0.485,219,0.97,220,0.445,221,0.485,222,0.445,223,0.712,224,0.485,225,0.445,226,0.485,227,0.445,228,0.485,229,0.445,230,0.485,231,0.485,232,0.445,233,0.485,234,0.445,235,0.485,236,0.445,237,0.485,238,0.445,239,0.485,240,0.445,241,0.485,242,0.445,243,0.485,244,0.445,245,0.485,246,0.445,247,0.485,248,0.445,249,0.485,250,0.445,251,0.485,252,0.445,253,0.485,254,0.445,255,0.372,256,0.445,257,0.485,258,0.445,259,0.776,260,0.485,261,0.445,262,0.485,263,0.445,264,0.485,265,0.445,266,1.228,267,0.485,268,0.445,269,0.485,270,1.017,271,1.768,272,0.485,273,0.445,274,0.445,275,0.464,276,0.426,277,0.464,278,0.485,282,1.633,305,1.49,313,1.49,324,0.994,336,0.994,343,3.565,349,2.157,359,1.049,369,1.59,373,2.515,376,1.459,377,3.652,379,0.745,415,1.049,431,2.775,458,1.11,460,1.597,533,2.335,534,3.336,631,2.22,632,2.919,636,2.919,644,1.597,666,1.257,667,1.349,1006,3.893,1034,2.335,1039,1.257,1049,1.459,1065,2.919,1066,2.919,1067,2.698,1077,2.919,1078,1.349,1085,1.782,1086,1.782,1087,1.459,1088,1.459,1098,4.917,1105,2.335,1108,1.459,1185,3.565,1187,3.565,1188,2.919,1193,2.335,1239,1.349,1270,1.597,1286,2.852,1287,2.852,1391,1.782,1442,1.597,1496,5.236,1569,3.195,1602,5.732,1603,1.782,1604,3.301,1605,4.127,1606,4.127,1607,4.127,1608,3.301,1609,3.301,1610,4.127,1611,4.127,1612,4.127,1613,4.127,1614,4.127,1615,4.127,1616,4.075,1617,4.717,1618,4.717,1619,4.717,1620,3.301,1621,3.301,1622,4.127,1623,4.127,1624,4.127,1625,2.852,1626,4.127,1627,2.063,1628,2.063,1629,2.063,1630,2.063,1631,2.063,1632,2.063,1633,2.063,1634,2.063,1635,2.063,1636,2.063,1637,3.301,1638,5.159,1639,2.063,1640,3.301,1641,3.301,1642,2.063,1643,4.127,1644,2.063,1645,3.301,1646,2.063,1647,2.063,1648,2.063,1649,2.063,1650,2.063,1651,3.301,1652,2.063,1653,3.301,1654,2.063,1655,4.127,1656,3.301,1657,2.063,1658,3.301,1659,2.063,1660,2.063,1661,3.301,1662,2.063,1663,2.063,1664,2.063,1665,2.063,1666,2.063,1667,2.063,1668,2.063,1669,2.063,1670,2.063,1671,2.063,1672,2.063,1673,2.063,1674,2.063,1675,2.063,1676,2.063,1677,3.301,1678,2.063,1679,2.063,1680,5.159,1681,2.063,1682,4.127,1683,2.063,1684,2.063,1685,2.063,1686,2.063,1687,2.063,1688,2.063,1689,2.063,1690,3.301,1691,3.301,1692,2.063,1693,2.063,1694,2.063,1695,2.063,1696,2.063,1697,2.063,1698,2.063,1699,2.063,1700,3.301,1701,3.301,1702,3.301,1703,3.301,1704,3.301,1705,3.301,1706,3.301,1707,3.301]],["title/interfaces/UploadModel.html",[0,0.94,282,1.517]],["body/interfaces/UploadModel.html",[0,1.191,2,1.538,3,0.184,4,0.232,5,0.208,7,0.332,8,0.592,14,2.324,21,1.2,22,0.017,24,0.536,25,4.224,30,0.452,32,0.232,35,0.013,36,0.013,49,3.572,56,4.014,57,1.754,130,0.857,131,1.437,140,2.776,255,1.269,280,4.014,281,4.595,282,2.42,283,2.222,333,4.595,1058,3.78,1173,4.014,1478,6.071,1479,6.071,1480,4.971,1481,4.282,1708,4.197,1709,7.028]],["title/injectables/UploadService.html",[37,1.024,1032,2.337]],["body/injectables/UploadService.html",[2,1.387,3,0.166,4,0.209,5,0.273,7,0.3,8,0.554,22,0.017,24,0.436,28,2.409,30,0.549,32,0.209,33,2.108,35,0.012,36,0.012,37,1.528,39,1.906,44,0.721,45,0.688,50,1.05,55,0.506,57,1.582,61,2.669,62,2.502,63,0.424,103,2.019,110,1.288,129,1.664,130,0.777,131,1.345,133,1.288,165,1.273,168,1.329,174,1.655,255,0.791,282,1.733,283,2.003,286,3.743,287,4.51,293,3.392,297,4.51,298,4.049,300,2.669,301,2.864,302,3.098,303,2.909,304,4.945,305,1.582,306,3.784,307,3.784,308,3.784,309,3.784,310,3.784,313,2.303,664,5.432,1032,3.488,1056,4.782,1058,3.079,1059,3.784,1509,4.945,1616,3.784,1710,3.784,1711,5.724,1712,5.724,1713,4.381,1714,5.724,1715,5.724,1716,5.724,1717,5.841,1718,4.381,1719,4.381,1720,4.381,1721,4.381,1722,4.381,1723,4.381,1724,4.381,1725,4.381,1726,4.381,1727,5.724,1728,4.381,1729,4.381,1730,4.381,1731,4.381,1732,4.381,1733,4.381,1734,4.381,1735,4.381,1736,5.724,1737,4.381,1738,4.381,1739,4.381,1740,4.381]],["title/components/UploadsComponent.html",[64,0.164,273,0.827]],["body/components/UploadsComponent.html",[1,0.649,3,0.068,4,0.086,5,0.077,7,0.329,8,0.286,14,0.978,21,0.91,22,0.017,23,1.321,24,0.443,27,2.1,28,0.681,30,0.531,32,0.086,33,0.978,35,0.006,36,0.006,44,1.176,45,1.122,50,1.23,55,0.208,57,0.651,63,0.174,64,0.161,65,0.939,66,0.666,67,0.423,68,0.423,69,0.423,73,1.068,74,1.56,76,0.372,77,1.425,81,0.823,84,1.654,85,1.648,86,1.812,87,0.61,88,0.695,89,1.489,90,2.15,91,2.662,92,1.812,93,2.662,95,0.695,97,0.695,103,2.455,106,1.638,107,2.214,110,0.666,112,1.806,119,1.913,124,1.645,129,1.266,130,0.802,131,1.023,133,1.368,140,0.747,146,3.284,147,2.849,158,1.287,160,1.504,162,2.317,165,0.524,166,0.784,167,0.784,168,1.142,169,0.596,170,0.969,172,0.868,173,0.868,174,0.681,175,1.395,176,4.156,177,0.713,178,0.681,179,0.406,180,0.406,181,0.916,183,0.423,192,2.214,193,3.373,194,3.373,195,1.903,198,2.588,199,0.681,200,1.029,202,1.068,203,0.916,204,0.916,205,0.824,213,0.423,214,0.695,215,0.666,216,0.356,217,1.023,218,0.423,219,0.884,220,0.388,221,0.423,222,0.388,223,0.638,224,0.423,225,0.388,226,0.423,227,0.388,228,0.423,229,0.388,230,0.423,231,0.423,232,0.388,233,0.423,234,0.388,235,0.423,236,0.388,237,0.423,238,0.939,239,0.423,240,0.388,241,0.423,242,0.388,243,0.423,244,0.388,245,0.423,246,0.388,247,0.423,248,0.388,249,0.423,250,0.939,251,0.423,252,0.388,253,0.423,254,0.939,255,0.869,256,0.388,257,0.423,258,0.388,259,0.695,260,0.423,261,0.388,262,0.423,263,0.388,264,0.423,265,0.638,266,1.03,267,0.423,268,0.638,269,0.423,270,0.939,271,0.847,272,0.423,273,0.939,274,1.177,275,0.406,276,0.372,277,0.406,278,0.423,282,0.713,283,0.824,305,2.375,313,1.359,324,2.49,326,2.488,341,2.662,350,2.914,371,2.556,376,1.275,379,0.651,382,0.713,384,1.098,385,0.784,388,2.291,390,1.178,458,0.969,503,3.374,631,2.024,632,2.662,666,1.098,667,1.178,1039,1.803,1058,3.068,1065,2.662,1094,2.914,1105,2.093,1108,1.275,1153,3.373,1158,1.557,1173,3.12,1194,3.763,1221,2.291,1232,2.556,1240,1.557,1275,2.556,1277,2.556,1455,3.373,1481,2.931,1497,1.395,1550,1.395,1554,3.251,1569,2.291,1602,1.395,1625,2.556,1741,1.557,1742,3.657,1743,3.764,1744,3.764,1745,3.764,1746,2.959,1747,2.959,1748,3.764,1749,3.764,1750,3.764,1751,3.764,1752,3.764,1753,3.764,1754,3.764,1755,3.764,1756,3.764,1757,2.662,1758,4.356,1759,2.959,1760,4.356,1761,4.356,1762,2.959,1763,4.356,1764,4.356,1765,2.959,1766,3.251,1767,1.802,1768,2.959,1769,1.802,1770,2.959,1771,1.802,1772,1.802,1773,1.802,1774,1.802,1775,2.959,1776,1.802,1777,1.802,1778,1.802,1779,2.959,1780,1.802,1781,1.802,1782,1.802,1783,1.802,1784,2.959,1785,1.802,1786,1.802,1787,2.959,1788,1.802,1789,1.802,1790,1.802,1791,1.802,1792,2.959,1793,1.802,1794,1.802,1795,1.802,1796,1.802,1797,2.959,1798,1.802,1799,1.802,1800,1.802,1801,1.802,1802,1.802,1803,1.802,1804,2.959,1805,1.802,1806,1.802,1807,2.959,1808,1.802,1809,2.914,1810,1.802,1811,1.802,1812,1.802,1813,1.395,1814,2.291,1815,1.395,1816,1.802,1817,1.802,1818,1.802,1819,1.802,1820,1.802,1821,1.802,1822,1.802,1823,1.802,1824,1.802,1825,4.811,1826,3.764,1827,1.802,1828,2.959,1829,1.802,1830,1.802,1831,1.802,1832,1.802,1833,1.802,1834,1.802,1835,1.802,1836,1.802,1837,2.959,1838,1.802,1839,3.764,1840,1.802,1841,4.356,1842,1.802,1843,1.802,1844,1.802,1845,1.802,1846,1.802,1847,1.802,1848,1.802,1849,1.802,1850,1.802,1851,1.802,1852,1.802,1853,1.802,1854,1.802,1855,1.802,1856,2.959,1857,2.959,1858,1.802,1859,1.802,1860,1.802,1861,1.802,1862,3.764,1863,1.802,1864,1.802,1865,1.802,1866,1.802,1867,1.802,1868,1.802,1869,1.802,1870,1.802,1871,1.802,1872,1.802,1873,1.802,1874,1.802,1875,1.802,1876,1.802,1877,2.959,1878,1.802,1879,1.802,1880,1.802,1881,4.356,1882,2.959,1883,2.959,1884,2.959]],["title/injectables/UploadsGQL.html",[37,1.024,1742,2.713]],["body/injectables/UploadsGQL.html",[3,0.179,4,0.226,5,0.202,7,0.323,8,0.582,9,2.055,12,1.958,14,1.987,15,2.055,18,2.17,19,2.16,21,1.098,22,0.017,24,0.452,30,0.531,32,0.343,33,1.562,35,0.013,36,0.013,37,1.604,39,2.055,41,3.232,42,3.974,43,4.027,44,0.778,45,0.742,46,3.433,49,3.054,50,0.778,52,3.662,53,2.541,54,2.698,55,0.545,57,1.706,63,0.457,130,0.876,181,2.401,255,1.193,274,1.424,280,2.698,282,2.377,283,2.16,322,3.657,323,3.657,324,3.183,326,3.775,1058,3.863,1173,4.103,1480,3.341,1481,4.377,1488,4.653,1491,4.653,1742,4.251,1757,4.675,1809,3.657,1885,3.341,1886,4.724,1887,4.081,1888,4.081,1889,4.081]],["title/classes/Validation.html",[63,0.371,513,2.713]],["body/classes/Validation.html",[3,0.202,4,0.254,5,0.227,7,0.363,21,1.131,22,0.017,23,1.961,24,0.363,30,0.392,32,0.254,33,2.137,35,0.014,36,0.015,50,0.874,63,0.514,81,1.221,110,1.455,129,1.543,130,0.647,131,1.248,133,1.195,166,2.311,313,2.619,513,4.572,540,5.584,637,3.756,1890,5.31,1891,4.588,1892,6.968,1893,6.464,1894,6.968,1895,5.31,1896,5.31,1897,6.968,1898,6.464,1899,5.31,1900,5.31,1901,5.31,1902,5.31,1903,5.31,1904,5.31,1905,5.31,1906,5.31,1907,5.31]],["title/coverage.html",[1908,4.526]],["body/coverage.html",[0,1.765,1,0.515,3,0.113,5,0.128,6,3.396,22,0.017,24,0.204,27,2.79,34,2.112,35,0.009,36,0.009,37,1.899,38,1.952,40,2.312,56,1.706,63,0.289,64,0.331,65,0.644,70,2.58,71,2.58,72,3.677,83,2.112,182,1.82,192,2.229,216,0.59,220,0.644,222,0.644,225,0.644,227,0.644,229,0.644,232,0.644,234,0.644,236,0.644,238,0.644,240,0.644,242,0.644,244,0.644,246,0.644,248,0.644,250,0.644,252,0.644,254,0.644,256,0.644,258,0.644,261,0.644,263,0.644,265,0.644,266,0.792,268,0.644,270,0.644,271,0.987,273,0.644,276,0.616,279,3.396,282,1.181,284,1.952,285,2.58,303,2.912,305,1.078,319,2.312,320,2.312,330,2.112,331,3.396,334,2.112,337,2.58,382,1.181,383,1.518,384,1.82,386,2.312,387,2.312,389,2.312,426,2.58,427,2.58,432,1.518,450,2.112,462,2.58,473,2.312,474,2.312,476,2.312,480,2.112,481,2.58,485,2.58,486,2.58,513,2.112,545,2.58,589,1.82,590,2.112,624,3.396,625,3.396,627,2.58,628,2.312,629,2.58,695,2.58,700,2.58,734,2.58,1006,2.112,1007,3.102,1008,3.399,1010,2.312,1016,2.58,1026,2.58,1030,2.58,1031,2.58,1032,1.82,1033,2.112,1056,2.112,1057,2.58,1060,2.312,1061,2.58,1063,2.58,1077,2.112,1079,2.58,1080,2.58,1091,2.58,1118,2.58,1122,2.58,1126,3.396,1137,2.312,1155,2.58,1156,2.58,1157,2.58,1167,2.58,1171,2.58,1172,2.58,1184,3.396,1189,2.112,1196,2.312,1243,2.312,1245,2.312,1289,2.58,1290,2.58,1291,2.58,1292,2.58,1349,2.312,1359,2.58,1362,3.396,1363,2.58,1403,2.312,1412,2.58,1471,2.58,1474,2.112,1475,3.102,1486,2.312,1496,3.677,1497,2.312,1498,2.58,1550,2.312,1551,2.58,1602,2.312,1603,2.58,1708,2.58,1710,2.58,1741,2.58,1742,2.112,1757,2.112,1813,2.312,1814,2.312,1815,2.312,1885,3.102,1891,2.58,1908,2.58,1909,2.986,1910,2.986,1911,2.986,1912,2.986,1913,3.396,1914,6.903,1915,2.312,1916,7.881,1917,7.556,1918,2.58,1919,5.199,1920,4.386,1921,4.386,1922,4.386,1923,2.58,1924,2.58,1925,4.949,1926,3.789,1927,3.789,1928,2.58,1929,3.789,1930,2.986,1931,2.986,1932,5.729,1933,4.386,1934,4.386,1935,4.386,1936,2.58,1937,2.986,1938,3.396,1939,2.312,1940,2.58,1941,6.903,1942,2.58,1943,2.58,1944,2.58,1945,2.58,1946,2.58,1947,2.58,1948,2.58,1949,2.986,1950,2.986,1951,2.986,1952,2.986,1953,2.986,1954,2.986,1955,2.986,1956,5.199,1957,2.986,1958,2.986,1959,2.58,1960,2.58,1961,2.58,1962,2.986,1963,4.949,1964,2.58,1965,2.58,1966,2.58,1967,3.789,1968,2.986]],["title/dependencies.html",[1969,2.766,1970,3.986]],["body/dependencies.html",[22,0.017,35,0.013,36,0.013,53,2.681,54,2.847,55,0.575,166,2.168,168,2.384,169,1.648,174,1.883,177,1.971,178,1.883,180,1.122,181,2.533,376,5.264,377,3.859,379,1.8,381,3.859,666,3.037,1087,4.396,1088,4.396,1239,3.259,1442,3.859,1813,3.859,1970,4.305,1971,4.984,1972,7.696,1973,4.984,1974,4.984,1975,4.984,1976,4.984,1977,4.984,1978,4.984,1979,4.984,1980,4.984,1981,4.984,1982,7.829,1983,4.984,1984,4.984,1985,4.984,1986,4.984,1987,4.984,1988,4.984,1989,4.984,1990,6.216,1991,4.984,1992,4.984,1993,4.984,1994,4.984,1995,4.984,1996,4.984,1997,4.984,1998,4.984,1999,4.984,2000,4.984,2001,4.984,2002,4.984]],["title/miscellaneous/enumerations.html",[2003,1.722,2004,3.986]],["body/miscellaneous/enumerations.html",[7,0.371,22,0.017,26,3.517,35,0.014,36,0.014,45,1.253,223,1.167,255,1.181,266,1.181,302,4.625,491,3.539,1413,4.677,2003,2.912,2004,4.677,2005,5.413,2006,5.413,2007,5.413,2008,5.413,2009,5.413,2010,5.413,2011,5.413,2012,5.413,2013,5.413,2014,5.413,2015,5.413,2016,5.413,2017,5.413,2018,5.413,2019,5.413,2020,5.413,2021,5.413,2022,5.413,2023,5.413,2024,5.413,2025,5.413,2026,7.299,2027,6.54,2028,6.54,2029,6.54,2030,5.413,2031,6.54]],["title/miscellaneous/functions.html",[2003,1.722,2032,3.986]],["body/miscellaneous/functions.html",[7,0.339,21,1.059,22,0.017,23,1.504,24,0.509,26,3.636,27,1.713,35,0.013,36,0.013,44,0.816,45,0.779,124,1.381,129,2.192,130,0.919,131,1.772,133,1.716,140,2.056,147,3.091,255,0.895,332,3.84,336,2.984,348,3.022,349,3.091,383,3.15,389,4.798,450,4.383,1173,2.833,1196,4.798,1202,4.285,1243,4.798,1766,5.839,1815,4.798,1913,3.84,1915,4.798,1938,3.84,1939,5.233,1963,4.285,1964,5.354,1965,4.285,1966,5.839,1967,4.285,2003,2.668,2032,4.285,2033,4.285,2034,4.285,2035,7.08,2036,4.96,2037,6.197,2038,4.96,2039,4.96,2040,4.96,2041,6.197,2042,4.96,2043,4.285,2044,4.96,2045,4.96,2046,4.96,2047,4.96]],["title/index.html",[7,0.219,2048,3.202,2049,3.202]],["body/index.html",[22,0.016,35,0.015,36,0.015,85,1.401,2050,6.223]],["title/modules.html",[2051,4.526]],["body/modules.html",[22,0.015,35,0.015,36,0.015,2051,5.409]],["title/overview.html",[2052,4.526]],["body/overview.html",[2,1.935,22,0.015,28,2.654,29,2.795,35,0.015,36,0.015,39,2.659,63,0.592,66,1.376,216,1.207,1078,3.996,1936,5.28,2052,5.28,2053,6.112,2054,6.112]],["title/properties.html",[8,0.447,1969,2.766]],["body/properties.html",[8,0.598,22,0.016,35,0.015,36,0.015,286,4.036,1119,4.367,2055,6.174,2056,6.174,2057,6.174]],["title/miscellaneous/typealiases.html",[2003,1.722,2058,4.614]],["body/miscellaneous/typealiases.html",[3,0.263,7,0.321,17,2.88,22,0.014,24,0.543,27,1.619,28,1.771,29,2.144,35,0.012,36,0.012,40,3.629,52,4.465,58,5.166,59,5.166,60,5.166,156,4.63,266,1.189,291,5.166,295,5.166,319,3.629,320,5.371,328,5.166,329,5.166,451,4.23,562,5.166,568,5.166,1007,3.316,1008,4.869,1012,5.166,1013,5.166,1062,6.844,1349,3.629,1358,5.166,1475,4.23,1483,5.166,1484,5.166,1485,5.166,1486,5.371,1491,4.63,1492,5.166,1494,5.166,1495,5.166,1717,5.166,1809,4.63,1885,3.316,1887,5.166,1888,5.166,2003,2.521,2059,4.688,2060,6.586,2061,6.586,2062,6.586,2063,5.166,2064,5.98,2065,5.98,2066,5.98,2067,4.688,2068,4.688,2069,7.327,2070,4.688,2071,5.689,2072,4.688,2073,4.688,2074,4.688,2075,4.688,2076,4.688]],["title/miscellaneous/variables.html",[2003,1.722,2077,3.986]],["body/miscellaneous/variables.html",[1,0.355,6,1.593,7,0.141,9,1.793,10,1.586,11,1.674,12,1.708,13,2.154,14,1.909,15,1.793,16,1.674,17,1.586,18,1.701,19,1.884,20,1.772,21,0.705,22,0.017,23,2.214,24,0.452,27,2.752,28,2.449,29,0.941,33,1.818,34,2.33,35,0.007,36,0.007,38,1.345,42,1.175,44,1.173,45,1.119,46,1.882,49,3.144,53,1.107,77,0.991,78,4.083,80,1.455,81,1.198,110,0.463,130,0.574,162,0.991,179,0.463,189,1.593,199,0.777,202,0.743,223,0.443,255,0.371,266,0.595,274,0.888,280,1.175,284,1.345,303,3.144,313,2.085,322,1.593,323,1.593,324,1.984,326,2.353,349,1.884,365,1.046,369,1.586,382,0.814,383,1.674,384,1.254,386,2.551,387,2.551,406,3.19,415,1.046,432,1.674,453,2.551,460,1.593,473,2.551,491,1.345,546,4.069,551,1.778,588,1.778,589,1.254,590,2.33,614,1.593,624,1.593,625,2.551,637,3.644,696,1.593,1007,1.455,1008,2.154,1009,1.778,1010,2.551,1014,1.778,1015,1.778,1017,3.559,1018,3.559,1019,3.559,1020,4.451,1021,3.559,1022,1.778,1024,1.778,1025,2.846,1027,1.593,1032,1.254,1058,2.533,1082,3.647,1119,1.455,1126,1.593,1133,5.182,1137,2.551,1140,3.594,1141,4.256,1142,1.778,1143,1.593,1144,1.778,1145,1.778,1146,2.551,1147,1.593,1148,1.778,1149,1.778,1150,1.778,1173,2.69,1184,1.593,1193,2.33,1245,2.551,1246,1.778,1247,1.778,1248,1.778,1318,1.778,1332,6.2,1403,1.593,1480,1.455,1481,2.87,1488,2.551,1757,2.33,1814,2.551,1885,1.455,1889,1.778,1913,1.593,1915,1.593,1918,2.846,1923,1.778,1924,2.846,1925,2.846,1926,3.559,1927,3.559,1928,2.846,1929,3.559,1938,1.593,1939,1.593,1940,3.559,1942,1.778,1943,2.846,1944,2.846,1945,1.778,1946,2.846,1947,1.778,1948,2.846,1959,1.778,1960,1.778,1961,1.778,2003,1.107,2033,1.778,2034,1.778,2043,1.778,2063,1.778,2071,1.778,2077,1.778,2078,2.058,2079,2.058,2080,2.058,2081,2.058,2082,2.058,2083,2.058,2084,2.058,2085,2.058,2086,2.058,2087,4.71,2088,2.058,2089,2.058,2090,2.058,2091,2.058,2092,2.058,2093,2.058,2094,2.058,2095,2.058,2096,2.058,2097,2.058,2098,2.058,2099,4.12,2100,2.058,2101,2.058,2102,3.294,2103,3.294,2104,2.058,2105,3.294,2106,2.058,2107,2.058,2108,2.058,2109,2.058,2110,2.058,2111,2.058,2112,2.058,2113,3.294,2114,2.058,2115,2.058,2116,2.058,2117,3.294,2118,4.12,2119,2.058,2120,2.058,2121,2.058,2122,2.058,2123,2.058,2124,2.058,2125,2.058,2126,2.058,2127,2.058,2128,2.058,2129,5.152,2130,7.176,2131,2.058,2132,7.176,2133,6.6,2134,7.176,2135,6.346,2136,5.497,2137,6.346,2138,3.294,2139,5.152,2140,2.058,2141,2.058,2142,2.058,2143,2.058,2144,3.294,2145,2.058,2146,2.058,2147,3.294,2148,2.058,2149,4.12,2150,4.71,2151,2.058,2152,2.058,2153,2.058,2154,2.058,2155,2.058,2156,2.058,2157,2.058,2158,2.058,2159,2.058,2160,2.058,2161,2.058,2162,2.058,2163,2.058,2164,2.058,2165,2.058,2166,6.949,2167,6.949,2168,6.949,2169,4.71,2170,2.058,2171,2.058,2172,2.058]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":27,"title":{},"body":{"interfaces/Account.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.2",{"_index":2056,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":2002,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1952,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1956,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1954,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1922,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1951,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1941,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1930,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1955,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1957,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":1958,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1962,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["01.01.2001",{"_index":1704,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["1",{"_index":28,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AuthComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":1992,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":1950,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1937,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2054,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1936,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16",{"_index":1995,"title":{},"body":{"dependencies.html":{}}}],["18.0.0",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":29,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.32.1",{"_index":1980,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2000,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1953,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1053,"title":{},"body":{"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["200ms",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1949,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":2053,"title":{},"body":{"overview.html":{}}}],["27",{"_index":1434,"title":{},"body":{"components/SignUpComponent.html":{}}}],["3",{"_index":1548,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["3.0.0",{"_index":1977,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":1994,"title":{},"body":{"dependencies.html":{}}}],["3.83.0",{"_index":1982,"title":{},"body":{"dependencies.html":{}}}],["3.84.0",{"_index":1986,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1433,"title":{},"body":{"components/SignUpComponent.html":{}}}],["4.0.0",{"_index":1991,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1411,"title":{},"body":{"components/SignInComponent.html":{}}}],["401",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["409",{"_index":1468,"title":{},"body":{"components/SignUpComponent.html":{}}}],["5",{"_index":325,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["50",{"_index":1403,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["500ms",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":1993,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1998,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":539,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["8.0.1",{"_index":1997,"title":{},"body":{"dependencies.html":{}}}],["8.13.0",{"_index":1978,"title":{},"body":{"dependencies.html":{}}}],["a,optio",{"_index":946,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a.localecompare(b",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["a.url",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.url.includes('/404",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects.includes('/404",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ab",{"_index":826,"title":{},"body":{"components/DashboardComponent.html":{}}}],["absolute",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":1898,"title":{},"body":{"classes/Validation.html":{}}}],["accept",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token",{"_index":482,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["accessors",{"_index":1625,"title":{},"body":{"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["account($username",{"_index":47,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account(where",{"_index":48,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account.avatar",{"_index":1260,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.avatar.url",{"_index":1261,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.birthday",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name",{"_index":1263,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name.trim",{"_index":1265,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.interface",{"_index":626,"title":{},"body":{"interfaces/AuthenticatedUser.html":{}}}],["account.last_name",{"_index":1264,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.last_name.trim",{"_index":1266,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.model",{"_index":484,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["account.vk_avatar",{"_index":1262,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account/avatar",{"_index":2024,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["account_avatar",{"_index":2023,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accountfilter",{"_index":99,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountgql",{"_index":38,"title":{"injectables/AccountGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountid",{"_index":1278,"title":{},"body":{"components/ProfileComponent.html":{}}}],["accountinfogql",{"_index":104,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinfoquery",{"_index":105,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinput",{"_index":184,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinputcomponent",{"_index":65,"title":{"components/AccountInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["accountmodel",{"_index":56,"title":{"interfaces/AccountModel.html":{}},"body":{"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/AuthModel.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["accountqueryref",{"_index":60,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountresponse",{"_index":58,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accounts",{"_index":100,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountservice",{"_index":284,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountsfilter",{"_index":101,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountshortmodel",{"_index":182,"title":{"interfaces/AccountShortModel.html":{}},"body":{"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusername($username",{"_index":321,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountsinfobyusernamegql",{"_index":83,"title":{"injectables/AccountsInfoByUsernameGQL.html":{}},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusernamequeryref",{"_index":156,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernameresponse",{"_index":328,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernamevariables",{"_index":329,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountslist",{"_index":102,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountvariables",{"_index":59,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accusamus",{"_index":784,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusamusreiciendis",{"_index":993,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantium",{"_index":839,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantiumquidem",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actions",{"_index":1640,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["activatedroute",{"_index":447,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["activeitemindex",{"_index":466,"title":{},"body":{"components/AuthComponent.html":{}}}],["actual_component",{"_index":278,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["ad",{"_index":892,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisci",{"_index":795,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisicing",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{}}}],["administrator",{"_index":2031,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":1364,"title":{},"body":{"components/SignInComponent.html":{}}}],["alerts",{"_index":106,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["alias",{"_index":917,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliases",{"_index":2059,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliquam",{"_index":842,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquam,nemo",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquamearum",{"_index":998,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid",{"_index":766,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid!soluta",{"_index":921,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquidpraesentium",{"_index":983,"title":{},"body":{"components/DashboardComponent.html":{}}}],["allow",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amet",{"_index":742,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ametimpedit",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{}}}],["angular",{"_index":54,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":178,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":300,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/SignUpComponent.html":{},"injectables/UploadService.html":{}}}],["angular/compiler",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":55,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":172,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["angular/forms",{"_index":166,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1087,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animations",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/UploadsComponent.html":{}}}],["animi",{"_index":874,"title":{},"body":{"components/DashboardComponent.html":{}}}],["animicommodi",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aperiam",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{}}}],["api",{"_index":302,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["apierror",{"_index":330,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["apiurl",{"_index":1017,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":53,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["apollo/client",{"_index":1976,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/errors",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollo_options",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apolloclientoptions",{"_index":2038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apolloerror",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollooptionsfactory",{"_index":1939,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngondestroy",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngoninit",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/pass/auth",{"_index":448,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["app_initializer",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":220,"title":{"components/AppComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":1018,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory",{"_index":1915,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory(config",{"_index":2039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applicationconfig",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["architecto",{"_index":817,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architecto,molestias",{"_index":970,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architectonesciunt",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{}}}],["area",{"_index":1340,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["arguments",{"_index":1308,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["array(10",{"_index":1804,"title":{},"body":{"components/UploadsComponent.html":{}}}],["array.isarray(currentvalue",{"_index":1859,"title":{},"body":{"components/UploadsComponent.html":{}}}],["asperiores",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernatur",{"_index":845,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernaturquia",{"_index":965,"title":{},"body":{"components/DashboardComponent.html":{}}}],["assumenda",{"_index":915,"title":{},"body":{"components/DashboardComponent.html":{}}}],["async",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{}}}],["atque",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{}}}],["atqueeaque",{"_index":922,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aut",{"_index":790,"title":{},"body":{"components/DashboardComponent.html":{}}}],["autem",{"_index":834,"title":{},"body":{"components/DashboardComponent.html":{}}}],["auth",{"_index":223,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":226,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["auth.$$isauth.pipe",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.component.html",{"_index":464,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":465,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.ngoninit",{"_index":468,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth/logout",{"_index":2015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh",{"_index":2017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh/clear",{"_index":2019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/sign",{"_index":2013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/token",{"_index":2011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_me",{"_index":2009,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh",{"_index":2016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh_clear",{"_index":2018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_in",{"_index":2010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_out",{"_index":2014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_up",{"_index":2012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authcallback",{"_index":452,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngondestroy",{"_index":433,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngoninit",{"_index":435,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallbackcomponent",{"_index":222,"title":{"components/AuthCallbackComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["authcallbackdto",{"_index":451,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["authcallbackguard",{"_index":1944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcomponent",{"_index":225,"title":{"components/AuthComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["authenticatedroutes",{"_index":1132,"title":{},"body":{"components/NavComponent.html":{}}}],["authenticateduser",{"_index":589,"title":{"interfaces/AuthenticatedUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/UploadFileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":1946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodel",{"_index":480,"title":{"interfaces/AuthModel.html":{}},"body":{"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authorization",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authpass",{"_index":514,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngondestroy",{"_index":497,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngoninit",{"_index":499,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpasscomponent",{"_index":227,"title":{"components/AuthPassComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":382,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autquia",{"_index":927,"title":{},"body":{"components/DashboardComponent.html":{}}}],["avatar",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["avatar'},{'name",{"_index":231,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["avatar.component",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{}}}],["avatar.component.html",{"_index":633,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.scss",{"_index":634,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts",{"_index":629,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["avatar.component.ts:108",{"_index":650,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:133",{"_index":654,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:149",{"_index":649,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:155",{"_index":653,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:47",{"_index":656,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:48",{"_index":660,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:49",{"_index":645,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:65",{"_index":659,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:67",{"_index":662,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:69",{"_index":663,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:70",{"_index":657,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:72",{"_index":651,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:76",{"_index":647,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar/change",{"_index":628,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["avataralreadyexists",{"_index":635,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["await",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["b",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["baggage",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beatae",{"_index":787,"title":{},"body":{"components/DashboardComponent.html":{}}}],["before",{"_index":1305,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["behaviorsubject",{"_index":438,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(false",{"_index":506,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(true",{"_index":439,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["between",{"_index":1341,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["big",{"_index":1325,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["birthday",{"_index":10,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["blanditiis",{"_index":846,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blanditiislaudantium",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blob",{"_index":310,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body",{"_index":304,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('acl",{"_index":1730,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('compress",{"_index":1723,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('file",{"_index":307,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('id",{"_index":312,"title":{},"body":{"injectables/AccountService.html":{}}}],["body.append('name",{"_index":1728,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('originalname",{"_index":1725,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('path",{"_index":1721,"title":{},"body":{"injectables/UploadService.html":{}}}],["boolean",{"_index":140,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"injectables/ScrollService.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"miscellaneous/functions.html":{}}}],["borderradius",{"_index":1402,"title":{},"body":{"components/SignInComponent.html":{}}}],["bottom",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":537,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["browser",{"_index":1088,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["bucket",{"_index":1478,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["cache",{"_index":189,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["calculated",{"_index":1346,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["callback",{"_index":428,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback'},{'name",{"_index":224,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["callback.component.html",{"_index":429,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.scss",{"_index":430,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts",{"_index":427,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["callback.component.ts:23",{"_index":444,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:24",{"_index":437,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:25",{"_index":445,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:27",{"_index":446,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:29",{"_index":440,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:30",{"_index":442,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:33",{"_index":436,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:57",{"_index":434,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.guard.ts",{"_index":1943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["callbackurl",{"_index":467,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["canactivatefn",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":534,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["catcherror",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["catcherror((err",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"miscellaneous/variables.html":{}}}],["catcherror((res",{"_index":677,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["change",{"_index":230,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["changeavatar",{"_index":639,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["changeavatarcomponent",{"_index":229,"title":{"components/ChangeAvatarComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["charts",{"_index":1981,"title":{},"body":{"dependencies.html":{}}}],["chatonly",{"_index":2028,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chats",{"_index":696,"title":{},"body":{"components/ChatsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["chats'},{'name",{"_index":233,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["chats.component.html",{"_index":697,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chats.component.scss",{"_index":698,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chatscomponent",{"_index":232,"title":{"components/ChatsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["checkcontrol",{"_index":1901,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors['matching",{"_index":1904,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.errors",{"_index":1903,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.value",{"_index":1906,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":1894,"title":{},"body":{"classes/Validation.html":{}}}],["class",{"_index":63,"title":{"classes/Validation.html":{}},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1890,"title":{},"body":{"classes/Validation.html":{}}}],["clear",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["clickowner",{"_index":1556,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["clickupload",{"_index":1622,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["client",{"_index":2050,"title":{},"body":{"index.html":{}}}],["close",{"_index":1097,"title":{},"body":{"components/MeComponent.html":{}}}],["closemenu",{"_index":704,"title":{},"body":{"injectables/ConfigService.html":{},"components/NavComponent.html":{}}}],["code",{"_index":335,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{}}}],["commerce",{"_index":1983,"title":{},"body":{"dependencies.html":{}}}],["commodi",{"_index":786,"title":{},"body":{"components/DashboardComponent.html":{}}}],["commonmodule",{"_index":89,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["complete",{"_index":1113,"title":{},"body":{"components/MeComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["component",{"_index":64,"title":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":218,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["components",{"_index":66,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"overview.html":{}}}],["components/account",{"_index":1818,"title":{},"body":{"components/UploadsComponent.html":{}}}],["components/extension",{"_index":1817,"title":{},"body":{"components/UploadsComponent.html":{}}}],["components/header",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["components/me",{"_index":1075,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/menu",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["components/nav",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["components/not",{"_index":1819,"title":{},"body":{"components/UploadsComponent.html":{}}}],["components/oops",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["components/permission",{"_index":1816,"title":{},"body":{"components/UploadsComponent.html":{}}}],["compress",{"_index":1520,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["computed",{"_index":150,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["config",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"miscellaneous/functions.html":{}}}],["configservice",{"_index":383,"title":{"injectables/ConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["confirmform",{"_index":1417,"title":{},"body":{"components/SignUpComponent.html":{}}}],["confirmpass",{"_index":504,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["consectetur",{"_index":743,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequatur",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequaturmollitia",{"_index":920,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequuntur",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequunturcommodi",{"_index":986,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console",{"_index":1337,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["console.log(err",{"_index":460,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":33,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{}}}],["constructor(context",{"_index":643,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["constructor(el",{"_index":1298,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["constructor(fb",{"_index":493,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(private",{"_index":515,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/IFrameUrlPipe.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["container",{"_index":1395,"title":{},"body":{"components/SignInComponent.html":{}}}],["contains",{"_index":323,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":646,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["context.data.accountid",{"_index":671,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["context.data.avataralreadyexists",{"_index":673,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["context.data.uploadid",{"_index":1575,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["control",{"_index":637,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["control?.value",{"_index":1905,"title":{},"body":{"classes/Validation.html":{}}}],["controlname",{"_index":1896,"title":{},"body":{"classes/Validation.html":{}}}],["controls",{"_index":1899,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":1902,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":1907,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":1900,"title":{},"body":{"classes/Validation.html":{}}}],["controlvalueaccessor",{"_index":75,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["corporis",{"_index":884,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corporisdicta",{"_index":985,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corrupti",{"_index":879,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coverage",{"_index":1908,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":280,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["credentials",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["culpa",{"_index":808,"title":{},"body":{"components/DashboardComponent.html":{}}}],["culpaconsectetur",{"_index":926,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cum",{"_index":897,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cumque",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditate",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatequasi",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatereiciendis",{"_index":972,"title":{},"body":{"components/DashboardComponent.html":{}}}],["currently",{"_index":1329,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentpath",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth/callback",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentscrolledy",{"_index":1333,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentstep",{"_index":1505,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["currentuser",{"_index":1749,"title":{},"body":{"components/UploadsComponent.html":{}}}],["currentvalue",{"_index":1856,"title":{},"body":{"components/UploadsComponent.html":{}}}],["currentvalue.includes(ext.trim",{"_index":1860,"title":{},"body":{"components/UploadsComponent.html":{}}}],["customicon",{"_index":1146,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":1286,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["dashboard",{"_index":735,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":235,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["dashboard.component.html",{"_index":736,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":737,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":234,"title":{"components/DashboardComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["data",{"_index":458,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["data.access_token",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar.url",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.birthday",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.email",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name.trim",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name.trim",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.roles.sort((a",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.sex",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.username",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_avatar",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_id",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":25,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{}}}],["datepipe",{"_index":1185,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["debitis",{"_index":887,"title":{},"body":{"components/DashboardComponent.html":{}}}],["debouncedsignal",{"_index":1964,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["debouncedsignal(sourcesignal",{"_index":2040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debouncetime",{"_index":175,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{},"components/UploadsComponent.html":{}}}],["debouncetime(1000",{"_index":194,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{},"components/UploadsComponent.html":{}}}],["debouncetimeinms",{"_index":2041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{}}}],["default",{"_index":44,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":50,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["delectus",{"_index":823,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delectusconsequuntur",{"_index":990,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deleniti",{"_index":830,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitipariatur",{"_index":991,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitiquaerat",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delete",{"_index":1616,"title":{},"body":{"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{}}}],["deleteupload(where",{"_index":1015,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyid($id",{"_index":1014,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidgql",{"_index":1006,"title":{"injectables/DeleteUploadByIdGQL.html":{}},"body":{"injectables/DeleteUploadByIdGQL.html":{},"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["deleteuploadbyidquery",{"_index":1010,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidresponse",{"_index":1012,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["deleteuploadbyidvariables",{"_index":1013,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":1970,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":286,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadService.html":{},"properties.html":{}}}],["deserunt",{"_index":802,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deseruntaut",{"_index":969,"title":{},"body":{"components/DashboardComponent.html":{}}}],["destroyref",{"_index":107,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["dev",{"_index":1023,"title":{},"body":{"interfaces/Env.html":{}}}],["dialog",{"_index":1610,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["dialogs",{"_index":1094,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["dialogsub",{"_index":1611,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["dicta",{"_index":875,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dignissimos",{"_index":902,"title":{},"body":{"components/DashboardComponent.html":{}}}],["directive",{"_index":216,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":275,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["disabled",{"_index":108,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["distinctio",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctioaliquid",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctiovoluptates",{"_index":987,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctuntilchanged",{"_index":176,"title":{},"body":{"components/AccountInputComponent.html":{},"components/UploadsComponent.html":{}}}],["dj29fnsadjsd82f249k293c139j1kd3",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["document",{"_index":43,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["documentation",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":740,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolore",{"_index":886,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorem",{"_index":909,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloremque",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolores",{"_index":895,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus!aspernatur",{"_index":937,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribusut",{"_index":1001,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorum",{"_index":819,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dom",{"_index":68,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["dompurify",{"_index":1990,"title":{},"body":{"dependencies.html":{}}}],["domsanitizer",{"_index":1086,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadListItemComponent.html":{}}}],["dto",{"_index":293,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["dto.compress.tostring",{"_index":1724,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.file",{"_index":308,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["dto.file.name",{"_index":1726,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.id",{"_index":311,"title":{},"body":{"injectables/AccountService.html":{}}}],["dto.name",{"_index":1727,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.path",{"_index":1722,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.private",{"_index":1729,"title":{},"body":{"injectables/UploadService.html":{}}}],["dtos",{"_index":301,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["ducimus",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dynamic",{"_index":1975,"title":{},"body":{"dependencies.html":{}}}],["ea",{"_index":908,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eaque",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{}}}],["earum",{"_index":880,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ease",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["eius",{"_index":805,"title":{},"body":{"components/DashboardComponent.html":{}}}],["el",{"_index":1301,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["element",{"_index":215,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["elementref",{"_index":1299,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{}}}],["eligendi",{"_index":872,"title":{},"body":{"components/DashboardComponent.html":{}}}],["elit",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{}}}],["email",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["emit",{"_index":1304,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end",{"_index":1306,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts",{"_index":1292,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["end.directive.ts:16",{"_index":1307,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:21",{"_index":1302,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:23",{"_index":1300,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:27",{"_index":1311,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:33",{"_index":1310,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["enim",{"_index":829,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enimdeleniti",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enterleaveanimation",{"_index":473,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2004,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":283,"title":{},"body":{"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{}}}],["enums/role.enum",{"_index":31,"title":{},"body":{"interfaces/Account.html":{}}}],["env",{"_index":303,"title":{"interfaces/Env.html":{}},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/Env.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.apiurl}${api.account_avatar",{"_index":315,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.account_avatar}${dto.id",{"_index":317,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.vk_id_exchange_token",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["env.appid",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["env.environment",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.origin",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.redirecturl",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["environment",{"_index":1019,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["eos",{"_index":838,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eos,impedit",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["err",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["err.status",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["error",{"_index":202,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["error(err",{"_index":688,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["error(res.error",{"_index":680,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["errorhandler",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":524,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.foreach((error",{"_index":1406,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.push",{"_index":536,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["esse",{"_index":891,"title":{},"body":{"components/DashboardComponent.html":{}}}],["esseperspiciatis",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{}}}],["est",{"_index":883,"title":{},"body":{"components/DashboardComponent.html":{}}}],["et",{"_index":804,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eum",{"_index":888,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eveniet",{"_index":911,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event",{"_index":1315,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["event.target",{"_index":1309,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["eventcoalescing",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1098,"title":{},"body":{"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadListItemComponent.html":{}}}],["events",{"_index":1027,"title":{},"body":{"components/EventsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["events'},{'name",{"_index":237,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["events.component.html",{"_index":1028,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.scss",{"_index":1029,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":236,"title":{"components/EventsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["ex",{"_index":836,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exact",{"_index":1143,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["excepturi",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exercitationem",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{}}}],["expedita",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{}}}],["explicabo",{"_index":822,"title":{},"body":{"components/DashboardComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["ext",{"_index":1058,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":41,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["extension",{"_index":239,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["extensioninput",{"_index":1050,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensioninputcomponent",{"_index":238,"title":{"components/ExtensionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["extensions",{"_index":1035,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensions.gql.ts",{"_index":1486,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["extensions.gql.ts:22",{"_index":1490,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["facere",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facerequae",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facilis",{"_index":903,"title":{},"body":{"components/DashboardComponent.html":{}}}],["false",{"_index":162,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":496,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["fetchmoreuploads",{"_index":1758,"title":{},"body":{"components/UploadsComponent.html":{}}}],["fetchpolicy",{"_index":188,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["file'},{'name",{"_index":267,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["file.component",{"_index":1821,"title":{},"body":{"components/UploadsComponent.html":{}}}],["file.component.html",{"_index":1503,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.scss",{"_index":1504,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts",{"_index":1498,"title":{},"body":{"components/UploadFileComponent.html":{},"coverage.html":{}}}],["file.component.ts:105",{"_index":1513,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:63",{"_index":1529,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:64",{"_index":1525,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:65",{"_index":1517,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:66",{"_index":1514,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:68",{"_index":1523,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:69",{"_index":1527,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:71",{"_index":1515,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:73",{"_index":1522,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:82",{"_index":1516,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:84",{"_index":1511,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:88",{"_index":1512,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:92",{"_index":1510,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.name.split",{"_index":1735,"title":{},"body":{"injectables/UploadService.html":{}}}],["file.type",{"_index":1740,"title":{},"body":{"injectables/UploadService.html":{}}}],["file/upload",{"_index":1497,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["file_name",{"_index":1480,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["fileform",{"_index":1506,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["filename",{"_index":1734,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join",{"_index":1738,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join('.').slice(0",{"_index":1737,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename[filename.length",{"_index":1736,"title":{},"body":{"injectables/UploadService.html":{}}}],["fileparams",{"_index":1056,"title":{"interfaces/FileParams.html":{}},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["filter",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{}}}],["filter(([_",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter((val",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{}}}],["filters",{"_index":322,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["first_name",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["firstvaluefrom(this.http.get('/assets/config.json",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fixed",{"_index":1133,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["float",{"_index":1488,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["foreach((error",{"_index":532,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["form",{"_index":490,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formbuilder",{"_index":494,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontrol",{"_index":503,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["formcontrol('.png",{"_index":1519,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol('file",{"_index":1518,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol(false",{"_index":1521,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrol(new",{"_index":1431,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formcontrol(null",{"_index":658,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrolname",{"_index":118,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["formdata",{"_index":306,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["formgroup",{"_index":119,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["formsmodule",{"_index":90,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["found",{"_index":1158,"title":{},"body":{"components/NotFoundComponent.html":{},"components/UploadsComponent.html":{}}}],["found'},{'name",{"_index":251,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["found.component.html",{"_index":1159,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1160,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1157,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:14",{"_index":1163,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:15",{"_index":1162,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1156,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["fuga",{"_index":904,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat",{"_index":783,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat,est",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiatfacilis",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugit",{"_index":905,"title":{},"body":{"components/DashboardComponent.html":{}}}],["full_name",{"_index":13,"title":{},"body":{"interfaces/Account.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2032,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get,post,put,delete,options",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getaccountmodel",{"_index":1060,"title":{"interfaces/GetAccountModel.html":{}},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["getcurrentpath",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcurrentpath(router",{"_index":2043,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getcurrentpath(this.router).includes('/auth",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["getfileparams",{"_index":1711,"title":{},"body":{"injectables/UploadService.html":{}}}],["getfileparams(file",{"_index":1712,"title":{},"body":{"injectables/UploadService.html":{}}}],["getparams",{"_index":1811,"title":{},"body":{"components/UploadsComponent.html":{}}}],["getpreviewcontent",{"_index":1663,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["getquerypayload",{"_index":450,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getquerypayload(params",{"_index":2044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getquerypayload(route.queryparams",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2048,"title":{"index.html":{}},"body":{}}],["gql",{"_index":46,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["graphql",{"_index":181,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["graphqlerror",{"_index":334,"title":{"interfaces/GraphqlError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["graphqlprovider",{"_index":1940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["grid.animation.ts",{"_index":1927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlechange",{"_index":111,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handlechange(val",{"_index":127,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handleclickupload",{"_index":1617,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["handledelete",{"_index":1618,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["handleme",{"_index":1095,"title":{},"body":{"components/MeComponent.html":{}}}],["handleselectextension",{"_index":1619,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["handlesignout",{"_index":1096,"title":{},"body":{"components/MeComponent.html":{}}}],["handleuploaddeleted",{"_index":1759,"title":{},"body":{"components/UploadsComponent.html":{}}}],["handleuploaddeleted(id",{"_index":1768,"title":{},"body":{"components/UploadsComponent.html":{}}}],["handleuploadresult",{"_index":640,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["handleuploadresult(res",{"_index":648,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["harum",{"_index":809,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hasevery",{"_index":1889,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1064,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":241,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["header.component.html",{"_index":1069,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1070,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":240,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1321,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofelement",{"_index":1327,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofwholepage",{"_index":1323,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hic",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hostlistener",{"_index":1316,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlistener('window:scroll",{"_index":1314,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlisteners",{"_index":1296,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["html",{"_index":214,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["http",{"_index":287,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httpclient",{"_index":297,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httperrorresponse",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["httpheaders",{"_index":1720,"title":{},"body":{"injectables/UploadService.html":{}}}],["httpinterceptorfn",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequestinterceptor",{"_index":1948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://drive.google.com/viewerng/viewer?embedded=true&url=${this.upload!.url",{"_index":1686,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["icon",{"_index":1141,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts",{"_index":1008,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts:24",{"_index":1482,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["id.gql.ts:25",{"_index":1011,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{}}}],["id/exchange",{"_index":2022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id=${dto.id",{"_index":318,"title":{},"body":{"injectables/AccountService.html":{}}}],["identifier",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["iframeurl",{"_index":1081,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["iframeurlpipe",{"_index":1077,"title":{"pipes/IFrameUrlPipe.html":{}},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["illo",{"_index":812,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illum",{"_index":876,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumdeserunt",{"_index":1004,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumobcaecati",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{}}}],["images/cake.svg",{"_index":1145,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/files.svg",{"_index":1150,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/man.svg",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/tor.svg",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/woman.svg",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["impedit",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":73,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["importprovidersfrom(tuirootmodule",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":88,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["in'},{'name",{"_index":260,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["in.component",{"_index":475,"title":{},"body":{"components/AuthComponent.html":{}}}],["in.component.html",{"_index":1365,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":1366,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts",{"_index":1363,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:151",{"_index":1375,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:38",{"_index":1390,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:40",{"_index":1379,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:41",{"_index":1380,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:42",{"_index":1385,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:44",{"_index":1371,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:46",{"_index":1388,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:47",{"_index":1386,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:49",{"_index":1383,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:50",{"_index":1384,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:52",{"_index":1382,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:58",{"_index":1370,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:63",{"_index":1377,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:85",{"_index":1373,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:98",{"_index":1378,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":474,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["incidunt",{"_index":882,"title":{},"body":{"components/DashboardComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["info'},{'name",{"_index":269,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["info.component",{"_index":1822,"title":{},"body":{"components/UploadsComponent.html":{}}}],["info.component.html",{"_index":1552,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.scss",{"_index":1553,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts",{"_index":1551,"title":{},"body":{"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:139",{"_index":1558,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:55",{"_index":1566,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:56",{"_index":1563,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:57",{"_index":1562,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:58",{"_index":1564,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:60",{"_index":1572,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:67",{"_index":1557,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:81",{"_index":1567,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:83",{"_index":1561,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:84",{"_index":1560,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:86",{"_index":1559,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info/upload",{"_index":1550,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["init",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["initialaccount",{"_index":34,"title":{},"body":{"interfaces/Account.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialauthenticateduser",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initsentry",{"_index":1966,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":165,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{}}}],["inject(accountgql",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(accountservice",{"_index":655,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["inject(accountsinfobyusernamegql",{"_index":154,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["inject(activatedroute",{"_index":443,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["inject(authservice",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice).$isadmin",{"_index":1797,"title":{},"body":{"components/UploadsComponent.html":{}}}],["inject(authservice).$user",{"_index":1528,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["inject(authservice).$user().username",{"_index":1792,"title":{},"body":{"components/UploadsComponent.html":{}}}],["inject(configservice",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{}}}],["inject(deleteuploadbyidgql",{"_index":1645,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(destroyref",{"_index":160,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(domsanitizer",{"_index":1661,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(httpclient",{"_index":298,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["inject(injector",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(polymorpheus_context",{"_index":669,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["inject(router",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(scrollservice",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(title",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(tui_is_mobile",{"_index":1651,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(tuialertservice",{"_index":158,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(tuidialogservice",{"_index":1105,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(tuipdfviewerservice",{"_index":1653,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(tuipreviewdialogservice",{"_index":1658,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(uploadbyidgql",{"_index":1565,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(uploadextensionsgql",{"_index":1047,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["inject(uploadservice",{"_index":1524,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["inject(uploadsgql",{"_index":1807,"title":{},"body":{"components/UploadsComponent.html":{}}}],["injectable",{"_index":37,"title":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":39,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"overview.html":{}}}],["injector",{"_index":1194,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["innerheight",{"_index":1338,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["inoutanimation200",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutanimation500",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation200",{"_index":1814,"title":{},"body":{"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation500",{"_index":1928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":86,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["input'},{'name",{"_index":219,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["input('isloading",{"_index":1672,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["input('isprivate",{"_index":1673,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["input('upload",{"_index":1671,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["input.component.html",{"_index":96,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.scss",{"_index":98,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts",{"_index":72,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:101",{"_index":1043,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:119",{"_index":128,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:125",{"_index":142,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:127",{"_index":136,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:131",{"_index":138,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:135",{"_index":141,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:37",{"_index":1175,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:38",{"_index":1174,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:39",{"_index":1179,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:40",{"_index":1178,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:41",{"_index":1177,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:48",{"_index":1176,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:50",{"_index":1182,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:52",{"_index":1048,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:53",{"_index":1045,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:54",{"_index":1046,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:56",{"_index":1037,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:57",{"_index":1036,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:58",{"_index":161,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:59",{"_index":159,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:60",{"_index":1180,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:61",{"_index":155,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:63",{"_index":157,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:64",{"_index":1181,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:65",{"_index":123,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:66",{"_index":122,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:67",{"_index":126,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:69",{"_index":125,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:71",{"_index":164,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:73",{"_index":163,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:75",{"_index":148,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:77",{"_index":153,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:81",{"_index":149,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:82",{"_index":145,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:84",{"_index":134,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:91",{"_index":1044,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:93",{"_index":1041,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:97",{"_index":1042,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input/account",{"_index":71,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["input/extension",{"_index":1031,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["input/permission",{"_index":1172,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":117,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{}}}],["instanceof",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadModel.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["interop",{"_index":173,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["inventore",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inventoreillo",{"_index":966,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsa",{"_index":754,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsam",{"_index":840,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsaneque",{"_index":992,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsum",{"_index":739,"title":{},"body":{"components/DashboardComponent.html":{}}}],["is_system",{"_index":1479,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["isadmin",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadministrator",{"_index":1750,"title":{},"body":{"components/UploadsComponent.html":{}}}],["isauth",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["isauthpage",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscustomname",{"_index":1539,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["isend",{"_index":1350,"title":{},"body":{"injectables/ScrollService.html":{}}}],["islastpage",{"_index":1751,"title":{},"body":{"components/UploadsComponent.html":{}}}],["isloading",{"_index":431,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["isme",{"_index":1192,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ismobile",{"_index":1612,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["isnotfound",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotfound(err.message",{"_index":1267,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isnotfound(message",{"_index":2046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotfoundpage",{"_index":701,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isopenprofiledropdown",{"_index":1071,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isprivate",{"_index":1569,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["isprivate(permissions",{"_index":1770,"title":{},"body":{"components/UploadsComponent.html":{}}}],["isrefusedpage",{"_index":702,"title":{},"body":{"injectables/ConfigService.html":{}}}],["issystem",{"_index":1570,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["iste",{"_index":816,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaque",{"_index":799,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquebeatae",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquelaudantium",{"_index":1002,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item",{"_index":1604,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item'},{'name",{"_index":272,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["item.component",{"_index":1820,"title":{},"body":{"components/UploadsComponent.html":{}}}],["item.component.html",{"_index":1608,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.scss",{"_index":1609,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts",{"_index":1603,"title":{},"body":{"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:101",{"_index":1657,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:103",{"_index":1650,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:105",{"_index":1664,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:109",{"_index":1634,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:113",{"_index":1636,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:117",{"_index":1649,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:119",{"_index":1639,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:145",{"_index":1633,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:155",{"_index":1642,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:168",{"_index":1635,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:81",{"_index":1646,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:82",{"_index":1659,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:83",{"_index":1654,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:84",{"_index":1648,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:85",{"_index":1644,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:86",{"_index":1662,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:87",{"_index":1647,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:88",{"_index":1652,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:89",{"_index":1660,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:91",{"_index":1629,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:92",{"_index":1627,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:93",{"_index":1628,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:95",{"_index":1631,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:96",{"_index":1630,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:97",{"_index":1632,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.id",{"_index":1854,"title":{},"body":{"components/UploadsComponent.html":{}}}],["item/upload",{"_index":1602,"title":{},"body":{"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["items.filter((item",{"_index":1853,"title":{},"body":{"components/UploadsComponent.html":{}}}],["iure",{"_index":791,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iusto",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iustoarchitecto",{"_index":1000,"title":{},"body":{"components/DashboardComponent.html":{}}}],["keyboardevent",{"_index":1313,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["keyof",{"_index":527,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["kit",{"_index":1715,"title":{},"body":{"injectables/UploadService.html":{}}}],["l",{"_index":1040,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["label",{"_index":1643,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["labore",{"_index":831,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laboriosam",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborum",{"_index":907,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborumcupiditate",{"_index":994,"title":{},"body":{"components/DashboardComponent.html":{}}}],["lang",{"_index":1399,"title":{},"body":{"components/SignInComponent.html":{}}}],["last_name",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["laudantium",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{}}}],["leave.animation.ts",{"_index":1924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":213,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["length",{"_index":1739,"title":{},"body":{"injectables/UploadService.html":{}}}],["libero",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list",{"_index":271,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["literal",{"_index":1062,"title":{},"body":{"interfaces/GetAccountModel.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfig",{"_index":705,"title":{},"body":{"injectables/ConfigService.html":{}}}],["loading",{"_index":1193,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1022,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["locale_id",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1381,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["lorem",{"_index":738,"title":{},"body":{"components/DashboardComponent.html":{}}}],["m",{"_index":1038,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["magnam",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{}}}],["magni",{"_index":807,"title":{},"body":{"components/DashboardComponent.html":{}}}],["maiores",{"_index":906,"title":{},"body":{"components/DashboardComponent.html":{}}}],["map",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{}}}],["map(([isauth",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map((a",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["map((data",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((params",{"_index":1207,"title":{},"body":{"components/ProfileComponent.html":{}}}],["map((profile",{"_index":1214,"title":{},"body":{"components/ProfileComponent.html":{}}}],["match",{"_index":540,"title":{},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":1893,"title":{},"body":{"classes/Validation.html":{}}}],["matching",{"_index":36,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxime",{"_index":810,"title":{},"body":{"components/DashboardComponent.html":{}}}],["me'},{'name",{"_index":243,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["me.component.html",{"_index":1092,"title":{},"body":{"components/MeComponent.html":{}}}],["me.component.scss",{"_index":1093,"title":{},"body":{"components/MeComponent.html":{}}}],["mecomponent",{"_index":242,"title":{"components/MeComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["memberonly",{"_index":2029,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["memories",{"_index":1119,"title":{},"body":{"components/MemoriesComponent.html":{},"components/NavComponent.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["memories'},{'name",{"_index":245,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["memories.component.html",{"_index":1120,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memories.component.scss",{"_index":1121,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memoriescomponent",{"_index":244,"title":{"components/MemoriesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["menu",{"_index":1123,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'name",{"_index":247,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["menu.component.html",{"_index":1124,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1125,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":246,"title":{"components/MenuComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["menuisopen",{"_index":703,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":332,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":76,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["methods",{"_index":110,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["mime",{"_index":1059,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{}}}],["minima",{"_index":793,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minlength",{"_index":538,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["minus",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minus,ratione",{"_index":919,"title":{},"body":{"components/DashboardComponent.html":{}}}],["miscellaneous",{"_index":2003,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":1287,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["mobile",{"_index":1984,"title":{},"body":{"dependencies.html":{}}}],["modalfiltersisopen",{"_index":1752,"title":{},"body":{"components/UploadsComponent.html":{}}}],["models",{"_index":57,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{}}}],["modi",{"_index":841,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modules",{"_index":2051,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["molestiae",{"_index":889,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaedolores",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestias",{"_index":896,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaset",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitia",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitiaaliquam",{"_index":984,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mpga",{"_index":1707,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["multi",{"_index":80,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["mutate",{"_index":1696,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["mutation",{"_index":1009,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["nam",{"_index":890,"title":{},"body":{"components/DashboardComponent.html":{}}}],["name",{"_index":130,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["natus",{"_index":797,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nav",{"_index":1127,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":249,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["nav.component.html",{"_index":1130,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":1131,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":248,"title":{"components/NavComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["navigationend",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["near",{"_index":1291,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["nearend",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["nearend(posy",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["necessitatibus",{"_index":871,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nemo",{"_index":788,"title":{},"body":{"components/DashboardComponent.html":{}}}],["neque",{"_index":912,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nesciunt",{"_index":781,"title":{},"body":{"components/DashboardComponent.html":{}}}],["network",{"_index":190,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["new",{"_index":305,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["next",{"_index":199,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(status",{"_index":1351,"title":{},"body":{"injectables/ScrollService.html":{}}}],["nextstep",{"_index":1508,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["ng_value_accessor",{"_index":79,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ngafterviewinit",{"_index":1369,"title":{},"body":{"components/SignInComponent.html":{}}}],["ngdompurifysanitizer",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngondestroy",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ngoninit",{"_index":112,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["nihil",{"_index":800,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilconsectetur",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihildicta",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilpossimus",{"_index":925,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisi",{"_index":820,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisieaque",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisivero",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nobis",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{}}}],["non",{"_index":885,"title":{},"body":{"components/DashboardComponent.html":{}}}],["normalize.css",{"_index":1996,"title":{},"body":{"dependencies.html":{}}}],["nostrum",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nostrumbeatae",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{}}}],["notfound",{"_index":1164,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["notfoundcomponent",{"_index":250,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["null",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nulla",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{}}}],["number",{"_index":336,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Env.html":{},"interfaces/GraphqlError.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/functions.html":{}}}],["numquam",{"_index":901,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecati",{"_index":813,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecatinostrum",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{}}}],["object",{"_index":1318,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["object.assign(env",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys",{"_index":530,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["object.keys(this.form.controls).foreach((control",{"_index":525,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["observable",{"_index":143,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["odio",{"_index":873,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odioat",{"_index":964,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odiomaiores",{"_index":996,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odit",{"_index":844,"title":{},"body":{"components/DashboardComponent.html":{}}}],["oditaspernatur",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{}}}],["of(new",{"_index":679,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(null",{"_index":683,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(tui_russian_language",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officia",{"_index":881,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiis",{"_index":789,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiispariatur",{"_index":967,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnis",{"_index":914,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnisrepudiandae",{"_index":999,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onchange",{"_index":120,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ondelete",{"_index":1623,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["ondestroy",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["oninit",{"_index":74,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["onsubmit",{"_index":492,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ontouched",{"_index":109,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["oops",{"_index":1168,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops'},{'name",{"_index":253,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["oops.component.html",{"_index":1169,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops.component.scss",{"_index":1170,"title":{},"body":{"components/OopsComponent.html":{}}}],["oopscomponent",{"_index":252,"title":{"components/OopsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["opacity",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":204,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["open(err",{"_index":694,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["open(this.preview",{"_index":1689,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["open(tui_prompt",{"_index":1694,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["opened",{"_index":1335,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["optio",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["optional",{"_index":131,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":1020,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["originalname",{"_index":1568,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["out",{"_index":1926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out.animation.ts",{"_index":1929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":1049,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadListItemComponent.html":{}}}],["output('clickupload",{"_index":1675,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["output('ondelete",{"_index":1674,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["output('selectextension",{"_index":1676,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["outputs",{"_index":1034,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadListItemComponent.html":{}}}],["overview",{"_index":2052,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1481,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["owner_id",{"_index":1709,"title":{},"body":{"interfaces/UploadModel.html":{}}}],["owneravatar",{"_index":1571,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["owneronly",{"_index":2027,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["package",{"_index":1969,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":326,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["paginatedquery",{"_index":2064,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pagination",{"_index":1491,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":1733,"title":{},"body":{"injectables/UploadService.html":{}}}],["parameters",{"_index":129,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1766,"title":{},"body":{"components/UploadsComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1344,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["pariatur",{"_index":782,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pass",{"_index":487,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["pass'},{'name",{"_index":228,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["pass.component",{"_index":449,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["pass.component.html",{"_index":488,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.scss",{"_index":489,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts",{"_index":486,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["pass.component.ts:120",{"_index":498,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:28",{"_index":511,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:29",{"_index":509,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:30",{"_index":502,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:31",{"_index":510,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:33",{"_index":507,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:34",{"_index":508,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:36",{"_index":505,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:42",{"_index":495,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:47",{"_index":500,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:72",{"_index":501,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["password",{"_index":1408,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":333,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{}}}],["payload",{"_index":453,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"miscellaneous/variables.html":{}}}],["payload.token",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pdf",{"_index":1681,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["pdfviewer",{"_index":1613,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["perferendis",{"_index":847,"title":{},"body":{"components/DashboardComponent.html":{}}}],["permission",{"_index":255,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permission.owneronly",{"_index":1731,"title":{},"body":{"injectables/UploadService.html":{}}}],["permissioninput",{"_index":1183,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["permissioninputcomponent",{"_index":254,"title":{"components/PermissionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["permissions",{"_index":1173,"title":{},"body":{"components/PermissionInputComponent.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permissions.includes(permission.public",{"_index":1855,"title":{},"body":{"components/UploadsComponent.html":{}}}],["perspiciatis",{"_index":828,"title":{},"body":{"components/DashboardComponent.html":{}}}],["perspiciatislibero",{"_index":975,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pipe",{"_index":192,"title":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["pipe(takeuntildestroyed(this.destroyref",{"_index":198,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["pipes",{"_index":1078,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadListItemComponent.html":{},"overview.html":{}}}],["pipetransform",{"_index":1089,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}}}],["pixels",{"_index":1326,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["placeat",{"_index":910,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeat,voluptatum",{"_index":971,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeholder",{"_index":121,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["platform",{"_index":2057,"title":{},"body":{"properties.html":{}}}],["polymorpheus",{"_index":667,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["polymorpheus_context",{"_index":665,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["polymorpheuscomponent",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["polymorpheuscomponent(changeavatarcomponent",{"_index":1276,"title":{},"body":{"components/ProfileComponent.html":{}}}],["polymorpheuscomponent(uploadfilecomponent",{"_index":1879,"title":{},"body":{"components/UploadsComponent.html":{}}}],["polymorpheuscomponent(uploadinfocomponent",{"_index":1880,"title":{},"body":{"components/UploadsComponent.html":{}}}],["polymorpheuscontent",{"_index":1638,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["polymorpheusmodule",{"_index":1606,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["porro",{"_index":916,"title":{},"body":{"components/DashboardComponent.html":{}}}],["position",{"_index":1332,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["possimus",{"_index":801,"title":{},"body":{"components/DashboardComponent.html":{}}}],["possimusaliquam",{"_index":995,"title":{},"body":{"components/DashboardComponent.html":{}}}],["posy",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["praesentium",{"_index":870,"title":{},"body":{"components/DashboardComponent.html":{}}}],["praesentiumnecessitatibus",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pragma",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prev.concat(res.data.uploads",{"_index":1836,"title":{},"body":{"components/UploadsComponent.html":{}}}],["preview",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["previewcontent",{"_index":1626,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["previewdialog",{"_index":1614,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["private",{"_index":103,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{}}}],["production",{"_index":1025,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1186,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile!.username",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":257,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["profile.component.html",{"_index":1190,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1191,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.ngoninit",{"_index":1200,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.roles",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":256,"title":{"components/ProfileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["promise",{"_index":710,"title":{},"body":{"injectables/ConfigService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"properties.html":{}}}],["protectedroutes",{"_index":1137,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":78,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":61,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["providehttpclient(withinterceptors([httprequestinterceptor",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provident",{"_index":803,"title":{},"body":{"components/DashboardComponent.html":{}}}],["providerouter(routes",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":77,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":2026,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["px",{"_index":1303,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["quae",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quaerat",{"_index":899,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quam",{"_index":814,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamobcaecati",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamrecusandae",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quas",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quasi",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{}}}],["query",{"_index":42,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryref",{"_index":52,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["qui",{"_index":825,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quia",{"_index":815,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdam",{"_index":843,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdamperferendis",{"_index":968,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quidem",{"_index":818,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quireprehenderit",{"_index":997,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quis",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquam",{"_index":785,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquamnihil",{"_index":989,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisvelit",{"_index":923,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quo",{"_index":837,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quod",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quos",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ratione",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":92,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["readonly",{"_index":636,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["recusandae",{"_index":849,"title":{},"body":{"components/DashboardComponent.html":{}}}],["redirecturl",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["refetchuploads",{"_index":1760,"title":{},"body":{"components/UploadsComponent.html":{}}}],["refresh",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":483,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["registeronchange",{"_index":113,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registeronchange(onchange",{"_index":135,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched",{"_index":114,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched(ontouched",{"_index":137,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["reiciendis",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reiciendisnostrum",{"_index":961,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rem",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{}}}],["removeavatar",{"_index":288,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["removeavatar(dto",{"_index":290,"title":{},"body":{"injectables/AccountService.html":{}}}],["removeavatardto",{"_index":291,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["removefile",{"_index":641,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["repellat",{"_index":806,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repellendus",{"_index":893,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit",{"_index":832,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit,fugit",{"_index":976,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repudiandae",{"_index":878,"title":{},"body":{"components/DashboardComponent.html":{}}}],["req",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":535,"title":{},"body":{"components/AuthPassComponent.html":{},"components/MeComponent.html":{}}}],["rerum",{"_index":811,"title":{},"body":{"components/DashboardComponent.html":{}}}],["res",{"_index":200,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["res.data",{"_index":1579,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["res.data.uploads.length",{"_index":1834,"title":{},"body":{"components/UploadsComponent.html":{}}}],["res.url",{"_index":693,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["resetuploads",{"_index":1761,"title":{},"body":{"components/UploadsComponent.html":{}}}],["results",{"_index":35,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":313,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":133,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":26,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":62,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["root'},{'name",{"_index":221,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["route",{"_index":432,"title":{"interfaces/Route.html":{}},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route.title",{"_index":1154,"title":{},"body":{"components/NavComponent.html":{}}}],["router",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth/sign",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1128,"title":{},"body":{"components/NavComponent.html":{}}}],["routerlinkactive",{"_index":1129,"title":{},"body":{"components/NavComponent.html":{}}}],["routermodule",{"_index":1065,"title":{},"body":{"components/HeaderComponent.html":{},"components/NotFoundComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["routeroutlet",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["row",{"_index":1883,"title":{},"body":{"components/UploadsComponent.html":{}}}],["ru",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":177,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1039,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["saepe",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{}}}],["saepetotam",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{}}}],["safety",{"_index":1319,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sanitizer",{"_index":1615,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["sapiente",{"_index":796,"title":{},"body":{"components/DashboardComponent.html":{}}}],["save",{"_index":1317,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["scheme",{"_index":1397,"title":{},"body":{"components/SignInComponent.html":{}}}],["scroll",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadsComponent.html":{}}}],["scrolled",{"_index":1330,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["scrollnearend",{"_index":277,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["scrollnearenddirective",{"_index":276,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["scrollservice",{"_index":384,"title":{"injectables/ScrollService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrollstate",{"_index":1358,"title":{},"body":{"injectables/ScrollService.html":{},"miscellaneous/typealiases.html":{}}}],["scrolltobottom",{"_index":1348,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sed",{"_index":792,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sedminima",{"_index":924,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectedfile",{"_index":1531,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectedfile.ext",{"_index":1535,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectextension",{"_index":1624,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["selector",{"_index":84,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["sentry",{"_index":179,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["sentry.createerrorhandler",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.traceclass",{"_index":183,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["sentry.tracemethod",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["sentry.traceservice",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry/angular",{"_index":180,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["sentry/cli",{"_index":1979,"title":{},"body":{"dependencies.html":{}}}],["sentrydsn",{"_index":1021,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["sequi",{"_index":913,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sequirepellat",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{}}}],["serializepermissions",{"_index":1815,"title":{},"body":{"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializepermissions(permissions",{"_index":2047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["serializerole",{"_index":1196,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializerole(role",{"_index":1202,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["serializesex",{"_index":1197,"title":{},"body":{"components/ProfileComponent.html":{}}}],["serializesex(sex",{"_index":1204,"title":{},"body":{"components/ProfileComponent.html":{}}}],["services",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadsComponent.html":{}}}],["set",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["set('access",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set(data",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["set(errors).foreach((error",{"_index":541,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["setdisabledstate",{"_index":115,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["setdisabledstate(disabled",{"_index":139,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["setextensionfilter",{"_index":1762,"title":{},"body":{"components/UploadsComponent.html":{}}}],["setextensionfilter(ext",{"_index":1775,"title":{},"body":{"components/UploadsComponent.html":{}}}],["sex",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sexicons",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sexicons[0",{"_index":1274,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexicons[sex",{"_index":1273,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexpipe",{"_index":1189,"title":{"pipes/SexPipe.html":{}},"body":{"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"coverage.html":{}}}],["showchangeavatardialog",{"_index":1195,"title":{},"body":{"components/ProfileComponent.html":{}}}],["showconfirmform",{"_index":1418,"title":{},"body":{"components/SignUpComponent.html":{}}}],["showdialog",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showerror",{"_index":642,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showerror(err",{"_index":652,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showmodalfilters",{"_index":1763,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showpreview",{"_index":1620,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showpreview(actions",{"_index":1637,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showprompt",{"_index":1621,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showprompt(label",{"_index":1641,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showref",{"_index":1161,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["showuploadfile",{"_index":1764,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showuploadfiledialog",{"_index":1753,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showuploadinfo",{"_index":1765,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showuploadinfo(uploadid",{"_index":1779,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showuploadinfodialog",{"_index":1754,"title":{},"body":{"components/UploadsComponent.html":{}}}],["shrinks",{"_index":1336,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sign",{"_index":259,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["signal",{"_index":147,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/functions.html":{}}}],["signal(1",{"_index":1784,"title":{},"body":{"components/UploadsComponent.html":{}}}],["signal(20",{"_index":1787,"title":{},"body":{"components/UploadsComponent.html":{}}}],["signal(false",{"_index":661,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{}}}],["signal(initialaccount",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{}}}],["signal(initialauthenticateduser",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["signal(null",{"_index":1526,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signal(true",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["signin",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["signin(dto",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin.ngafterviewinit",{"_index":1372,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngondestroy",{"_index":1374,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngoninit",{"_index":1376,"title":{},"body":{"components/SignInComponent.html":{}}}],["signincomponent",{"_index":258,"title":{"components/SignInComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["signindto",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["signinvk",{"_index":457,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{}}}],["signinvk(dto",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["signup(dto",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.ngondestroy",{"_index":1422,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup.ngoninit",{"_index":1424,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signupcomponent",{"_index":261,"title":{"components/SignUpComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["signupdto",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["similique",{"_index":894,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sint",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sit",{"_index":741,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitaliquam",{"_index":981,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitcumque",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitincidunt",{"_index":1005,"title":{},"body":{"components/DashboardComponent.html":{}}}],["size",{"_index":324,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["skeleton",{"_index":1281,"title":{},"body":{"components/ProfileComponent.html":{}}}],["skeletonrows",{"_index":1755,"title":{},"body":{"components/UploadsComponent.html":{}}}],["soluta",{"_index":767,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutadeleniti",{"_index":1003,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutaquo",{"_index":974,"title":{},"body":{"components/DashboardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["sourcesignal",{"_index":2042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spaceofelementandpage",{"_index":1345,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["spomen",{"_index":85,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"index.html":{}}}],["src/.../account.dtos.ts",{"_index":2066,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.gql.ts",{"_index":2060,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.interface.ts",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../accounts",{"_index":2061,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api.enum.ts",{"_index":2005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":2034,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.dtos.ts",{"_index":2062,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auth.guard.ts",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticated",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete",{"_index":2063,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../enter",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.development.ts",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.staging.ts",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.ts",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../funcs.ts",{"_index":2035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../graphql.provider.ts",{"_index":2033,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../http.interceptor.ts",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../in",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2065,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../nav.component.ts",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":2006,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../profile.component.ts",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":2007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../scroll.service.ts",{"_index":2067,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sentry.ts",{"_index":2036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../serialize.ts",{"_index":2037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sex.interface.ts",{"_index":2068,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../upload",{"_index":2069,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../upload.dtos.ts",{"_index":2070,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../uploads.gql.ts",{"_index":2071,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:119",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:124",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:89",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1913,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.component.ts",{"_index":462,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":472,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:23",{"_index":470,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:24",{"_index":471,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:27",{"_index":469,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/callback/auth",{"_index":426,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["src/app/auth/pass/auth",{"_index":485,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["src/app/auth/sign",{"_index":1362,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/chats/chats.component.ts",{"_index":695,"title":{},"body":{"components/ChatsComponent.html":{},"coverage.html":{}}}],["src/app/common/animations/enter",{"_index":1923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/animations/in",{"_index":1925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/account",{"_index":70,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/extension",{"_index":1030,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts",{"_index":1063,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts:27",{"_index":1072,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:28",{"_index":1073,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:30",{"_index":1074,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/me/me.component.ts",{"_index":1091,"title":{},"body":{"components/MeComponent.html":{},"coverage.html":{}}}],["src/app/common/components/me/me.component.ts:23",{"_index":1106,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:24",{"_index":1104,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:25",{"_index":1103,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:26",{"_index":1102,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:27",{"_index":1107,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:29",{"_index":1099,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:31",{"_index":1100,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:37",{"_index":1101,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/menu/menu.component.ts",{"_index":1122,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/common/components/nav/nav.component.ts",{"_index":1126,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/nav/nav.component.ts:54",{"_index":1139,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:55",{"_index":1136,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:57",{"_index":1134,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:59",{"_index":1138,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:61",{"_index":1135,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/not",{"_index":1155,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/common/components/oops/oops.component.ts",{"_index":1167,"title":{},"body":{"components/OopsComponent.html":{},"coverage.html":{}}}],["src/app/common/components/permission",{"_index":1171,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/directives/scroll",{"_index":1290,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["src/app/core/graphql/graphql.provider.ts",{"_index":1938,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/index.ts",{"_index":2073,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/models/getaccount.model.ts",{"_index":1061,"title":{},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["src/app/core/graphql/mutations/delete",{"_index":1007,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/account.gql.ts",{"_index":40,"title":{},"body":{"injectables/AccountGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/account.gql.ts:20",{"_index":51,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["src/app/core/graphql/queries/accounts",{"_index":319,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/upload",{"_index":1475,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts",{"_index":1885,"title":{},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts:63",{"_index":1886,"title":{},"body":{"injectables/UploadsGQL.html":{}}}],["src/app/core/guards/auth",{"_index":1942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/http.interceptor.ts",{"_index":1947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/pipes/iframe",{"_index":1079,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts",{"_index":1359,"title":{},"body":{"pipes/SexPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts:10",{"_index":1361,"title":{},"body":{"pipes/SexPipe.html":{}}}],["src/app/core/services/account.service.ts",{"_index":285,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts:18",{"_index":299,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:20",{"_index":296,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:33",{"_index":292,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:101",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:105",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:109",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:120",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:34",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:36",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:38",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:42",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:43",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:45",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:49",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:50",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:52",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:73",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:77",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:97",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/config.service.ts",{"_index":700,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/config.service.ts:11",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:12",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:14",{"_index":712,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:15",{"_index":713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:16",{"_index":707,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:33",{"_index":709,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:38",{"_index":711,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:42",{"_index":708,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/scroll.service.ts",{"_index":1349,"title":{},"body":{"injectables/ScrollService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/scroll.service.ts:14",{"_index":1353,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:19",{"_index":1357,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:25",{"_index":1352,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/upload.service.ts",{"_index":1710,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/core/services/upload.service.ts:21",{"_index":1719,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:23",{"_index":1718,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:47",{"_index":1713,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":734,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/events/events.component.ts",{"_index":1026,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/memories/memories.component.ts",{"_index":1118,"title":{},"body":{"components/MemoriesComponent.html":{},"coverage.html":{}}}],["src/app/profile/change",{"_index":627,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1184,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/profile/profile.component.ts:100",{"_index":1198,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:113",{"_index":1201,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:162",{"_index":1199,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:188",{"_index":1203,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:192",{"_index":1205,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:196",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:70",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:71",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:72",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:73",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:74",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:75",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:76",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:77",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:79",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:81",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:82",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:83",{"_index":1220,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:84",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:86",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:90",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:94",{"_index":1212,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/timelines/timelines.component.ts",{"_index":1471,"title":{},"body":{"components/TimelinesComponent.html":{},"coverage.html":{}}}],["src/app/uploads/upload",{"_index":1496,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["src/app/uploads/uploads.component.ts",{"_index":1741,"title":{},"body":{"components/UploadsComponent.html":{},"coverage.html":{}}}],["src/app/uploads/uploads.component.ts:101",{"_index":1785,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:102",{"_index":1788,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:104",{"_index":1789,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:105",{"_index":1790,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:107",{"_index":1806,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:114",{"_index":1786,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:115",{"_index":1782,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:116",{"_index":1781,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:117",{"_index":1783,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:119",{"_index":1772,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:202",{"_index":1778,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:208",{"_index":1780,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:214",{"_index":1777,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:218",{"_index":1769,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:222",{"_index":1771,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:226",{"_index":1776,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:239",{"_index":1812,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:257",{"_index":1773,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:263",{"_index":1774,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:271",{"_index":1767,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:277",{"_index":1802,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:285",{"_index":1803,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:85",{"_index":1793,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:86",{"_index":1795,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:87",{"_index":1791,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:88",{"_index":1794,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:89",{"_index":1801,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:90",{"_index":1808,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:91",{"_index":1796,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:93",{"_index":1798,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:95",{"_index":1810,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:96",{"_index":1799,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:98",{"_index":1805,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:99",{"_index":1800,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/envs/env.development.ts",{"_index":1959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.staging.ts",{"_index":1960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.ts",{"_index":1961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/dtos/account.dtos.ts",{"_index":2074,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/auth.dtos.ts",{"_index":2072,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/upload.dtos.ts",{"_index":2076,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/enums/api.enum.ts",{"_index":2008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/permission.enum.ts",{"_index":2025,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/role.enum.ts",{"_index":2030,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/interfaces/account.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/authenticated",{"_index":624,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/env.interface.ts",{"_index":1016,"title":{},"body":{"interfaces/Env.html":{},"coverage.html":{}}}],["src/types/interfaces/error.interface.ts",{"_index":331,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["src/types/interfaces/route.interface.ts",{"_index":1289,"title":{},"body":{"interfaces/Route.html":{},"coverage.html":{}}}],["src/types/interfaces/sex.interface.ts",{"_index":2075,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/interfaces/upload.interface.ts",{"_index":1057,"title":{},"body":{"interfaces/FileParams.html":{},"coverage.html":{}}}],["src/types/models/account.model.ts",{"_index":279,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"coverage.html":{}}}],["src/types/models/auth.model.ts",{"_index":481,"title":{},"body":{"interfaces/AuthModel.html":{},"coverage.html":{}}}],["src/types/models/upload.model.ts",{"_index":1708,"title":{},"body":{"interfaces/UploadModel.html":{},"coverage.html":{}}}],["src/utils/funcs.ts",{"_index":1963,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/sentry.ts",{"_index":1965,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/serialize.ts",{"_index":1967,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/validation.ts",{"_index":1891,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/utils/validation.ts:4",{"_index":1895,"title":{},"body":{"classes/Validation.html":{}}}],["staging",{"_index":1024,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":87,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["start",{"_index":1342,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["started",{"_index":2049,"title":{"index.html":{}},"body":{}}],["state",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["statements",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1892,"title":{},"body":{"classes/Validation.html":{}}}],["status",{"_index":205,"title":{},"body":{"components/AccountInputComponent.html":{},"interfaces/ApiError.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GraphqlError.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":1401,"title":{},"body":{"components/SignInComponent.html":{}}}],["styleurl",{"_index":97,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["sub.unsubscribe",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subs",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe",{"_index":195,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["subscribe((items",{"_index":1839,"title":{},"body":{"components/UploadsComponent.html":{}}}],["subscribe((permissions",{"_index":1847,"title":{},"body":{"components/UploadsComponent.html":{}}}],["subscribe((res",{"_index":1691,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["subscription",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{}}}],["success",{"_index":1270,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["sunt",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{}}}],["surname",{"_index":1430,"title":{},"body":{"components/SignUpComponent.html":{}}}],["suscipit",{"_index":869,"title":{},"body":{"components/DashboardComponent.html":{}}}],["switch",{"_index":533,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["switchmap",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["switchmap((res",{"_index":681,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["t",{"_index":2045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":1813,"title":{},"body":{"components/UploadsComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["tablebars",{"_index":1985,"title":{},"body":{"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1968,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":168,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["takelast",{"_index":668,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takelast(1",{"_index":691,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takeuntildestroyed",{"_index":170,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["takeuntildestroyed(this.destroyref",{"_index":193,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/UploadsComponent.html":{}}}],["targetaccountid",{"_index":638,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["template",{"_index":67,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["templateref",{"_index":1655,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["templateurl",{"_index":95,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tempora",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tempore",{"_index":798,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibus",{"_index":898,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibuslaudantium",{"_index":982,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tenetur",{"_index":827,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.$$accountfilter",{"_index":191,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$$isme.pipe(takeuntildestroyed(this.destroyref)).subscribe",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$accounts().map((val",{"_index":151,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accounts.set(res.data.accounts",{"_index":201,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter",{"_index":187,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter.set(val.trim",{"_index":208,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$ext",{"_index":1870,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$ext().length",{"_index":1869,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$ext.set(items",{"_index":1843,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$extensions.set(data.uploadextensions",{"_index":1055,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.$isloading.asobservable",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isloading.next(true",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isme",{"_index":1211,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isme.set(params['username",{"_index":1209,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isnotfoundpage.set",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$loading",{"_index":1280,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$loading.set(false",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.$loading.set(loading",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$menuisopen",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(!this.$menuisopen",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(false",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$name",{"_index":1868,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$name().trim().length",{"_index":1867,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$name.set(items",{"_index":1845,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$owner",{"_index":1864,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$owner().length",{"_index":1863,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$owner.set([this.currentuser",{"_index":1830,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$owner.set(items",{"_index":1840,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$page",{"_index":1866,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$page.set(1",{"_index":1875,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$page.set(this.$page",{"_index":1878,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$permissions",{"_index":1872,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$permissions().length",{"_index":1871,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$permissions.set(serializepermissions(permissions",{"_index":1848,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$profile",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().avatar",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().birthday",{"_index":1285,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().full_name",{"_index":1283,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().id",{"_index":1279,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().sex",{"_index":1288,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().username",{"_index":1284,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().vk_avatar",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set(this.auth.$user",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.update((profile",{"_index":1271,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query.set(params['username",{"_index":1208,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$size",{"_index":1865,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$upload()!.ext",{"_index":1599,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.owner",{"_index":1600,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.owner!.username",{"_index":1598,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload.set(upload",{"_index":1580,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$uploads",{"_index":1882,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploads().length",{"_index":1881,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploads.set",{"_index":1876,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploads.update((items",{"_index":1852,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploads.update((prev",{"_index":1835,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploadsloading",{"_index":1825,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploadsloading.set(false",{"_index":1837,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploadsloading.set(true",{"_index":1873,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$user().avatar",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().id",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().roles.includes(role.administrator",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().vk_avatar",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set(initialauthenticateduser",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.account",{"_index":676,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.accountgql",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.accountinfogql.watch",{"_index":186,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery",{"_index":185,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery!.refetch",{"_index":196,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery.valuechanges",{"_index":197,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.alerts",{"_index":203,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["this.alerts.open",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth",{"_index":456,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.$$isloading",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isauth",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.auth.$isloading.next(false",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isloading.next(true",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$user().id",{"_index":1076,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.auth.$user().username",{"_index":1210,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.$user.update((user",{"_index":1272,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.clear",{"_index":1115,"title":{},"body":{"components/MeComponent.html":{}}}],["this.auth.init().subscribe",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.set(data",{"_index":459,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.set(user",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.signout().subscribe",{"_index":1114,"title":{},"body":{"components/MeComponent.html":{}}}],["this.authenticatedroutes",{"_index":1152,"title":{},"body":{"components/NavComponent.html":{}}}],["this.avataralreadyexists",{"_index":672,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.callbackurl",{"_index":478,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.clickupload.emit",{"_index":1678,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.close.emit",{"_index":1111,"title":{},"body":{"components/MeComponent.html":{}}}],["this.config.$isrefusedpage",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$isrefusedpage.set(true",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$menuisopen",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.config.$menuisopen.set(false",{"_index":1151,"title":{},"body":{"components/NavComponent.html":{}}}],["this.config.closemenu",{"_index":1110,"title":{},"body":{"components/MeComponent.html":{}}}],["this.confirmform",{"_index":1445,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.reset",{"_index":1451,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.setvalue",{"_index":1469,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.value!.trim",{"_index":1450,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.context.completewith(res",{"_index":692,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.context.completewith(true",{"_index":689,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.control.setvalue(null",{"_index":674,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value",{"_index":690,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value!.name",{"_index":1540,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.currentstep",{"_index":1536,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.currentuser",{"_index":1828,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.deleteuploadbyidgql",{"_index":1695,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.dialog",{"_index":1693,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.dialogs",{"_index":1112,"title":{},"body":{"components/MeComponent.html":{}}}],["this.dialogs.open",{"_index":1275,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["this.dialogsub",{"_index":1682,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.dialogsub.unsubscribe",{"_index":1698,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.disabled",{"_index":211,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(url",{"_index":1090,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["this.el.nativeelement.scrollheight",{"_index":1328,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.fb.group",{"_index":518,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.fetchmoreuploads",{"_index":1827,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.fileform.controls['compress'].value",{"_index":1544,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].disable",{"_index":1530,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].setvalue",{"_index":1534,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].value",{"_index":1542,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].setvalue(selectedfile.name",{"_index":1533,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].valid",{"_index":1537,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value",{"_index":1541,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value!.trim().length",{"_index":1538,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['private'].value",{"_index":1545,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls[\\'ext\\'].value",{"_index":1549,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.form",{"_index":517,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls",{"_index":531,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls.birthday.touched",{"_index":1453,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.birthday.value!.toutcnativedate().toisostring",{"_index":1454,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.errors",{"_index":1448,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.touched",{"_index":1456,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.valid",{"_index":1457,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim",{"_index":1459,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim().length",{"_index":1458,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.login.errors",{"_index":1404,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.login.value!.trim",{"_index":1407,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.name.errors",{"_index":1446,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.touched",{"_index":1460,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.valid",{"_index":1461,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim",{"_index":1463,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim().length",{"_index":1462,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.errors",{"_index":1405,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.pass.reset",{"_index":1452,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.value!.trim",{"_index":1409,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.surname.errors",{"_index":1447,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.touched",{"_index":1464,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.valid",{"_index":1465,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim",{"_index":1467,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim().length",{"_index":1466,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls[control",{"_index":526,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls].errors",{"_index":529,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.valid",{"_index":523,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.handledelete",{"_index":1692,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.handleuploadresult(res",{"_index":684,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.http.delete",{"_index":316,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.get(`${env.apiurl}${api.auth_me",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":314,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_refresh",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_in",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_out",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_up",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.upload",{"_index":1732,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.injector",{"_index":1277,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["this.isadministrator",{"_index":1862,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.islastpage",{"_index":1826,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.isloading.asobservable",{"_index":441,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(false",{"_index":1410,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(true",{"_index":544,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.set(false",{"_index":685,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.isloading.set(true",{"_index":675,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.ismobile",{"_index":1685,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.isprivate",{"_index":1700,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.me().pipe",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.me().pipe(map((val",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.modalfiltersisopen",{"_index":1851,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.onchange",{"_index":209,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.ondelete.emit",{"_index":1699,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.ontouched",{"_index":210,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.pdfviewer",{"_index":1683,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.placeholder",{"_index":212,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.previewdialog",{"_index":1688,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.refetchuploads",{"_index":1877,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.refresh().pipe",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resetuploads",{"_index":1841,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.route.params.pipe",{"_index":1206,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":454,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{}}}],["this.route.snapshot.queryparams['url",{"_index":479,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.events",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.router.navigate",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.router.navigate(['/404",{"_index":1268,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1116,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigate([`/${this.auth.$user().username",{"_index":1109,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigatebyurl(getcurrentpath(this.router",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl",{"_index":1684,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.scroll.isend",{"_index":1823,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.scroll.next(false",{"_index":1824,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.scroll.next(true",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectextension.emit",{"_index":1679,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.serializerole(role",{"_index":1282,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.set(data",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.showchangeavatardialog().subscribe((res",{"_index":1269,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.showconfirmform",{"_index":1449,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.showerror(err",{"_index":687,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.showerror(res.error.message",{"_index":678,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.showprompt",{"_index":1690,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.showref",{"_index":1166,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.showuploadfiledialog",{"_index":1849,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.showuploadinfodialog(uploadid",{"_index":1850,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.skeletonrows",{"_index":1884,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.subs$.foreach((sub",{"_index":461,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push",{"_index":455,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open",{"_index":543,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open(error).subscribe",{"_index":542,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs.foreach((sub",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subs.push",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["this.targetaccountid",{"_index":670,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.title",{"_index":1165,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.title.settitle(profile!.full_name",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.token.next(payload.token",{"_index":516,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.upload",{"_index":1543,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.upload!.ext",{"_index":1680,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload!.file_name",{"_index":1705,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload!.id",{"_index":1697,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload!.name",{"_index":1687,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload!.url",{"_index":1677,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload.getfileparams(this.control.value",{"_index":1532,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadavatar",{"_index":682,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadavatar().subscribe",{"_index":686,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadbyidgql",{"_index":1577,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploaded.set(res",{"_index":1547,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadextensionsgql",{"_index":1051,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.uploadfiltersform.controls['account'].setvalue([this.currentuser",{"_index":1829,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['account'].valuechanges",{"_index":1838,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['ext'].setvalue",{"_index":1861,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['ext'].setvalue([ext",{"_index":1858,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['ext'].value",{"_index":1857,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['ext'].valuechanges",{"_index":1842,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['name'].valuechanges",{"_index":1844,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['permissions'].valuechanges",{"_index":1846,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadid",{"_index":1574,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['isprivate'].setvalue",{"_index":1585,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['issystem'].disable",{"_index":1576,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['issystem'].setvalue(upload.is_system",{"_index":1584,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['name'].setvalue(upload.name",{"_index":1581,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['originalname'].setvalue",{"_index":1582,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owner'].setvalue",{"_index":1587,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owner'].value",{"_index":1597,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owneravatar'].setvalue",{"_index":1592,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[\\'owner\\'].value",{"_index":1601,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadsgql.watch(this.params",{"_index":1832,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadsquery",{"_index":1831,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadsquery!.refetch(this.params",{"_index":1874,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadsquery.valuechanges",{"_index":1833,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.user.id",{"_index":1546,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.vkidonetap.render",{"_index":1394,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap",{"_index":1393,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap.nativeelement",{"_index":1396,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.window",{"_index":1320,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.document.documentelement.scrollheight",{"_index":1324,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.innerheight",{"_index":1339,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.scrolly",{"_index":1334,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["threshold",{"_index":1295,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["throwerror",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["timelines",{"_index":1147,"title":{},"body":{"components/NavComponent.html":{},"components/TimelinesComponent.html":{},"miscellaneous/variables.html":{}}}],["timelines'},{'name",{"_index":264,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["timelines.component.html",{"_index":1472,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelines.component.scss",{"_index":1473,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelinescomponent",{"_index":263,"title":{"components/TimelinesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["tinkoff/ng",{"_index":666,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["title",{"_index":1140,"title":{},"body":{"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1470,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["togglemenustatus",{"_index":706,"title":{},"body":{"injectables/ConfigService.html":{}}}],["token",{"_index":491,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["toobservable",{"_index":171,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{}}}],["toobservable(this.$accountsfilter",{"_index":144,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["toobservable(this.$isauth",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["toobservable(this.$profile).pipe",{"_index":1213,"title":{},"body":{"components/ProfileComponent.html":{}}}],["toobservable(this.$state).pipe",{"_index":1354,"title":{},"body":{"injectables/ScrollService.html":{}}}],["top",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totam",{"_index":835,"title":{},"body":{"components/DashboardComponent.html":{}}}],["totamperferendis",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{}}}],["trace",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1153,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["transform",{"_index":1082,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(url",{"_index":1083,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["transform(value",{"_index":1360,"title":{},"body":{"pipes/SexPipe.html":{}}}],["transition(':enter",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(50",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":69,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["trigger('enterleave",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout200",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout500",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid200",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid500",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":81,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1999,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":1714,"title":{},"body":{"injectables/UploadService.html":{}}}],["tui_is_mobile",{"_index":1669,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tui_language",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tui_prompt",{"_index":1665,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tui_sanitizer",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tuialertmodule",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["tuialertservice",{"_index":167,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tuiavatarmodule",{"_index":1066,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuibuttonmodule",{"_index":1605,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuichipmodule",{"_index":1188,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuidatalistwrappermodule",{"_index":91,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/UploadsComponent.html":{}}}],["tuiday",{"_index":1441,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiday(2000",{"_index":1432,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuidialogcontext",{"_index":644,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuidialogmodule",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadsComponent.html":{}}}],["tuidialogservice",{"_index":1108,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tuifilelike",{"_index":664,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["tuihintmodule",{"_index":632,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tuihosteddropdownmodule",{"_index":1068,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuiiconairplaylarge",{"_index":1142,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconcalendarlarge",{"_index":1144,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconchartlinelarge",{"_index":1148,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconmessagecirclelarge",{"_index":1149,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiinputdatemodule",{"_index":1414,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiinputfilesmodule",{"_index":630,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["tuiinputinlinemodule",{"_index":1500,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuiinputmodule",{"_index":1743,"title":{},"body":{"components/UploadsComponent.html":{}}}],["tuiinputtagmodule",{"_index":94,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuilineclampmodule",{"_index":1067,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuilinkmodule",{"_index":1502,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuiloadermodule",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["tuipdfviewermodule",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["tuipdfvieweroptions",{"_index":1666,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuipdfviewerservice",{"_index":1667,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuipreviewdialogservice",{"_index":1668,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuipreviewmodule",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuipromptmodule",{"_index":1607,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuirootmodule",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiselectmodule",{"_index":1744,"title":{},"body":{"components/UploadsComponent.html":{}}}],["tuiskeletonmodule",{"_index":1187,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuisteppermodule",{"_index":1499,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuisvgmodule",{"_index":631,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tuitablepaginationmodule",{"_index":1745,"title":{},"body":{"components/UploadsComponent.html":{}}}],["tuitabsmodule",{"_index":463,"title":{},"body":{"components/AuthComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":93,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/UploadsComponent.html":{}}}],["tuitogglemodule",{"_index":1501,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["type",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2058,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":528,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["ui/addon",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["ui/cdk",{"_index":1442,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":169,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["ui/experimental",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["ui/icons",{"_index":1987,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":174,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":1988,"title":{},"body":{"dependencies.html":{}}}],["ui/styles",{"_index":1989,"title":{},"body":{"dependencies.html":{}}}],["ullam",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ullamsuscipit",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unde",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{}}}],["undefined",{"_index":1455,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadsComponent.html":{}}}],["unknown",{"_index":309,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["untracked",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["untracked(this.auth.$user",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["up",{"_index":1413,"title":{},"body":{"components/SignUpComponent.html":{},"miscellaneous/enumerations.html":{}}}],["up'},{'name",{"_index":262,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["up.component",{"_index":477,"title":{},"body":{"components/AuthComponent.html":{}}}],["up.component.html",{"_index":1415,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":1416,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":1412,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:111",{"_index":1426,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:141",{"_index":1421,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:232",{"_index":1423,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:41",{"_index":1427,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:42",{"_index":1428,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:43",{"_index":1438,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:45",{"_index":1420,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:47",{"_index":1440,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:49",{"_index":1436,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:50",{"_index":1437,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:52",{"_index":1439,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:54",{"_index":1435,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:70",{"_index":1429,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:74",{"_index":1419,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:79",{"_index":1425,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":476,"title":{},"body":{"components/AuthComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["updated_at",{"_index":281,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["upload",{"_index":266,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["upload!.owner!.avatar!.url",{"_index":1595,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload!.owner!.vk_avatar",{"_index":1596,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload($id",{"_index":1476,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload(where",{"_index":1477,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload.created_at",{"_index":1702,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["upload.ext",{"_index":1701,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["upload.file_name",{"_index":1583,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner",{"_index":1588,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.avatar",{"_index":1593,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.avatar.url",{"_index":1594,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.first_name",{"_index":1589,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.last_name",{"_index":1590,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.username",{"_index":1591,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.permissions.includes(permission.owneronly",{"_index":1586,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadavatar",{"_index":289,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["uploadavatar(dto",{"_index":294,"title":{},"body":{"injectables/AccountService.html":{}}}],["uploadavatardto",{"_index":295,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidgql",{"_index":1474,"title":{"injectables/UploadByIdGQL.html":{}},"body":{"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["uploadbyidqueryref",{"_index":1485,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidresponse",{"_index":1483,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidvariables",{"_index":1484,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploaded",{"_index":1507,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["uploadextensions",{"_index":1493,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions($size",{"_index":1487,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions(page",{"_index":1489,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensionsgql",{"_index":1033,"title":{"injectables/UploadExtensionsGQL.html":{}},"body":{"components/ExtensionInputComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{}}}],["uploadextensionsqueryref",{"_index":1495,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsresponse",{"_index":1492,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsvariables",{"_index":1494,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadfile",{"_index":1509,"title":{},"body":{"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["uploadfile(dto",{"_index":1716,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfilecomponent",{"_index":265,"title":{"components/UploadFileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["uploadfiledto",{"_index":1717,"title":{},"body":{"injectables/UploadService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadfiltersform",{"_index":1756,"title":{},"body":{"components/UploadsComponent.html":{}}}],["uploadid",{"_index":1554,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["uploadinfo",{"_index":1573,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadinfocomponent",{"_index":268,"title":{"components/UploadInfoComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["uploadinfoform",{"_index":1555,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadlistitem",{"_index":1670,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["uploadlistitemcomponent",{"_index":270,"title":{"components/UploadListItemComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["uploadmodel",{"_index":282,"title":{"interfaces/UploadModel.html":{}},"body":{"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploads",{"_index":274,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["uploads.component.html",{"_index":1746,"title":{},"body":{"components/UploadsComponent.html":{}}}],["uploads.component.scss",{"_index":1747,"title":{},"body":{"components/UploadsComponent.html":{}}}],["uploadscomponent",{"_index":273,"title":{"components/UploadsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["uploadservice",{"_index":1032,"title":{"injectables/UploadService.html":{}},"body":{"components/ExtensionInputComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsgql",{"_index":1742,"title":{"injectables/UploadsGQL.html":{}},"body":{"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploadsloading",{"_index":1748,"title":{},"body":{"components/UploadsComponent.html":{}}}],["uploadsquery",{"_index":1757,"title":{},"body":{"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsqueryref",{"_index":1809,"title":{},"body":{"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsresponse",{"_index":1887,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsvariables",{"_index":1888,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["url",{"_index":49,"title":{},"body":{"injectables/AccountGQL.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/NavComponent.html":{},"interfaces/Route.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["url.pipe.ts",{"_index":1080,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:11",{"_index":1084,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["useclass",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":82,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["usefactory",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadFileComponent.html":{}}}],["user.interface.ts",{"_index":625,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["username.gql.ts",{"_index":320,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["username.gql.ts:24",{"_index":327,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["username}!`).subscribe",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ut",{"_index":877,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utconsequuntur",{"_index":973,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["val",{"_index":132,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{}}}],["val.isend",{"_index":1355,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.posy",{"_index":1356,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.trim",{"_index":207,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.trim().length",{"_index":206,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.username",{"_index":152,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["validation",{"_index":513,"title":{"classes/Validation.html":{}},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validation.match('pass",{"_index":522,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["validatorfn",{"_index":1897,"title":{},"body":{"classes/Validation.html":{}}}],["validators",{"_index":512,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.email",{"_index":1444,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators.maxlength(30",{"_index":521,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(2",{"_index":1443,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.minlength(4",{"_index":1392,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(8",{"_index":520,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.required",{"_index":519,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["value",{"_index":45,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuechanges.pipe(takeuntildestroyed(this.destroyref",{"_index":1054,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{}}}],["valuechanges.subscribe",{"_index":1578,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["var",{"_index":217,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["variable",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2077,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":900,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velit",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velmagnam",{"_index":988,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veniam",{"_index":779,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veritatis",{"_index":780,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vero",{"_index":821,"title":{},"body":{"components/DashboardComponent.html":{}}}],["version",{"_index":2055,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":1391,"title":{},"body":{"components/SignInComponent.html":{},"components/UploadListItemComponent.html":{}}}],["viewchild('preview",{"_index":1656,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["viewchild('vkidsdkonetap",{"_index":1389,"title":{},"body":{"components/SignInComponent.html":{}}}],["visible",{"_index":1343,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["vitae",{"_index":848,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vk",{"_index":2021,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vk_avatar",{"_index":19,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["vk_id",{"_index":20,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"miscellaneous/variables.html":{}}}],["vk_id_exchange_token",{"_index":2020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vkid",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["vkid.config.set",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["vkid.languages.rus",{"_index":1400,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.onetap",{"_index":1387,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.scheme.dark",{"_index":1398,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid/sdk",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{},"dependencies.html":{}}}],["vkidonetap",{"_index":1367,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkidsdkonetap",{"_index":1368,"title":{},"body":{"components/SignInComponent.html":{}}}],["void",{"_index":124,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/functions.html":{}}}],["voluptas",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptas,eligendi",{"_index":963,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptate",{"_index":824,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatem",{"_index":833,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptaterepellat",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptates",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatesitaque",{"_index":952,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatibus",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatum",{"_index":794,"title":{},"body":{"components/DashboardComponent.html":{}}}],["watch",{"_index":1052,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["webp",{"_index":1706,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["whether",{"_index":1347,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["whole",{"_index":1322,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window",{"_index":1293,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window.location.reload",{"_index":1117,"title":{},"body":{"components/MeComponent.html":{}}}],["window:scroll",{"_index":1297,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent",{"_index":1294,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent(event",{"_index":1312,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["withcredentials",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlatestfrom(auth.$$isloading",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withviewtransitions",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":699,"title":{},"body":{"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/MemoriesComponent.html":{},"components/TimelinesComponent.html":{}}}],["works!lorem",{"_index":918,"title":{},"body":{"components/DashboardComponent.html":{}}}],["writablesignal",{"_index":146,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["writevalue",{"_index":116,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["x",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":1331,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["yes",{"_index":1085,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadListItemComponent.html":{}}}],["yyyy",{"_index":1703,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["zone.js",{"_index":2001,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/account.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"0\" | \"1\" | \"2\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"0\" | \"1\" | \"2\" | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../enums/role.enum'\n\nexport const initialAccount: Account = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n\nexport interface Account {\n  id: string | null\n  vk_id: string | null\n  username: string | null\n  email: string | null\n  roles: Role[]\n  avatar: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  full_name: string | null\n  birthday: Date | null\n  sex: '0' | '1' | '2' | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountGQL.html":{"url":"injectables/AccountGQL.html","title":"injectable - AccountGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/account.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/account.gql.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountModel } from '@models'\n\nexport type AccountResponse = {\n  account: AccountModel\n}\n\nexport type AccountVariables = {\n  username: string\n}\n\nexport type AccountQueryRef = QueryRef\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountGQL extends Query {\n  document = gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountInputComponent.html":{"url":"components/AccountInputComponent.html","title":"component - AccountInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/account-input/account-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: AccountInputComponent,\n}\n                                AccountsInfoByUsernameGQL\n                \n            \n\n\n            \n                selector\n                spomen-account-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            TuiDataListWrapperModule\n                            ReactiveFormsModule\n                            TuiTextfieldControllerModule\n                            TuiInputTagModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$accountFilter\n                            \n                            \n                                $accounts\n                            \n                            \n                                $accountsFilter\n                            \n                            \n                                $accountsList\n                            \n                            \n                                    Private\n                                accountInfoGQL\n                            \n                            \n                                    Private\n                                accountInfoQuery\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Аккаунт'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:67\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleChange\n                        \n                    \n                \n            \n            \n                \nhandleChange(val: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$accountFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$accountsFilter)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountsInfoByUsernameGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsInfoByUsernameQueryRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  computed,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Signal,\n  signal,\n  WritableSignal,\n} from '@angular/core'\n\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\n\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { debounceTime, distinctUntilChanged, Observable } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  AccountsInfoByUsernameGQL,\n  AccountsInfoByUsernameQueryRef,\n} from '@graphql'\nimport { AccountShortModel } from '@models'\n\n@Component({\n  selector: 'spomen-account-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    TuiDataListWrapperModule,\n    ReactiveFormsModule,\n    TuiTextfieldControllerModule,\n    TuiInputTagModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: AccountInputComponent,\n    },\n    AccountsInfoByUsernameGQL,\n  ],\n  templateUrl: './account-input.component.html',\n  styleUrl: './account-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'AccountInput' })\nexport class AccountInputComponent implements OnInit, ControlValueAccessor {\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  private accountInfoGQL = inject(AccountsInfoByUsernameGQL)\n\n  private accountInfoQuery: AccountsInfoByUsernameQueryRef | null = null\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() placeholder: string = 'Аккаунт'\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  $accounts: WritableSignal = signal([])\n\n  $accountsList: Signal = computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n\n  $accountsFilter: WritableSignal = signal('')\n  $$accountFilter: Observable = toObservable(this.$accountsFilter)\n\n  ngOnInit() {\n    this.accountInfoQuery = this.accountInfoGQL.watch(\n      {\n        username: this.$accountsFilter(),\n      },\n      { fetchPolicy: 'cache-and-network' }\n    )\n\n    this.$$accountFilter\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe(() => {\n        this.accountInfoQuery!.refetch({\n          username: this.$accountsFilter(),\n        })\n      })\n\n    this.accountInfoQuery.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.$accounts.set(res.data.accounts)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список аккаунтов', { status: 'error' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  handleChange(val: string) {\n    if (val.trim().length > 0 && val.trim() !== this.$accountsFilter()) {\n      this.$accountsFilter.set(val.trim())\n    }\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountModel.html":{"url":"interfaces/AccountModel.html","title":"interface - AccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         UploadModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"0\" | \"1\" | \"2\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"0\" | \"1\" | \"2\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: '0' | '1' | '2'\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/account.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для работы с аккаунтами\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeAvatar\n                            \n                            \n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar(dto: RemoveAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RemoveAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \nuploadAvatar(dto: UploadAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\n\nimport { RemoveAvatarDto, UploadAvatarDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для работы с аккаунтами\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadAvatar(dto: UploadAvatarDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n\n    if (dto.id) body.append('id', dto.id)\n\n    return this.http.post(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}`,\n      body\n    )\n  }\n\n  removeAvatar(dto: RemoveAvatarDto) {\n    return this.http.delete(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}${dto.id ? `?id=${dto.id}` : ''}`\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountShortModel.html":{"url":"interfaces/AccountShortModel.html","title":"interface - AccountShortModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountShortModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: '0' | '1' | '2'\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsInfoByUsernameGQL.html":{"url":"injectables/AccountsInfoByUsernameGQL.html","title":"injectable - AccountsInfoByUsernameGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountsInfoByUsernameGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/accounts-info-by-username.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountShortModel } from '@models'\n\nexport type AccountsInfoByUsernameResponse = {\n  accounts: AccountShortModel[]\n}\n\nexport type AccountsInfoByUsernameVariables = {\n  username: string\n}\n\nexport type AccountsInfoByUsernameQueryRef = QueryRef\n\n@Injectable()\nexport class AccountsInfoByUsernameGQL extends Query {\n  document = gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ScrollNearEndDirective\n                \n            \n\n\n            \n                selector\n                spomen-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterOutlet\n                            TuiRootModule\n                            TuiDialogModule\n                            TuiAlertModule\n                            TuiPreviewModule\n                            TuiPdfViewerModule\n                            TuiLoaderModule\n                                HeaderComponent\n                                NavComponent\n                                OopsComponent\n                                MenuComponent\n                                ScrollNearEndDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scroll\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:70\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nearEnd\n                        \n                    \n                \n            \n            \n                \nnearEnd(posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScrollService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiRootModule,\n  TuiDialogModule,\n  TuiAlertModule,\n  TuiAlertService,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n  effect,\n  inject,\n  untracked,\n} from '@angular/core'\n\nimport { TuiPreviewModule } from '@taiga-ui/addon-preview'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Router, RouterOutlet } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\nimport { Subscription } from 'rxjs'\nimport * as VKID from '@vkid/sdk'\n\nimport { env } from '@env'\n\nimport { AuthService, ConfigService, ScrollService } from '@services'\nimport { inOutAnimation200, inOutAnimation500 } from '@animations'\nimport { ScrollNearEndDirective } from '@directives'\nimport { TuiPdfViewerModule } from '@taiga-ui/kit'\nimport { getCurrentPath } from '@utils'\n\nimport { HeaderComponent } from '@components/header'\nimport { OopsComponent } from '@components/oops'\nimport { MenuComponent } from '@components/menu'\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    TuiRootModule,\n    TuiDialogModule,\n    TuiAlertModule,\n    TuiPreviewModule,\n    TuiPdfViewerModule,\n    TuiLoaderModule,\n    HeaderComponent,\n    NavComponent,\n    OopsComponent,\n    MenuComponent,\n    ScrollNearEndDirective,\n  ],\n  animations: [inOutAnimation200, inOutAnimation500],\n  providers: [ScrollNearEndDirective],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\n@Sentry.TraceClass({ name: 'App' })\nexport class AppComponent implements OnInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private scroll = inject(ScrollService)\n  private router = inject(Router)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  private subs: Subscription[] = []\n\n  constructor() {\n    effect(() => {\n      if (this.auth.$isAuth()) {\n        const { first_name, username } = untracked(this.auth.$user)\n\n        this.subs.push(\n          this.alerts.open(`Привет, ${first_name || username}!`).subscribe()\n        )\n\n        if (getCurrentPath(this.router).includes('/auth')) {\n          this.router.navigate(['/'])\n        }\n      }\n    }, {})\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnInit' })\n  ngOnInit(): void {\n    VKID.Config.set({\n      app: env.appId,\n      redirectUrl: env.redirectUrl,\n      state: 'dj29fnsadjsd82f249k293c139j1kd3',\n    })\n\n    this.auth.$isLoading.next(true)\n\n    this.subs.push(\n      this.auth.init().subscribe({\n        next: (user) => {\n          this.auth.set(user)\n          this.auth.$isLoading.next(false)\n        },\n        error: (err: HttpErrorResponse) => {\n          if (err.status === 0) {\n            this.config.$isRefusedPage.set(true)\n            this.auth.$isLoading.next(false)\n            return\n          }\n\n          this.auth.$isLoading.next(false)\n\n          this.router.navigateByUrl(getCurrentPath(this.router))\n        },\n      })\n    )\n  }\n\n  nearEnd(posY: number) {\n    this.scroll.next(true, posY)\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n  @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {\n    \n  } @else if (!this.config.$isRefusedPage()) {\n    @if (this.auth.$isAuth()) {\n      \n        \n        \n          \n        \n      \n    } @else {\n      \n    }\n\n    @if (this.config.$menuIsOpen()) {\n      \n    }\n  }\n\n  @if (this.config.$isRefusedPage()) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {      } @else if (!this.config.$isRefusedPage()) {    @if (this.auth.$isAuth()) {                                                  } @else {          }    @if (this.config.$menuIsOpen()) {          }  }  @if (this.config.$isRefusedPage()) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthCallbackComponent.html":{"url":"components/AuthCallbackComponent.html","title":"component - AuthCallbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthCallbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/callback/auth-callback.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-callback\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiLoaderModule\n                                AuthPassComponent\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-callback.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-callback.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { TuiLoaderModule } from '@taiga-ui/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthPassComponent } from '@app/auth/pass/auth-pass.component'\n\nimport { getQueryPayload } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-auth-callback',\n  standalone: true,\n  imports: [CommonModule, TuiLoaderModule, AuthPassComponent, TuiLoaderModule],\n  templateUrl: './auth-callback.component.html',\n  styleUrl: './auth-callback.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthCallback' })\nexport class AuthCallbackComponent implements OnInit, OnDestroy {\n  private route = inject(ActivatedRoute)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(true)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.subs$.push(\n      this.auth\n        .signInVK({\n          ...payload,\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n            this.router.navigate(['/'])\n          },\n          error: (err) => {\n            this.router.navigate(['/'])\n            console.log(err)\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        @if (isLoading$$ | async) {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (isLoading$$ | async) {  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthCallbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiTabsModule\n                                SignInComponent\n                                SignUpComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemIndex\n                            \n                            \n                                callbackUrl\n                            \n                            \n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Auth.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/auth.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        callbackUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { TuiTabsModule } from '@taiga-ui/kit'\nimport * as Sentry from '@sentry/angular'\n\nimport { enterLeaveAnimation } from '@animations'\n\nimport { SignInComponent } from './sign-in/sign-in.component'\nimport { SignUpComponent } from './sign-up/sign-up.component'\n\n@Component({\n  selector: 'spomen-auth',\n  standalone: true,\n  imports: [TuiTabsModule, SignInComponent, SignUpComponent],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n  animations: [enterLeaveAnimation],\n})\n@Sentry.TraceClass({ name: 'Auth' })\nexport class AuthComponent implements OnInit {\n  route = inject(ActivatedRoute)\n\n  activeItemIndex: number = 0\n  callbackUrl: string | null = null\n\n  @Sentry.TraceMethod({ name: 'Auth.ngOnInit' })\n  ngOnInit(): void {\n    this.callbackUrl = this.route.snapshot.queryParams['url'] ?? null\n  }\n}\n\n    \n\n    \n        \n  Вход\n  Регистрация\n\n\n  @if (activeItemIndex === 0) {\n    \n  }\n  @if (activeItemIndex === 1) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Вход  Регистрация  @if (activeItemIndex === 0) {      }  @if (activeItemIndex === 1) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthModel.html":{"url":"interfaces/AuthModel.html","title":"interface - AuthModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/auth.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AccountModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from './account.model'\n\nexport interface AuthModel extends AccountModel {\n  access_token: string\n  refresh_token: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthPassComponent.html":{"url":"components/AuthPassComponent.html","title":"component - AuthPassComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthPassComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pass/auth-pass.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-pass\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-pass.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-pass.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pass/auth-pass.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { getQueryPayload, Validation } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\n\n@Component({\n  selector: 'spomen-auth-pass',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './auth-pass.component.html',\n  styleUrl: './auth-pass.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthPass' })\nexport class AuthPassComponent implements OnInit, OnDestroy {\n  private token: BehaviorSubject = new BehaviorSubject('')\n  private route = inject(ActivatedRoute)\n  private alerts = inject(TuiAlertService)\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    confirmPass: FormControl\n  }> = new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.token.next(payload.token)\n\n    this.form = this.fb.group(\n      {\n        pass: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(30),\n          ],\n        ],\n        confirmPass: ['', [Validators.required]],\n      },\n      {\n        validators: [Validation.match('pass', 'confirmPass')],\n      }\n    )\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      Object.keys(this.form.controls).forEach((control) => {\n        if (\n          this.form.controls[control as keyof typeof this.form.controls].errors\n        ) {\n          Object.keys(\n            this.form.controls[control as keyof typeof this.form.controls]\n              .errors!\n          ).forEach((error) => {\n            switch (error) {\n              case 'required': {\n                errors.push('Пароль обязателен')\n                break\n              }\n\n              case 'minlength': {\n                errors.push('Пароль должен быть не менее 8 символов')\n                break\n              }\n\n              case 'match': {\n                errors.push('Пароли должны быть одинаковы')\n                break\n              }\n\n              default: {\n                errors.push('Проверьте правильность полей')\n              }\n            }\n          })\n        }\n      })\n\n      new Set(errors).forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.subs$.push(this.alerts.open('Запрос на сервер...').subscribe())\n    this.isLoading.next(true)\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  Придумайте пароль\n  \n  \n  \n    \n      Продолжить\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Придумайте пароль                Продолжить      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthPassComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isAuth\n                            \n                            \n                                $$isLoading\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isAdmin\n                            \n                            \n                                $isAuth\n                            \n                            \n                                $isLoading\n                            \n                            \n                                $user\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                init\n                            \n                            \n                                me\n                            \n                            \n                                refresh\n                            \n                            \n                                set\n                            \n                            \n                                signIn\n                            \n                            \n                                signInVK\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(data: AuthModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AuthModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(dto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInVK\n                        \n                    \n                \n            \n            \n                \nsignInVK(dto: AuthCallbackDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            AuthCallbackDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(dto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$isAuth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.$isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() => !!this.$user().id)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAuthenticatedUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Signal,\n  WritableSignal,\n  computed,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  BehaviorSubject,\n  Observable,\n  catchError,\n  map,\n  switchMap,\n  throwError,\n} from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { toObservable } from '@angular/core/rxjs-interop'\n\nimport { AuthenticatedUser, initialAuthenticatedUser } from '@interfaces'\nimport { AuthCallbackDto, SignUpDto, SignInDto } from '@dtos'\nimport { AuthModel } from '@models'\n\nimport { API, Role } from '@enums'\n\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private http: HttpClient = inject(HttpClient)\n\n  $user: WritableSignal = signal(initialAuthenticatedUser)\n\n  $avatar: Signal = computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n\n  $isAuth: Signal = computed(() => !!this.$user().id)\n  $$isAuth: Observable = toObservable(this.$isAuth)\n\n  $isAdmin: Signal = computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n\n  $isLoading: BehaviorSubject = new BehaviorSubject(false)\n  $$isLoading: Observable = this.$isLoading.asObservable()\n\n  set(data: AuthModel) {\n    this.$user.set({\n      id: data.id,\n      username: data.username,\n      birthday: data.birthday,\n      sex: data.sex,\n      token: data.access_token,\n      roles: data.roles.sort((a, b) => a.localeCompare(b)),\n      vk_id: data.vk_id || null,\n      avatar: data.avatar ? data.avatar.url : null,\n      vk_avatar: data.vk_avatar || null,\n      email: data.email || null,\n      first_name: data.first_name || null,\n      last_name: data.last_name || null,\n      full_name:\n        data.first_name && data.last_name\n          ? `${data.first_name.trim()} ${data.last_name.trim()}`\n          : null,\n    })\n  }\n\n  clear() {\n    this.$user.set(initialAuthenticatedUser)\n  }\n\n  init(): Observable {\n    this.$isLoading.next(true)\n\n    return this.me().pipe(\n      map((data) => {\n        this.set(data)\n        return data\n      }),\n      catchError((err: HttpErrorResponse) => {\n        if (err.status === 401) {\n          return this.refresh().pipe(\n            switchMap(() => this.me().pipe(map((val) => val)))\n          )\n        }\n\n        return throwError(() => err)\n      })\n    )\n  }\n\n  signIn(dto: SignInDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_IN}`, dto)\n  }\n\n  signUp(dto: SignUpDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_UP}`, dto)\n  }\n\n  signOut(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_OUT}`, {})\n  }\n\n  signInVK(dto: AuthCallbackDto): Observable {\n    return this.http.post(\n      `${env.apiUrl}${API.VK_ID_EXCHANGE_TOKEN}`,\n      dto\n    )\n  }\n\n  me(): Observable {\n    return this.http.get(`${env.apiUrl}${API.AUTH_ME}`)\n  }\n\n  refresh(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_REFRESH}`, {})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticatedUser.html":{"url":"interfaces/AuthenticatedUser.html","title":"interface - AuthenticatedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticatedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/authenticated-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Account\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from './account.interface'\n\nexport const initialAuthenticatedUser: AuthenticatedUser = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n\nexport interface AuthenticatedUser extends Account {\n  token: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeAvatarComponent.html":{"url":"components/ChangeAvatarComponent.html","title":"component - ChangeAvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangeAvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/change-avatar/change-avatar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-change-avatar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiSvgModule\n                            TuiHintModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-avatar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./change-avatar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                account\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                avatarAlreadyExists\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                targetAccountId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    Private\n                                handleUploadResult\n                            \n                            \n                                removeAvatar\n                            \n                            \n                                removeFile\n                            \n                            \n                                    Private\n                                showError\n                            \n                            \n                                    Private\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(context: TuiDialogContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    TuiDialogContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleUploadResult\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUploadResult(res: UploadModel | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            UploadModel | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(err: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarAlreadyExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        targetAccountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Inject,\n  WritableSignal,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogContext,\n  TuiHintModule,\n  TuiLoaderModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { TuiFileLike, TuiInputFilesModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus'\nimport { catchError, of, switchMap, takeLast } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AccountService } from '@services'\n\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-change-avatar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiSvgModule,\n    TuiHintModule,\n  ],\n  templateUrl: './change-avatar.component.html',\n  styleUrl: './change-avatar.component.scss',\n})\n@Sentry.TraceClass({ name: 'ChangeAvatar' })\nexport class ChangeAvatarComponent {\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private account = inject(AccountService)\n\n  constructor(\n    @Inject(POLYMORPHEUS_CONTEXT)\n    private readonly context: TuiDialogContext\n  ) {\n    this.targetAccountId = context.data.accountId\n    this.avatarAlreadyExists = context.data.avatarAlreadyExists\n  }\n\n  readonly control = new FormControl(null)\n\n  isLoading: WritableSignal = signal(false)\n\n  private targetAccountId: string\n  avatarAlreadyExists: boolean\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  changeAvatar() {\n    this.isLoading.set(true)\n\n    if (this.avatarAlreadyExists) {\n      this.account\n        .removeAvatar({\n          id: this.targetAccountId,\n        })\n        .pipe(\n          takeUntilDestroyed(this.destroyRef),\n          catchError((res) => {\n            this.showError(res.error.message)\n            return of(new Error(res.error))\n          }),\n          switchMap((res) => (res ? this.uploadAvatar() : of(null)))\n        )\n        .subscribe({\n          next: (res) => this.handleUploadResult(res as UploadModel),\n          error: () => {\n            this.isLoading.set(false)\n          },\n        })\n    } else {\n      this.uploadAvatar().subscribe({\n        next: (res) => this.handleUploadResult(res as UploadModel),\n        error: () => {\n          this.isLoading.set(false)\n        },\n      })\n    }\n  }\n\n  removeAvatar() {\n    this.isLoading.set(true)\n\n    this.account\n      .removeAvatar({\n        id: this.targetAccountId,\n      })\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        catchError((err) => {\n          this.showError(err)\n          return of(new Error(err))\n        })\n      )\n      .subscribe({\n        next: () => {\n          this.isLoading.set(false)\n          this.context.completeWith(true)\n        },\n        error: () => {\n          this.isLoading.set(false)\n        },\n      })\n  }\n\n  private uploadAvatar() {\n    return this.account\n      .uploadAvatar({\n        file: this.control.value!,\n        id: this.targetAccountId,\n      })\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        takeLast(1),\n        catchError((res) => {\n          this.showError(res.error.message)\n          return of(new Error(res.error))\n        })\n      )\n  }\n\n  private handleUploadResult(res: UploadModel | null) {\n    this.isLoading.set(false)\n\n    this.context.completeWith(res ? res.url : null)\n  }\n\n  private showError(err: string) {\n    this.alerts\n      .open(err, { status: 'error' })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe()\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      Обновить аватар\n    \n\n    @if (avatarAlreadyExists) {\n      \n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Обновить аватар        @if (avatarAlreadyExists) {                        }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangeAvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatsComponent.html":{"url":"components/ChatsComponent.html","title":"component - ChatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chats/chats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-chats\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./chats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-chats',\n  standalone: true,\n  imports: [],\n  templateUrl: './chats.component.html',\n  styleUrl: './chats.component.scss',\n})\n@Sentry.TraceClass({ name: 'Chats' })\nexport class ChatsComponent {}\n\n    \n\n    \n        chats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'chats works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $isNotFoundPage\n                            \n                            \n                                $isRefusedPage\n                            \n                            \n                                $menuIsOpen\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                    Async\n                                loadConfig\n                            \n                            \n                                toggleMenuStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/config.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenuStatus\n                        \n                    \n                \n            \n            \n                \ntoggleMenuStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $isNotFoundPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isRefusedPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $menuIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, WritableSignal, inject, signal } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { filter, firstValueFrom, map } from 'rxjs'\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private router = inject(Router)\n  private http = inject(HttpClient)\n\n  $isNotFoundPage: WritableSignal = signal(false)\n  $isRefusedPage: WritableSignal = signal(false)\n  $menuIsOpen: WritableSignal = signal(false)\n\n  constructor() {\n    this.router.events\n      .pipe(\n        filter((val) => val instanceof NavigationEnd),\n        map((a: any) => {\n          if (a.url && a.urlAfterRedirects) {\n            this.$isNotFoundPage.set(\n              a.url.includes('/404') || a.urlAfterRedirects.includes('/404')\n            )\n          }\n        })\n      )\n      .subscribe()\n  }\n\n  async loadConfig(): Promise {\n    const config = await firstValueFrom(this.http.get('/assets/config.json'))\n    Object.assign(env, config)\n  }\n\n  toggleMenuStatus() {\n    this.$menuIsOpen.set(!this.$menuIsOpen())\n  }\n\n  closeMenu() {\n    if (this.$menuIsOpen()) {\n      this.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-dashboard',\n  standalone: true,\n  imports: [],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\n@Sentry.TraceClass({ name: 'Dashboard' })\nexport class DashboardComponent {}\n\n    \n\n    \n        dashboard works!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,\nratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequatur\nmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!\nSoluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atque\neaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quis\nvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sed\nminima voluptatum adipisci sapiente officiis natus tempore itaque, nihil\npossimus nemo deserunt atque provident et in eius repellat facere magni culpa\nconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, aut\nquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisi\nvero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quam\nobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enim\ndeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepe\ntotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, odit\naspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totam\nperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptate\nrepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiis\nlaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,\nimpedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!\nAspernatur, dolor inventore quae doloremque accusantium quos odit nostrum\nbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantium\nquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentium\nnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animi\ncommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,\nnemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat amet\nimpedit iure modi rem unde sit officia! Voluptate veritatis optio quam\nrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihil\nconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,\noptio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illum\nobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctio\naliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sit\ncumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,\nest nemo ex recusandae, accusamus nostrum dolorum at, totam qui esse\nperspiciatis labore autem minima! Error veniam soluta corporis ad voluptates\nitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihil\ndicta quos consequuntur similique doloremque provident voluptate at iste itaque\nbeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facere\nquae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestias\net consectetur cum iusto modi, sit reprehenderit dicta temporibus deleniti\nquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullam\nsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architecto\nnesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiat\nfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendis\nnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditate\nquasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,\neligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odio\nat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernatur\nquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventore\nillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiis\npariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdam\nperferendis ratione cum, minus molestiae reprehenderit autem architecto deserunt\naut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,\nmolestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,\nvoluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditate\nreiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus ut\nconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe soluta\nquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatis\nlibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,\nfugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecati\nnostrum, laudantium maiores repudiandae aspernatur perferendis libero sequi\nrepellat corporis expedita temporibus explicabo quae placeat odit molestiae\ndolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisi\neaque impedit officia consequatur deserunt incidunt, inventore corrupti sit\naliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibus\nlaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquid\npraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitia\naliquam nihil similique voluptate iure tenetur at velit nulla officia corporis\ndicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequuntur\ncommodi numquam, totam corporis recusandae maiores tempore aperiam distinctio\nvoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro vel\nmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquam\nnihil laudantium quibusdam, nulla, possimus asperiores quas delectus\nconsequuntur dolores alias, odit amet odio? Perferendis tenetur deleniti\npariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsa\nneque est odit, vel voluptates repellendus quod suscipit minima, accusamus\nreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborum\ncupiditate officiis sint unde nihil! Rerum enim laudantium esse possimus\naliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odio\nmaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam qui\nreprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquam\nearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnis\nrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iusto\narchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribus\nut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaque\nlaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque soluta\ndeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illum\ndeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sit\nincidunt, aperiam quia omnis! Sequi, aliquam eligendi!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,ratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequaturmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!Soluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atqueeaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quisvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sedminima voluptatum adipisci sapiente officiis natus tempore itaque, nihilpossimus nemo deserunt atque provident et in eius repellat facere magni culpaconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, autquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisivero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quamobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enimdeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepetotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, oditaspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totamperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptaterepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiislaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,impedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!Aspernatur, dolor inventore quae doloremque accusantium quos odit nostrumbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantiumquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentiumnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animicommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,nemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat ametimpedit iure modi rem unde sit officia! Voluptate veritatis optio quamrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihilconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,optio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illumobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctioaliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sitcumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,est nemo ex recusandae, accusamus nostrum dolorum at, totam qui esseperspiciatis labore autem minima! Error veniam soluta corporis ad voluptatesitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihildicta quos consequuntur similique doloremque provident voluptate at iste itaquebeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facerequae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestiaset consectetur cum iusto modi, sit reprehenderit dicta temporibus delenitiquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullamsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architectonesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiatfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendisnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditatequasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,eligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odioat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernaturquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventoreillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiispariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdamperferendis ratione cum, minus molestiae reprehenderit autem architecto deseruntaut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,molestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,voluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditatereiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus utconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe solutaquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatislibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,fugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecatinostrum, laudantium maiores repudiandae aspernatur perferendis libero sequirepellat corporis expedita temporibus explicabo quae placeat odit molestiaedolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisieaque impedit officia consequatur deserunt incidunt, inventore corrupti sitaliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibuslaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquidpraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitiaaliquam nihil similique voluptate iure tenetur at velit nulla officia corporisdicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequunturcommodi numquam, totam corporis recusandae maiores tempore aperiam distinctiovoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro velmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquamnihil laudantium quibusdam, nulla, possimus asperiores quas delectusconsequuntur dolores alias, odit amet odio? Perferendis tenetur delenitipariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsaneque est odit, vel voluptates repellendus quod suscipit minima, accusamusreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborumcupiditate officiis sint unde nihil! Rerum enim laudantium esse possimusaliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odiomaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam quireprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquamearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnisrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iustoarchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribusut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaquelaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque solutadeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illumdeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sitincidunt, aperiam quia omnis! Sequi, aliquam eligendi!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUploadByIdGQL.html":{"url":"injectables/DeleteUploadByIdGQL.html","title":"injectable - DeleteUploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Mutation\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DeleteUploadByIdQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/mutations/delete-upload-by-id.gql.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { gql, Mutation } from 'apollo-angular'\n\nexport type DeleteUploadByIdResponse = {\n  id: string\n}\n\nexport type DeleteUploadByIdVariables = {\n  id: string\n}\n\nexport const DeleteUploadByIdQuery = gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n\n@Injectable()\nexport class DeleteUploadByIdGQL extends Mutation {\n  document = DeleteUploadByIdQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Env.html":{"url":"interfaces/Env.html","title":"interface - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Env\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/env.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiUrl\n                                        \n                                \n                                \n                                        \n                                            appId\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            origin\n                                        \n                                \n                                \n                                        \n                                            redirectUrl\n                                        \n                                \n                                \n                                        \n                                            sentryDsn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        origin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sentryDsn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sentryDsn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Env {\n  environment: 'local' | 'dev' | 'staging' | 'production'\n  appId: number\n  redirectUrl: string\n  apiUrl: string\n  origin: string\n  sentryDsn: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-events\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n            \n                styleUrl\n                ./events.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n@Component({\n  selector: 'spomen-events',\n  standalone: true,\n  imports: [],\n  templateUrl: './events.component.html',\n  styleUrl: './events.component.scss',\n})\n@Sentry.TraceClass({ name: 'Events' })\nexport class EventsComponent {}\n\n    \n\n    \n        events works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'events works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtensionInputComponent.html":{"url":"components/ExtensionInputComponent.html","title":"component - ExtensionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtensionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/extension-input/extension-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: ExtensionInputComponent,\n}\n                                UploadService\n                                UploadExtensionsGQL\n                \n            \n\n\n            \n                selector\n                spomen-extension-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiDataListWrapperModule\n                            TuiTextfieldControllerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./extension-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./extension-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Private\n                                uploadExtensionsGQL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                $extensions\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Тип'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        $extensions\n                    \n                \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:67\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadExtensionsGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadExtensionsGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Output,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadExtensionsGQL } from '@graphql'\nimport { UploadService } from '@services'\n\n@Component({\n  selector: 'spomen-extension-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiDataListWrapperModule,\n    TuiTextfieldControllerModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: ExtensionInputComponent,\n    },\n    UploadService,\n    UploadExtensionsGQL,\n  ],\n  templateUrl: './extension-input.component.html',\n  styleUrl: './extension-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'ExtensionInput' })\nexport class ExtensionInputComponent implements OnInit, ControlValueAccessor {\n  private uploadExtensionsGQL = inject(UploadExtensionsGQL)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Тип'\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  @Output() $extensions: WritableSignal = signal([])\n\n  ngOnInit() {\n    this.uploadExtensionsGQL\n      .watch({\n        size: 20,\n        page: 1,\n      })\n      .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: ({ data }) => {\n          this.$extensions.set(data.uploadExtensions)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список расширений', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExtensionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileParams.html":{"url":"interfaces/FileParams.html","title":"interface - FileParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/upload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileParams {\n  name: string\n  ext: string\n  mime?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAccountModel.html":{"url":"interfaces/GetAccountModel.html","title":"interface - GetAccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/models/getAccount.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '@enums'\n\nexport interface GetAccountModel {\n  account: {\n    id: string\n    username: string\n    email: string | null\n    roles: Role[]\n    avatar: {\n      url: string\n    } | null\n    vk_id: string | null\n    vk_avatar: string | null\n    first_name: string | null\n    last_name: string | null\n    birthday: Date | null\n    sex: '0' | '1' | '2' | null\n    created_at: Date\n    updated_at: Date\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphqlError.html":{"url":"interfaces/GraphqlError.html","title":"interface - GraphqlError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphqlError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiHostedDropdownModule\n                                MeComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                isOpenProfileDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpenProfileDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiHostedDropdownModule, TuiSvgModule } from '@taiga-ui/core'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { Component, inject } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\n\nimport { MeComponent } from '@components/me'\n\n@Component({\n  selector: 'spomen-header',\n  standalone: true,\n  imports: [\n    RouterModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiHostedDropdownModule,\n    MeComponent,\n  ],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\n@Sentry.TraceClass({ name: 'Header' })\nexport class HeaderComponent {\n  auth = inject(AuthService)\n  config = inject(ConfigService)\n\n  isOpenProfileDropdown = false\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n    \n  \n  \n    \n      \n    \n  \n  \n    @if (this.auth.$user().id) {\n      \n        \n\n        \n        \n      \n    } @else {\n      Войти\n    }\n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      @if (this.auth.$user().id) {                                        } @else {      Войти    }          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IFrameUrlPipe.html":{"url":"pipes/IFrameUrlPipe.html","title":"pipe - IFrameUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IFrameUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/iframe-url.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        iframeUrl\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(url?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/iframe-url.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DomSanitizer } from '@angular/platform-browser'\nimport { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'iframeUrl',\n  standalone: true,\n})\nexport class IFrameUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  transform(url?: string): any {\n    return url ? this.domSanitizer.bypassSecurityTrustResourceUrl(url) : null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeComponent.html":{"url":"components/MeComponent.html","title":"component - MeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/me/me.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-me\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./me.component.html\n            \n\n\n\n            \n                styleUrl\n                ./me.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                destroyRef\n                            \n                            \n                                dialogs\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMe\n                            \n                            \n                                handleSignOut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/me/me.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMe\n                        \n                    \n                \n            \n            \n                \nhandleMe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  EventEmitter,\n  Output,\n  inject,\n} from '@angular/core'\n\nimport { TuiDialogService, TuiSvgModule } from '@taiga-ui/core'\nimport { AuthService, ConfigService } from '@services'\nimport * as Sentry from '@sentry/angular'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'spomen-me',\n  standalone: true,\n  imports: [TuiSvgModule],\n  templateUrl: './me.component.html',\n  styleUrl: './me.component.scss',\n})\n@Sentry.TraceClass({ name: 'Me' })\nexport class MeComponent {\n  dialogs = inject(TuiDialogService)\n  destroyRef = inject(DestroyRef)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n  router = inject(Router)\n\n  @Output() close = new EventEmitter()\n\n  handleMe() {\n    this.router.navigate([`/${this.auth.$user().username}`])\n    this.config.closeMenu()\n    this.close.emit()\n  }\n\n  handleSignOut() {\n    this.dialogs\n      .open('Выйти из воспоминаний?', {\n        size: 's',\n        required: true,\n      })\n      .subscribe({\n        error: () => {},\n        complete: () =>\n          this.auth.signOut().subscribe({\n            next: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n            },\n            error: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n              window.location.reload()\n            },\n          }),\n      })\n  }\n}\n\n    \n\n    \n        \n  Профиль\n  \n\n\n  Выйти\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Профиль    Выйти  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemoriesComponent.html":{"url":"components/MemoriesComponent.html","title":"component - MemoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/memories/memories.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-memories\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./memories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./memories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-memories',\n  standalone: true,\n  imports: [],\n  templateUrl: './memories.component.html',\n  styleUrl: './memories.component.scss',\n})\n@Sentry.TraceClass({ name: 'Memories' })\nexport class MemoriesComponent {}\n\n    \n\n    \n        memories works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'memories works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/menu/menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-menu',\n  standalone: true,\n  imports: [NavComponent],\n  templateUrl: './menu.component.html',\n  styleUrl: './menu.component.scss',\n})\n@Sentry.TraceClass({ name: 'Menu' })\nexport class MenuComponent {}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/nav/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-nav\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterLink\n                                RouterLinkActive\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n            \n                styleUrl\n                ./nav.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                authenticatedRoutes\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fixed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fixed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/nav/nav.component.ts:57\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/nav/nav.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticatedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : protectedRoutes\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { RouterLink, RouterLinkActive } from '@angular/router'\nimport { Component, Input, inject } from '@angular/core'\nimport { TuiSvgModule } from '@taiga-ui/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\nimport { Route } from '@interfaces'\n\nconst protectedRoutes: Route[] = [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n\n@Component({\n  selector: 'spomen-nav',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive, TuiSvgModule],\n  templateUrl: './nav.component.html',\n  styleUrl: './nav.component.scss',\n})\n@Sentry.TraceClass({ name: 'Nav' })\nexport class NavComponent {\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  @Input() fixed: boolean = false\n\n  authenticatedRoutes = protectedRoutes\n\n  closeMenu() {\n    if (this.config.$menuIsOpen()) {\n      this.config.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n    \n        \n  @if (this.auth.$isAuth()) {\n    @for (route of this.authenticatedRoutes; track route) {\n      \n        \n        {{ route.title }}\n      \n    }\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (this.auth.$isAuth()) {    @for (route of this.authenticatedRoutes; track route) {                      {{ route.title }}          }  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showRef\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showRef\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Такой страницы не существует'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { RouterModule } from '@angular/router'\nimport { Component, Input } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-not-found',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss',\n})\n@Sentry.TraceClass({ name: 'NotFound' })\nexport class NotFoundComponent {\n  @Input() title: string = 'Такой страницы не существует'\n  @Input() showRef: boolean = true\n}\n\n    \n\n    \n        {{ this.title }}\n\n@if (this.showRef) {\n  На главную\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ this.title }}@if (this.showRef) {  На главную}'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OopsComponent.html":{"url":"components/OopsComponent.html","title":"component - OopsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OopsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/oops/oops.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-oops\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./oops.component.html\n            \n\n\n\n            \n                styleUrl\n                ./oops.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-oops',\n  standalone: true,\n  imports: [],\n  templateUrl: './oops.component.html',\n  styleUrl: './oops.component.scss',\n})\n@Sentry.TraceClass({ name: 'Oops' })\nexport class OopsComponent {}\n\n    \n\n    \n        \n  \n    У нас технические работы\n    Попробуйте вернуться позже\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      У нас технические работы    Попробуйте вернуться позже          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'OopsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermissionInputComponent.html":{"url":"components/PermissionInputComponent.html","title":"component - PermissionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PermissionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/permission-input/permission-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: PermissionInputComponent,\n}\n                \n            \n\n\n            \n                selector\n                spomen-permission-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiTextfieldControllerModule\n                            TuiDataListWrapperModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./permission-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./permission-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                permissions\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissions\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Права доступа'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { Component, Input } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-permission-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiTextfieldControllerModule,\n    TuiDataListWrapperModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: PermissionInputComponent,\n    },\n  ],\n  templateUrl: './permission-input.component.html',\n  styleUrl: './permission-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'PermissionInput' })\nexport class PermissionInputComponent implements ControlValueAccessor {\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Права доступа'\n  @Input() permissions: string[] = [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'PermissionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                spomen-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiAvatarModule\n                            TuiSkeletonModule\n                            TuiDialogModule\n                            TuiChipModule\n                            TuiLineClampModule\n                            TuiSvgModule\n                            TuiHintModule\n                                SexPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isMe\n                            \n                            \n                                $$roles\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isMe\n                            \n                            \n                                $loading\n                            \n                            \n                                $profile\n                            \n                            \n                                $query\n                            \n                            \n                                    Private\n                                accountGQL\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                showChangeAvatarDialog\n                            \n                            \n                                    Private\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                serializeRole\n                            \n                            \n                                serializeSex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:100\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Profile.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeSex\n                        \n                    \n                \n            \n            \n                \nserializeSex(sex: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sex\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAccount)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showChangeAvatarDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Title)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Injector,\n  OnInit,\n  Signal,\n  WritableSignal,\n  computed,\n  effect,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiDialogService,\n  TuiHintModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiChipModule, TuiSkeletonModule } from '@taiga-ui/experimental'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus'\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ApolloError } from '@apollo/client/errors'\nimport { Title } from '@angular/platform-browser'\nimport * as Sentry from '@sentry/angular'\nimport { Observable, map } from 'rxjs'\n\nimport { isNotFound, serializeRole } from '@utils'\nimport { AuthService } from '@services'\nimport { AccountGQL } from '@graphql'\nimport { SexPipe } from '@pipes'\n\nimport { Account, Sex, initialAccount } from '@interfaces'\n\nimport { Role } from '@enums'\n\nimport { ChangeAvatarComponent } from './change-avatar/change-avatar.component'\n\nconst sexIcons = {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n\n@Component({\n  selector: 'spomen-profile',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TuiAvatarModule,\n    TuiSkeletonModule,\n    TuiDialogModule,\n    TuiChipModule,\n    TuiLineClampModule,\n    TuiSvgModule,\n    TuiHintModule,\n    SexPipe,\n  ],\n  providers: [DatePipe],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.scss',\n})\n@Sentry.TraceClass({ name: 'Profile' })\nexport class ProfileComponent implements OnInit {\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private route = inject(ActivatedRoute)\n  private injector = inject(Injector)\n  private router = inject(Router)\n  private title = inject(Title)\n  auth = inject(AuthService)\n\n  private accountGQL = inject(AccountGQL)\n\n  $profile: WritableSignal = signal(initialAccount)\n  $loading: WritableSignal = signal(true)\n  $isMe: WritableSignal = signal(false)\n  $query: WritableSignal = signal('')\n\n  $avatar: Signal = computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n\n  $$roles: Observable = toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n\n  $$isMe: Observable = this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n\n  constructor() {\n    effect(() => {\n      if (this.$profile()) {\n        const profile = this.$profile()\n\n        this.title.setTitle(profile!.full_name || profile!.username || '')\n      }\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'Profile.ngOnInit' })\n  ngOnInit(): void {\n    this.$$isMe.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n      next: (isMe) => {\n        if (isMe) {\n          this.$profile.set(this.auth.$user())\n          this.$loading.set(false)\n\n          return\n        }\n\n        this.accountGQL\n          .watch(\n            { username: this.$query() },\n            { fetchPolicy: 'cache-and-network' }\n          )\n          .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe({\n            next: ({ data, loading }) => {\n              const { account } = data\n\n              this.$loading.set(loading)\n\n              this.$profile.set({\n                ...account,\n                birthday: account.birthday || null,\n                avatar: account.avatar ? account.avatar.url : null,\n                vk_avatar: account.vk_avatar || null,\n                full_name:\n                  account.first_name && account.last_name\n                    ? `${account.first_name.trim()} ${account.last_name.trim()}`\n                    : null,\n              })\n            },\n            error: (err: ApolloError) => {\n              if (isNotFound(err.message)) {\n                this.router.navigate(['/404'])\n                return\n              }\n\n              this.alerts\n                .open('Сервер временно недоступен', { status: 'error' })\n                .pipe(takeUntilDestroyed(this.destroyRef))\n                .subscribe()\n            },\n          })\n      },\n    })\n  }\n\n  changeAvatar() {\n    this.showChangeAvatarDialog().subscribe((res: string | boolean | null) => {\n      if (res) {\n        this.alerts\n          .open(\n            `Аватар успешно ${typeof res === 'string' ? 'изменён' : 'удалён'}`,\n            { status: 'success' }\n          )\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe()\n\n        this.$profile.update((profile) => ({\n          ...profile,\n          avatar: typeof res === 'string' ? res : null,\n        }))\n\n        if (this.$isMe()) {\n          this.auth.$user.update((user) => ({\n            ...user,\n            avatar: typeof res === 'string' ? res : null,\n          }))\n        }\n      }\n    })\n  }\n\n  serializeRole(role: Role) {\n    return serializeRole(role)\n  }\n\n  serializeSex(sex: Sex | null): string {\n    return sex ? sexIcons[sex] : sexIcons[0]\n  }\n\n  private showChangeAvatarDialog = () =>\n    this.dialogs.open(\n      new PolymorpheusComponent(ChangeAvatarComponent, this.injector),\n      {\n        size: 's',\n        data: {\n          accountId: this.$profile().id,\n          avatarAlreadyExists: !!this.$profile().avatar,\n        },\n      }\n    )\n}\n\n    \n\n    \n        \n  \n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    \n  }\n  \n    @if (this.$loading()) {\n      @for (skeleton of [1, 2]; track skeleton) {\n        \n      }\n    } @else {\n      {{ this.serializeRole(role) }}\n    }\n  \n\n\n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    {{\n      this.$profile().full_name || this.$profile().username || ''\n    }}\n  }\n  \n    \n      \n      {{\n        this.$profile().birthday\n          ? (this.$profile().birthday | date: 'd MMMM')\n          : 'Не указан'\n      }}\n    \n    \n      \n      {{ this.$profile().sex | sex }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (this.$loading()) {    skeleton  } @else {      }      @if (this.$loading()) {      @for (skeleton of [1, 2]; track skeleton) {              }    } @else {      {{ this.serializeRole(role) }}    }    @if (this.$loading()) {    skeleton  } @else {    {{      this.$profile().full_name || this.$profile().username || \\'\\'    }}  }                  {{        this.$profile().birthday          ? (this.$profile().birthday | date: \\'d MMMM\\')          : \\'Не указан\\'      }}                    {{ this.$profile().sex | sex }}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Route.html":{"url":"interfaces/Route.html","title":"interface - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/route.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exact\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customIcon:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exact\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exact:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Route {\n  url: string\n  icon: string\n  title: string\n  customIcon?: boolean\n  exact?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScrollNearEndDirective.html":{"url":"directives/ScrollNearEndDirective.html","title":"directive - ScrollNearEndDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ScrollNearEndDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/directives/scroll-near-end.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [scrollNearEnd]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                windowScrollEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                threshold\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        threshold\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:21\n                            \n                        \n                \n                    \n                        threshold in PX when to emit before page end scroll\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nearEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:16\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n\n\n            \n                \n                    Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        windowScrollEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    windowScrollEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                    \n                        \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core'\n\n@Directive({\n  selector: '[scrollNearEnd]',\n  standalone: true,\n})\nexport class ScrollNearEndDirective implements OnInit {\n  @Output() nearEnd: EventEmitter = new EventEmitter()\n\n  /**\n   * threshold in PX when to emit before page end scroll\n   */\n  @Input() threshold = 20\n\n  private window!: Window\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit(): void {\n    // save window object for type safety\n    this.window = window\n  }\n\n  @HostListener('window:scroll', ['$event.target'])\n  windowScrollEvent(event: KeyboardEvent) {\n    // height of whole window page\n    const heightOfWholePage = this.window.document.documentElement.scrollHeight\n\n    // how big in pixels the element is\n    const heightOfElement = this.el.nativeElement.scrollHeight\n\n    // currently scrolled Y position\n    const currentScrolledY = this.window.scrollY\n\n    // height of opened window - shrinks if console is opened\n    const innerHeight = this.window.innerHeight\n\n    /**\n     * the area between the start of the page and when this element is visible\n     * in the parent component\n     */\n    const spaceOfElementAndPage = heightOfWholePage - heightOfElement\n\n    // calculated whether we are near the end\n    const scrollToBottom =\n      heightOfElement - innerHeight - currentScrolledY + spaceOfElementAndPage\n\n    // if the user is near end\n    if (scrollToBottom \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScrollService.html":{"url":"injectables/ScrollService.html","title":"injectable - ScrollService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScrollService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/scroll.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $state\n                            \n                            \n                                isEnd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(status: boolean, posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/scroll.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal({\n    posY: 0,\n    isEnd: false,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, WritableSignal } from '@angular/core'\nimport { toObservable } from '@angular/core/rxjs-interop'\nimport { debounceTime, filter, Observable } from 'rxjs'\n\ntype ScrollState = {\n  posY: number\n  isEnd: boolean\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScrollService {\n  private $state: WritableSignal = signal({\n    posY: 0,\n    isEnd: false,\n  })\n\n  isEnd: Observable = toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SexPipe.html":{"url":"pipes/SexPipe.html","title":"pipe - SexPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SexPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/sex.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sex\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/sex.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core'\n\nimport { Sex } from '@interfaces'\n\n@Pipe({\n  name: 'sex',\n  standalone: true,\n})\nexport class SexPipe implements PipeTransform {\n  transform(value: Sex | null): string {\n    switch (value) {\n      case '1': {\n        return 'Мужской'\n      }\n      case '2': {\n        return 'Женский'\n      }\n      default: {\n        return 'Не указан'\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-in/sign-in.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-in\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                vkIdOneTap\n                            \n                            \n                                    \n                                VkIdSdkOneTap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngAfterViewInit\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-in/sign-in.component.ts:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngAfterViewInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        vkIdOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new VKID.OneTap()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        VkIdSdkOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('VkIdSdkOneTap')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\nimport * as VKID from '@vkid/sdk'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  inject,\n} from '@angular/core'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-in',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './sign-in.component.html',\n  styleUrl: './sign-in.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignIn' })\nexport class SignInComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('VkIdSdkOneTap') VkIdSdkOneTap!: ElementRef\n\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private vkIdOneTap = new VKID.OneTap()\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    pass: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngAfterViewInit' })\n  ngAfterViewInit(): void {\n    if (this.VkIdSdkOneTap) {\n      this.vkIdOneTap.render({\n        container: this.VkIdSdkOneTap.nativeElement,\n        scheme: VKID.Scheme.DARK,\n        lang: VKID.Languages.RUS,\n        styles: {\n          borderRadius: 50,\n        },\n      })\n    }\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signIn({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err) => {\n            this.isLoading.next(false)\n\n            if (err.status === 401 || err.status === 400) {\n              this.subs$.push(this.alerts.open(`Вход не выполнен`).subscribe())\n              return\n            }\n\n            this.subs$.push(\n              this.alerts.open(`Приложение временно недоступно`).subscribe()\n            )\n          },\n          complete: () => this.isLoading.next(false),\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Войти\n      \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Войти          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-up/sign-up.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-up\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                            TuiInputDateModule\n                            TuiDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                confirmForm\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                showConfirmForm\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPass\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-up/sign-up.component.ts:45\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPass\n                        \n                    \n                \n            \n            \n                \nconfirmPass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport { Component, Input, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { TuiInputDateModule } from '@taiga-ui/kit'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport { TuiDay } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-up',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiLoaderModule,\n    TuiInputDateModule,\n    TuiDialogModule,\n  ],\n  templateUrl: './sign-up.component.html',\n  styleUrl: './sign-up.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignUp' })\nexport class SignUpComponent implements OnInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  showConfirmForm = false\n\n  form: FormGroup\n    pass: FormControl\n    name: FormControl\n    surname: FormControl\n    email: FormControl\n    birthday: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n\n  confirmForm: FormGroup\n  }> = new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(30),\n        ],\n      ],\n      name: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      surname: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      email: [\n        '',\n        [Validators.email, Validators.minLength(4), Validators.maxLength(30)],\n      ],\n      birthday: [new TuiDay(2000, 4, 27)],\n    })\n\n    this.confirmForm = this.fb.group({\n      confirmPass: ['', [Validators.required]],\n    })\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      if (this.form.controls.name.errors || this.form.controls.surname.errors) {\n        errors.push('Введите корректные имя и фамилию')\n      }\n\n      if (this.form.controls.email.errors) {\n        errors.push('Введите корректную почту')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.showConfirmForm = true\n  }\n\n  confirmPass() {\n    if (\n      this.form.controls.pass.value!.trim() !==\n      this.confirmForm.controls.confirmPass.value!.trim()\n    ) {\n      this.subs$.push(this.alerts.open('Некорректный пароль').subscribe())\n      this.confirmForm.controls.confirmPass.reset()\n      this.form.controls.pass.reset()\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signUp({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n          birthday: this.form.controls.birthday.touched\n            ? this.form.controls.birthday.value!.toUtcNativeDate().toISOString()\n            : undefined,\n          email:\n            this.form.controls.email.touched &&\n            this.form.controls.email.valid &&\n            this.form.controls.email.value!.trim().length > 0\n              ? this.form.controls.email.value!.trim()\n              : undefined,\n          first_name:\n            this.form.controls.name.touched &&\n            this.form.controls.name.valid &&\n            this.form.controls.name.value!.trim().length > 2\n              ? this.form.controls.name.value!.trim()\n              : undefined,\n          last_name:\n            this.form.controls.surname.touched &&\n            this.form.controls.surname.valid &&\n            this.form.controls.surname.value!.trim().length > 2\n              ? this.form.controls.surname.value!.trim()\n              : undefined,\n        })\n        .subscribe({\n          next: (data) => {\n            this.isLoading.next(false)\n\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err: HttpErrorResponse) => {\n            if (err.status === 409) {\n              if (this.form.controls.email.value!.trim().length === 0) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данный логин уже зарегистрирован')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              } else if (\n                this.form.controls.email.touched &&\n                this.form.controls.email.valid\n              ) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данная почта уже зарегистрирована')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              }\n            }\n\n            this.subs$.push(\n              this.alerts.open('Сервер временно недоступен').subscribe()\n            )\n\n            this.isLoading.next(false)\n            return\n          },\n          complete: () => {\n            this.confirmForm.controls.confirmPass.setValue('')\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n// TODO: Сброс паролей в обеих формах при неудачной регистрации\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n      Дата рождения\n      \n    \n  \n  \n    \n      Продолжить\n    \n\n\n\n  \n    \n\n    \n      ОК\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Дата рождения                        Продолжить                    ОК      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinesComponent.html":{"url":"components/TimelinesComponent.html","title":"component - TimelinesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelinesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timelines/timelines.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-timelines\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./timelines.component.html\n            \n\n\n\n            \n                styleUrl\n                ./timelines.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-timelines',\n  standalone: true,\n  imports: [],\n  templateUrl: './timelines.component.html',\n  styleUrl: './timelines.component.scss',\n})\n@Sentry.TraceClass({ name: 'Timelines' })\nexport class TimelinesComponent {}\n\n    \n\n    \n        timelines works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'timelines works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadByIdGQL.html":{"url":"injectables/UploadByIdGQL.html","title":"injectable - UploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-by-id.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { UploadModel } from '@models'\n\nexport type UploadByIdResponse = {\n  upload: UploadModel\n}\n\nexport type UploadByIdVariables = {\n  id?: string\n}\n\nexport type UploadByIdQueryRef = QueryRef\n\n@Injectable()\nexport class UploadByIdGQL extends Query {\n  document = gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadExtensionsGQL.html":{"url":"injectables/UploadExtensionsGQL.html","title":"injectable - UploadExtensionsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadExtensionsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-extensions.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-extensions.gql.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\n\nexport type UploadExtensionsResponse = {\n  uploadExtensions: string[]\n}\n\nexport type UploadExtensionsVariables = Pagination & {}\n\nexport type UploadExtensionsQueryRef = QueryRef\n\n@Injectable()\nexport class UploadExtensionsGQL extends Query {\n  document = gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadFileComponent.html":{"url":"components/UploadFileComponent.html","title":"component - UploadFileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadFileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-file/upload-file.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadService\n                \n            \n\n\n            \n                selector\n                spomen-upload-file\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiStepperModule\n                            TuiInputInlineModule\n                            TuiToggleModule\n                            TuiChipModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiLinkModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-file.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-file.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                currentStep\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Readonly\n                                fileForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                upload\n                            \n                            \n                                uploaded\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextStep\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFile\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nextStep\n                        \n                    \n                \n            \n            \n                \nnextStep()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UploadService\n\n                    \n                \n                \n                    \n                        Default value : inject(UploadService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService).$user()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiFileLike,\n  TuiInputFilesModule,\n  TuiInputInlineModule,\n  TuiLineClampModule,\n  TuiStepperModule,\n  TuiToggleModule,\n} from '@taiga-ui/kit'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  OnInit,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport {\n  TuiAlertService,\n  TuiLoaderModule,\n  TuiSvgModule,\n  TuiLinkModule,\n} from '@taiga-ui/core'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, UploadService } from '@services'\nimport { AuthenticatedUser } from '@interfaces'\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-upload-file',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiStepperModule,\n    TuiInputInlineModule,\n    TuiToggleModule,\n    TuiChipModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiLinkModule,\n  ],\n  providers: [UploadService],\n  templateUrl: './upload-file.component.html',\n  styleUrl: './upload-file.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadFile' })\nexport class UploadFileComponent implements OnInit {\n  private user: AuthenticatedUser = inject(AuthService).$user()\n  private upload: UploadService = inject(UploadService)\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  isLoading: WritableSignal = signal(false)\n  uploaded: WritableSignal = signal(null)\n\n  readonly control = new FormControl(null)\n\n  readonly fileForm = new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n\n  currentStep: number = 1\n\n  ngOnInit() {\n    this.fileForm.controls['ext'].disable()\n  }\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  nextStep() {\n    if (!this.control.value) {\n      return\n    }\n\n    const selectedFile = this.upload.getFileParams(this.control.value)\n\n    this.fileForm.controls['name'].setValue(selectedFile.name)\n    this.fileForm.controls['ext'].setValue('.' + selectedFile.ext)\n\n    this.currentStep++\n  }\n\n  uploadFile() {\n    if (\n      !this.fileForm.controls['name'].valid ||\n      this.fileForm.controls['name'].value!.trim().length === 0\n    ) {\n      this.alerts\n        .open('Название файла не может быть меньше 2 символов')\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe()\n\n      return\n    }\n\n    const isCustomName =\n      this.control.value!.name !==\n      this.fileForm.controls['name'].value! +\n        '' +\n        this.fileForm.controls['ext'].value!\n\n    this.isLoading.set(true)\n\n    this.upload\n      .uploadFile({\n        file: this.control.value!,\n        compress: this.fileForm.controls['compress'].value!,\n        private: this.fileForm.controls['private'].value!,\n        path: this.user.id!,\n        name: isCustomName ? this.fileForm.controls['name'].value! : undefined,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.isLoading.set(false)\n\n          this.uploaded.set(res)\n\n          this.alerts\n            .open('Файл успешно загружен', {\n              status: 'success',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.currentStep++\n        },\n        error: () => {\n          this.isLoading.set(false)\n\n          this.alerts\n            .open('Ошибка загрузки файла', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          // TODO: Обработка превышенного лимита файлов\n        },\n      })\n  }\n}\n\n    \n\n    \n        \n  \n    @switch (this.currentStep) {\n      @case (1) {\n        \n      }\n\n      @case (2) {\n        \n          \n            \n            \n            {{ this.fileForm.controls['ext'].value }}\n          \n          \n            \n              \n                Сжать\n                \n              \n              \n                Личный\n                \n              \n            \n            \n              \n                Загрузить\n              \n            \n          \n        \n      }\n\n      @case (3) {\n            \n              \n              Файл успешно загружен\n            \n            \n              Название\n              \n              Файл\n              \n              Ссылка\n              \n              \n              \n            \n      }\n      @default {\n        \n      }\n    }\n  \n\n\n\n  \n    \n      \n    \n    \n      \n    \n    @if (this.control.value) {\n      Далее\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @switch (this.currentStep) {      @case (1) {              }      @case (2) {                                                      {{ this.fileForm.controls[\\'ext\\'].value }}                                                              Сжать                                                            Личный                                                                                    Загрузить                                                  }      @case (3) {                                        Файл успешно загружен                                      Название                            Файл                            Ссылка                                                            }      @default {              }    }                                    @if (this.control.value) {      Далее    }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadFileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadInfoComponent.html":{"url":"components/UploadInfoComponent.html","title":"component - UploadInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-info/upload-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadByIdGQL\n                \n            \n\n\n            \n                selector\n                spomen-upload-info\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputInlineModule\n                            TuiChipModule\n                            TuiLineClampModule\n                            TuiToggleModule\n                            TuiAvatarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-info.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-info.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $loading\n                            \n                            \n                                $upload\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                uploadByIdGQL\n                            \n                            \n                                    Private\n                                uploadId\n                            \n                            \n                                uploadInfoForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickOwner\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(context: TuiDialogContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    TuiDialogContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickOwner\n                        \n                    \n                \n            \n            \n                \nclickOwner()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n    isPrivate: new FormControl(false),\n    isSystem: new FormControl(false),\n    owner: new FormControl(null),\n    ownerAvatar: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Inject,\n  OnInit,\n  WritableSignal,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms'\n\nimport {\n  TuiAvatarModule,\n  TuiInputInlineModule,\n  TuiLineClampModule,\n  TuiToggleModule,\n} from '@taiga-ui/kit'\nimport { TuiAlertService, TuiDialogContext } from '@taiga-ui/core'\nimport { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { Router } from '@angular/router'\nimport { UploadByIdGQL } from '@graphql'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\n@Component({\n  selector: 'spomen-upload-info',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputInlineModule,\n    TuiChipModule,\n    TuiLineClampModule,\n    TuiToggleModule,\n    TuiAvatarModule,\n  ],\n  providers: [UploadByIdGQL],\n  templateUrl: './upload-info.component.html',\n  styleUrl: './upload-info.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadInfo' })\nexport class UploadInfoComponent implements OnInit {\n  private uploadByIdGQL = inject(UploadByIdGQL)\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n  private router = inject(Router)\n\n  uploadInfoForm: FormGroup = new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n    isPrivate: new FormControl(false),\n    isSystem: new FormControl(false),\n    owner: new FormControl(null),\n    ownerAvatar: new FormControl(null),\n  })\n\n  constructor(\n    @Inject(POLYMORPHEUS_CONTEXT)\n    private readonly context: TuiDialogContext\n  ) {\n    this.uploadId = context.data.uploadId\n  }\n\n  private uploadId: string\n\n  $upload: WritableSignal = signal(null)\n  $loading: WritableSignal = signal(true)\n\n  ngOnInit(): void {\n    this.uploadInfoForm.controls['isSystem'].disable()\n\n    this.uploadByIdGQL\n      .watch({\n        id: this.uploadId,\n      })\n      .valueChanges.subscribe({\n        next: (res) => {\n          const { upload } = res.data\n\n          this.$upload.set(upload)\n\n          this.uploadInfoForm.controls['name'].setValue(upload.name)\n          this.uploadInfoForm.controls['originalName'].setValue(\n            upload.file_name\n          )\n          this.uploadInfoForm.controls['isSystem'].setValue(upload.is_system)\n          this.uploadInfoForm.controls['isPrivate'].setValue(\n            upload.permissions.includes(Permission.OwnerOnly)\n          )\n\n          this.uploadInfoForm.controls['owner'].setValue(\n            upload.owner\n              ? upload.owner.first_name && upload.owner.last_name\n                ? upload.owner.first_name + ' ' + upload.owner.last_name\n                : upload.owner.username\n              : null\n          )\n\n          this.uploadInfoForm.controls['ownerAvatar'].setValue(\n            upload.owner\n              ? upload.owner.avatar && upload.owner.avatar.url\n                ? upload!.owner!.avatar!.url\n                : upload!.owner!.vk_avatar\n              : null\n          )\n\n          this.$loading.set(false)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить информацию о загрузке', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n          this.$loading.set(false)\n        },\n      })\n  }\n  // TODO: Кнопки предпросмотра, скачивания, удаления и обновления\n  // TODO: Скрытие прав доступа и флага системного, если файл не принадлежит пользователю\n  clickOwner() {\n    if (this.uploadInfoForm.controls['owner'].value) {\n      this.router.navigate(['/' + this.$upload()!.owner!.username])\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      Имя\n    \n    \n      \n    \n  \n  \n    \n      Тип\n    \n    \n      \n      {{ this.$upload()!.ext }}\n      \n    \n  \n  \n    \n      Ссылка\n    \n    \n      \n        \n      \n    \n  \n  \n    \n      Владелец\n    \n\n    @if (this.$upload()!.owner!) {\n      \n        \n        {{ this.uploadInfoForm.controls['owner'].value }}\n      \n    } @else {\n      Не найден\n    }\n  \n  \n    \n      Личный\n      \n    \n    \n      Системный\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Имя                                Тип                    {{ this.$upload()!.ext }}                        Ссылка                                              Владелец        @if (this.$upload()!.owner!) {                      {{ this.uploadInfoForm.controls[\\'owner\\'].value }}          } @else {      Не найден    }              Личный                    Системный            '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadListItemComponent.html":{"url":"components/UploadListItemComponent.html","title":"component - UploadListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-list-item/upload-list-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                                DeleteUploadByIdGQL\n                \n            \n\n\n            \n                selector\n                spomen-upload-list-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterModule\n                            TuiSkeletonModule\n                            TuiLineClampModule\n                            TuiPreviewModule\n                            TuiButtonModule\n                            TuiChipModule\n                            TuiHintModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                            PolymorpheusModule\n                            TuiPromptModule\n                            IFrameUrlPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-list-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-list-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alerts\n                            \n                            \n                                deleteUploadByIdGQL\n                            \n                            \n                                destroyRef\n                            \n                            \n                                dialog\n                            \n                            \n                                    Private\n                                dialogSub\n                            \n                            \n                                index\n                            \n                            \n                                isMobile\n                            \n                            \n                                pdfViewer\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                preview\n                            \n                            \n                                previewDialog\n                            \n                            \n                                router\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                handleClickUpload\n                            \n                            \n                                    Private\n                                handleDelete\n                            \n                            \n                                handleSelectExtension\n                            \n                            \n                                showPreview\n                            \n                            \n                                    Private\n                                showPrompt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isPrivate\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickUpload\n                            \n                            \n                                onDelete\n                            \n                            \n                                selectExtension\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    previewContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isPrivate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        upload\n                    \n                \n                \n                    \n                        Type :         UploadModel | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:91\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickUpload\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:96\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectExtension\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:97\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleClickUpload\n                        \n                    \n                \n            \n            \n                \nhandleClickUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSelectExtension\n                        \n                    \n                \n            \n            \n                \nhandleSelectExtension()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPreview\n                        \n                    \n                \n            \n            \n                \nshowPreview(actions: PolymorpheusContent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actions\n                                            \n                                                        PolymorpheusContent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showPrompt\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPrompt(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DeleteUploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TUI_IS_MOBILE)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pdfViewer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPdfViewerService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('preview')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previewDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPreviewDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sanitizer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:86\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        previewContent\n                    \n                \n\n                \n                    \n                        getpreviewContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:105\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  TUI_PROMPT,\n  TuiAvatarModule,\n  TuiLineClampModule,\n  TuiPdfViewerOptions,\n  TuiPdfViewerService,\n  TuiPromptModule,\n} from '@taiga-ui/kit'\n\nimport {\n  Component,\n  DestroyRef,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogContext,\n  TuiDialogService,\n  TuiHintModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport {\n  TuiButtonModule,\n  TuiChipModule,\n  TuiSkeletonModule,\n} from '@taiga-ui/experimental'\n\nimport {\n  TuiPreviewDialogService,\n  TuiPreviewModule,\n} from '@taiga-ui/addon-preview'\n\nimport {\n  PolymorpheusContent,\n  PolymorpheusModule,\n} from '@tinkoff/ng-polymorpheus'\n\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { Router, RouterModule } from '@angular/router'\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\n\nimport { DeleteUploadByIdGQL } from '@graphql'\nimport { IFrameUrlPipe } from '@pipes'\nimport { UploadModel } from '@models'\nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'spomen-upload-list-item',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    TuiSkeletonModule,\n    TuiLineClampModule,\n    TuiPreviewModule,\n    TuiButtonModule,\n    TuiChipModule,\n    TuiHintModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n    PolymorpheusModule,\n    TuiPromptModule,\n    IFrameUrlPipe,\n  ],\n  providers: [DatePipe, DeleteUploadByIdGQL],\n  templateUrl: './upload-list-item.component.html',\n  styleUrl: './upload-list-item.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadListItem' })\nexport class UploadListItemComponent {\n  deleteUploadByIdGQL = inject(DeleteUploadByIdGQL)\n  previewDialog = inject(TuiPreviewDialogService)\n  pdfViewer = inject(TuiPdfViewerService)\n  dialog = inject(TuiDialogService)\n  alerts = inject(TuiAlertService)\n  sanitizer = inject(DomSanitizer)\n  destroyRef = inject(DestroyRef)\n  isMobile = inject(TUI_IS_MOBILE)\n  router = inject(Router)\n\n  @Input('upload') upload: UploadModel | null = null\n  @Input('isLoading') isLoading: boolean = false\n  @Input('isPrivate') isPrivate: boolean = false\n\n  @Output('onDelete') onDelete: EventEmitter = new EventEmitter()\n  @Output('clickUpload') clickUpload: EventEmitter = new EventEmitter()\n  @Output('selectExtension') selectExtension: EventEmitter =\n    new EventEmitter()\n\n  @ViewChild('preview')\n  readonly preview?: TemplateRef\n\n  index = 0\n\n  get previewContent(): PolymorpheusContent {\n    return this.upload!.url\n  }\n\n  handleClickUpload() {\n    this.clickUpload.emit()\n  }\n\n  handleSelectExtension() {\n    this.selectExtension.emit()\n  }\n\n  private dialogSub: Subscription | null = null\n\n  showPreview(actions: PolymorpheusContent) {\n    if (this.upload!.ext === 'pdf') {\n      this.dialogSub = this.pdfViewer\n        .open(\n          this.sanitizer.bypassSecurityTrustResourceUrl(\n            this.isMobile\n              ? `https://drive.google.com/viewerng/viewer?embedded=true&url=${this.upload!.url}`\n              : this.upload!.url\n          ),\n          {\n            label: this.upload!.name,\n            actions,\n          }\n        )\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe()\n\n      return\n    }\n\n    this.dialogSub = this.previewDialog\n      .open(this.preview || '')\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe()\n  }\n\n  delete() {\n    this.showPrompt('Удалить файл?').subscribe((res) => {\n      if (res) {\n        this.showPrompt('Вы уверены?').subscribe((res) => {\n          if (res) this.handleDelete()\n        })\n      }\n    })\n  }\n\n  private showPrompt(label: string) {\n    return this.dialog\n      .open(TUI_PROMPT, {\n        label,\n        size: 's',\n        data: {\n          yes: 'Да',\n          no: 'Нет',\n        },\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n  }\n\n  private handleDelete() {\n    this.deleteUploadByIdGQL\n      .mutate({\n        id: this.upload!.id,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: () => {\n          if (this.dialogSub) this.dialogSub.unsubscribe()\n\n          this.alerts\n            .open('Файл успешно удалён', {\n              status: 'success',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.onDelete.emit()\n        },\n        error: (err) => {\n          console.log(err)\n\n          this.alerts\n            .open('Удалить файл не удалось', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n}\n\n    \n\n    \n        @if (upload && !isLoading) {\n  \n    \n      \n    \n    \n      \n      \n      @if (this.isPrivate) {\n        \n      }\n    \n    \n      \n      \n    \n    {{ upload.ext }}\n    \n    \n      \n\n      \n    \n    {{\n        upload.created_at | date: 'd MMMM, YYYY г.'\n      }}\n  \n} @else {\n  \n          \n          \n    \n    \n      \n    \n    loading\n    \n    \n      \n\n      \n    \n    01.01.2001\n  \n}\n\n\n  \n    {{ this.upload!.file_name }}.{{ this.upload!.ext }}\n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n\n    @switch (this.upload!.ext) {\n      @case ('webp') {\n        \n      }\n      @case ('mpga') {\n        \n      }\n      @default {\n        \n          \n          Просмотр не поддерживается\n        \n      }\n    }\n\n  \n\n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (upload && !isLoading) {                                      @if (this.isPrivate) {              }                            {{ upload.ext }}                            {{        upload.created_at | date: \\'d MMMM, YYYY г.\\'      }}  } @else {                                            loading                            01.01.2001  }      {{ this.upload!.file_name }}.{{ this.upload!.ext }}                                                                @switch (this.upload!.ext) {      @case (\\'webp\\') {              }      @case (\\'mpga\\') {              }      @default {                            Просмотр не поддерживается              }    }                          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadModel.html":{"url":"interfaces/UploadModel.html","title":"interface - UploadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/upload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            file_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_system\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            owner_id\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_system\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_system:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AccountModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         Permission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from '@models'\nimport { Permission } from '@enums'\n\nexport interface UploadModel {\n  id: string\n  bucket: string\n  name: string\n  ext: string\n  file_name: string\n  path: string\n  url: string\n  owner_id: string\n  owner?: AccountModel\n  permissions: Permission[]\n  is_system: boolean\n  created_at: Date\n  updated_at: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/upload.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для загрузки файлов\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFileParams\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFileParams\n                        \n                    \n                \n            \n            \n                \ngetFileParams(file: TuiFileLike)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Получение параметров файла\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        TuiFileLike\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Файл tui-kit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileParams\n\n                        \n                            \n                                Параметры файла\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(dto: UploadFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/upload.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { TuiFileLike } from '@taiga-ui/kit'\n\nimport { FileParams } from '@interfaces'\n\nimport { UploadFileDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API, Permission } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для загрузки файлов\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UploadService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadFile(dto: UploadFileDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n    body.append('path', dto.path)\n    body.append('compress', dto.compress.toString())\n    body.append('originalName', dto.file.name)\n\n    if (dto.name) {\n      body.append('name', dto.name)\n    }\n\n    if (dto.private) {\n      body.append('acl', Permission.OwnerOnly)\n    }\n\n    return this.http.post(`${env.apiUrl}${API.UPLOAD}`, body)\n  }\n\n  /**\n   * Получение параметров файла\n   * @param {TuiFileLike} file Файл tui-kit\n   * @return {FileParams} Параметры файла\n   */\n  getFileParams(file: TuiFileLike): FileParams {\n    const filename = file.name.split('.')\n    const ext = filename[filename.length - 1]\n\n    delete filename[filename.length - 1]\n\n    return {\n      name: filename.join('.').slice(0, filename.join('-').length - 1),\n      ext,\n      mime: file.type,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadsComponent.html":{"url":"components/UploadsComponent.html","title":"component - UploadsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/uploads.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadsGQL\n                \n            \n\n\n            \n                selector\n                spomen-uploads\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputModule\n                            TuiTextfieldControllerModule\n                            TuiSelectModule\n                            TuiDataListWrapperModule\n                            TuiSvgModule\n                                TuiTablePaginationModule\n                            TuiDialogModule\n                            TuiHintModule\n                                UploadListItemComponent\n                                ExtensionInputComponent\n                                AccountInputComponent\n                                PermissionInputComponent\n                                NotFoundComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./uploads.component.html\n            \n\n\n\n            \n                styleUrl\n                ./uploads.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $ext\n                            \n                            \n                                    Private\n                                $name\n                            \n                            \n                                    Private\n                                $owner\n                            \n                            \n                                $page\n                            \n                            \n                                    Private\n                                $permissions\n                            \n                            \n                                $size\n                            \n                            \n                                $uploads\n                            \n                            \n                                $uploadsLoading\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                isAdministrator\n                            \n                            \n                                    Private\n                                isLastPage\n                            \n                            \n                                modalFiltersIsOpen\n                            \n                            \n                                    Private\n                                scroll\n                            \n                            \n                                    Private\n                                showUploadFileDialog\n                            \n                            \n                                    Private\n                                showUploadInfoDialog\n                            \n                            \n                                skeletonRows\n                            \n                            \n                                uploadFiltersForm\n                            \n                            \n                                    Private\n                                uploadsGQL\n                            \n                            \n                                    Private\n                                uploadsQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchMoreUploads\n                            \n                            \n                                handleUploadDeleted\n                            \n                            \n                                isPrivate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                refetchUploads\n                            \n                            \n                                    Private\n                                resetUploads\n                            \n                            \n                                setExtensionFilter\n                            \n                            \n                                showModalFilters\n                            \n                            \n                                showUploadFile\n                            \n                            \n                                showUploadInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    params\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchMoreUploads\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchMoreUploads()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:271\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleUploadDeleted\n                        \n                    \n                \n            \n            \n                \nhandleUploadDeleted(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:218\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPrivate\n                        \n                    \n                \n            \n            \n                \nisPrivate(permissions: Permission[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissions\n                                            \n                                                            Permission[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        refetchUploads\n                        \n                    \n                \n            \n            \n                \n                        \n                    refetchUploads()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:257\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetUploads\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetUploads()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:263\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExtensionFilter\n                        \n                    \n                \n            \n            \n                \nsetExtensionFilter(ext: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:226\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ext\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModalFilters\n                        \n                    \n                \n            \n            \n                \nshowModalFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:214\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUploadFile\n                        \n                    \n                \n            \n            \n                \nshowUploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:202\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUploadInfo\n                        \n                    \n                \n            \n            \n                \nshowUploadInfo(uploadId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uploadId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $page\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $size\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(20)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $uploads\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $uploadsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$user().username\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdministrator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$isAdmin()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLastPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalFiltersIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScrollService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showUploadFileDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:277\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showUploadInfoDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:285\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skeletonRows\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Array(10)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFiltersForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl(),\n    ext: new FormControl(),\n    account: new FormControl(),\n    permissions: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadsGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadsGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadsQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UploadsQueryRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n                \n                    \n                        getparams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/uploads/uploads.component.ts:239\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiDialogService,\n  TuiHintModule,\n  TuiSvgModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/core'\n\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  Injector,\n  OnInit,\n  signal,\n  WritableSignal,\n} from '@angular/core'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms'\n\nimport {\n  TuiDataListWrapperModule,\n  TuiInputModule,\n  TuiSelectModule,\n} from '@taiga-ui/kit'\nimport { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus'\nimport { TuiTablePaginationModule } from '@taiga-ui/addon-table'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { debounceTime, distinctUntilChanged } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport { RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadsQueryRef, UploadsGQL } from '@graphql'\nimport { AuthService, ScrollService } from '@services'\nimport { inOutGridAnimation200 } from '@animations'\nimport { serializePermissions } from '@utils'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nimport { PermissionInputComponent } from '@components/permission-input'\nimport { ExtensionInputComponent } from '@components/extension-input'\nimport { AccountInputComponent } from '@components/account-input'\nimport { NotFoundComponent } from '@components/not-found'\n\nimport { UploadListItemComponent } from './upload-list-item/upload-list-item.component'\nimport { UploadFileComponent } from './upload-file/upload-file.component'\nimport { UploadInfoComponent } from './upload-info/upload-info.component'\n\n@Component({\n  selector: 'spomen-uploads',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputModule,\n    TuiTextfieldControllerModule,\n    TuiSelectModule,\n    TuiDataListWrapperModule,\n    TuiSvgModule,\n    TuiTablePaginationModule,\n    TuiDialogModule,\n    TuiHintModule,\n    UploadListItemComponent,\n    ExtensionInputComponent,\n    AccountInputComponent,\n    PermissionInputComponent,\n    NotFoundComponent,\n  ],\n  providers: [UploadsGQL],\n  animations: [inOutGridAnimation200],\n  templateUrl: './uploads.component.html',\n  styleUrl: './uploads.component.scss',\n})\n@Sentry.TraceClass({ name: 'Uploads' })\nexport class UploadsComponent implements OnInit {\n  private currentUser = inject(AuthService).$user().username\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private scroll = inject(ScrollService)\n  private uploadsGQL = inject(UploadsGQL)\n  private injector = inject(Injector)\n\n  isAdministrator = inject(AuthService).$isAdmin()\n\n  private uploadsQuery: UploadsQueryRef | null = null\n  private isLastPage = false\n\n  skeletonRows = new Array(10)\n  modalFiltersIsOpen = false\n\n  $page: WritableSignal = signal(1)\n  $size: WritableSignal = signal(20)\n\n  $uploads: WritableSignal = signal([])\n  $uploadsLoading: WritableSignal = signal(true)\n\n  uploadFiltersForm = new FormGroup({\n    name: new FormControl(),\n    ext: new FormControl(),\n    account: new FormControl(),\n    permissions: new FormControl(),\n  })\n\n  private $permissions: WritableSignal = signal([])\n  private $name: WritableSignal = signal('')\n  private $ext: WritableSignal = signal([])\n  private $owner: WritableSignal = signal([])\n\n  ngOnInit() {\n    this.scroll.isEnd\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.scroll.next(false, 0)\n\n        if (this.$uploadsLoading() || this.isLastPage) return\n\n        this.fetchMoreUploads()\n      })\n\n    if (this.currentUser) {\n      this.uploadFiltersForm.controls['account'].setValue([this.currentUser])\n\n      this.$owner.set([this.currentUser])\n    }\n\n    this.uploadsQuery = this.uploadsGQL.watch(this.params)\n\n    this.uploadsQuery.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          if (res.data.uploads.length === 0) this.isLastPage = true\n\n          this.$uploads.update((prev) => prev.concat(res.data.uploads))\n\n          this.$uploadsLoading.set(false)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список загрузок', { status: 'error' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n          this.$uploadsLoading.set(false)\n        },\n      })\n\n    this.uploadFiltersForm.controls['account'].valueChanges\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe((items) => {\n        this.$owner.set(items)\n        this.resetUploads()\n      })\n\n    this.uploadFiltersForm.controls['ext'].valueChanges\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe((items) => {\n        this.$ext.set(items)\n        this.resetUploads()\n      })\n\n    this.uploadFiltersForm.controls['name'].valueChanges\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe((items) => {\n        this.$name.set(items)\n        this.resetUploads()\n      })\n\n    this.uploadFiltersForm.controls['permissions'].valueChanges\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe((permissions) => {\n        this.$permissions.set(serializePermissions(permissions))\n        this.resetUploads()\n      })\n  }\n\n  showUploadFile() {\n    this.showUploadFileDialog()\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe()\n  }\n\n  showUploadInfo(uploadId: string) {\n    this.showUploadInfoDialog(uploadId)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe()\n  }\n\n  showModalFilters() {\n    this.modalFiltersIsOpen = true\n  }\n\n  handleUploadDeleted(id: string) {\n    this.$uploads.update((items) => items.filter((item) => item.id !== id))\n  }\n\n  isPrivate(permissions: Permission[]) {\n    return !permissions.includes(Permission.Public)\n  }\n\n  setExtensionFilter(ext: string) {\n    const currentValue = this.uploadFiltersForm.controls['ext'].value\n\n    if (!currentValue) this.uploadFiltersForm.controls['ext'].setValue([ext])\n\n    if (Array.isArray(currentValue) && !currentValue.includes(ext.trim())) {\n      this.uploadFiltersForm.controls['ext'].setValue([\n        ...this.uploadFiltersForm.controls['ext'].value,\n        ext,\n      ])\n    }\n  }\n\n  private get params() {\n    const owner = !this.isAdministrator\n      ? [this.currentUser!]\n      : this.$owner().length === 0\n        ? undefined\n        : this.$owner()\n\n    return {\n      size: this.$size(),\n      page: this.$page(),\n      owner,\n      name: this.$name().trim().length === 0 ? undefined : this.$name(),\n      ext: this.$ext().length === 0 ? undefined : this.$ext(),\n      permissions:\n        this.$permissions().length === 0 ? undefined : this.$permissions(),\n    }\n  }\n\n  private refetchUploads() {\n    this.$uploadsLoading.set(true)\n\n    this.uploadsQuery!.refetch(this.params)\n  }\n\n  private resetUploads() {\n    this.$page.set(1)\n    this.$uploads.set([])\n    this.isLastPage = false\n\n    this.refetchUploads()\n  }\n\n  private fetchMoreUploads() {\n    this.$page.set(this.$page() + 1)\n\n    this.refetchUploads()\n  }\n\n  private showUploadFileDialog = () =>\n    this.dialogs.open(\n      new PolymorpheusComponent(UploadFileComponent, this.injector),\n      {\n        size: 's',\n      }\n    )\n\n  private showUploadInfoDialog = (uploadId: string) =>\n    this.dialogs.open(\n      new PolymorpheusComponent(UploadInfoComponent, this.injector),\n      {\n        size: 's',\n        data: {\n          uploadId,\n        },\n      }\n    )\n}\n\n    \n\n    \n        \n  \n    Название\n  \n  \n  \n    \n  \n  \n    \n  \n\n\n  @if (this.$uploads().length > 0) {\n    \n      @for (upload of this.$uploads(); track $index) {\n        \n      }\n    \n  }\n\n  @if (this.$uploadsLoading()) {\n    \n      @for (row of this.skeletonRows; track $index) {\n        \n      }\n    \n  }\n\n\n@if (this.$uploads().length === 0 && !this.$uploadsLoading()) {\n  \n    \n  \n}\n\n\n  \n    \n      Поиск\n      \n\n      @if (this.isAdministrator) {\n        \n      }\n\n      \n\n      Найти\n    \n  \n \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Название                      @if (this.$uploads().length > 0) {          @for (upload of this.$uploads(); track $index) {              }      }  @if (this.$uploadsLoading()) {          @for (row of this.skeletonRows; track $index) {              }      }@if (this.$uploads().length === 0 && !this.$uploadsLoading()) {        }            Поиск            @if (this.isAdministrator) {              }            Найти       '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsGQL.html":{"url":"injectables/UploadsGQL.html","title":"injectable - UploadsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/uploads.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UploadsQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/uploads.gql.ts:63\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nexport type UploadsResponse = {\n  uploads: UploadModel[]\n}\n\nexport type UploadsVariables = Pagination & {\n  owner?: string[]\n  name?: string\n  ext?: string[]\n  permissions?: Permission[]\n}\n\nexport type UploadsQueryRef = QueryRef\n\nexport const UploadsQuery = gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n\n@Injectable()\nexport class UploadsGQL extends Query {\n  document = UploadsQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                        \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/validation.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                checkControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from '@angular/forms'\n\nexport class Validation {\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName)\n      const checkControl = controls.get(checkControlName)\n\n      if (checkControl?.errors && !checkControl.errors['matching']) {\n        return null\n      }\n\n      if (control?.value !== checkControl?.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true })\n        return { matching: true }\n      } else {\n        return null\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            appInitializerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/callback/auth-callback.component.ts\n            \n            component\n            AuthCallbackComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/pass/auth-pass.component.ts\n            \n            component\n            AuthPassComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/sign-in/sign-in.component.ts\n            \n            component\n            SignInComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/auth/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/chats/chats.component.ts\n            \n            component\n            ChatsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/enter-leave.animation.ts\n            \n            variable\n            enterLeaveAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/account-input/account-input.component.ts\n            \n            component\n            AccountInputComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/common/components/extension-input/extension-input.component.ts\n            \n            component\n            ExtensionInputComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/common/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/components/me/me.component.ts\n            \n            component\n            MeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/components/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            variable\n            protectedRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/components/oops/oops.component.ts\n            \n            component\n            OopsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/permission-input/permission-input.component.ts\n            \n            component\n            PermissionInputComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/common/directives/scroll-near-end.directive.ts\n            \n            directive\n            ScrollNearEndDirective\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            function\n            apolloOptionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            variable\n            graphqlProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/models/getAccount.model.ts\n            \n            interface\n            GetAccountModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            injectable\n            DeleteUploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            variable\n            DeleteUploadByIdQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/account.gql.ts\n            \n            injectable\n            AccountGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n            \n            injectable\n            AccountsInfoByUsernameGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-by-id.gql.ts\n            \n            injectable\n            UploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-extensions.gql.ts\n            \n            injectable\n            UploadExtensionsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            injectable\n            UploadsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            variable\n            UploadsQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth-callback.guard.ts\n            \n            variable\n            authCallbackGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/http.interceptor.ts\n            \n            variable\n            httpRequestInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/iframe-url.pipe.ts\n            \n            pipe\n            IFrameUrlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/sex.pipe.ts\n            \n            pipe\n            SexPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/scroll.service.ts\n            \n            injectable\n            ScrollService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/memories/memories.component.ts\n            \n            component\n            MemoriesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/profile/change-avatar/change-avatar.component.ts\n            \n            component\n            ChangeAvatarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            variable\n            sexIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/timelines/timelines.component.ts\n            \n            component\n            TimelinesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-file/upload-file.component.ts\n            \n            component\n            UploadFileComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-info/upload-info.component.ts\n            \n            component\n            UploadInfoComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-list-item/upload-list-item.component.ts\n            \n            component\n            UploadListItemComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/uploads/uploads.component.ts\n            \n            component\n            UploadsComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/envs/env.development.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.staging.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            variable\n            initialAccount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            interface\n            AuthenticatedUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            variable\n            initialAuthenticatedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/env.interface.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            ApiError\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            GraphqlError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/interfaces/route.interface.ts\n            \n            interface\n            Route\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/interfaces/upload.interface.ts\n            \n            interface\n            FileParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountShortModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/models/auth.model.ts\n            \n            interface\n            AuthModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/models/upload.model.ts\n            \n            interface\n            UploadModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            debouncedSignal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getCurrentPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getQueryPayload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            isNotFound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/sentry.ts\n            \n            function\n            initSentry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializePermissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializeRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/validation.ts\n            \n            class\n            Validation\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/cdk : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @apollo/client : ^3.0.0\n        \n            @sentry/angular : ^8.13.0\n        \n            @sentry/cli : ^2.32.1\n        \n            @taiga-ui/addon-charts : ^3.83.0\n        \n            @taiga-ui/addon-commerce : ^3.83.0\n        \n            @taiga-ui/addon-mobile : ^3.83.0\n        \n            @taiga-ui/addon-preview : ^3.83.0\n        \n            @taiga-ui/addon-table : ^3.83.0\n        \n            @taiga-ui/addon-tablebars : ^3.83.0\n        \n            @taiga-ui/cdk : ^3.83.0\n        \n            @taiga-ui/core : ^3.83.0\n        \n            @taiga-ui/experimental : ^3.84.0\n        \n            @taiga-ui/icons : ^3.83.0\n        \n            @taiga-ui/kit : ^3.83.0\n        \n            @taiga-ui/layout : ^3.83.0\n        \n            @taiga-ui/styles : ^3.83.0\n        \n            @tinkoff/ng-dompurify : 4.0.0\n        \n            @vkid/sdk : ^1.1.0\n        \n            apollo-angular : 7.0.2\n        \n            dompurify : 3.0.6\n        \n            graphql : ^16\n        \n            normalize.css : ^8.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.6.3\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API   (src/.../api.enum.ts)\n                        \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/enums/api.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        API\n                    \n                \n                        \n                            \n                                 AUTH_ME\n                            \n                        \n                        \n                            \n                                Value : /auth\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_IN\n                            \n                        \n                        \n                            \n                                Value : /auth/token\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_UP\n                            \n                        \n                        \n                            \n                                Value : /auth/sign-up\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_OUT\n                            \n                        \n                        \n                            \n                                Value : /auth/logout\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH_CLEAR\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh/clear\n                            \n                        \n                        \n                            \n                                 VK_ID_EXCHANGE_TOKEN\n                            \n                        \n                        \n                            \n                                Value : /vk-id/exchange-token\n                            \n                        \n                        \n                            \n                                 ACCOUNT_AVATAR\n                            \n                        \n                        \n                            \n                                Value : /account/avatar\n                            \n                        \n                        \n                            \n                                 UPLOAD\n                            \n                        \n                        \n                            \n                                Value : /upload\n                            \n                        \n            \n        \n\n    src/types/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 OwnerOnly\n                            \n                        \n                        \n                            \n                                Value : OwnerOnly\n                            \n                        \n                        \n                            \n                                 ChatOnly\n                            \n                        \n                        \n                            \n                                Value : ChatOnly\n                            \n                        \n                        \n                            \n                                 MemberOnly\n                            \n                        \n                        \n                            \n                                Value : MemberOnly\n                            \n                        \n            \n        \n\n    src/types/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 Administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apolloOptionsFactory   (src/.../graphql.provider.ts)\n                        \n                        \n                            appInitializerFactory   (src/.../app.config.ts)\n                        \n                        \n                            debouncedSignal   (src/.../funcs.ts)\n                        \n                        \n                            getCurrentPath   (src/.../funcs.ts)\n                        \n                        \n                            getQueryPayload   (src/.../funcs.ts)\n                        \n                        \n                            initSentry   (src/.../sentry.ts)\n                        \n                        \n                            isNotFound   (src/.../funcs.ts)\n                        \n                        \n                            serializePermissions   (src/.../serialize.ts)\n                        \n                        \n                            serializeRole   (src/.../serialize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apolloOptionsFactory\n                        \n                    \n                \n            \n            \n                \napolloOptionsFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ApolloClientOptions\n\n                        \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appInitializerFactory\n                        \n                    \n                \n            \n            \n                \nappInitializerFactory(config: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/funcs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debouncedSignal\n                        \n                    \n                \n            \n            \n                \ndebouncedSignal(sourceSignal: Signal, debounceTimeInMs: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                sourceSignal\n                                            \n                                                        Signal\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                debounceTimeInMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentPath\n                        \n                    \n                \n            \n            \n                \ngetCurrentPath(router: Router)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQueryPayload\n                        \n                    \n                \n            \n            \n                \ngetQueryPayload(params: Params)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotFound\n                        \n                    \n                \n            \n            \n                \nisNotFound(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/sentry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initSentry\n                        \n                    \n                \n            \n            \n                \ninitSentry()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    src/utils/serialize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serializePermissions\n                        \n                    \n                \n            \n            \n                \nserializePermissions(permissions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissions\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Permission[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nspomen-client\nПлатформа воспоминаний\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.2\n        \n            Description : Platform of memories\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountQueryRef   (src/.../account.gql.ts)\n                        \n                        \n                            AccountResponse   (src/.../account.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameQueryRef   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameResponse   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameVariables   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountVariables   (src/.../account.gql.ts)\n                        \n                        \n                            AuthCallbackDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            DeleteUploadByIdResponse   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            DeleteUploadByIdVariables   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            PaginatedQuery   (src/.../index.ts)\n                        \n                        \n                            Pagination   (src/.../index.ts)\n                        \n                        \n                            RemoveAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            ScrollState   (src/.../scroll.service.ts)\n                        \n                        \n                            Sex   (src/.../sex.interface.ts)\n                        \n                        \n                            SignInDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            SignUpDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            UploadAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            UploadByIdQueryRef   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdResponse   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdVariables   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadExtensionsQueryRef   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsResponse   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsVariables   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadFileDto   (src/.../upload.dtos.ts)\n                        \n                        \n                            UploadsQueryRef   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsResponse   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsVariables   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/queries/account.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/auth.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    AuthCallbackDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignInDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignUpDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/index.ts\n    \n    \n        \n            \n                \n                    \n                    PaginatedQuery\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pagination\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/account.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    RemoveAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/services/scroll.service.ts\n    \n    \n        \n            \n                \n                    \n                    ScrollState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/interfaces/sex.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Sex\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\"\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadByIdQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-extensions.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/types/dtos/upload.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    UploadFileDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/uploads.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authCallbackGuard   (src/.../auth-callback.guard.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            DeleteUploadByIdQuery   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            enterLeaveAnimation   (src/.../enter-leave.animation.ts)\n                        \n                        \n                            env   (src/.../env.development.ts)\n                        \n                        \n                            env   (src/.../env.staging.ts)\n                        \n                        \n                            env   (src/.../env.ts)\n                        \n                        \n                            graphqlProvider   (src/.../graphql.provider.ts)\n                        \n                        \n                            httpRequestInterceptor   (src/.../http.interceptor.ts)\n                        \n                        \n                            initialAccount   (src/.../account.interface.ts)\n                        \n                        \n                            initialAuthenticatedUser   (src/.../authenticated-user.interface.ts)\n                        \n                        \n                            inOutAnimation200   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutAnimation500   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutGridAnimation200   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            inOutGridAnimation500   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            protectedRoutes   (src/.../nav.component.ts)\n                        \n                        \n                            sexIcons   (src/.../profile.component.ts)\n                        \n                        \n                            UploadsQuery   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes, withViewTransitions()),\n    importProvidersFrom(TuiRootModule),\n    provideHttpClient(withInterceptors([httpRequestInterceptor])),\n    {\n      provide: ErrorHandler,\n      useValue: Sentry.createErrorHandler({\n        showDialog: false,\n      }),\n    },\n    {\n      provide: Sentry.TraceService,\n      deps: [Router],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: appInitializerFactory,\n      deps: [ConfigService, Sentry.TraceService],\n      multi: true,\n    },\n    { provide: TUI_SANITIZER, useClass: NgDompurifySanitizer },\n    {\n      provide: TUI_LANGUAGE,\n      useValue: of(TUI_RUSSIAN_LANGUAGE),\n    },\n    { provide: LOCALE_ID, useValue: 'ru' },\n    graphqlProvider,\n    ConfigService,\n    AuthService,\n    AccountService,\n    UploadService,\n    ScrollService,\n    AccountGQL,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth-callback.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authCallbackGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route) => {\n  const router = inject(Router)\n\n  const payload = getQueryPayload(route.queryParams)\n\n  return payload && payload.token\n    ? true\n    : router.createUrlTree(['/auth/sign-in'])\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const auth = inject(AuthService)\n  const router = inject(Router)\n\n  const currentPath = getCurrentPath(router)\n  const isAuthPage = currentPath.includes('/auth')\n\n  return auth.$$isAuth.pipe(\n    withLatestFrom(auth.$$isLoading),\n    filter(([_, loading]) => !loading),\n    map(([isAuth]) => {\n      if (\n        (currentPath.includes('/auth/callback') && isAuth) ||\n        (isAuthPage && !isAuth)\n      ) {\n        return true\n      }\n\n      if (isAuthPage && isAuth) {\n        return router.createUrlTree(['/'])\n      }\n\n      return isAuth\n        ? true\n        : router.createUrlTree(['/auth'], {\n            queryParams: { url: currentPath },\n          })\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeleteUploadByIdQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/enter-leave.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enterLeaveAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('enterLeave', [\n  transition(':enter', [\n    style({\n      transform: 'translateX(-50%)',\n      opacity: 0,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(0)',\n        opacity: 1,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      transform: 'translateX(0)',\n      opacity: 1,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(50%)',\n        opacity: 0,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/envs/env.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'local',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn:\n    'https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.staging.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'staging',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'production',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        graphqlProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  Apollo,\n  {\n    provide: APOLLO_OPTIONS,\n    useFactory: apolloOptionsFactory,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/http.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpRequestInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  req = req.clone({\n    withCredentials: true,\n    headers: req.headers\n      .set('Access-Control-Allow-Origin', env.origin)\n      .set('Access-Control-Allow-Methods', 'GET,POST,PUT,DELETE,OPTIONS')\n      .set(\n        'Access-Control-Allow-Headers',\n        'Accept, Cache-Control, Pragma, Origin, Authorization, Content-Type, X-Requested-With, sentry-trace, baggage'\n      )\n      .set('Access-Control-Allow-Credentials', 'true'),\n  })\n\n  return next(req).pipe(\n    catchError((err: Error) => {\n      if (env.environment !== 'production') {\n        console.log(err)\n      }\n      return throwError(() => err)\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/account.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAccount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/authenticated-user.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAuthenticatedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out-grid.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/components/nav/nav.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        protectedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/profile/profile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sexIcons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/queries/uploads.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UploadsQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
