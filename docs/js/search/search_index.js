var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,0.94,1,0.662]],["body/interfaces/Account.html",[0,1.036,1,1.08,2,1.337,3,0.16,4,0.202,5,0.181,6,3.27,7,0.289,8,0.541,9,3.017,10,3.339,11,3.524,12,2.875,13,4.533,14,2.293,15,3.017,16,3.524,17,3.339,18,2.504,19,3.171,20,3.729,21,1.193,22,0.017,23,2.559,24,0.524,25,3.578,26,3.585,27,2.164,28,2.366,29,2.864,30,0.312,31,4.224,32,0.267,33,1.397,34,2.987,35,0.012,36,0.012]],["title/injectables/AccountGQL.html",[37,1.024,38,2.508]],["body/injectables/AccountGQL.html",[1,0.862,3,0.19,4,0.239,5,0.214,7,0.342,8,0.603,9,2.71,10,2.999,11,3.165,12,2.582,14,2.059,15,2.71,16,3.165,18,2.728,19,2.848,20,3.35,21,1.015,22,0.017,24,0.464,30,0.501,32,0.339,35,0.013,36,0.013,37,1.662,38,4.072,39,2.175,40,3.87,41,3.35,42,4.173,43,4.133,44,0.823,45,0.785,46,3.875,47,6.228,48,6.228,49,3.165,50,0.823,51,4.999,52,3.795,53,2.689,54,2.855,55,0.577,56,3.557,57,1.805,58,4.319,59,4.319,60,4.319,61,3.046,62,2.855,63,0.484]],["title/components/AccountInputComponent.html",[64,0.164,65,0.827]],["body/components/AccountInputComponent.html",[1,1.074,3,0.095,4,0.12,5,0.108,7,0.172,8,0.373,18,1.392,21,0.848,22,0.017,23,1.664,24,0.475,27,0.869,30,0.497,32,0.12,35,0.008,36,0.008,44,1.142,45,1.089,50,1.214,55,0.29,57,0.908,63,0.243,64,0.201,65,1.289,66,0.868,67,0.591,68,0.591,69,0.591,70,6.403,71,6.403,72,1.778,73,1.392,74,1.944,75,3.63,76,0.519,77,1.856,78,2.727,79,3.63,80,2.727,81,0.993,82,2.985,83,3.316,84,1.723,85,1.718,86,2.88,87,0.795,88,0.906,89,1.855,90,2.678,91,3.316,92,2.258,93,3.316,94,3.63,95,0.906,96,2.985,97,0.906,98,2.985,99,4.688,100,4.05,101,4.688,102,4.688,103,2.197,104,4.688,105,4.688,106,2.04,107,2.671,108,4.389,109,4.389,110,0.868,111,3.855,112,2.179,113,2.985,114,2.985,115,2.985,116,4.07,117,1.959,118,3.63,119,3.04,120,4.389,121,2.514,122,2.172,123,1.734,124,2.514,125,3.855,126,2.514,127,1.528,128,0.783,129,1.235,130,1.947,131,1.346,132,2.514,133,2.985,134,2.514,135,2.985,136,2.514,137,2.985,138,1.944,139,2.514,140,2.514,141,2.522,142,3.855,143,2.514,144,2.73,145,2.938,146,2.514,147,2.514,148,3.63,149,3.855,150,3.855,151,2.514,152,3.855,153,2.172,154,3.63,155,2.172,156,1.677,157,2.172,158,1.959,159,2.172,160,1.856,161,2.514,162,2.514,163,0.731,164,1.094,165,1.094,166,1.169,167,0.831,168,1.352,169,1.778,170,1.211,171,1.211,172,0.95,173,1.947,174,3.33,175,0.995,176,0.95,177,0.566,178,0.566,179,1.278,180,1.532,181,0.591,182,2.514,183,2.514,184,2.514,185,4.688,186,2.172,187,1.947,188,2.172,189,2.514,190,1.278,191,1.947,192,1.947,193,1.855,194,2.514,195,2.514,196,2.073,197,0.95,198,1.436,199,2.514,200,1.392,201,1.278,202,1.278,203,1.15,204,2.514,205,2.514,206,2.514,207,1.947,208,1.947,209,1.947,210,0.591,211,0.906,212,0.868,213,0.497,214,1.235,215,0.591,216,1.101,217,0.542,218,0.591,219,0.542,220,0.831,221,0.591,222,0.542,223,0.591,224,0.542,225,0.591,226,0.542,227,0.591,228,0.591,229,0.542,230,0.591,231,0.542,232,0.591,233,0.542,234,0.591,235,0.542,236,0.591,237,0.542,238,0.591,239,0.542,240,0.591,241,0.542,242,0.591,243,0.542,244,0.591,245,0.542,246,0.591,247,0.542,248,0.591,249,0.542,250,0.591,251,0.542,252,0.454,253,0.542,254,0.591,255,0.542,256,0.906,257,0.591,258,0.542,259,0.591,260,0.542,261,0.591,262,0.542,263,0.846,264,0.591,265,0.542,266,0.591,267,0.542,268,0.566,269,0.591,270,0.542,271,0.542,272,0.566,273,0.519,274,0.566,275,0.591]],["title/interfaces/AccountModel.html",[0,0.94,56,2.191]],["body/interfaces/AccountModel.html",[0,1.401,2,1.383,3,0.166,4,0.209,5,0.187,7,0.299,8,0.553,9,2.939,10,3.253,11,3.433,12,2.906,14,2.318,15,3.05,16,3.433,17,3.253,18,2.532,19,3.089,20,3.633,21,1.193,22,0.017,23,2.517,24,0.529,25,4.292,26,3.633,27,2.2,28,2.406,29,2.912,30,0.422,32,0.273,35,0.012,36,0.012,56,3.264,57,1.578,180,2.662,276,3.383,277,3.858,278,4.416,279,2.672,280,2.104]],["title/injectables/AccountService.html",[37,1.024,281,2.508]],["body/injectables/AccountService.html",[3,0.183,4,0.23,5,0.206,7,0.33,8,0.589,22,0.017,24,0.457,30,0.545,32,0.23,33,1.593,35,0.013,36,0.013,37,1.624,39,2.096,44,0.793,45,0.756,50,1.098,55,0.556,57,1.74,61,2.935,62,2.752,63,0.466,103,2.112,110,1.369,127,1.768,128,0.742,129,1.429,131,1.369,163,1.4,279,1.906,280,2.32,281,3.979,282,4.162,283,3.15,284,4.718,285,5.257,286,5.257,287,6.085,288,6.053,289,4.817,290,4.711,291,6.085,292,6.053,293,4.817,294,4.718,295,4.304,296,4.817,297,2.935,298,3.15,299,3.407,300,3.092,301,5.257,302,1.74,303,4.162,304,4.162,305,4.162,306,4.162,307,4.162,308,6.085,309,4.817,310,2.198,311,4.162,312,4.817,313,4.817,314,4.817,315,4.817]],["title/interfaces/AccountShortModel.html",[0,0.94,180,2.337]],["body/interfaces/AccountShortModel.html",[0,1.531,2,1.591,3,0.191,4,0.24,5,0.215,7,0.344,8,0.605,9,2.186,10,2.419,11,2.553,12,3.033,14,2.419,15,3.183,16,2.553,17,2.419,18,2.642,19,2.297,20,2.702,21,1.195,22,0.017,23,2.491,24,0.487,25,3.883,26,3.36,27,1.735,28,1.898,29,2.297,30,0.462,32,0.298,35,0.013,36,0.013,56,2.87,57,1.814,180,3.806,276,3.89,277,2.87,278,3.285,279,2.471,280,2.419]],["title/injectables/AccountsInfoByUsernameGQL.html",[37,1.024,83,2.713]],["body/injectables/AccountsInfoByUsernameGQL.html",[3,0.257,4,0.238,5,0.214,7,0.342,8,0.602,12,2.579,14,2.057,15,2.707,18,2.727,21,1.014,22,0.017,24,0.464,28,2.35,30,0.501,32,0.339,35,0.013,36,0.013,37,1.661,39,2.172,41,3.346,42,4.171,43,4.13,44,0.822,45,0.784,46,3.872,50,0.822,52,3.791,53,2.684,54,2.851,55,0.576,57,1.802,63,0.483,83,4.4,100,5.856,154,3.864,180,3.791,316,4.817,317,3.864,318,6.221,319,4.817,320,4.817,321,2.996,322,6.221,323,3.554,324,4.991,325,4.311,326,4.311]],["title/interfaces/ApiError.html",[0,0.94,327,2.713]],["body/interfaces/ApiError.html",[0,1.628,2,1.759,3,0.211,4,0.265,5,0.238,7,0.38,8,0.643,21,1.194,22,0.016,24,0.504,32,0.317,35,0.014,36,0.014,129,1.56,203,3.367,283,4.92,327,4.697,328,4.3,329,5.826,330,4.813,331,3.928,332,4.798,333,2.675]],["title/components/AppComponent.html",[64,0.164,217,0.827]],["body/components/AppComponent.html",[1,0.486,3,0.107,4,0.134,5,0.121,7,0.193,8,0.407,12,1.741,18,1.017,22,0.017,24,0.287,27,0.973,30,0.554,32,0.134,33,0.931,35,0.009,36,0.009,44,1.028,45,0.981,50,1.139,55,0.325,62,2.399,63,0.273,64,0.215,65,0.607,66,0.945,67,0.662,68,0.662,69,0.662,73,1.517,74,2.082,76,0.581,77,2.023,81,0.793,84,1.742,85,1.738,87,0.867,88,0.987,89,1.987,95,0.987,97,0.987,103,2.252,106,2.185,110,0.945,112,2.309,123,1.659,127,0.818,128,0.829,129,0.662,131,1.13,156,1.827,163,0.818,165,1.225,166,1.523,167,0.931,172,1.064,175,1.114,176,1.064,177,0.634,178,0.634,181,0.662,197,1.064,200,1.017,210,0.662,211,0.987,212,0.945,213,0.556,214,1.308,215,0.662,216,1.18,217,1.2,218,0.662,219,0.607,220,1.284,221,0.662,222,0.607,223,0.662,224,0.607,225,0.662,226,0.607,227,0.662,228,0.662,229,0.607,230,0.662,231,0.607,232,0.662,233,0.607,234,0.662,235,0.607,236,0.662,237,1.2,238,0.662,239,0.607,240,0.662,241,0.607,242,0.662,243,1.2,244,0.662,245,1.2,246,0.662,247,0.607,248,0.662,249,1.2,250,0.662,251,0.607,252,0.508,253,0.607,254,0.662,255,0.607,256,0.987,257,0.662,258,0.607,259,0.662,260,0.607,261,0.662,262,0.607,263,0.907,264,0.662,265,0.607,266,0.662,267,0.607,268,0.634,269,0.662,270,0.607,271,0.607,272,0.945,273,1.289,274,0.634,275,0.662,297,1.716,300,2.135,310,1.017,333,2.419,334,2.433,335,3.284,336,5.023,337,5.023,338,3.553,339,5.023,340,4.339,341,5.023,342,2.869,343,4.2,344,4.2,345,3.06,346,2.681,347,3.889,348,3.284,349,3.628,350,3.641,351,2.553,352,4.2,353,4.2,354,2.816,355,3.628,356,2.135,357,4.2,358,2.816,359,4.2,360,2.816,361,2.816,362,2.135,363,2.816,364,2.971,365,2.816,366,2.135,367,2.816,368,3.628,369,2.816,370,3.06,371,3.628,372,2.816,373,1.992,374,2.18,375,3.252,376,1.064,377,2.433,378,2.18,379,1.114,380,1.431,381,1.716,382,1.225,383,3.252,384,3.252,385,3.252,386,2.18,387,1.841,388,2.816,389,2.816,390,2.816,391,2.433,392,4.2,393,4.339,394,2.816,395,4.2,396,2.18,397,2.816,398,2.816,399,1.992,400,2.399,401,2.816,402,2.816,403,2.18,404,2.816,405,2.433,406,2.816,407,2.816,408,2.816,409,1.841,410,2.816,411,5.023,412,1.431,413,1.992,414,2.816,415,2.816,416,2.816,417,2.816,418,1.841,419,4.2,420,3.252,421,6.246,422,3.628]],["title/components/AuthCallbackComponent.html",[64,0.164,219,0.827]],["body/components/AuthCallbackComponent.html",[1,0.562,3,0.124,4,0.156,5,0.139,7,0.223,8,0.452,22,0.017,24,0.374,30,0.529,32,0.156,33,1.077,35,0.01,36,0.01,44,1.083,45,1.033,50,1.141,55,0.376,63,0.315,64,0.234,65,0.702,66,1.052,67,0.765,68,0.765,69,0.765,73,1.688,74,2.265,76,0.672,81,0.883,84,1.765,85,1.762,87,0.964,88,1.098,89,2.161,95,1.098,97,1.098,103,2.372,110,1.052,112,2.474,123,1.662,128,0.845,131,1.052,141,2.939,163,0.947,166,0.988,167,1.077,175,1.289,176,1.231,177,0.733,178,0.733,181,0.765,193,1.289,197,1.231,200,1.177,210,0.765,211,1.098,212,1.052,213,0.643,214,1.402,215,0.765,216,1.283,217,0.702,218,0.765,219,1.286,220,1.562,221,0.765,222,0.702,223,0.765,224,1.286,225,0.765,226,0.702,227,0.765,228,0.765,229,0.702,230,0.765,231,0.702,232,0.765,233,0.702,234,0.765,235,0.702,236,0.765,237,0.702,238,0.765,239,0.702,240,0.765,241,0.702,242,0.765,243,0.702,244,0.765,245,0.702,246,0.765,247,0.702,248,0.765,249,0.702,250,0.765,251,0.702,252,0.588,253,0.702,254,0.765,255,0.702,256,1.098,257,0.765,258,0.702,259,0.765,260,0.702,261,0.765,262,0.702,263,0.986,264,0.765,265,0.702,266,0.765,267,0.702,268,0.733,269,0.765,270,0.702,271,0.702,272,0.733,273,0.672,274,0.733,275,0.765,298,2.13,302,1.688,335,3.572,342,3.609,346,2.874,348,3.572,350,3.902,356,2.375,362,2.375,366,2.375,370,3.329,376,1.231,379,1.289,382,1.418,387,2.13,399,3.305,400,2.669,412,1.656,418,2.13,420,3.618,423,6.095,424,2.815,425,4.673,426,4.673,427,4.673,428,3.727,429,2.777,430,4.673,431,3.258,432,4.673,433,3.258,434,3.258,435,3.572,436,4.673,437,3.258,438,3.305,439,3.258,440,3.305,441,3.258,442,3.258,443,3.258,444,2.305,445,3.258,446,3.258,447,3.305,448,2.305,449,3.258,450,3.618,451,2.815,452,2.523,453,2.523,454,2.815,455,1.753,456,2.523,457,2.523,458,2.305]],["title/components/AuthComponent.html",[64,0.164,222,0.827]],["body/components/AuthComponent.html",[1,0.64,3,0.141,4,0.177,5,0.159,7,0.254,8,0.496,21,0.766,22,0.017,23,2.1,24,0.35,27,2.184,28,1.934,30,0.519,32,0.177,35,0.011,36,0.011,44,0.965,45,0.92,50,1.041,55,0.428,63,0.359,64,0.251,65,0.8,66,1.152,67,0.872,68,0.872,69,0.872,73,1.849,74,2.431,76,0.766,81,0.967,84,1.783,85,1.78,87,1.056,88,1.203,95,1.203,97,1.203,110,1.152,112,2.621,123,1.426,128,0.836,131,0.835,163,1.078,166,1.125,172,1.402,177,0.835,178,0.835,181,0.872,210,0.872,211,1.203,212,1.152,213,0.733,214,1.485,215,0.872,216,1.377,217,0.8,218,0.872,219,0.8,220,1.429,221,0.872,222,1.362,223,0.872,224,0.8,225,0.872,226,0.8,227,0.872,228,0.872,229,0.8,230,0.872,231,0.8,232,0.872,233,0.8,234,0.872,235,0.8,236,0.872,237,0.8,238,0.872,239,0.8,240,0.872,241,0.8,242,0.872,243,0.8,244,0.872,245,0.8,246,0.872,247,0.8,248,0.872,249,0.8,250,0.872,251,0.8,252,0.67,253,0.8,254,0.872,255,1.362,256,1.485,257,0.872,258,1.362,259,0.872,260,0.8,261,0.872,262,0.8,263,1.058,264,0.872,265,0.8,266,0.872,267,0.8,268,0.835,269,0.872,270,0.8,271,0.8,272,0.835,273,0.766,274,0.835,275,0.872,333,2.466,356,1.886,376,1.402,385,3.964,400,2.119,429,2.979,440,3.621,444,2.624,459,3.205,460,5.862,461,5.12,462,5.12,463,7.027,464,4.539,465,5.12,466,3.71,467,3.71,468,3.71,469,3.71,470,3.964,471,2.873,472,3.71,473,2.873,474,3.71,475,2.873,476,3.71]],["title/interfaces/AuthModel.html",[0,0.94,477,2.713]],["body/interfaces/AuthModel.html",[0,1.418,2,1.832,3,0.22,4,0.276,5,0.248,7,0.396,8,0.659,21,1.153,22,0.016,24,0.466,30,0.427,32,0.276,35,0.014,36,0.014,41,3.66,56,4.129,477,4.813,478,4.998,479,7.461,480,7.461,481,5.786]],["title/components/AuthPassComponent.html",[64,0.164,224,0.827]],["body/components/AuthPassComponent.html",[1,0.487,3,0.107,4,0.135,5,0.121,7,0.193,8,0.407,21,0.423,22,0.017,24,0.428,30,0.503,32,0.135,33,0.934,35,0.009,36,0.009,44,1.096,45,1.017,50,1.157,55,0.326,63,0.273,64,0.215,65,0.609,66,0.947,67,0.663,68,0.663,69,0.663,73,1.52,74,2.086,76,0.583,81,0.795,84,1.743,85,1.739,87,0.868,88,0.989,89,1.99,92,2.423,95,0.989,97,0.989,103,2.317,106,2.189,110,0.947,112,2.312,119,3.031,123,1.661,127,0.821,128,0.829,129,0.663,131,1.132,141,2.706,156,1.831,163,0.821,164,1.229,165,1.229,166,0.857,167,0.934,175,1.117,176,1.067,177,0.636,178,0.636,181,0.663,193,1.117,200,1.02,210,0.663,211,0.989,212,0.947,213,0.558,214,1.31,215,0.663,216,1.182,217,0.609,218,0.663,219,0.609,220,1.435,221,0.663,222,0.609,223,0.663,224,1.202,225,0.663,226,0.609,227,0.663,228,0.663,229,0.609,230,0.663,231,0.609,232,0.663,233,0.609,234,0.663,235,0.609,236,0.663,237,0.609,238,0.663,239,0.609,240,0.663,241,0.609,242,0.663,243,0.609,244,0.663,245,0.609,246,0.663,247,0.609,248,0.663,249,0.609,250,0.663,251,0.609,252,0.51,253,0.609,254,0.663,255,0.609,256,0.989,257,0.663,258,0.609,259,0.663,260,0.609,261,0.663,262,0.609,263,0.908,264,0.663,265,0.609,266,0.663,267,0.609,268,0.636,269,0.663,270,0.609,271,0.609,272,0.636,273,0.583,274,0.636,275,0.663,298,1.846,302,2.538,310,1.02,335,3.289,342,2.874,348,3.289,350,3.646,351,1.435,356,2.139,370,3.066,376,1.067,387,1.846,400,2.404,418,1.846,428,3.363,429,2.557,435,4.235,438,2.977,440,2.977,444,1.997,447,2.977,448,1.997,450,2.187,451,2.44,458,1.997,482,6.148,483,2.44,484,4.617,485,4.209,486,4.209,487,3.895,488,3.289,489,4.317,490,2.187,491,4.317,492,2.824,493,3.259,494,4.209,495,2.824,496,4.209,497,2.824,498,2.824,499,2.824,500,3.571,501,5.151,502,2.824,503,2.977,504,2.824,505,2.824,506,2.824,507,2.824,508,2.824,509,2.977,510,1.997,511,2.824,512,1.846,513,2.824,514,2.187,515,2.187,516,2.977,517,2.44,518,2.187,519,2.824,520,2.187,521,3.259,522,2.824,523,4.209,524,4.209,525,3.636,526,2.824,527,2.824,528,2.824,529,2.824,530,1.997,531,3.558,532,2.44,533,4.317,534,5.031,535,2.824,536,2.824,537,2.44,538,2.824,539,2.187,540,2.187,541,2.187]],["title/injectables/AuthService.html",[37,1.024,379,1.517]],["body/injectables/AuthService.html",[2,1.009,3,0.121,4,0.152,5,0.136,7,0.218,8,0.445,9,2.57,10,1.535,11,1.62,12,1.321,13,2.084,14,1.054,15,1.387,16,1.62,17,1.535,18,1.151,19,1.457,20,1.714,22,0.017,23,2.13,24,0.499,26,1.714,30,0.518,32,0.152,35,0.01,36,0.01,37,1.228,39,1.387,44,1.134,45,1.081,50,1.243,55,0.368,57,1.151,61,1.942,62,1.82,63,0.309,103,1.709,110,1.035,123,1.281,127,1.717,128,0.72,129,1.388,130,2.467,131,1.579,141,4.098,144,2.598,145,3.15,148,5.209,163,0.926,169,2.254,170,1.535,171,1.535,175,1.261,280,1.535,284,3.816,290,5.053,294,3.816,295,3.253,297,1.942,298,2.084,299,2.254,300,2.337,302,1.661,310,2.573,311,2.753,375,3.561,379,1.819,409,3.528,412,1.62,413,2.254,428,3.51,435,3.528,448,4.178,454,3.973,455,2.474,477,4.178,488,2.084,503,3.253,542,2.753,543,5.638,544,5.396,545,5.908,546,5.908,547,5.908,548,3.973,549,3.973,550,5.908,551,3.973,552,3.187,553,3.187,554,3.187,555,3.187,556,4.599,557,3.187,558,4.599,559,5.104,560,3.187,561,4.599,562,3.187,563,3.187,564,4.599,565,5.104,566,3.187,567,4.599,568,3.187,569,4.599,570,3.187,571,4.599,572,4.599,573,3.187,574,4.599,575,3.187,576,4.599,577,3.187,578,3.187,579,4.599,580,3.187,581,3.187,582,2.753,583,2.467,584,3.973,585,3.973,586,1.942,587,2.254,588,3.187,589,3.187,590,3.187,591,3.187,592,3.187,593,3.187,594,3.187,595,3.187,596,3.187,597,3.187,598,3.187,599,3.187,600,3.187,601,3.187,602,4.599,603,4.599,604,3.187,605,3.187,606,3.187,607,3.187,608,3.187,609,3.187,610,3.187,611,2.467,612,2.753,613,3.187,614,3.187,615,3.187,616,3.187,617,3.187,618,3.187,619,3.187,620,3.187]],["title/interfaces/AuthenticatedUser.html",[0,0.94,586,2.337]],["body/interfaces/AuthenticatedUser.html",[0,1.34,1,1.217,2,1.73,3,0.207,4,0.261,5,0.234,7,0.374,8,0.637,9,2.378,10,2.631,11,2.777,12,2.266,13,3.573,14,1.807,15,2.378,16,2.777,17,2.631,18,1.973,19,2.499,20,2.939,21,1.056,22,0.017,23,2.528,24,0.374,30,0.404,32,0.314,33,1.807,35,0.014,36,0.014,41,3.537,488,4.898,586,4.299,587,3.865,621,4.231,622,4.231,623,5.464]],["title/components/ChangeAvatarComponent.html",[64,0.164,226,0.827]],["body/components/ChangeAvatarComponent.html",[1,0.931,3,0.101,4,0.126,5,0.172,7,0.181,8,0.388,9,1.745,14,1.6,21,0.868,22,0.017,23,1.709,24,0.418,30,0.512,32,0.126,35,0.008,36,0.008,44,0.955,45,0.911,50,1.181,55,0.306,57,0.956,63,0.256,64,0.207,65,0.571,66,0.902,67,0.622,68,0.622,69,0.622,76,0.546,81,0.757,84,1.732,85,1.728,87,0.827,88,0.942,89,1.914,90,2.764,92,2.33,95,0.942,97,0.942,103,2.385,106,2.106,107,2.743,110,0.902,123,1.7,127,1.406,128,0.773,129,1.137,131,1.373,138,1.662,144,2.33,145,1.211,156,1.745,158,2.038,163,1.165,164,1.152,165,1.152,166,1.216,167,0.875,168,1.424,170,1.275,171,1.275,172,1,175,1.047,176,1,177,0.596,178,0.596,181,0.622,190,2.46,191,3.747,193,1.914,196,1.424,197,1.828,198,3.083,200,1.949,201,1.346,203,1.211,210,0.622,211,0.942,212,0.902,213,0.523,214,1.268,215,0.622,216,1.137,217,0.571,218,0.622,219,0.571,220,0.864,221,0.622,222,0.571,223,0.622,224,0.571,225,0.622,226,1.163,227,1.489,228,0.622,229,0.571,230,0.622,231,0.571,232,0.622,233,0.571,234,0.622,235,0.571,236,0.622,237,0.571,238,0.622,239,0.571,240,0.622,241,0.571,242,0.622,243,0.571,244,0.622,245,0.571,246,0.622,247,0.571,248,0.622,249,0.571,250,0.622,251,0.571,252,0.478,253,0.571,254,0.622,255,0.571,256,0.942,257,0.622,258,0.571,259,0.622,260,0.571,261,0.622,262,0.571,263,0.874,264,0.622,265,0.571,266,0.622,267,0.571,268,0.596,269,0.622,270,0.571,271,0.571,272,0.596,273,0.546,274,0.596,275,0.622,279,2.414,281,1.731,285,5.272,286,5.01,302,1.448,310,1.949,342,2.764,351,2.038,382,1.152,412,1.346,428,2.603,500,1.512,582,2.287,584,2.287,611,2.05,624,6.251,625,5.602,626,2.287,627,4.181,628,2.603,629,3.423,630,4.01,631,4.01,632,5.01,633,3.818,634,3.423,635,4.839,636,5.01,637,4.01,638,4.663,639,4.01,640,2.287,641,4.179,642,4.01,643,3.464,644,2.648,645,4.01,646,2.648,647,2.648,648,2.648,649,4.01,650,2.648,651,2.648,652,4.01,653,2.648,654,2.648,655,3.464,656,2.648,657,2.648,658,2.836,659,2.648,660,2.648,661,2.05,662,2.287,663,1.613,664,1.731,665,2.648,666,2.287,667,5.398,668,2.648,669,4.01,670,2.648,671,2.287,672,3.464,673,4.839,674,4.01,675,4.01,676,4.839,677,4.01,678,2.648,679,2.648,680,2.648,681,4.01,682,5.01,683,2.648,684,2.648,685,2.648,686,2.648,687,2.287,688,2.648,689,2.648,690,2.648,691,2.648]],["title/components/ChatsComponent.html",[64,0.164,229,0.827]],["body/components/ChatsComponent.html",[1,0.772,3,0.17,4,0.214,5,0.192,22,0.016,30,0.429,32,0.214,35,0.012,36,0.012,55,0.517,63,0.434,64,0.276,65,0.965,66,1.307,67,1.052,68,1.052,69,1.052,76,0.924,81,1.097,84,1.806,85,1.804,87,1.198,88,1.052,95,1.364,97,1.364,128,0.831,177,1.008,178,1.008,181,1.052,210,1.052,211,1.364,212,1.307,213,0.884,214,1.602,215,1.052,216,1.514,217,0.965,218,1.052,219,0.965,220,1.252,221,1.052,222,0.965,223,1.052,224,0.965,225,1.052,226,0.965,227,1.052,228,1.052,229,1.47,230,1.052,231,0.965,232,1.052,233,0.965,234,1.052,235,0.965,236,1.052,237,0.965,238,1.052,239,0.965,240,1.052,241,0.965,242,1.052,243,0.965,244,1.052,245,0.965,246,1.052,247,0.965,248,1.052,249,0.965,250,1.052,251,0.965,252,0.808,253,0.965,254,1.052,255,0.965,256,1.364,257,1.052,258,0.965,259,1.052,260,0.965,261,1.052,262,0.965,263,1.163,264,1.052,265,0.965,266,1.052,267,0.965,268,1.008,269,1.052,270,0.965,271,0.965,272,1.008,273,0.924,274,1.008,275,1.052,692,3.869,693,5.47,694,5.807,695,5.807,696,3.797]],["title/injectables/ConfigService.html",[37,1.024,380,1.95]],["body/injectables/ConfigService.html",[3,0.168,4,0.211,5,0.189,7,0.303,8,0.558,22,0.017,24,0.439,30,0.52,32,0.211,33,1.463,35,0.012,36,0.012,37,1.538,39,1.926,44,1.159,45,1.105,50,1.24,55,0.511,61,2.697,62,2.528,63,0.429,103,2.285,110,1.297,123,1.605,130,3.427,131,1.442,144,3.539,145,2.024,163,1.286,175,1.751,190,2.249,193,1.751,284,4.533,294,3.13,295,4.076,297,2.697,300,2.929,345,3.512,346,3.269,351,3.257,366,2.929,376,1.672,380,2.929,420,4.962,583,3.427,658,5.104,697,3.824,698,6.408,699,6.408,700,6.408,701,5.864,702,6.788,703,6.788,704,5.763,705,4.426,706,4.426,707,5.763,708,4.426,709,4.426,710,4.426,711,4.426,712,4.426,713,5.763,714,3.824,715,4.426,716,4.426,717,3.824,718,4.426,719,4.426,720,4.426,721,4.426,722,4.426,723,4.426,724,4.426,725,4.426,726,4.426,727,4.426,728,4.426,729,4.426,730,4.426]],["title/components/DashboardComponent.html",[64,0.164,231,0.827]],["body/components/DashboardComponent.html",[1,0.222,3,0.049,4,0.061,5,0.055,14,1.16,22,0.012,30,0.165,32,0.061,35,0.005,36,0.005,55,0.149,63,0.125,64,0.126,65,0.278,66,0.501,67,0.302,68,0.302,69,0.302,76,0.266,81,0.421,84,1.566,85,1.557,87,0.46,88,0.302,95,0.523,97,0.523,128,0.428,177,0.29,178,0.29,181,0.302,200,1.568,210,0.302,211,0.523,212,0.501,213,0.254,214,0.824,215,0.302,216,0.692,217,0.278,218,0.302,219,0.278,220,0.48,221,0.302,222,0.278,223,0.302,224,0.278,225,0.302,226,0.278,227,0.302,228,0.302,229,0.278,230,0.302,231,0.756,232,0.302,233,0.278,234,0.302,235,0.278,236,0.302,237,0.278,238,0.302,239,0.278,240,0.302,241,0.278,242,0.302,243,0.278,244,0.302,245,0.278,246,0.302,247,0.278,248,0.302,249,0.278,250,0.302,251,0.278,252,0.232,253,0.278,254,0.302,255,0.278,256,0.523,257,0.302,258,0.278,259,0.302,260,0.278,261,0.302,262,0.278,263,0.532,264,0.302,265,0.278,266,0.302,267,0.278,268,0.29,269,0.302,270,0.278,271,0.278,272,0.29,273,0.266,274,0.29,275,0.302,696,0.842,731,1.112,732,3.965,733,2.228,734,2.228,735,1.288,736,5.955,737,6.499,738,6.068,739,5.156,740,6.17,741,2.228,742,2.228,743,4.341,744,5.534,745,5.83,746,5.955,747,5.358,748,6.427,749,3.509,750,5.83,751,5.534,752,6.348,753,5.534,754,4.925,755,5.156,756,4.341,757,3.509,758,5.358,759,5.156,760,5.955,761,5.534,762,5.534,763,4.657,764,4.657,765,5.156,766,6.17,767,6.263,768,4.341,769,2.228,770,5.691,771,5.83,772,4.925,773,3.965,774,5.534,775,4.341,776,4.925,777,5.358,778,5.83,779,5.358,780,5.358,781,5.156,782,5.83,783,4.925,784,4.925,785,5.83,786,6.263,787,5.358,788,5.955,789,3.965,790,5.83,791,5.156,792,5.358,793,3.509,794,2.228,795,5.955,796,5.156,797,6.738,798,5.358,799,5.691,800,4.341,801,5.156,802,5.955,803,5.358,804,4.925,805,5.156,806,4.341,807,4.925,808,5.955,809,4.657,810,5.534,811,5.955,812,5.955,813,3.509,814,5.534,815,3.965,816,5.358,817,2.228,818,5.156,819,5.358,820,4.657,821,5.156,822,5.83,823,4.341,824,5.358,825,4.925,826,4.657,827,5.955,828,4.925,829,5.358,830,4.341,831,5.691,832,5.955,833,5.358,834,5.156,835,6.427,836,4.657,837,3.509,838,5.691,839,5.534,840,5.156,841,5.83,842,5.534,843,3.965,844,6.17,845,5.691,846,5.83,847,4.925,848,5.534,849,5.156,850,4.341,851,4.925,852,4.657,853,5.156,854,4.925,855,6.068,856,5.534,857,3.509,858,5.358,859,2.945,860,4.925,861,4.341,862,4.657,863,5.534,864,4.341,865,4.925,866,5.534,867,3.509,868,4.657,869,4.657,870,5.691,871,4.657,872,5.691,873,4.925,874,4.925,875,4.657,876,4.341,877,4.657,878,5.358,879,5.156,880,4.657,881,5.534,882,4.925,883,2.228,884,2.228,885,5.358,886,4.657,887,4.341,888,5.534,889,2.228,890,4.341,891,3.509,892,4.657,893,2.228,894,5.691,895,4.657,896,2.945,897,4.657,898,3.509,899,2.228,900,3.965,901,4.925,902,4.657,903,5.534,904,2.945,905,3.509,906,4.341,907,2.945,908,4.341,909,2.945,910,4.657,911,4.657,912,2.228,913,4.341,914,2.228,915,1.288,916,1.288,917,1.288,918,1.288,919,1.288,920,1.288,921,1.288,922,1.288,923,1.288,924,1.288,925,1.288,926,1.288,927,1.288,928,1.288,929,1.288,930,1.288,931,1.288,932,1.288,933,1.288,934,1.288,935,1.288,936,1.288,937,1.288,938,1.288,939,1.288,940,1.288,941,1.288,942,1.288,943,1.288,944,1.288,945,1.288,946,1.288,947,1.288,948,1.288,949,1.288,950,1.288,951,1.288,952,1.288,953,1.288,954,1.288,955,1.288,956,1.288,957,1.288,958,1.288,959,1.288,960,1.288,961,1.288,962,1.288,963,1.288,964,1.288,965,1.288,966,1.288,967,1.288,968,1.288,969,1.288,970,1.288,971,1.288,972,1.288,973,1.288,974,1.288,975,1.288,976,1.288,977,1.288,978,1.288,979,1.288,980,1.288,981,1.288,982,1.288,983,1.288,984,1.288,985,1.288,986,1.288,987,1.288,988,1.288,989,1.288,990,1.288,991,1.288,992,1.288,993,1.288,994,1.288,995,1.288,996,1.288,997,1.288,998,1.288,999,1.288,1000,1.288,1001,1.288,1002,1.288]],["title/injectables/DeleteUploadByIdGQL.html",[37,1.024,1003,2.713]],["body/injectables/DeleteUploadByIdGQL.html",[3,0.204,4,0.257,5,0.23,7,0.368,8,0.631,14,2.466,21,1.048,22,0.017,24,0.446,30,0.481,32,0.348,33,1.778,35,0.014,36,0.014,37,1.739,39,2.34,41,3.503,43,4.269,44,0.885,45,0.844,46,3.721,50,0.885,53,2.893,54,3.072,55,0.621,63,0.521,263,1.176,1003,4.607,1004,4.607,1005,3.516,1006,6.291,1007,5.425,1008,5.378,1009,4.646,1010,4.646,1011,4.646,1012,4.646]],["title/interfaces/Env.html",[0,0.94,300,1.95]],["body/interfaces/Env.html",[0,1.307,2,1.688,3,0.202,4,0.255,5,0.228,7,0.365,8,0.627,21,1.181,22,0.017,24,0.518,32,0.255,35,0.014,36,0.014,300,3.293,333,3.361,403,5.622,1013,4.605,1014,6.273,1015,6.273,1016,6.273,1017,6.273,1018,6.273,1019,6.03,1020,6.98,1021,6.03,1022,6.03]],["title/components/EventsComponent.html",[64,0.164,233,0.827]],["body/components/EventsComponent.html",[1,0.772,3,0.17,4,0.214,5,0.192,22,0.016,30,0.429,32,0.214,35,0.012,36,0.012,55,0.517,63,0.434,64,0.276,65,0.965,66,1.307,67,1.052,68,1.052,69,1.052,76,0.924,81,1.097,84,1.806,85,1.804,87,1.198,88,1.052,95,1.364,97,1.364,128,0.831,177,1.008,178,1.008,181,1.052,210,1.052,211,1.364,212,1.307,213,0.884,214,1.602,215,1.052,216,1.514,217,0.965,218,1.052,219,0.965,220,1.252,221,1.052,222,0.965,223,1.052,224,0.965,225,1.052,226,0.965,227,1.052,228,1.052,229,0.965,230,1.052,231,0.965,232,1.052,233,1.47,234,1.052,235,0.965,236,1.052,237,0.965,238,1.052,239,0.965,240,1.052,241,0.965,242,1.052,243,0.965,244,1.052,245,0.965,246,1.052,247,0.965,248,1.052,249,0.965,250,1.052,251,0.965,252,0.808,253,0.965,254,1.052,255,0.965,256,1.364,257,1.052,258,0.965,259,1.052,260,0.965,261,1.052,262,0.965,263,1.163,264,1.052,265,0.965,266,1.052,267,0.965,268,1.008,269,1.052,270,0.965,271,0.965,272,1.008,273,0.924,274,1.008,275,1.052,696,3.797,1023,3.869,1024,5.47,1025,5.807,1026,5.807]],["title/components/ExtensionInputComponent.html",[64,0.164,235,0.827]],["body/components/ExtensionInputComponent.html",[1,0.473,3,0.104,4,0.131,5,0.117,7,0.188,8,0.399,21,0.822,22,0.017,24,0.462,28,1.036,30,0.499,32,0.131,35,0.009,36,0.009,44,1.111,45,1.06,50,1.208,55,0.317,63,0.266,64,0.212,65,0.591,66,0.927,67,0.644,68,0.644,69,0.644,72,1.94,73,1.487,74,2.05,75,3.828,76,0.566,77,1.983,78,2.913,79,3.828,80,2.913,81,1.038,82,3.188,84,1.738,85,1.734,86,3.178,87,0.85,88,0.967,89,1.956,90,2.824,91,3.497,92,2.381,93,3.497,94,3.828,95,0.967,96,3.188,97,0.967,98,3.188,103,2.137,106,2.151,107,2.793,108,4.56,109,4.56,110,0.927,112,2.278,113,3.188,114,3.188,115,3.188,116,4.255,117,2.093,118,3.828,119,3.143,120,4.56,122,2.37,123,1.723,127,1.437,128,0.782,129,1.161,131,1.325,133,3.188,135,3.188,137,3.188,138,2.05,144,2.381,145,1.883,153,2.37,155,2.37,156,1.792,157,2.37,158,2.093,159,2.37,160,1.983,163,0.797,164,1.193,165,1.193,166,1.249,167,0.907,168,1.475,170,1.321,171,1.321,172,1.036,176,1.036,177,0.617,178,0.617,179,1.394,181,0.644,193,1.629,196,1.475,197,1.036,200,1.487,201,1.394,202,1.394,203,1.254,207,2.124,208,2.124,209,2.124,210,0.644,211,0.967,212,0.927,213,0.542,214,1.291,215,0.644,216,1.161,217,0.591,218,0.644,219,0.591,220,0.888,221,0.644,222,0.591,223,0.644,224,0.591,225,0.644,226,0.591,227,0.644,228,0.644,229,0.591,230,0.644,231,0.591,232,0.644,233,0.591,234,0.644,235,1.333,236,1.507,237,0.591,238,0.644,239,0.591,240,0.644,241,0.591,242,0.644,243,0.591,244,0.644,245,0.591,246,0.644,247,0.591,248,0.644,249,0.591,250,0.644,251,0.591,252,0.495,253,0.591,254,0.644,255,0.591,256,0.967,257,0.644,258,0.591,259,0.644,260,0.591,261,0.644,262,0.591,263,0.893,264,0.644,265,0.591,266,0.644,267,0.591,268,0.617,269,0.644,270,0.591,271,0.591,272,0.617,273,0.566,274,0.617,275,0.644,321,2.646,323,1.567,382,1.193,455,1.475,1027,6.379,1028,6.379,1029,3.013,1030,4.375,1031,4.271,1032,2.913,1033,4.944,1034,2.743,1035,2.37,1036,3.557,1037,3.348,1038,3.557,1039,2.743,1040,2.743,1041,2.743,1042,2.743,1043,2.743,1044,2.743,1045,2.743,1046,2.37,1047,4.118,1048,2.37,1049,2.913,1050,2.743,1051,2.743,1052,2.124,1053,2.37,1054,2.37,1055,2.743,1056,3.557]],["title/interfaces/FileParams.html",[0,0.94,1057,2.713]],["body/interfaces/FileParams.html",[0,1.413,2,1.825,3,0.219,4,0.275,5,0.247,7,0.395,8,0.657,21,1.179,22,0.016,24,0.494,32,0.275,35,0.014,36,0.014,128,0.908,129,1.595,1057,4.802,1058,4.979,1059,4.008,1060,6.437]],["title/interfaces/GetAccountModel.html",[0,0.94,1061,2.97]],["body/interfaces/GetAccountModel.html",[0,1.321,1,1.257,2,1.706,3,0.205,4,0.257,5,0.231,7,0.369,8,0.631,9,2.344,10,2.594,11,2.738,12,2.234,14,1.781,15,2.344,16,2.738,17,2.594,18,1.946,19,2.464,20,2.898,21,1.158,22,0.017,23,2.451,24,0.48,25,4.005,26,3.507,27,1.861,28,2.035,29,2.464,30,0.398,32,0.257,35,0.014,36,0.014,49,2.738,277,3.077,278,3.522,280,2.594,1061,5.049,1062,4.654,1063,5.633]],["title/interfaces/GraphqlError.html",[0,0.94,331,2.713]],["body/interfaces/GraphqlError.html",[0,1.641,2,1.781,3,0.214,4,0.269,5,0.241,7,0.385,8,0.648,21,1.18,22,0.016,24,0.489,32,0.32,35,0.014,36,0.014,129,1.572,203,2.573,283,4.937,327,3.979,328,4.356,329,5.846,330,3.678,331,4.733,332,6.387,333,3.44]],["title/components/HeaderComponent.html",[64,0.164,237,0.827]],["body/components/HeaderComponent.html",[1,0.68,3,0.15,4,0.188,5,0.169,7,0.27,8,0.517,22,0.017,30,0.528,32,0.188,35,0.011,36,0.011,44,0.996,45,0.95,50,0.996,55,0.455,63,0.382,64,0.259,65,0.85,66,1.202,67,0.927,68,0.927,69,0.927,76,0.814,81,1.008,84,1.791,85,1.789,87,1.102,88,1.254,95,1.254,97,1.254,128,0.791,160,2.571,163,1.147,166,1.619,167,1.305,172,1.49,177,0.888,178,0.888,181,0.927,210,0.927,211,1.254,212,1.202,213,0.779,214,1.524,215,0.927,216,1.422,217,0.85,218,0.927,219,0.85,220,1.46,221,0.927,222,0.85,223,0.927,224,0.85,225,0.927,226,0.85,227,0.927,228,0.927,229,0.85,230,0.927,231,0.85,232,0.927,233,0.85,234,0.927,235,0.85,236,0.927,237,1.398,238,0.927,239,1.398,240,0.927,241,0.85,242,0.927,243,0.85,244,0.927,245,0.85,246,0.927,247,0.85,248,0.927,249,0.85,250,0.927,251,0.85,252,0.712,253,0.85,254,0.927,255,0.85,256,1.254,257,0.927,258,0.85,259,0.927,260,0.85,261,0.927,262,0.85,263,1.093,264,0.927,265,0.85,266,0.927,267,0.85,268,0.888,269,0.927,270,0.85,271,0.85,272,0.888,273,0.814,274,0.888,275,0.927,345,3.688,362,2.714,364,3.777,376,1.49,379,1.561,380,2.005,382,1.717,628,3.255,1064,3.408,1065,6.052,1066,4.281,1067,4.686,1068,3.957,1069,6.052,1070,5.339,1071,5.339,1072,6.052,1073,3.945,1074,3.945,1075,3.945,1076,3.945,1077,5.339]],["title/pipes/IFrameUrlPipe.html",[190,1.95,1078,2.713]],["body/pipes/IFrameUrlPipe.html",[3,0.209,4,0.263,5,0.236,21,1.059,22,0.017,23,1.743,24,0.377,30,0.488,32,0.263,35,0.014,36,0.014,49,3.357,50,0.906,55,0.635,63,0.533,73,1.988,76,1.136,81,1.248,87,1.363,110,1.239,127,1.6,128,0.863,129,1.293,131,1.239,190,3.357,310,1.988,512,3.599,1078,4.672,1079,3.599,1080,5.706,1081,4.755,1082,6.605,1083,4.261,1084,6.605,1085,5.504,1086,4.755,1087,6.114,1088,3.893,1089,3.893,1090,5.706,1091,5.504]],["title/components/MeComponent.html",[64,0.164,239,0.827]],["body/components/MeComponent.html",[1,0.625,3,0.138,4,0.173,5,0.155,7,0.248,8,0.488,22,0.017,24,0.248,30,0.486,32,0.173,35,0.011,36,0.011,44,1.082,45,1.032,50,1.172,55,0.418,63,0.351,64,0.248,65,0.781,66,1.133,67,0.851,68,0.851,69,0.851,76,0.747,81,1.093,84,1.78,85,1.777,87,1.039,88,1.183,95,1.183,97,1.183,107,3.179,110,1.133,123,1.402,128,0.763,131,1.133,158,2.559,163,1.053,166,1.099,167,1.198,177,0.815,178,0.815,181,0.851,193,1.433,197,1.368,200,1.818,202,1.841,210,0.851,211,1.183,212,1.133,213,0.715,214,1.47,215,0.851,216,1.36,217,0.781,218,0.851,219,0.781,220,1.417,221,0.851,222,0.781,223,0.851,224,0.781,225,0.851,226,0.781,227,0.851,228,0.851,229,0.781,230,0.851,231,0.781,232,0.851,233,0.781,234,0.851,235,0.781,236,0.851,237,0.781,238,0.851,239,1.348,240,0.851,241,0.781,242,0.851,243,0.781,244,0.851,245,0.781,246,0.851,247,0.781,248,0.851,249,0.781,250,0.851,251,0.781,252,0.654,253,0.781,254,0.851,255,0.781,256,1.183,257,0.851,258,0.781,259,0.851,260,0.781,261,0.851,262,0.781,263,1.045,264,0.851,265,0.781,266,0.851,267,0.781,268,0.815,269,0.851,270,0.781,271,0.781,272,0.815,273,0.747,274,0.815,275,0.851,302,1.308,321,1.744,345,3.527,346,3.013,362,2.559,364,3.562,366,2.559,376,1.368,379,1.433,380,1.841,382,1.576,532,3.129,628,3.113,1032,3.562,1037,2.207,1049,3.562,1092,3.129,1093,5.035,1094,5.035,1095,4.482,1096,6.256,1097,6.256,1098,5.788,1099,4.482,1100,3.622,1101,3.622,1102,3.622,1103,3.622,1104,3.622,1105,3.622,1106,3.562,1107,3.622,1108,3.622,1109,2.562,1110,3.622,1111,3.622,1112,5.788,1113,3.622,1114,2.804,1115,3.622,1116,5.035,1117,5.035,1118,3.622]],["title/components/MemoriesComponent.html",[64,0.164,241,0.827]],["body/components/MemoriesComponent.html",[1,0.772,3,0.17,4,0.214,5,0.192,22,0.016,30,0.429,32,0.214,35,0.012,36,0.012,55,0.517,63,0.434,64,0.276,65,0.965,66,1.307,67,1.052,68,1.052,69,1.052,76,0.924,81,1.097,84,1.806,85,1.804,87,1.198,88,1.052,95,1.364,97,1.364,128,0.831,177,1.008,178,1.008,181,1.052,210,1.052,211,1.364,212,1.307,213,0.884,214,1.602,215,1.052,216,1.514,217,0.965,218,1.052,219,0.965,220,1.252,221,1.052,222,0.965,223,1.052,224,0.965,225,1.052,226,0.965,227,1.052,228,1.052,229,0.965,230,1.052,231,0.965,232,1.052,233,0.965,234,1.052,235,0.965,236,1.052,237,0.965,238,1.052,239,0.965,240,1.052,241,1.47,242,1.052,243,0.965,244,1.052,245,0.965,246,1.052,247,0.965,248,1.052,249,0.965,250,1.052,251,0.965,252,0.808,253,0.965,254,1.052,255,0.965,256,1.364,257,1.052,258,0.965,259,1.052,260,0.965,261,1.052,262,0.965,263,1.163,264,1.052,265,0.965,266,1.052,267,0.965,268,1.008,269,1.052,270,0.965,271,0.965,272,1.008,273,0.924,274,1.008,275,1.052,696,3.797,1119,3.869,1120,4.997,1121,5.807,1122,5.807]],["title/components/MenuComponent.html",[64,0.164,243,0.827]],["body/components/MenuComponent.html",[1,0.767,3,0.169,4,0.212,5,0.19,22,0.016,30,0.474,32,0.212,35,0.012,36,0.012,55,0.513,63,0.43,64,0.275,65,0.958,66,1.301,67,1.044,68,1.044,69,1.044,76,0.917,81,1.092,84,1.805,85,1.803,87,1.193,88,1.358,95,1.358,97,1.358,128,0.829,177,1,178,1,181,1.044,210,1.044,211,1.358,212,1.301,213,0.878,214,1.597,215,1.044,216,1.509,217,0.958,218,1.044,219,0.958,220,1.246,221,1.044,222,0.958,223,1.044,224,0.958,225,1.044,226,0.958,227,1.044,228,1.044,229,0.958,230,1.044,231,0.958,232,1.044,233,0.958,234,1.044,235,0.958,236,1.044,237,0.958,238,1.044,239,0.958,240,1.044,241,0.958,242,1.044,243,1.466,244,1.044,245,1.466,246,1.044,247,0.958,248,1.044,249,0.958,250,1.044,251,0.958,252,0.803,253,0.958,254,1.044,255,0.958,256,1.358,257,1.044,258,0.958,259,1.044,260,0.958,261,1.044,262,0.958,263,1.159,264,1.044,265,0.958,266,1.044,267,0.958,268,1,269,1.044,270,0.958,271,0.958,272,1,273,0.917,274,1,275,1.044,391,3.84,1123,3.84,1124,6.422,1125,5.779,1126,5.779]],["title/components/NavComponent.html",[64,0.164,245,0.827]],["body/components/NavComponent.html",[1,0.608,2,1.116,3,0.134,4,0.168,5,0.151,7,0.241,8,0.478,22,0.017,24,0.241,30,0.499,32,0.168,33,1.166,35,0.01,36,0.01,44,1.018,45,0.971,49,3.43,50,1.072,55,0.407,63,0.341,64,0.244,65,0.76,66,1.112,67,0.828,68,0.828,69,0.828,76,0.728,81,1.23,84,1.776,85,1.773,86,2.38,87,1.02,88,1.161,95,1.161,97,1.161,110,1.112,117,2.511,123,0.982,128,0.754,131,0.793,138,2.049,160,2.38,163,1.025,166,1.069,167,1.166,177,0.793,178,0.793,181,0.828,210,0.828,211,1.161,212,1.112,213,0.696,214,1.452,215,0.828,216,1.34,217,0.76,218,0.828,219,0.76,220,1.403,221,0.828,222,0.76,223,0.828,224,0.76,225,0.828,226,0.76,227,0.828,228,0.828,229,0.76,230,0.828,231,0.76,232,0.828,233,0.76,234,0.828,235,0.76,236,0.828,237,0.76,238,0.828,239,0.76,240,0.828,241,0.76,242,0.828,243,0.76,244,0.828,245,1.333,246,0.828,247,0.76,248,0.828,249,0.76,250,0.828,251,0.76,252,0.637,253,0.76,254,0.828,255,0.76,256,1.161,257,0.828,258,0.76,259,0.828,260,0.76,261,0.828,262,0.76,263,1.03,264,0.828,265,0.76,266,0.828,267,0.76,268,0.793,269,0.828,270,0.76,271,1.065,272,0.793,273,0.728,274,0.793,275,0.828,345,3.476,362,2.511,364,3.495,376,1.332,379,1.395,380,1.792,382,1.534,393,4.269,422,3.046,429,3.43,628,3.069,693,2.73,701,5.342,1024,2.73,1120,2.494,1127,2.73,1128,5.705,1129,5.705,1130,5.705,1131,4.942,1132,4.942,1133,5.705,1134,4.929,1135,3.526,1136,3.526,1137,3.526,1138,4.417,1139,3.526,1140,3.526,1141,4.412,1142,5.225,1143,3.046,1144,2.73,1145,3.046,1146,3.046,1147,3.826,1148,2.73,1149,3.046,1150,3.046,1151,3.046,1152,3.526,1153,4.942,1154,3.826,1155,4.942]],["title/components/NotFoundComponent.html",[64,0.164,247,0.827]],["body/components/NotFoundComponent.html",[1,0.704,3,0.155,4,0.195,5,0.175,7,0.279,21,0.817,22,0.017,24,0.374,30,0.455,32,0.195,35,0.011,36,0.011,44,0.899,45,0.858,50,0.899,55,0.471,63,0.395,64,0.264,65,0.88,66,1.23,67,0.959,68,0.959,69,0.959,76,0.842,81,1.242,84,1.795,85,1.793,86,2.966,87,1.127,88,1.284,95,1.284,97,1.284,117,2.777,128,0.802,138,2.265,177,0.919,178,0.919,181,0.959,210,0.959,211,1.284,212,1.23,213,0.806,214,1.545,215,0.959,216,1.447,217,0.88,218,0.959,219,0.88,220,1.178,221,0.959,222,0.88,223,0.959,224,0.88,225,0.959,226,0.88,227,0.959,228,0.959,229,0.88,230,0.959,231,0.88,232,0.959,233,0.88,234,0.959,235,0.88,236,0.959,237,0.88,238,0.959,239,0.88,240,0.959,241,0.88,242,0.959,243,0.88,244,0.959,245,0.88,246,0.959,247,1.417,248,0.959,249,0.88,250,0.959,251,0.88,252,0.737,253,0.88,254,0.959,255,0.88,256,1.284,257,0.959,258,0.88,259,0.959,260,0.88,261,0.959,262,0.88,263,1.112,264,0.959,265,0.88,266,0.959,267,0.88,268,0.919,269,0.959,270,0.88,271,0.88,272,0.919,273,0.842,274,0.919,275,0.959,376,1.542,1066,4.356,1141,4.026,1156,5.32,1157,5.32,1158,3.527,1159,4.72,1160,5.464,1161,5.464,1162,6.158,1163,4.082,1164,4.082,1165,4.082,1166,5.464,1167,5.464]],["title/components/OopsComponent.html",[64,0.164,249,0.827]],["body/components/OopsComponent.html",[1,0.759,3,0.167,4,0.21,5,0.188,22,0.017,30,0.424,32,0.21,35,0.012,36,0.012,55,0.508,63,0.426,64,0.274,65,0.948,66,1.292,67,1.034,68,1.034,69,1.034,76,0.908,81,1.084,84,1.804,85,1.802,87,1.185,88,1.034,95,1.349,97,1.349,128,0.826,177,0.99,178,0.99,181,1.034,210,1.034,211,1.349,212,1.292,213,0.869,214,1.591,215,1.034,216,1.501,217,0.948,218,1.034,219,0.948,220,1.237,221,1.034,222,0.948,223,1.034,224,0.948,225,1.034,226,0.948,227,1.034,228,1.034,229,0.948,230,1.034,231,0.948,232,1.034,233,0.948,234,1.034,235,0.948,236,1.034,237,0.948,238,1.034,239,0.948,240,1.034,241,0.948,242,1.034,243,0.948,244,1.034,245,0.948,246,1.034,247,0.948,248,1.034,249,1.46,250,1.034,251,0.948,252,0.794,253,0.948,254,1.034,255,0.948,256,1.349,257,1.034,258,0.948,259,1.034,260,0.948,261,1.034,262,0.948,263,1.154,264,1.034,265,0.948,266,1.034,267,0.948,268,0.99,269,1.034,270,0.948,271,0.948,272,0.99,273,0.908,274,0.99,275,1.034,1168,3.802,1169,6.39,1170,5.741,1171,5.741]],["title/components/PermissionInputComponent.html",[64,0.164,251,0.827]],["body/components/PermissionInputComponent.html",[1,0.525,3,0.116,4,0.145,5,0.13,7,0.209,8,0.431,21,0.961,22,0.017,24,0.475,30,0.475,32,0.145,35,0.009,36,0.009,44,1.093,45,1.042,50,1.19,55,0.352,63,0.295,64,0.225,65,0.657,66,1.002,67,0.716,68,0.716,69,0.716,72,2.155,73,1.608,75,4.072,76,0.629,77,2.144,78,3.148,79,4.072,80,3.148,81,1.092,82,3.446,84,1.755,85,1.751,86,3.342,87,0.918,88,1.046,89,2.08,90,3.004,91,3.72,92,2.533,93,3.72,94,4.072,95,1.046,96,3.446,97,1.046,98,3.446,108,4.764,109,4.764,110,1.002,113,3.446,114,3.446,115,3.446,116,4.479,117,2.262,118,4.072,119,3.266,120,4.764,123,1.714,127,1.528,128,0.809,129,1.236,131,1.302,133,3.446,135,3.446,137,3.446,138,2.181,160,2.144,164,1.326,166,1.35,167,1.007,172,1.151,176,1.151,177,0.686,178,0.686,181,0.716,207,2.359,208,2.359,209,2.359,210,0.716,211,1.046,212,1.002,213,0.602,214,1.359,215,0.716,216,1.236,217,0.657,218,0.716,219,0.657,220,0.959,221,0.716,222,0.657,223,0.716,224,0.657,225,0.716,226,0.657,227,0.716,228,0.716,229,0.657,230,0.716,231,0.657,232,0.716,233,0.657,234,0.716,235,0.657,236,0.716,237,0.657,238,0.716,239,0.657,240,0.716,241,0.657,242,0.716,243,0.657,244,0.716,245,0.657,246,0.716,247,0.657,248,0.716,249,0.657,250,0.716,251,1.385,252,1.198,253,0.657,254,0.716,255,0.657,256,1.046,257,0.716,258,0.657,259,0.716,260,0.657,261,0.716,262,0.657,263,0.95,264,0.716,265,0.657,266,0.716,267,0.657,268,0.686,269,0.716,270,0.657,271,0.657,272,0.686,273,0.629,274,0.686,275,0.716,321,2.533,1031,4.544,1035,2.632,1036,3.845,1037,3.525,1038,3.845,1046,2.632,1048,2.632,1056,3.845,1172,6.304,1173,6.304,1174,3.004,1175,3.047,1176,3.047,1177,3.047,1178,3.047,1179,3.047,1180,3.047,1181,3.047,1182,3.047,1183,3.047,1184,3.047]],["title/components/ProfileComponent.html",[64,0.164,253,0.827]],["body/components/ProfileComponent.html",[1,0.806,2,0.642,3,0.077,4,0.097,5,0.087,7,0.139,8,0.315,9,2.376,10,0.977,13,1.326,16,2.074,17,2.873,18,0.732,19,0.927,21,0.817,22,0.017,23,2,24,0.421,25,1.86,26,2.751,27,0.701,28,1.541,29,1.866,30,0.525,32,0.097,33,1.349,34,1.434,35,0.007,36,0.007,38,3.054,42,2.331,44,1.151,45,1.098,50,1.193,55,0.234,63,0.196,64,0.175,65,0.437,66,0.733,67,0.476,68,0.476,69,0.476,73,1.176,74,1.692,76,0.418,77,1.568,81,0.615,84,1.68,85,1.675,87,0.672,88,0.765,89,1.614,95,0.765,97,0.765,103,2.348,106,1.775,107,2.374,110,0.733,112,1.937,123,1.136,127,0.946,128,0.727,129,0.765,131,1.051,138,0.841,141,2.751,144,2.965,145,2.498,148,3.159,156,1.417,158,1.655,163,0.589,165,0.882,166,1.238,167,0.671,168,1.091,169,1.434,170,0.977,171,0.977,172,0.766,175,0.802,176,0.766,177,0.456,178,0.456,179,1.031,181,0.476,186,1.752,187,1.57,188,1.752,193,1.614,196,1.751,197,1.23,198,3.12,200,1.176,201,1.655,202,1.655,203,1.489,210,0.476,211,0.765,212,0.733,213,0.4,214,1.097,215,0.476,216,0.958,217,0.437,218,0.476,219,0.437,220,1.102,221,0.476,222,0.437,223,0.476,224,0.437,225,0.476,226,0.702,227,0.765,228,0.476,229,0.437,230,0.476,231,0.437,232,0.476,233,0.437,234,0.476,235,0.437,236,0.476,237,0.437,238,0.476,239,0.437,240,0.476,241,0.437,242,0.476,243,0.437,244,0.476,245,0.437,246,0.476,247,0.437,248,0.476,249,0.437,250,0.476,251,0.437,252,0.366,253,1.007,254,0.476,255,0.437,256,0.765,257,0.476,258,0.437,259,0.476,260,0.437,261,0.476,262,0.437,263,0.737,264,0.476,265,0.437,266,0.476,267,0.437,268,0.456,269,0.476,270,0.437,271,0.437,272,0.456,273,0.418,274,0.456,275,0.476,280,0.977,302,0.732,310,1.972,321,0.977,338,2.886,346,2.249,351,2.074,356,1.031,362,1.655,366,1.655,371,2.813,376,0.766,379,0.802,382,0.882,387,1.326,400,1.158,409,1.326,412,1.031,429,2.074,440,2.303,444,1.434,455,2.194,525,3.525,583,1.57,625,1.57,628,2.194,629,2.886,632,1.752,636,4.035,658,2.303,663,1.236,664,1.326,1037,1.236,1052,1.57,1054,1.752,1067,3.159,1068,2.668,1079,1.326,1088,1.434,1089,1.434,1095,3.159,1106,2.303,1109,1.434,1141,3.054,1154,2.521,1185,1.57,1186,3.525,1187,5.967,1188,3.525,1189,2.886,1190,2.886,1191,3.256,1192,3.256,1193,5.967,1194,3.304,1195,4.035,1196,4.08,1197,3.159,1198,3.256,1199,2.028,1200,2.028,1201,3.256,1202,2.028,1203,3.525,1204,2.028,1205,3.256,1206,2.028,1207,3.256,1208,3.256,1209,3.256,1210,3.256,1211,3.256,1212,4.08,1213,2.028,1214,3.256,1215,3.256,1216,3.256,1217,2.028,1218,4.08,1219,3.256,1220,2.028,1221,2.028,1222,2.521,1223,2.028,1224,3.256,1225,2.028,1226,2.028,1227,3.256,1228,2.028,1229,2.028,1230,2.028,1231,2.028,1232,2.028,1233,2.813,1234,2.028,1235,2.028,1236,2.028,1237,2.028,1238,3.256,1239,2.028,1240,1.326,1241,1.752,1242,3.256,1243,2.028,1244,1.57,1245,2.028,1246,1.57,1247,1.752,1248,1.752,1249,1.752,1250,3.256,1251,2.028,1252,2.028,1253,2.028,1254,2.028,1255,1.752,1256,2.028,1257,2.028,1258,2.028,1259,2.028,1260,2.028,1261,2.028,1262,2.028,1263,2.028,1264,2.028,1265,2.028,1266,2.028,1267,2.028,1268,2.028,1269,2.028,1270,2.028,1271,1.57,1272,2.028,1273,2.028,1274,2.028,1275,2.028,1276,1.752,1277,2.028,1278,1.752,1279,2.028,1280,2.028,1281,5.462,1282,5.967,1283,3.256,1284,3.256,1285,3.256,1286,4.671,1287,2.813,1288,2.813,1289,3.256]],["title/interfaces/Route.html",[0,0.94,429,1.95]],["body/interfaces/Route.html",[0,1.362,2,1.759,3,0.211,4,0.265,5,0.238,7,0.38,8,0.643,21,1.172,22,0.016,24,0.515,32,0.265,35,0.014,36,0.014,49,3.741,129,1.729,138,3.167,429,3.375,1141,4.813,1142,5.7,1144,5.7,1147,5.7,1290,4.798]],["title/directives/ScrollNearEndDirective.html",[213,0.757,273,0.792]],["body/directives/ScrollNearEndDirective.html",[3,0.155,4,0.195,5,0.175,7,0.279,8,0.529,22,0.017,24,0.483,30,0.302,32,0.195,33,2.333,35,0.011,36,0.011,44,0.672,45,0.641,50,1.186,55,0.471,63,0.395,64,0.175,73,1.973,74,2.553,76,0.842,81,1.032,84,1.23,86,2.631,87,1.127,103,1.95,110,1.23,112,2.727,117,2.777,123,1.715,127,1.588,128,0.666,129,1.284,131,1.23,212,1.23,213,1.079,272,0.919,273,1.127,274,1.23,302,1.474,323,3.756,333,1.966,347,4.23,349,5.32,351,2.075,356,2.075,409,2.669,512,2.669,1032,3.864,1049,3.864,1053,4.72,1099,5.092,1291,6.325,1292,6.472,1293,3.527,1294,7.415,1295,5.464,1296,6.855,1297,5.464,1298,5.464,1299,4.082,1300,5.681,1301,5.464,1302,5.464,1303,4.082,1304,5.464,1305,5.464,1306,5.464,1307,6.576,1308,4.082,1309,4.082,1310,6.158,1311,5.464,1312,4.082,1313,5.464,1314,6.158,1315,5.464,1316,4.082,1317,4.082,1318,4.082,1319,3.527,1320,4.082,1321,4.082,1322,5.464,1323,4.082,1324,5.464,1325,4.082,1326,4.082,1327,4.082,1328,6.158,1329,4.082,1330,4.082,1331,4.082,1332,4.082,1333,3.527,1334,5.464,1335,4.082,1336,5.464,1337,4.082,1338,4.082,1339,5.464,1340,4.082,1341,4.082,1342,4.082,1343,4.082,1344,4.082,1345,4.082,1346,5.464,1347,4.082,1348,4.082,1349,5.464]],["title/injectables/ScrollService.html",[37,1.024,381,2.337]],["body/injectables/ScrollService.html",[3,0.189,4,0.238,5,0.214,7,0.342,8,0.602,22,0.017,24,0.486,27,2.149,30,0.501,32,0.238,35,0.013,36,0.013,37,1.661,39,2.172,44,1.024,45,0.977,50,1.116,55,0.576,61,3.041,62,2.851,63,0.483,103,2.146,110,1.4,123,1.39,127,1.45,128,0.608,129,1.172,131,1.123,138,2.81,141,3.646,144,3.264,145,3.1,160,2.996,169,3.53,170,2.403,171,2.403,173,3.864,175,1.974,192,4.817,197,2.35,203,2.282,333,3.264,355,6.308,381,3.791,405,5.856,714,4.311,717,6.13,1350,3.864,1351,7.445,1352,4.991,1353,4.991,1354,4.991,1355,6.221,1356,6.221,1357,6.221,1358,4.991,1359,4.311]],["title/pipes/SexPipe.html",[190,1.95,1190,2.713]],["body/pipes/SexPipe.html",[2,1.694,3,0.203,4,0.255,5,0.229,17,3.646,21,0.971,22,0.017,23,2.214,24,0.366,28,2.021,29,2.446,30,0.48,32,0.255,35,0.014,36,0.014,44,0.881,45,1.019,50,0.881,55,0.617,63,0.518,73,1.932,76,1.104,81,1.226,87,1.34,110,1.204,127,1.555,128,0.852,129,1.257,131,1.204,190,3.3,310,2.525,530,3.784,531,4.592,1079,3.498,1083,4.142,1090,5.609,1190,4.592,1360,4.621,1361,6.493,1362,5.35]],["title/components/SignInComponent.html",[64,0.164,255,0.827]],["body/components/SignInComponent.html",[1,0.45,3,0.099,4,0.125,5,0.112,7,0.179,8,0.384,18,0.942,21,0.718,22,0.017,23,1.696,24,0.432,30,0.492,32,0.125,35,0.008,36,0.008,44,1.096,45,1.045,50,1.188,55,0.301,63,0.253,64,0.205,65,0.562,66,0.892,67,0.613,68,0.613,69,0.613,73,1.432,74,1.989,76,0.538,81,0.749,84,1.729,85,1.725,86,1.91,87,0.818,88,0.932,89,1.897,92,2.31,95,0.932,97,0.932,103,2.334,106,2.087,110,0.892,112,2.221,117,2.015,119,2.929,123,1.757,127,0.758,128,0.841,129,0.613,131,1.206,141,2.58,156,1.725,163,0.758,164,1.135,165,1.135,166,0.791,167,0.863,175,1.032,176,0.986,177,0.587,178,0.587,181,0.613,193,1.897,197,0.986,200,0.942,210,0.613,211,0.932,212,0.892,213,0.515,214,1.259,215,0.613,216,1.127,217,0.562,218,0.613,219,0.562,220,1.242,221,0.613,222,0.562,223,0.613,224,0.562,225,0.613,226,0.562,227,0.613,228,0.613,229,0.562,230,0.613,231,0.562,232,0.613,233,0.562,234,0.613,235,0.562,236,0.613,237,0.562,238,0.613,239,0.562,240,0.613,241,0.562,242,0.613,243,0.562,244,0.613,245,0.562,246,0.613,247,0.562,248,0.613,249,0.562,250,0.613,251,0.562,252,0.471,253,0.562,254,0.613,255,1.155,256,1.527,257,0.613,258,0.562,259,0.613,260,0.562,261,0.613,262,0.562,263,0.866,264,0.613,265,0.562,266,0.613,267,0.562,268,0.587,269,0.613,270,0.562,271,0.562,272,0.587,273,0.538,274,0.587,275,0.613,302,2.451,310,1.432,335,3.136,342,2.74,346,2.58,348,3.136,350,3.503,351,1.326,356,2.723,362,2.015,366,2.015,370,2.923,376,0.986,377,2.254,378,2.02,379,1.032,382,1.135,396,2.02,399,1.845,400,2.74,412,1.326,413,2.805,418,1.706,428,3.264,435,3.136,438,2.805,452,3.07,453,2.02,455,1.403,456,2.02,458,1.845,464,3.714,471,5.631,475,3.07,484,4.148,487,3.714,489,4.148,490,2.02,491,4.148,493,3.07,500,3.466,503,2.805,509,1.845,512,1.706,514,2.02,515,2.02,516,2.805,518,3.07,520,2.02,521,2.02,533,3.07,539,2.02,540,2.02,541,2.02,549,3.426,612,2.254,1114,2.02,1300,4.144,1363,5.631,1364,2.254,1365,4.796,1366,3.965,1367,3.965,1368,4.796,1369,4.796,1370,5.358,1371,2.609,1372,2.609,1373,3.965,1374,2.609,1375,3.965,1376,2.609,1377,3.965,1378,2.609,1379,2.609,1380,2.609,1381,2.609,1382,4.144,1383,2.609,1384,2.609,1385,2.609,1386,2.609,1387,2.609,1388,3.965,1389,2.609,1390,3.965,1391,2.609,1392,2.254,1393,3.426,1394,2.609,1395,2.609,1396,2.609,1397,2.609,1398,2.609,1399,2.609,1400,2.609,1401,2.609,1402,2.609,1403,2.609,1404,2.02,1405,2.254,1406,2.254,1407,2.254,1408,2.254,1409,2.254,1410,2.254,1411,3.426,1412,2.609]],["title/components/SignUpComponent.html",[64,0.164,258,0.827]],["body/components/SignUpComponent.html",[1,0.389,3,0.086,4,0.108,5,0.097,7,0.154,8,0.343,10,2.596,11,2.739,12,0.935,15,0.982,18,0.815,21,0.655,22,0.017,23,1.57,24,0.41,27,1.224,29,1.621,30,0.491,32,0.108,35,0.007,36,0.007,44,1.074,45,1.024,50,1.155,55,0.26,63,0.218,64,0.187,65,0.486,66,0.798,67,0.53,68,0.53,69,0.53,73,1.28,74,1.815,76,0.466,81,0.827,84,1.702,85,1.697,86,1.707,87,0.731,88,0.832,89,1.731,92,2.108,95,0.832,97,0.832,103,2.221,106,1.904,110,0.798,112,2.056,117,1.801,119,3.239,123,1.593,127,0.656,128,0.836,129,0.53,131,1.116,141,2.354,156,1.542,160,1.707,163,0.656,164,0.982,165,0.982,166,1.327,167,0.746,172,0.852,175,0.892,176,0.852,177,0.508,178,0.508,181,0.53,193,2.132,197,0.852,200,0.815,201,1.801,202,1.801,210,0.53,211,0.832,212,0.798,213,0.445,214,1.165,215,0.53,216,1.028,217,0.486,218,0.53,219,0.486,220,1.162,221,0.53,222,0.486,223,0.53,224,0.486,225,0.53,226,0.486,227,0.53,228,0.53,229,0.486,230,0.53,231,0.486,232,0.53,233,0.486,234,0.53,235,0.486,236,0.53,237,0.486,238,0.53,239,0.486,240,0.53,241,0.486,242,0.53,243,0.486,244,0.53,245,0.486,246,0.53,247,0.486,248,0.53,249,0.486,250,0.53,251,0.486,252,0.407,253,0.486,254,0.53,255,0.486,256,1.456,257,0.53,258,1.069,259,0.53,260,0.486,261,0.53,262,0.486,263,0.79,264,0.53,265,0.486,266,0.53,267,0.486,268,0.508,269,0.53,270,0.486,271,0.486,272,0.508,273,0.466,274,0.508,275,0.53,297,1.375,302,2.647,310,1.947,335,2.862,338,3.096,342,2.5,346,2.388,348,2.862,350,3.243,351,1.147,356,1.801,362,1.801,366,1.801,370,2.667,375,2.744,376,0.852,379,0.892,382,0.982,396,1.747,399,1.596,400,2.024,412,1.147,413,1.596,418,1.475,428,3.077,435,2.862,438,2.507,452,3.84,453,1.747,455,1.213,456,1.747,458,1.596,464,3.389,473,5.482,475,2.744,484,3.84,487,3.389,489,3.84,490,1.747,491,3.84,493,2.744,500,4.109,501,5.169,503,2.507,509,1.596,512,1.475,514,1.747,515,2.744,516,3.096,517,1.949,518,4.173,520,1.747,521,1.747,533,3.84,539,1.747,540,1.747,541,1.747,551,3.062,1114,1.747,1363,5.482,1382,3.781,1393,3.062,1405,1.949,1406,1.949,1407,1.949,1408,1.949,1409,1.949,1410,3.062,1411,4.284,1413,1.949,1414,3.062,1415,4.377,1416,3.544,1417,3.544,1418,4.377,1419,4.377,1420,2.256,1421,2.256,1422,2.256,1423,3.544,1424,2.256,1425,3.544,1426,2.256,1427,2.256,1428,2.256,1429,2.256,1430,2.256,1431,4.959,1432,3.544,1433,4.377,1434,4.377,1435,4.377,1436,2.256,1437,2.256,1438,2.256,1439,2.256,1440,2.256,1441,2.256,1442,2.256,1443,1.747,1444,3.062,1445,2.256,1446,2.256,1447,2.256,1448,2.256,1449,2.256,1450,2.256,1451,2.256,1452,2.256,1453,2.256,1454,2.256,1455,2.256,1456,3.84,1457,3.544,1458,3.544,1459,3.544,1460,2.256,1461,2.256,1462,2.256,1463,2.256,1464,2.256,1465,2.256,1466,2.256,1467,2.256,1468,2.256,1469,2.256,1470,2.256,1471,1.949]],["title/components/TimelinesComponent.html",[64,0.164,260,0.827]],["body/components/TimelinesComponent.html",[1,0.772,3,0.17,4,0.214,5,0.192,22,0.016,30,0.429,32,0.214,35,0.012,36,0.012,55,0.517,63,0.434,64,0.276,65,0.965,66,1.307,67,1.052,68,1.052,69,1.052,76,0.924,81,1.097,84,1.806,85,1.804,87,1.198,88,1.052,95,1.364,97,1.364,128,0.831,177,1.008,178,1.008,181,1.052,210,1.052,211,1.364,212,1.307,213,0.884,214,1.602,215,1.052,216,1.514,217,0.965,218,1.052,219,0.965,220,1.252,221,1.052,222,0.965,223,1.052,224,0.965,225,1.052,226,0.965,227,1.052,228,1.052,229,0.965,230,1.052,231,0.965,232,1.052,233,0.965,234,1.052,235,0.965,236,1.052,237,0.965,238,1.052,239,0.965,240,1.052,241,0.965,242,1.052,243,0.965,244,1.052,245,0.965,246,1.052,247,0.965,248,1.052,249,0.965,250,1.052,251,0.965,252,0.808,253,0.965,254,1.052,255,0.965,256,1.364,257,1.052,258,0.965,259,1.052,260,1.47,261,1.052,262,0.965,263,1.163,264,1.052,265,0.965,266,1.052,267,0.965,268,1.008,269,1.052,270,0.965,271,0.965,272,1.008,273,0.924,274,1.008,275,1.052,696,3.797,1148,5.47,1472,3.869,1473,5.807,1474,5.807]],["title/injectables/UploadByIdGQL.html",[37,1.024,1475,2.713]],["body/injectables/UploadByIdGQL.html",[3,0.183,4,0.231,5,0.207,7,0.331,8,0.59,9,2.653,12,2.528,14,2.531,15,2.653,18,2.202,19,2.788,21,0.999,22,0.017,24,0.457,30,0.494,32,0.335,35,0.013,36,0.013,37,1.627,39,2.103,41,3.279,42,4.131,43,4.07,44,0.796,45,0.759,46,3.815,49,3.753,50,0.796,52,3.715,53,2.599,54,2.76,55,0.558,57,1.745,63,0.468,128,0.743,263,0.872,277,3.483,278,3.986,279,2.412,330,3.986,1005,3.16,1059,3.279,1174,3.483,1475,4.312,1476,4.312,1477,6.097,1478,6.097,1479,5.267,1480,5.267,1481,4.312,1482,3.986,1483,4.833,1484,4.175,1485,4.175,1486,4.175]],["title/injectables/UploadExtensionsGQL.html",[37,1.024,1030,2.713]],["body/injectables/UploadExtensionsGQL.html",[3,0.2,4,0.251,5,0.225,7,0.36,8,0.622,21,0.787,22,0.017,24,0.475,30,0.513,32,0.345,35,0.013,36,0.013,37,1.715,39,2.288,41,3.455,42,4.234,43,4.227,44,0.866,45,0.825,46,3.963,50,0.866,52,3.915,53,2.828,54,3.003,55,0.607,63,0.509,179,2.672,321,3.48,323,4.128,1030,4.544,1476,4.544,1487,4.071,1488,6.424,1489,5.595,1490,6.424,1491,5.257,1492,4.974,1493,4.542,1494,5.257,1495,4.542,1496,4.542]],["title/components/UploadFileComponent.html",[64,0.164,262,0.827]],["body/components/UploadFileComponent.html",[1,0.432,2,0.792,3,0.095,4,0.119,5,0.224,7,0.171,8,0.372,22,0.017,24,0.387,27,0.864,28,1.981,29,2.137,30,0.505,32,0.119,33,1.27,35,0.008,36,0.008,44,1.124,45,1.033,50,1.155,55,0.289,57,0.904,63,0.242,64,0.2,65,0.539,66,0.864,67,0.588,68,0.588,69,0.588,73,1.387,74,1.938,76,0.516,77,1.849,81,0.725,84,1.722,85,1.717,87,0.792,88,0.902,89,1.849,90,2.67,92,2.251,95,0.902,97,0.902,103,2.267,106,2.034,107,2.664,110,0.864,112,2.174,119,2.375,123,1.575,128,0.758,131,1.18,144,2.724,145,1.144,156,1.671,158,1.952,163,0.727,164,1.089,165,1.089,166,1.418,167,0.827,168,1.346,170,1.205,171,1.205,172,0.945,176,0.945,177,0.563,178,0.563,181,0.588,193,2.074,196,2.82,197,0.945,198,1.429,200,1.387,201,2.375,202,2.375,203,1.756,210,0.588,211,0.902,212,0.864,213,0.494,214,1.232,215,0.588,216,1.098,217,0.539,218,0.588,219,0.539,220,0.828,221,0.588,222,0.539,223,0.588,224,0.539,225,0.588,226,0.539,227,0.588,228,0.588,229,0.539,230,0.588,231,0.539,232,0.588,233,0.539,234,0.588,235,0.539,236,0.588,237,0.539,238,0.588,239,0.539,240,0.588,241,0.539,242,0.588,243,0.539,244,0.588,245,0.539,246,0.588,247,0.539,248,0.588,249,0.539,250,0.588,251,0.539,252,0.452,253,0.539,254,0.588,255,0.539,256,0.902,257,0.588,258,0.539,259,0.588,260,0.539,261,0.588,262,1.13,263,1.251,264,0.588,265,0.539,266,0.588,267,0.539,268,0.563,269,0.588,270,0.539,271,0.539,272,0.563,273,0.516,274,0.563,275,0.588,279,0.99,302,2.502,310,1.387,330,1.636,333,1.849,342,2.67,379,0.99,382,1.089,409,3.056,428,2.514,500,1.429,509,3.306,516,2.716,530,2.716,531,4.222,586,2.848,627,4.038,628,2.514,633,4.222,634,3.306,638,4.529,655,3.318,658,2.716,661,1.937,671,2.162,672,2.162,682,3.318,687,4.529,1029,3.446,1059,2.066,1068,3.056,1189,3.306,1240,1.636,1271,1.937,1444,3.318,1456,1.937,1471,2.162,1497,5.016,1498,5.491,1499,2.162,1500,4.674,1501,4.038,1502,4.674,1503,4.674,1504,3.84,1505,3.84,1506,4.674,1507,4.674,1508,4.674,1509,5.243,1510,5.157,1511,2.502,1512,2.502,1513,2.502,1514,2.502,1515,2.502,1516,2.502,1517,2.502,1518,2.502,1519,3.84,1520,3.84,1521,4.674,1522,5.243,1523,2.502,1524,2.502,1525,3.84,1526,2.502,1527,3.318,1528,2.502,1529,3.84,1530,2.502,1531,2.502,1532,2.502,1533,2.502,1534,2.502,1535,2.502,1536,2.502,1537,5.243,1538,2.502,1539,2.502,1540,3.84,1541,2.502,1542,3.84,1543,3.84,1544,2.502,1545,2.502,1546,2.502,1547,2.502,1548,2.502,1549,3.84,1550,2.502]],["title/components/UploadInfoComponent.html",[64,0.164,265,0.827]],["body/components/UploadInfoComponent.html",[1,0.527,3,0.2,4,0.146,5,0.131,7,0.209,8,0.432,14,1.011,21,0.667,22,0.017,24,0.422,30,0.528,32,0.146,33,1.011,35,0.009,36,0.009,44,1.059,45,1.01,50,1.143,55,0.353,57,1.104,63,0.296,64,0.226,65,0.659,66,1.004,67,0.718,68,0.718,69,0.718,73,1.611,74,2.184,76,0.631,77,2.148,81,0.843,84,1.755,85,1.752,87,0.921,88,1.048,89,2.084,90,3.009,92,2.537,95,1.048,97,1.048,103,2.312,106,2.292,107,2.944,110,1.004,112,2.402,119,3.131,123,1.242,127,0.888,128,0.81,129,0.718,131,0.688,144,2.967,145,1.398,156,1.941,158,2.267,163,1.296,164,1.33,165,1.33,166,1.598,167,1.011,168,1.644,170,1.472,171,1.472,172,1.155,176,1.155,177,0.688,178,0.688,179,1.553,181,0.718,193,1.209,196,1.644,197,1.155,198,1.746,200,1.611,201,1.553,202,1.553,203,1.398,210,0.718,211,1.048,212,1.004,213,0.603,214,1.361,215,0.718,216,1.238,217,0.659,218,0.718,219,0.659,220,0.961,221,0.718,222,0.659,223,0.718,224,0.659,225,0.718,226,0.659,227,0.718,228,0.718,229,0.659,230,0.718,231,0.659,232,0.718,233,0.659,234,0.718,235,0.659,236,0.718,237,0.659,238,0.718,239,0.659,240,0.718,241,0.659,242,0.718,243,0.659,244,0.718,245,0.659,246,0.718,247,0.659,248,0.718,249,0.659,250,0.718,251,0.659,252,0.552,253,0.659,254,0.718,255,0.659,256,1.048,257,0.718,258,0.659,259,0.718,260,0.659,261,0.718,262,0.659,263,1.318,264,0.718,265,1.248,266,0.718,267,0.659,268,0.688,269,0.718,270,0.659,271,0.659,272,0.688,273,0.631,274,0.688,275,0.718,279,1.209,302,2.323,351,2.267,500,3.519,633,2.162,640,2.64,641,4.485,643,3.854,662,2.64,663,1.862,664,1.998,666,2.64,1052,2.366,1068,3.445,1189,3.726,1194,3.726,1222,3.454,1240,1.998,1255,3.854,1475,4.55,1497,4.991,1501,4.551,1527,3.854,1551,5.464,1552,2.64,1553,4.461,1554,4.461,1555,4.551,1556,5.268,1557,3.056,1558,3.056,1559,3.056,1560,3.056,1561,3.056,1562,3.056,1563,4.461,1564,3.056,1565,3.056,1566,4.461,1567,3.056,1568,3.056,1569,4.461,1570,3.056,1571,3.056,1572,3.056,1573,3.056,1574,3.056,1575,3.056,1576,3.056,1577,3.056,1578,4.461]],["title/components/UploadListItemComponent.html",[64,0.164,267,0.827]],["body/components/UploadListItemComponent.html",[1,0.354,3,0.078,4,0.098,5,0.088,7,0.322,8,0.318,14,0.678,21,0.615,22,0.017,23,1.897,24,0.443,25,1.877,27,1.135,30,0.513,32,0.098,35,0.007,36,0.007,44,1.143,45,1.066,50,1.213,55,0.237,57,0.741,63,0.199,64,0.176,65,0.442,66,0.74,67,0.482,68,0.482,69,0.482,76,0.423,77,1.582,81,0.621,84,1.683,85,1.677,86,0.988,87,0.678,88,0.772,89,1.626,95,0.772,97,0.772,103,1.957,106,1.789,107,2.389,110,0.74,117,1.67,123,1.433,127,0.955,128,0.669,129,1.104,131,1.235,138,1.949,156,1.43,158,1.67,160,2.264,163,0.596,165,0.893,166,1.56,167,0.678,168,1.103,170,0.988,171,0.988,172,0.775,175,0.811,176,0.775,177,0.462,178,0.462,179,1.042,181,0.482,193,2.035,196,2.953,197,0.775,198,1.877,200,1.187,201,1.67,202,2.089,203,1.503,210,0.482,211,0.772,212,0.74,213,0.405,214,1.104,215,0.482,216,0.966,217,0.442,218,0.482,219,0.442,220,0.708,221,0.482,222,0.442,223,0.482,224,0.442,225,0.482,226,0.442,227,0.482,228,0.482,229,0.442,230,0.482,231,0.442,232,0.482,233,0.442,234,0.482,235,0.442,236,0.482,237,0.442,238,0.482,239,0.442,240,0.482,241,0.442,242,0.482,243,0.442,244,0.482,245,0.442,246,0.482,247,0.442,248,0.482,249,0.442,250,0.482,251,0.442,252,0.37,253,0.442,254,0.482,255,0.442,256,0.772,257,0.482,258,0.442,259,0.482,260,0.442,261,0.482,262,0.442,263,1.226,264,0.482,265,0.442,266,0.482,267,1.013,268,1.768,269,0.482,270,0.442,271,0.442,272,0.462,273,0.423,274,0.462,275,0.482,279,1.626,302,1.485,310,1.485,321,0.988,333,0.988,340,3.552,346,2.264,356,1.042,366,1.67,370,2.505,373,1.451,374,3.64,376,0.775,412,1.042,428,2.767,455,1.103,457,1.588,530,2.324,531,3.325,628,2.211,629,2.908,633,2.908,641,1.588,663,1.25,664,1.341,1003,3.883,1032,2.324,1037,1.25,1049,1.451,1066,2.908,1067,3.183,1068,2.688,1078,2.908,1079,1.341,1086,1.772,1087,1.772,1088,1.451,1089,1.451,1099,4.908,1106,2.324,1109,1.451,1186,3.552,1188,3.552,1189,2.908,1194,2.324,1240,1.341,1271,1.588,1287,2.839,1288,2.839,1392,1.772,1443,1.588,1497,5.232,1579,5.727,1580,1.772,1581,3.286,1582,4.111,1583,4.111,1584,4.111,1585,3.286,1586,3.286,1587,4.111,1588,4.111,1589,4.111,1590,4.111,1591,4.111,1592,4.111,1593,4.062,1594,4.701,1595,4.701,1596,4.701,1597,3.286,1598,3.286,1599,3.552,1600,4.111,1601,4.111,1602,4.111,1603,2.839,1604,4.111,1605,2.051,1606,2.051,1607,2.051,1608,2.051,1609,2.051,1610,2.051,1611,2.051,1612,2.051,1613,2.051,1614,2.051,1615,3.286,1616,5.144,1617,2.051,1618,3.286,1619,3.286,1620,2.051,1621,4.111,1622,2.051,1623,3.286,1624,2.051,1625,2.051,1626,2.051,1627,2.051,1628,2.051,1629,3.286,1630,2.051,1631,3.286,1632,2.051,1633,4.111,1634,3.286,1635,2.051,1636,3.286,1637,2.051,1638,2.051,1639,3.286,1640,2.051,1641,2.051,1642,2.051,1643,2.051,1644,2.051,1645,2.051,1646,2.051,1647,2.051,1648,2.051,1649,2.051,1650,2.051,1651,2.051,1652,2.051,1653,2.051,1654,2.051,1655,3.286,1656,2.051,1657,2.051,1658,5.144,1659,2.051,1660,4.111,1661,2.051,1662,2.051,1663,2.051,1664,2.051,1665,2.051,1666,2.051,1667,2.051,1668,3.286,1669,3.286,1670,2.051,1671,2.051,1672,2.051,1673,2.051,1674,2.051,1675,2.051,1676,2.051,1677,2.051,1678,3.286,1679,3.286,1680,3.286,1681,3.286,1682,3.286,1683,3.286,1684,3.286,1685,3.286]],["title/interfaces/UploadModel.html",[0,0.94,279,1.517]],["body/interfaces/UploadModel.html",[0,1.189,2,1.535,3,0.184,4,0.231,5,0.208,7,0.332,8,0.591,14,2.322,21,1.2,22,0.017,24,0.536,25,4.222,30,0.451,32,0.231,35,0.013,36,0.013,49,3.569,56,4.011,57,1.751,128,0.856,129,1.435,138,2.773,252,1.268,277,4.011,278,4.592,279,2.417,280,2.335,330,4.592,1059,3.777,1174,4.011,1479,6.067,1480,6.067,1481,4.967,1482,4.592,1686,4.188,1687,7.023]],["title/injectables/UploadService.html",[37,1.024,1029,2.337]],["body/injectables/UploadService.html",[2,1.383,3,0.166,4,0.209,5,0.273,7,0.299,8,0.553,22,0.017,24,0.436,28,2.406,30,0.549,32,0.209,33,2.106,35,0.012,36,0.012,37,1.525,39,1.901,44,0.719,45,0.686,50,1.048,55,0.504,57,1.578,61,2.662,62,2.496,63,0.423,103,2.016,110,1.286,127,1.661,128,0.776,129,1.342,131,1.286,163,1.27,166,1.325,172,1.651,252,0.789,279,1.728,280,2.104,283,3.736,284,4.504,290,3.383,294,4.504,295,4.042,297,2.662,298,2.857,299,3.09,300,2.904,301,4.937,302,1.578,303,3.774,304,3.774,305,3.774,306,3.774,307,3.774,310,2.3,661,5.427,1029,3.482,1057,4.778,1059,3.074,1060,3.774,1510,4.937,1593,3.774,1688,3.774,1689,5.714,1690,5.714,1691,4.369,1692,5.714,1693,5.714,1694,5.714,1695,5.835,1696,4.369,1697,4.369,1698,4.369,1699,4.369,1700,4.369,1701,4.369,1702,4.369,1703,4.369,1704,4.369,1705,5.714,1706,4.369,1707,4.369,1708,4.369,1709,4.369,1710,4.369,1711,4.369,1712,4.369,1713,4.369,1714,5.714,1715,4.369,1716,4.369,1717,4.369,1718,4.369]],["title/components/UploadsComponent.html",[64,0.164,270,0.827]],["body/components/UploadsComponent.html",[1,0.647,3,0.068,4,0.086,5,0.077,7,0.328,8,0.285,14,0.974,21,0.908,22,0.017,23,1.375,24,0.442,27,2.097,28,0.677,30,0.53,32,0.086,33,0.974,35,0.006,36,0.006,44,1.175,45,1.121,50,1.229,55,0.207,57,0.648,63,0.174,64,0.161,65,0.936,66,0.663,67,0.421,68,0.421,69,0.421,73,1.064,74,1.555,76,0.37,77,1.419,81,0.82,84,1.653,85,1.646,86,1.806,87,0.608,88,0.692,89,1.484,90,2.142,91,2.653,92,1.806,93,2.653,95,0.692,97,0.692,103,2.454,106,1.632,107,2.207,110,0.663,112,1.801,119,1.906,123,1.642,127,1.262,128,0.801,129,1.02,131,1.366,138,0.743,144,3.281,145,2.844,156,1.282,158,1.498,160,2.311,163,0.521,164,0.78,165,0.78,166,1.138,167,0.593,168,0.964,170,0.864,171,0.864,172,0.677,173,1.388,174,4.145,175,0.709,176,0.677,177,0.404,178,0.404,179,0.911,181,0.421,190,2.207,191,3.363,192,3.363,193,1.898,196,2.581,197,0.677,198,1.024,200,1.064,201,0.911,202,0.911,203,0.82,210,0.421,211,0.692,212,0.663,213,0.354,214,1.02,215,0.421,216,0.881,217,0.386,218,0.421,219,0.386,220,0.635,221,0.421,222,0.386,223,0.421,224,0.386,225,0.421,226,0.386,227,0.421,228,0.421,229,0.386,230,0.421,231,0.386,232,0.421,233,0.386,234,0.421,235,0.936,236,0.421,237,0.386,238,0.421,239,0.386,240,0.421,241,0.386,242,0.421,243,0.386,244,0.421,245,0.386,246,0.421,247,0.936,248,0.421,249,0.386,250,0.421,251,0.936,252,0.866,253,0.386,254,0.421,255,0.386,256,0.692,257,0.421,258,0.386,259,0.421,260,0.386,261,0.421,262,0.635,263,1.028,264,0.421,265,0.635,266,0.421,267,0.936,268,0.844,269,0.421,270,0.936,271,1.175,272,0.404,273,0.37,274,0.404,275,0.421,279,0.709,280,0.864,302,2.372,310,1.355,321,2.484,323,2.741,338,2.653,347,2.904,368,2.546,373,1.268,376,0.677,379,0.709,381,1.093,382,0.78,385,2.281,387,1.172,455,0.964,500,3.368,628,2.017,629,2.653,663,1.093,664,1.172,1037,1.093,1059,3.062,1066,2.653,1095,2.904,1106,2.084,1109,1.268,1154,3.363,1159,1.549,1174,3.113,1195,3.752,1222,2.281,1233,2.546,1241,1.549,1276,2.546,1278,2.546,1456,3.363,1482,3.137,1498,1.388,1551,1.388,1555,3.24,1579,1.388,1599,2.546,1603,2.546,1719,1.549,1720,3.649,1721,3.751,1722,3.751,1723,3.751,1724,2.947,1725,2.947,1726,3.751,1727,3.751,1728,3.751,1729,3.751,1730,3.751,1731,3.751,1732,3.751,1733,3.751,1734,3.751,1735,2.653,1736,4.343,1737,2.947,1738,4.343,1739,4.343,1740,2.947,1741,4.343,1742,4.343,1743,2.947,1744,3.24,1745,1.793,1746,2.947,1747,1.793,1748,2.947,1749,1.793,1750,1.793,1751,1.793,1752,1.793,1753,2.947,1754,1.793,1755,1.793,1756,1.793,1757,2.947,1758,1.793,1759,1.793,1760,1.793,1761,1.793,1762,2.947,1763,1.793,1764,1.793,1765,2.947,1766,1.793,1767,1.793,1768,1.793,1769,1.793,1770,2.947,1771,1.793,1772,1.793,1773,1.793,1774,1.793,1775,2.947,1776,1.793,1777,1.793,1778,1.793,1779,1.793,1780,1.793,1781,1.793,1782,2.947,1783,1.793,1784,1.793,1785,2.947,1786,1.793,1787,2.904,1788,1.793,1789,1.793,1790,1.793,1791,1.388,1792,2.281,1793,1.388,1794,1.793,1795,1.793,1796,1.793,1797,1.793,1798,1.793,1799,1.793,1800,1.793,1801,1.793,1802,1.793,1803,4.798,1804,3.751,1805,1.793,1806,2.947,1807,1.793,1808,1.793,1809,1.793,1810,1.793,1811,1.793,1812,1.793,1813,1.793,1814,1.793,1815,2.947,1816,1.793,1817,3.751,1818,1.793,1819,4.343,1820,1.793,1821,1.793,1822,1.793,1823,1.793,1824,1.793,1825,1.793,1826,1.793,1827,1.793,1828,1.793,1829,1.793,1830,1.793,1831,1.793,1832,1.793,1833,1.793,1834,2.947,1835,2.947,1836,1.793,1837,1.793,1838,1.793,1839,1.793,1840,3.751,1841,1.793,1842,1.793,1843,1.793,1844,1.793,1845,1.793,1846,1.793,1847,1.793,1848,1.793,1849,1.793,1850,1.793,1851,1.793,1852,1.793,1853,1.793,1854,1.793,1855,2.947,1856,1.793,1857,1.793,1858,1.793,1859,4.343,1860,2.947,1861,2.947,1862,2.947]],["title/injectables/UploadsGQL.html",[37,1.024,1720,2.713]],["body/injectables/UploadsGQL.html",[3,0.179,4,0.225,5,0.202,7,0.323,8,0.581,9,2.051,12,1.954,14,1.984,15,2.051,18,2.167,19,2.155,21,1.098,22,0.017,24,0.452,30,0.53,32,0.343,33,1.558,35,0.013,36,0.013,37,1.602,39,2.051,41,3.228,42,3.97,43,4.023,44,0.776,45,0.74,46,3.428,49,3.05,50,0.776,52,3.657,53,2.535,54,2.692,55,0.544,57,1.702,63,0.456,128,0.875,179,2.395,252,1.192,271,1.423,277,2.692,279,2.374,280,2.27,319,3.649,320,3.649,321,3.18,323,3.771,1059,3.861,1174,4.1,1481,3.334,1482,4.693,1489,4.646,1492,4.646,1720,4.245,1735,4.67,1787,3.649,1863,3.334,1864,4.713,1865,4.072,1866,4.072,1867,4.072]],["title/classes/Validation.html",[63,0.371,510,2.713]],["body/classes/Validation.html",[3,0.201,4,0.253,5,0.227,7,0.363,21,1.13,22,0.017,23,2.045,24,0.363,30,0.392,32,0.253,33,2.136,35,0.013,36,0.015,50,0.873,63,0.513,81,1.22,110,1.453,127,1.541,128,0.646,129,1.246,131,1.193,164,2.307,310,2.618,510,4.568,537,5.579,634,3.751,1868,5.303,1869,4.581,1870,6.964,1871,6.458,1872,6.964,1873,5.303,1874,5.303,1875,6.964,1876,6.458,1877,5.303,1878,5.303,1879,5.303,1880,5.303,1881,5.303,1882,5.303,1883,5.303,1884,5.303,1885,5.303]],["title/coverage.html",[1886,4.526]],["body/coverage.html",[0,1.763,1,0.513,3,0.113,5,0.127,6,3.385,22,0.017,24,0.203,27,2.789,34,2.103,35,0.009,36,0.009,37,1.897,38,1.944,40,2.302,56,1.698,63,0.288,64,0.331,65,0.641,70,2.568,71,2.568,72,3.667,83,2.103,180,1.811,190,2.222,213,0.587,217,0.641,219,0.641,222,0.641,224,0.641,226,0.641,229,0.641,231,0.641,233,0.641,235,0.641,237,0.641,239,0.641,241,0.641,243,0.641,245,0.641,247,0.641,249,0.641,251,0.641,253,0.641,255,0.641,258,0.641,260,0.641,262,0.641,263,0.789,265,0.641,267,0.641,268,0.984,270,0.641,273,0.613,276,3.385,279,1.176,281,1.944,282,2.568,300,2.905,302,1.074,316,2.302,317,2.302,327,2.103,328,3.385,331,2.103,334,2.568,379,1.176,380,1.511,381,1.811,383,2.302,384,2.302,386,2.302,423,2.568,424,2.568,429,1.511,447,2.103,459,2.568,470,2.302,471,2.302,473,2.302,477,2.103,478,2.568,482,2.568,483,2.568,510,2.103,542,2.568,586,1.811,587,2.103,621,3.385,622,3.385,624,2.568,625,2.302,626,2.568,692,2.568,697,2.568,731,2.568,1003,2.103,1004,3.092,1005,3.39,1007,2.302,1013,2.568,1023,2.568,1027,2.568,1028,2.568,1029,1.811,1030,2.103,1057,2.103,1058,2.568,1061,2.302,1062,2.568,1064,2.568,1078,2.103,1080,2.568,1081,2.568,1092,2.568,1119,2.568,1123,2.568,1127,3.385,1138,2.302,1156,2.568,1157,2.568,1158,2.568,1168,2.568,1172,2.568,1173,2.568,1185,3.385,1190,2.103,1197,2.302,1244,2.302,1246,2.302,1290,2.568,1291,2.568,1292,2.568,1293,2.568,1350,2.302,1360,2.568,1363,3.385,1364,2.568,1404,2.302,1413,2.568,1472,2.568,1475,2.103,1476,3.092,1487,2.302,1497,3.667,1498,2.302,1499,2.568,1551,2.302,1552,2.568,1579,2.302,1580,2.568,1686,2.568,1688,2.568,1719,2.568,1720,2.103,1735,2.103,1791,2.302,1792,2.302,1793,2.302,1863,3.092,1869,2.568,1886,2.568,1887,2.973,1888,2.973,1889,2.973,1890,2.973,1891,3.385,1892,6.895,1893,2.302,1894,7.879,1895,7.551,1896,2.568,1897,5.185,1898,4.372,1899,2.973,1900,4.372,1901,2.568,1902,2.568,1903,4.939,1904,3.777,1905,3.777,1906,2.568,1907,3.777,1908,2.973,1909,2.973,1910,5.717,1911,4.372,1912,4.372,1913,4.372,1914,2.568,1915,2.973,1916,3.385,1917,2.302,1918,2.568,1919,6.895,1920,2.568,1921,2.568,1922,2.568,1923,2.568,1924,2.568,1925,2.568,1926,2.568,1927,2.973,1928,2.973,1929,2.973,1930,4.372,1931,2.973,1932,2.973,1933,2.973,1934,5.185,1935,2.973,1936,2.973,1937,2.568,1938,2.568,1939,2.568,1940,2.973,1941,4.939,1942,2.568,1943,2.568,1944,2.568,1945,3.777,1946,2.973]],["title/dependencies.html",[1947,2.766,1948,3.986]],["body/dependencies.html",[22,0.017,35,0.013,36,0.013,53,2.676,54,2.841,55,0.574,164,2.164,166,2.384,167,1.645,172,1.879,175,1.968,176,1.879,178,1.119,179,2.528,373,5.262,374,3.852,376,1.879,378,3.852,663,3.031,1088,4.391,1089,4.391,1240,3.252,1443,3.852,1791,3.852,1948,4.297,1949,4.974,1950,7.693,1951,4.974,1952,4.974,1953,4.974,1954,4.974,1955,4.974,1956,4.974,1957,4.974,1958,4.974,1959,4.974,1960,7.827,1961,4.974,1962,4.974,1963,4.974,1964,4.974,1965,4.974,1966,4.974,1967,4.974,1968,6.209,1969,4.974,1970,4.974,1971,4.974,1972,4.974,1973,4.974,1974,4.974,1975,4.974,1976,4.974,1977,4.974,1978,4.974,1979,4.974,1980,4.974]],["title/miscellaneous/enumerations.html",[1981,1.722,1982,3.986]],["body/miscellaneous/enumerations.html",[7,0.37,22,0.017,26,3.515,35,0.014,36,0.014,45,1.253,220,1.165,252,1.18,263,1.18,299,4.622,488,3.535,1414,4.671,1981,2.908,1982,4.671,1983,5.406,1984,5.406,1985,5.406,1986,5.406,1987,5.406,1988,5.406,1989,5.406,1990,5.406,1991,5.406,1992,5.406,1993,5.406,1994,5.406,1995,5.406,1996,5.406,1997,5.406,1998,5.406,1999,5.406,2000,5.406,2001,5.406,2002,5.406,2003,5.406,2004,7.296,2005,6.534,2006,6.534,2007,6.534,2008,5.406,2009,6.534]],["title/miscellaneous/functions.html",[1981,1.722,2010,3.986]],["body/miscellaneous/functions.html",[7,0.339,21,1.059,22,0.017,23,1.567,24,0.509,26,3.632,27,1.71,35,0.013,36,0.013,44,0.815,45,0.777,123,1.379,127,2.191,128,0.919,129,1.771,131,1.715,138,2.052,145,3.089,252,0.894,329,3.833,333,2.981,345,3.016,346,3.252,380,3.146,386,4.793,447,4.378,1174,2.828,1197,4.793,1203,4.277,1244,4.793,1744,5.834,1793,4.793,1891,3.833,1893,4.793,1916,3.833,1917,5.229,1941,4.277,1942,5.347,1943,4.277,1944,5.834,1945,4.277,1981,2.663,2010,4.277,2011,4.277,2012,4.277,2013,7.076,2014,4.95,2015,6.19,2016,4.95,2017,4.95,2018,4.95,2019,6.19,2020,4.95,2021,4.277,2022,4.95,2023,4.95,2024,4.95,2025,4.95]],["title/index.html",[7,0.219,2026,3.202,2027,3.202]],["body/index.html",[22,0.016,35,0.015,36,0.015,85,1.4,2028,6.222]],["title/modules.html",[2029,4.526]],["body/modules.html",[22,0.015,35,0.015,36,0.015,2029,5.409]],["title/overview.html",[2030,4.526]],["body/overview.html",[2,1.935,22,0.015,28,2.653,29,2.794,35,0.015,36,0.015,39,2.659,63,0.592,66,1.375,213,1.207,1079,3.995,1914,5.279,2030,5.279,2031,6.11,2032,6.11]],["title/properties.html",[8,0.447,1947,2.766]],["body/properties.html",[8,0.598,22,0.016,35,0.015,36,0.015,283,4.036,1120,4.365,2033,6.172,2034,6.172,2035,6.172]],["title/miscellaneous/typealiases.html",[1981,1.722,2036,4.614]],["body/miscellaneous/typealiases.html",[3,0.263,7,0.32,17,2.876,22,0.014,24,0.543,27,1.616,28,1.767,29,2.139,35,0.012,36,0.012,40,3.621,52,4.462,58,5.159,59,5.159,60,5.159,154,4.624,263,1.188,288,5.159,292,5.159,316,3.621,317,5.366,325,5.159,326,5.159,448,4.224,559,5.159,565,5.159,1004,3.308,1005,4.867,1009,5.159,1010,5.159,1063,6.843,1350,3.621,1359,5.159,1476,4.224,1484,5.159,1485,5.159,1486,5.159,1487,5.366,1492,4.624,1493,5.159,1495,5.159,1496,5.159,1695,5.159,1787,4.624,1863,3.308,1865,5.159,1866,5.159,1981,2.516,2037,4.677,2038,6.579,2039,6.579,2040,6.579,2041,5.159,2042,5.972,2043,5.972,2044,5.972,2045,4.677,2046,4.677,2047,7.323,2048,4.677,2049,5.683,2050,4.677,2051,4.677,2052,4.677,2053,4.677,2054,4.677]],["title/miscellaneous/variables.html",[1981,1.722,2055,3.986]],["body/miscellaneous/variables.html",[1,0.353,6,1.584,7,0.14,9,1.786,10,1.579,11,1.667,12,1.701,13,2.144,14,1.904,15,1.786,16,1.667,17,1.579,18,1.695,19,1.877,20,1.764,21,0.702,22,0.017,23,2.31,24,0.451,27,2.751,28,2.445,29,0.936,33,1.813,34,2.319,35,0.007,36,0.007,38,1.338,42,1.169,44,1.172,45,1.118,46,1.873,49,3.138,53,1.1,77,0.985,78,4.074,80,1.447,81,1.196,110,0.46,128,0.572,160,0.985,177,0.46,187,1.584,197,0.773,200,0.739,220,0.441,252,0.369,263,0.592,271,0.884,277,1.169,281,1.338,300,3.138,310,2.08,319,1.584,320,1.584,321,1.976,323,2.344,346,1.976,362,1.04,366,1.667,379,0.809,380,1.667,381,1.247,383,2.539,384,2.539,403,3.177,412,1.04,429,1.667,450,2.539,457,1.584,470,2.539,488,1.338,543,4.055,548,1.767,585,1.767,586,1.247,587,2.319,611,1.584,621,1.584,622,2.539,634,3.634,693,1.584,1004,1.447,1005,2.144,1006,1.767,1007,2.539,1011,1.767,1012,1.767,1014,3.545,1015,3.545,1016,3.545,1017,4.438,1018,3.545,1019,1.767,1021,1.767,1022,2.833,1024,1.584,1029,1.247,1059,2.525,1083,3.634,1120,1.447,1127,1.584,1134,5.171,1138,2.539,1141,3.585,1142,4.245,1143,1.767,1144,1.584,1145,1.767,1146,1.767,1147,2.539,1148,1.584,1149,1.767,1150,1.767,1151,1.767,1174,2.681,1185,1.584,1194,2.319,1246,2.539,1247,1.767,1248,1.767,1249,1.767,1319,1.767,1333,6.193,1404,1.584,1481,1.447,1482,3.069,1489,2.539,1735,2.319,1792,2.539,1863,1.447,1867,1.767,1891,1.584,1893,1.584,1896,2.833,1901,1.767,1902,2.833,1903,2.833,1904,3.545,1905,3.545,1906,2.833,1907,3.545,1916,1.584,1917,1.584,1918,3.545,1920,1.767,1921,2.833,1922,2.833,1923,1.767,1924,2.833,1925,1.767,1926,2.833,1937,1.767,1938,1.767,1939,1.767,1981,1.1,2011,1.767,2012,1.767,2021,1.767,2041,1.767,2049,1.767,2055,1.767,2056,2.046,2057,2.046,2058,2.046,2059,2.046,2060,2.046,2061,2.046,2062,2.046,2063,2.046,2064,2.046,2065,4.694,2066,2.046,2067,2.046,2068,2.046,2069,2.046,2070,2.046,2071,2.046,2072,2.046,2073,2.046,2074,2.046,2075,2.046,2076,2.046,2077,4.104,2078,2.046,2079,2.046,2080,3.279,2081,3.279,2082,2.046,2083,3.279,2084,2.046,2085,2.046,2086,2.046,2087,2.046,2088,2.046,2089,2.046,2090,2.046,2091,3.279,2092,2.046,2093,2.046,2094,2.046,2095,3.279,2096,4.104,2097,2.046,2098,2.046,2099,2.046,2100,2.046,2101,2.046,2102,2.046,2103,2.046,2104,2.046,2105,2.046,2106,2.046,2107,5.138,2108,7.169,2109,2.046,2110,7.169,2111,6.59,2112,7.169,2113,6.334,2114,5.483,2115,6.334,2116,3.279,2117,5.138,2118,2.046,2119,2.046,2120,2.046,2121,2.046,2122,3.279,2123,2.046,2124,2.046,2125,3.279,2126,2.046,2127,4.104,2128,4.694,2129,2.046,2130,2.046,2131,2.046,2132,2.046,2133,2.046,2134,2.046,2135,2.046,2136,2.046,2137,2.046,2138,2.046,2139,2.046,2140,2.046,2141,2.046,2142,2.046,2143,2.046,2144,6.94,2145,6.94,2146,6.94,2147,4.694,2148,2.046,2149,2.046,2150,2.046]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":27,"title":{},"body":{"interfaces/Account.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.2",{"_index":2034,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1980,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1930,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":1936,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1940,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["01.01.2001",{"_index":1682,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["1",{"_index":28,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AuthComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1915,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2032,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1914,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["18.0.0",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":29,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.32.1",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":1978,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1053,"title":{},"body":{"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["200ms",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":2031,"title":{},"body":{"overview.html":{}}}],["27",{"_index":1435,"title":{},"body":{"components/SignUpComponent.html":{}}}],["3",{"_index":1549,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["3.0.0",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["3.83.0",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["3.84.0",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1434,"title":{},"body":{"components/SignUpComponent.html":{}}}],["4.0.0",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1412,"title":{},"body":{"components/SignInComponent.html":{}}}],["401",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["409",{"_index":1469,"title":{},"body":{"components/SignUpComponent.html":{}}}],["5",{"_index":322,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["50",{"_index":1404,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["500ms",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1976,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":536,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["8.0.1",{"_index":1975,"title":{},"body":{"dependencies.html":{}}}],["8.13.0",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["a,optio",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a.localecompare(b",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["a.url",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.url.includes('/404",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects.includes('/404",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ab",{"_index":823,"title":{},"body":{"components/DashboardComponent.html":{}}}],["absolute",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":1876,"title":{},"body":{"classes/Validation.html":{}}}],["accept",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token",{"_index":479,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["accessors",{"_index":1603,"title":{},"body":{"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["account($username",{"_index":47,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account(where",{"_index":48,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account.avatar",{"_index":1261,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.avatar.url",{"_index":1262,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.birthday",{"_index":1260,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name",{"_index":1264,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name.trim",{"_index":1266,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.interface",{"_index":623,"title":{},"body":{"interfaces/AuthenticatedUser.html":{}}}],["account.last_name",{"_index":1265,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.last_name.trim",{"_index":1267,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.model",{"_index":481,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["account.vk_avatar",{"_index":1263,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account/avatar",{"_index":2002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["account_avatar",{"_index":2001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accountfilter",{"_index":99,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountgql",{"_index":38,"title":{"injectables/AccountGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountid",{"_index":1279,"title":{},"body":{"components/ProfileComponent.html":{}}}],["accountinfogql",{"_index":104,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinfoquery",{"_index":105,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinput",{"_index":182,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinputcomponent",{"_index":65,"title":{"components/AccountInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["accountmodel",{"_index":56,"title":{"interfaces/AccountModel.html":{}},"body":{"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/AuthModel.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["accountqueryref",{"_index":60,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountresponse",{"_index":58,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accounts",{"_index":100,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountservice",{"_index":281,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountsfilter",{"_index":101,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountshortmodel",{"_index":180,"title":{"interfaces/AccountShortModel.html":{}},"body":{"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusername($username",{"_index":318,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountsinfobyusernamegql",{"_index":83,"title":{"injectables/AccountsInfoByUsernameGQL.html":{}},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusernamequeryref",{"_index":154,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernameresponse",{"_index":325,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernamevariables",{"_index":326,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountslist",{"_index":102,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountvariables",{"_index":59,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accusamus",{"_index":781,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusamusreiciendis",{"_index":990,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantium",{"_index":836,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantiumquidem",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actions",{"_index":1618,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["activatedroute",{"_index":444,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["activeitemindex",{"_index":463,"title":{},"body":{"components/AuthComponent.html":{}}}],["actual_component",{"_index":275,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["ad",{"_index":889,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisci",{"_index":792,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisicing",{"_index":741,"title":{},"body":{"components/DashboardComponent.html":{}}}],["administrator",{"_index":2009,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":1365,"title":{},"body":{"components/SignInComponent.html":{}}}],["alerts",{"_index":106,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["alias",{"_index":914,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliases",{"_index":2037,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliquam",{"_index":839,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquam,nemo",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquamearum",{"_index":995,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid!soluta",{"_index":918,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquidpraesentium",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{}}}],["allow",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amet",{"_index":739,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ametimpedit",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{}}}],["angular",{"_index":54,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":176,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":297,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/SignUpComponent.html":{},"injectables/UploadService.html":{}}}],["angular/compiler",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":55,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":170,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["angular/forms",{"_index":164,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1088,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animations",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/UploadsComponent.html":{}}}],["animi",{"_index":871,"title":{},"body":{"components/DashboardComponent.html":{}}}],["animicommodi",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aperiam",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{}}}],["api",{"_index":299,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["apierror",{"_index":327,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["apiurl",{"_index":1014,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":53,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["apollo/client",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/errors",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollo_options",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apolloclientoptions",{"_index":2016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apolloerror",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollooptionsfactory",{"_index":1917,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngondestroy",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngoninit",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/pass/auth",{"_index":445,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["app_initializer",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":217,"title":{"components/AppComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":1015,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory",{"_index":1893,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory(config",{"_index":2017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applicationconfig",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["architecto",{"_index":814,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architecto,molestias",{"_index":967,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architectonesciunt",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{}}}],["area",{"_index":1341,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["arguments",{"_index":1309,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["array(10",{"_index":1782,"title":{},"body":{"components/UploadsComponent.html":{}}}],["array.isarray(currentvalue",{"_index":1837,"title":{},"body":{"components/UploadsComponent.html":{}}}],["asperiores",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernatur",{"_index":842,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernaturquia",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{}}}],["assumenda",{"_index":912,"title":{},"body":{"components/DashboardComponent.html":{}}}],["async",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{}}}],["atque",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{}}}],["atqueeaque",{"_index":919,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aut",{"_index":787,"title":{},"body":{"components/DashboardComponent.html":{}}}],["autem",{"_index":831,"title":{},"body":{"components/DashboardComponent.html":{}}}],["auth",{"_index":220,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":223,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["auth.$$isauth.pipe",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.component.html",{"_index":461,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":462,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.ngoninit",{"_index":465,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth/logout",{"_index":1993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh",{"_index":1995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh/clear",{"_index":1997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/sign",{"_index":1991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/token",{"_index":1989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_me",{"_index":1987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh",{"_index":1994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh_clear",{"_index":1996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_in",{"_index":1988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_out",{"_index":1992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_up",{"_index":1990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authcallback",{"_index":449,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngondestroy",{"_index":430,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngoninit",{"_index":432,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallbackcomponent",{"_index":219,"title":{"components/AuthCallbackComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["authcallbackdto",{"_index":448,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["authcallbackguard",{"_index":1922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcomponent",{"_index":222,"title":{"components/AuthComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["authenticatedroutes",{"_index":1133,"title":{},"body":{"components/NavComponent.html":{}}}],["authenticateduser",{"_index":586,"title":{"interfaces/AuthenticatedUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/UploadFileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":1924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodel",{"_index":477,"title":{"interfaces/AuthModel.html":{}},"body":{"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authorization",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authpass",{"_index":511,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngondestroy",{"_index":494,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngoninit",{"_index":496,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpasscomponent",{"_index":224,"title":{"components/AuthPassComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":379,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autquia",{"_index":924,"title":{},"body":{"components/DashboardComponent.html":{}}}],["avatar",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["avatar'},{'name",{"_index":228,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["avatar.component",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{}}}],["avatar.component.html",{"_index":630,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.scss",{"_index":631,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts",{"_index":626,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["avatar.component.ts:108",{"_index":647,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:133",{"_index":651,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:149",{"_index":646,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:155",{"_index":650,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:47",{"_index":653,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:48",{"_index":657,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:49",{"_index":642,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:65",{"_index":656,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:67",{"_index":659,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:69",{"_index":660,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:70",{"_index":654,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:72",{"_index":648,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:76",{"_index":644,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar/change",{"_index":625,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["avataralreadyexists",{"_index":632,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["await",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["b",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["baggage",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beatae",{"_index":784,"title":{},"body":{"components/DashboardComponent.html":{}}}],["before",{"_index":1306,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["behaviorsubject",{"_index":435,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(false",{"_index":503,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(true",{"_index":436,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["between",{"_index":1342,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["big",{"_index":1326,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["birthday",{"_index":10,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["blanditiis",{"_index":843,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blanditiislaudantium",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blob",{"_index":307,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body",{"_index":301,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('acl",{"_index":1708,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('compress",{"_index":1701,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('file",{"_index":304,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('id",{"_index":309,"title":{},"body":{"injectables/AccountService.html":{}}}],["body.append('name",{"_index":1706,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('originalname",{"_index":1703,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('path",{"_index":1699,"title":{},"body":{"injectables/UploadService.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"injectables/ScrollService.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"miscellaneous/functions.html":{}}}],["borderradius",{"_index":1403,"title":{},"body":{"components/SignInComponent.html":{}}}],["bottom",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":534,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["browser",{"_index":1089,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["bucket",{"_index":1479,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["cache",{"_index":187,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["calculated",{"_index":1347,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["callback",{"_index":425,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback'},{'name",{"_index":221,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["callback.component.html",{"_index":426,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.scss",{"_index":427,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts",{"_index":424,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["callback.component.ts:23",{"_index":441,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:24",{"_index":434,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:25",{"_index":442,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:27",{"_index":443,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:29",{"_index":437,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:30",{"_index":439,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:33",{"_index":433,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:57",{"_index":431,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.guard.ts",{"_index":1921,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["callbackurl",{"_index":464,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["canactivatefn",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":531,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["catcherror",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["catcherror((err",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"miscellaneous/variables.html":{}}}],["catcherror((res",{"_index":674,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["change",{"_index":227,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["changeavatar",{"_index":636,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["changeavatarcomponent",{"_index":226,"title":{"components/ChangeAvatarComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["charts",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["chatonly",{"_index":2006,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chats",{"_index":693,"title":{},"body":{"components/ChatsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["chats'},{'name",{"_index":230,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["chats.component.html",{"_index":694,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chats.component.scss",{"_index":695,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chatscomponent",{"_index":229,"title":{"components/ChatsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["checkcontrol",{"_index":1879,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors['matching",{"_index":1882,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.errors",{"_index":1881,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.value",{"_index":1884,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":1872,"title":{},"body":{"classes/Validation.html":{}}}],["class",{"_index":63,"title":{"classes/Validation.html":{}},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1868,"title":{},"body":{"classes/Validation.html":{}}}],["clear",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["clickupload",{"_index":1600,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["client",{"_index":2028,"title":{},"body":{"index.html":{}}}],["close",{"_index":1098,"title":{},"body":{"components/MeComponent.html":{}}}],["closemenu",{"_index":701,"title":{},"body":{"injectables/ConfigService.html":{},"components/NavComponent.html":{}}}],["code",{"_index":332,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{}}}],["commerce",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["commodi",{"_index":783,"title":{},"body":{"components/DashboardComponent.html":{}}}],["commonmodule",{"_index":89,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["complete",{"_index":1114,"title":{},"body":{"components/MeComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["component",{"_index":64,"title":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":215,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["components",{"_index":66,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"overview.html":{}}}],["components/account",{"_index":1796,"title":{},"body":{"components/UploadsComponent.html":{}}}],["components/extension",{"_index":1795,"title":{},"body":{"components/UploadsComponent.html":{}}}],["components/header",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["components/me",{"_index":1076,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/menu",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["components/nav",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["components/not",{"_index":1797,"title":{},"body":{"components/UploadsComponent.html":{}}}],["components/oops",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["components/permission",{"_index":1794,"title":{},"body":{"components/UploadsComponent.html":{}}}],["compress",{"_index":1521,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["computed",{"_index":148,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["config",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"miscellaneous/functions.html":{}}}],["configservice",{"_index":380,"title":{"injectables/ConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["confirmform",{"_index":1418,"title":{},"body":{"components/SignUpComponent.html":{}}}],["confirmpass",{"_index":501,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["consectetur",{"_index":740,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequatur",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequaturmollitia",{"_index":917,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequuntur",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequunturcommodi",{"_index":983,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console",{"_index":1338,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["console.log(err",{"_index":457,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":33,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{}}}],["constructor(context",{"_index":640,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["constructor(el",{"_index":1299,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["constructor(fb",{"_index":490,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(private",{"_index":512,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/IFrameUrlPipe.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["container",{"_index":1396,"title":{},"body":{"components/SignInComponent.html":{}}}],["contains",{"_index":320,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":643,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["context.data.accountid",{"_index":668,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["context.data.avataralreadyexists",{"_index":670,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["context.data.uploadid",{"_index":1570,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["control",{"_index":634,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["control?.value",{"_index":1883,"title":{},"body":{"classes/Validation.html":{}}}],["controlname",{"_index":1874,"title":{},"body":{"classes/Validation.html":{}}}],["controls",{"_index":1877,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":1880,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":1885,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":1878,"title":{},"body":{"classes/Validation.html":{}}}],["controlvalueaccessor",{"_index":75,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["corporis",{"_index":881,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corporisdicta",{"_index":982,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corrupti",{"_index":876,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coverage",{"_index":1886,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":277,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["credentials",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["culpa",{"_index":805,"title":{},"body":{"components/DashboardComponent.html":{}}}],["culpaconsectetur",{"_index":923,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cum",{"_index":894,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cumque",{"_index":849,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditate",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatequasi",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatereiciendis",{"_index":969,"title":{},"body":{"components/DashboardComponent.html":{}}}],["currently",{"_index":1330,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentpath",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth/callback",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentscrolledy",{"_index":1334,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentstep",{"_index":1506,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["currentuser",{"_index":1727,"title":{},"body":{"components/UploadsComponent.html":{}}}],["currentvalue",{"_index":1834,"title":{},"body":{"components/UploadsComponent.html":{}}}],["currentvalue.includes(ext.trim",{"_index":1838,"title":{},"body":{"components/UploadsComponent.html":{}}}],["customicon",{"_index":1147,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":1287,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["dashboard",{"_index":732,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":232,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["dashboard.component.html",{"_index":733,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":734,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":231,"title":{"components/DashboardComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["data",{"_index":455,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["data.access_token",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar.url",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.birthday",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.email",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name.trim",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name.trim",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.roles.sort((a",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.sex",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.username",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_avatar",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_id",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":25,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{}}}],["datepipe",{"_index":1186,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["debitis",{"_index":884,"title":{},"body":{"components/DashboardComponent.html":{}}}],["debouncedsignal",{"_index":1942,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["debouncedsignal(sourcesignal",{"_index":2018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debouncetime",{"_index":173,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{},"components/UploadsComponent.html":{}}}],["debouncetime(1000",{"_index":192,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{},"components/UploadsComponent.html":{}}}],["debouncetimeinms",{"_index":2019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{}}}],["default",{"_index":44,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":50,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["delectus",{"_index":820,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delectusconsequuntur",{"_index":987,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deleniti",{"_index":827,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitipariatur",{"_index":988,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitiquaerat",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delete",{"_index":1593,"title":{},"body":{"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{}}}],["deleteupload(where",{"_index":1012,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyid($id",{"_index":1011,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidgql",{"_index":1003,"title":{"injectables/DeleteUploadByIdGQL.html":{}},"body":{"injectables/DeleteUploadByIdGQL.html":{},"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["deleteuploadbyidquery",{"_index":1007,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidresponse",{"_index":1009,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["deleteuploadbyidvariables",{"_index":1010,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":1948,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":283,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadService.html":{},"properties.html":{}}}],["deserunt",{"_index":799,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deseruntaut",{"_index":966,"title":{},"body":{"components/DashboardComponent.html":{}}}],["destroyref",{"_index":107,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["dev",{"_index":1020,"title":{},"body":{"interfaces/Env.html":{}}}],["dialog",{"_index":1587,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["dialogs",{"_index":1095,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["dialogsub",{"_index":1588,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["dicta",{"_index":872,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dignissimos",{"_index":899,"title":{},"body":{"components/DashboardComponent.html":{}}}],["directive",{"_index":213,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":272,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["disabled",{"_index":108,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["distinctio",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctioaliquid",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctiovoluptates",{"_index":984,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctuntilchanged",{"_index":174,"title":{},"body":{"components/AccountInputComponent.html":{},"components/UploadsComponent.html":{}}}],["dj29fnsadjsd82f249k293c139j1kd3",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["document",{"_index":43,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["documentation",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":737,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolore",{"_index":883,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorem",{"_index":906,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloremque",{"_index":847,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolores",{"_index":892,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus!aspernatur",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribusut",{"_index":998,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorum",{"_index":816,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dom",{"_index":68,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["dompurify",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["domsanitizer",{"_index":1087,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadListItemComponent.html":{}}}],["dto",{"_index":290,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["dto.compress.tostring",{"_index":1702,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.file",{"_index":305,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["dto.file.name",{"_index":1704,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.id",{"_index":308,"title":{},"body":{"injectables/AccountService.html":{}}}],["dto.name",{"_index":1705,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.path",{"_index":1700,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.private",{"_index":1707,"title":{},"body":{"injectables/UploadService.html":{}}}],["dtos",{"_index":298,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["ducimus",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dynamic",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["ea",{"_index":905,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eaque",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{}}}],["earum",{"_index":877,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ease",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["eius",{"_index":802,"title":{},"body":{"components/DashboardComponent.html":{}}}],["el",{"_index":1302,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["element",{"_index":212,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["elementref",{"_index":1300,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{}}}],["eligendi",{"_index":869,"title":{},"body":{"components/DashboardComponent.html":{}}}],["elit",{"_index":742,"title":{},"body":{"components/DashboardComponent.html":{}}}],["email",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["emit",{"_index":1305,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end",{"_index":1307,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts",{"_index":1293,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["end.directive.ts:16",{"_index":1308,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:21",{"_index":1303,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:23",{"_index":1301,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:27",{"_index":1312,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:33",{"_index":1311,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["enim",{"_index":826,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enimdeleniti",{"_index":927,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enterleaveanimation",{"_index":470,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1982,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":280,"title":{},"body":{"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{}}}],["enums/role.enum",{"_index":31,"title":{},"body":{"interfaces/Account.html":{}}}],["env",{"_index":300,"title":{"interfaces/Env.html":{}},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/Env.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.apiurl}${api.account_avatar",{"_index":312,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.account_avatar}${dto.id",{"_index":314,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.vk_id_exchange_token",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["env.appid",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["env.environment",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.origin",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.redirecturl",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["environment",{"_index":1016,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["eos",{"_index":835,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eos,impedit",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{}}}],["err",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["err.status",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["error",{"_index":200,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["error(err",{"_index":685,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["error(res.error",{"_index":677,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["errorhandler",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":521,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.foreach((error",{"_index":1407,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.push",{"_index":533,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["esse",{"_index":888,"title":{},"body":{"components/DashboardComponent.html":{}}}],["esseperspiciatis",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{}}}],["est",{"_index":880,"title":{},"body":{"components/DashboardComponent.html":{}}}],["et",{"_index":801,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eum",{"_index":885,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eveniet",{"_index":908,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event",{"_index":1316,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["event.target",{"_index":1310,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["eventcoalescing",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1099,"title":{},"body":{"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadListItemComponent.html":{}}}],["events",{"_index":1024,"title":{},"body":{"components/EventsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["events'},{'name",{"_index":234,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["events.component.html",{"_index":1025,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.scss",{"_index":1026,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":233,"title":{"components/EventsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["ex",{"_index":833,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exact",{"_index":1144,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["excepturi",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exercitationem",{"_index":743,"title":{},"body":{"components/DashboardComponent.html":{}}}],["expedita",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["explicabo",{"_index":819,"title":{},"body":{"components/DashboardComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["ext",{"_index":1059,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":41,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["extension",{"_index":236,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["extensioninput",{"_index":1050,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensioninputcomponent",{"_index":235,"title":{"components/ExtensionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["extensions",{"_index":1033,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensions.gql.ts",{"_index":1487,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["extensions.gql.ts:22",{"_index":1491,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["facere",{"_index":767,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facerequae",{"_index":952,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facilis",{"_index":900,"title":{},"body":{"components/DashboardComponent.html":{}}}],["false",{"_index":160,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":493,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["fetchmoreuploads",{"_index":1736,"title":{},"body":{"components/UploadsComponent.html":{}}}],["fetchpolicy",{"_index":186,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["file'},{'name",{"_index":264,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["file.component",{"_index":1799,"title":{},"body":{"components/UploadsComponent.html":{}}}],["file.component.html",{"_index":1504,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.scss",{"_index":1505,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts",{"_index":1499,"title":{},"body":{"components/UploadFileComponent.html":{},"coverage.html":{}}}],["file.component.ts:105",{"_index":1514,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:63",{"_index":1530,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:64",{"_index":1526,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:65",{"_index":1518,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:66",{"_index":1515,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:68",{"_index":1524,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:69",{"_index":1528,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:71",{"_index":1516,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:73",{"_index":1523,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:82",{"_index":1517,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:84",{"_index":1512,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:88",{"_index":1513,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:92",{"_index":1511,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.name.split",{"_index":1713,"title":{},"body":{"injectables/UploadService.html":{}}}],["file.type",{"_index":1718,"title":{},"body":{"injectables/UploadService.html":{}}}],["file/upload",{"_index":1498,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["file_name",{"_index":1481,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["fileform",{"_index":1507,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["filename",{"_index":1712,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join",{"_index":1716,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join('.').slice(0",{"_index":1715,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename[filename.length",{"_index":1714,"title":{},"body":{"injectables/UploadService.html":{}}}],["fileparams",{"_index":1057,"title":{"interfaces/FileParams.html":{}},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["filter",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{}}}],["filter(([_",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter((val",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{}}}],["filters",{"_index":319,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["first_name",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["firstvaluefrom(this.http.get('/assets/config.json",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fixed",{"_index":1134,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["float",{"_index":1489,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["foreach((error",{"_index":529,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["form",{"_index":487,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formbuilder",{"_index":491,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontrol",{"_index":500,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["formcontrol('.png",{"_index":1520,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol('file",{"_index":1519,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol(false",{"_index":1522,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol(new",{"_index":1432,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formcontrol(null",{"_index":655,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["formcontrolname",{"_index":118,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["formdata",{"_index":303,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["formgroup",{"_index":119,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["formsmodule",{"_index":90,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["found",{"_index":1159,"title":{},"body":{"components/NotFoundComponent.html":{},"components/UploadsComponent.html":{}}}],["found'},{'name",{"_index":248,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["found.component.html",{"_index":1160,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1161,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1158,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:14",{"_index":1164,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:15",{"_index":1163,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1157,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["fuga",{"_index":901,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat",{"_index":780,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat,est",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiatfacilis",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugit",{"_index":902,"title":{},"body":{"components/DashboardComponent.html":{}}}],["full_name",{"_index":13,"title":{},"body":{"interfaces/Account.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2010,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get,post,put,delete,options",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getaccountmodel",{"_index":1061,"title":{"interfaces/GetAccountModel.html":{}},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["getcurrentpath",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcurrentpath(router",{"_index":2021,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getcurrentpath(this.router).includes('/auth",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["getfileparams",{"_index":1689,"title":{},"body":{"injectables/UploadService.html":{}}}],["getfileparams(file",{"_index":1690,"title":{},"body":{"injectables/UploadService.html":{}}}],["getparams",{"_index":1789,"title":{},"body":{"components/UploadsComponent.html":{}}}],["getpreviewcontent",{"_index":1641,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["getquerypayload",{"_index":447,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getquerypayload(params",{"_index":2022,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getquerypayload(route.queryparams",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":2026,"title":{"index.html":{}},"body":{}}],["gql",{"_index":46,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["graphql",{"_index":179,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["graphqlerror",{"_index":331,"title":{"interfaces/GraphqlError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["graphqlprovider",{"_index":1918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["grid.animation.ts",{"_index":1905,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlechange",{"_index":111,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handlechange(val",{"_index":125,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handleclickupload",{"_index":1594,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["handledelete",{"_index":1595,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["handleme",{"_index":1096,"title":{},"body":{"components/MeComponent.html":{}}}],["handleselectextension",{"_index":1596,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["handlesignout",{"_index":1097,"title":{},"body":{"components/MeComponent.html":{}}}],["handleuploaddeleted",{"_index":1737,"title":{},"body":{"components/UploadsComponent.html":{}}}],["handleuploaddeleted(id",{"_index":1746,"title":{},"body":{"components/UploadsComponent.html":{}}}],["handleuploadresult",{"_index":637,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["handleuploadresult(res",{"_index":645,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["harum",{"_index":806,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hasevery",{"_index":1867,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1065,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":238,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["header.component.html",{"_index":1070,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1071,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":237,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1322,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofelement",{"_index":1328,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofwholepage",{"_index":1324,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hic",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hostlistener",{"_index":1317,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlistener('window:scroll",{"_index":1315,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlisteners",{"_index":1297,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["html",{"_index":211,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["http",{"_index":284,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httpclient",{"_index":294,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httperrorresponse",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["httpheaders",{"_index":1698,"title":{},"body":{"injectables/UploadService.html":{}}}],["httpinterceptorfn",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequestinterceptor",{"_index":1926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://drive.google.com/viewerng/viewer?embedded=true&url=${this.upload!.url",{"_index":1664,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["icon",{"_index":1142,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts",{"_index":1005,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts:24",{"_index":1483,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["id.gql.ts:25",{"_index":1008,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{}}}],["id/exchange",{"_index":2000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id=${dto.id",{"_index":315,"title":{},"body":{"injectables/AccountService.html":{}}}],["identifier",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["iframeurl",{"_index":1082,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["iframeurlpipe",{"_index":1078,"title":{"pipes/IFrameUrlPipe.html":{}},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["illo",{"_index":809,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illum",{"_index":873,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumdeserunt",{"_index":1001,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumobcaecati",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{}}}],["images/cake.svg",{"_index":1146,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/files.svg",{"_index":1151,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/man.svg",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/tor.svg",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/woman.svg",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["impedit",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":73,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["importprovidersfrom(tuirootmodule",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":88,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["in'},{'name",{"_index":257,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["in.component",{"_index":472,"title":{},"body":{"components/AuthComponent.html":{}}}],["in.component.html",{"_index":1366,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":1367,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts",{"_index":1364,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:151",{"_index":1376,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:38",{"_index":1391,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:40",{"_index":1380,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:41",{"_index":1381,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:42",{"_index":1386,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:44",{"_index":1372,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:46",{"_index":1389,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:47",{"_index":1387,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:49",{"_index":1384,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:50",{"_index":1385,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:52",{"_index":1383,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:58",{"_index":1371,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:63",{"_index":1378,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:85",{"_index":1374,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:98",{"_index":1379,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":471,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["incidunt",{"_index":879,"title":{},"body":{"components/DashboardComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["info'},{'name",{"_index":266,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["info.component",{"_index":1800,"title":{},"body":{"components/UploadsComponent.html":{}}}],["info.component.html",{"_index":1553,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.scss",{"_index":1554,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts",{"_index":1552,"title":{},"body":{"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:45",{"_index":1564,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1562,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:47",{"_index":1561,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:49",{"_index":1567,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:52",{"_index":1557,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:66",{"_index":1565,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:68",{"_index":1560,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:69",{"_index":1559,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:71",{"_index":1558,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info/upload",{"_index":1551,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["init",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["initialaccount",{"_index":34,"title":{},"body":{"interfaces/Account.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialauthenticateduser",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initsentry",{"_index":1944,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":163,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{}}}],["inject(accountgql",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(accountservice",{"_index":652,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["inject(accountsinfobyusernamegql",{"_index":152,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["inject(activatedroute",{"_index":440,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["inject(authservice",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice).$isadmin",{"_index":1775,"title":{},"body":{"components/UploadsComponent.html":{}}}],["inject(authservice).$user",{"_index":1529,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["inject(authservice).$user().username",{"_index":1770,"title":{},"body":{"components/UploadsComponent.html":{}}}],["inject(configservice",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{}}}],["inject(deleteuploadbyidgql",{"_index":1623,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(destroyref",{"_index":158,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(domsanitizer",{"_index":1639,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(httpclient",{"_index":295,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["inject(injector",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(polymorpheus_context",{"_index":666,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["inject(router",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(scrollservice",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(title",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(tui_is_mobile",{"_index":1629,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(tuialertservice",{"_index":156,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(tuidialogservice",{"_index":1106,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["inject(tuipdfviewerservice",{"_index":1631,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(tuipreviewdialogservice",{"_index":1636,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["inject(uploadbyidgql",{"_index":1563,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(uploadextensionsgql",{"_index":1047,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["inject(uploadservice",{"_index":1525,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["inject(uploadsgql",{"_index":1785,"title":{},"body":{"components/UploadsComponent.html":{}}}],["injectable",{"_index":37,"title":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":39,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"overview.html":{}}}],["injector",{"_index":1195,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["innerheight",{"_index":1339,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["inoutanimation200",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutanimation500",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation200",{"_index":1792,"title":{},"body":{"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation500",{"_index":1906,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":86,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["input'},{'name",{"_index":216,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["input('isloading",{"_index":1650,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["input('isprivate",{"_index":1651,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["input('upload",{"_index":1649,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["input.component.html",{"_index":96,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.scss",{"_index":98,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts",{"_index":72,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:101",{"_index":1043,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:118",{"_index":126,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:124",{"_index":140,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:126",{"_index":134,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:130",{"_index":136,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:134",{"_index":139,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:37",{"_index":1176,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:38",{"_index":1175,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:39",{"_index":1180,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:40",{"_index":1179,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:41",{"_index":1178,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:48",{"_index":1177,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:50",{"_index":1183,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:52",{"_index":1048,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:53",{"_index":1045,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:54",{"_index":1046,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:56",{"_index":1035,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:57",{"_index":1034,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:58",{"_index":159,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:59",{"_index":157,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:60",{"_index":1181,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:61",{"_index":153,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:63",{"_index":155,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:64",{"_index":1182,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:65",{"_index":122,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:66",{"_index":121,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:67",{"_index":1039,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:68",{"_index":124,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:69",{"_index":1040,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:70",{"_index":162,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:72",{"_index":161,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:74",{"_index":146,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:76",{"_index":151,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:80",{"_index":147,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:81",{"_index":143,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:83",{"_index":132,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:91",{"_index":1044,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:93",{"_index":1041,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:97",{"_index":1042,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input/account",{"_index":71,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["input/extension",{"_index":1028,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["input/permission",{"_index":1173,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":117,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{}}}],["instanceof",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadModel.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["interop",{"_index":171,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["inventore",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inventoreillo",{"_index":963,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsa",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsam",{"_index":837,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsaneque",{"_index":989,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsum",{"_index":736,"title":{},"body":{"components/DashboardComponent.html":{}}}],["is_system",{"_index":1480,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["isadmin",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadministrator",{"_index":1728,"title":{},"body":{"components/UploadsComponent.html":{}}}],["isauth",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["isauthpage",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscustomname",{"_index":1540,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["isend",{"_index":1351,"title":{},"body":{"injectables/ScrollService.html":{}}}],["islastpage",{"_index":1729,"title":{},"body":{"components/UploadsComponent.html":{}}}],["isloading",{"_index":428,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["isme",{"_index":1193,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ismobile",{"_index":1589,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["isnotfound",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotfound(err.message",{"_index":1268,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isnotfound(message",{"_index":2024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotfoundpage",{"_index":698,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isopenprofiledropdown",{"_index":1072,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isprivate",{"_index":1599,"title":{},"body":{"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["isprivate(permissions",{"_index":1748,"title":{},"body":{"components/UploadsComponent.html":{}}}],["isrefusedpage",{"_index":699,"title":{},"body":{"injectables/ConfigService.html":{}}}],["iste",{"_index":813,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaque",{"_index":796,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquebeatae",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquelaudantium",{"_index":999,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item",{"_index":1581,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item'},{'name",{"_index":269,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["item.component",{"_index":1798,"title":{},"body":{"components/UploadsComponent.html":{}}}],["item.component.html",{"_index":1585,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.scss",{"_index":1586,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts",{"_index":1580,"title":{},"body":{"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:100",{"_index":1642,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:104",{"_index":1612,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:108",{"_index":1614,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:112",{"_index":1627,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:114",{"_index":1617,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:140",{"_index":1611,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:150",{"_index":1620,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:163",{"_index":1613,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:76",{"_index":1624,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:77",{"_index":1637,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:78",{"_index":1632,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:79",{"_index":1626,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:80",{"_index":1622,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:81",{"_index":1640,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:82",{"_index":1625,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:83",{"_index":1630,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:84",{"_index":1638,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:86",{"_index":1607,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:87",{"_index":1605,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:88",{"_index":1606,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:90",{"_index":1609,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:91",{"_index":1608,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:92",{"_index":1610,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:96",{"_index":1635,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:98",{"_index":1628,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.id",{"_index":1832,"title":{},"body":{"components/UploadsComponent.html":{}}}],["item/upload",{"_index":1579,"title":{},"body":{"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["items.filter((item",{"_index":1831,"title":{},"body":{"components/UploadsComponent.html":{}}}],["iure",{"_index":788,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iusto",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iustoarchitecto",{"_index":997,"title":{},"body":{"components/DashboardComponent.html":{}}}],["keyboardevent",{"_index":1314,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["keyof",{"_index":524,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["kit",{"_index":1693,"title":{},"body":{"injectables/UploadService.html":{}}}],["l",{"_index":1038,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["label",{"_index":1621,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["labore",{"_index":828,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laboriosam",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborum",{"_index":904,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborumcupiditate",{"_index":991,"title":{},"body":{"components/DashboardComponent.html":{}}}],["lang",{"_index":1400,"title":{},"body":{"components/SignInComponent.html":{}}}],["last_name",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["laudantium",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["leave.animation.ts",{"_index":1902,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":210,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["length",{"_index":1717,"title":{},"body":{"injectables/UploadService.html":{}}}],["libero",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list",{"_index":268,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["literal",{"_index":1063,"title":{},"body":{"interfaces/GetAccountModel.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfig",{"_index":702,"title":{},"body":{"injectables/ConfigService.html":{}}}],["loading",{"_index":1194,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1019,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["locale_id",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1382,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["lorem",{"_index":735,"title":{},"body":{"components/DashboardComponent.html":{}}}],["m",{"_index":1036,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["magnam",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["magni",{"_index":804,"title":{},"body":{"components/DashboardComponent.html":{}}}],["maiores",{"_index":903,"title":{},"body":{"components/DashboardComponent.html":{}}}],["map",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{}}}],["map(([isauth",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map((a",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["map((data",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((params",{"_index":1208,"title":{},"body":{"components/ProfileComponent.html":{}}}],["map((profile",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{}}}],["match",{"_index":537,"title":{},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":1871,"title":{},"body":{"classes/Validation.html":{}}}],["matching",{"_index":36,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxime",{"_index":807,"title":{},"body":{"components/DashboardComponent.html":{}}}],["me'},{'name",{"_index":240,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["me.component.html",{"_index":1093,"title":{},"body":{"components/MeComponent.html":{}}}],["me.component.scss",{"_index":1094,"title":{},"body":{"components/MeComponent.html":{}}}],["mecomponent",{"_index":239,"title":{"components/MeComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["memberonly",{"_index":2007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["memories",{"_index":1120,"title":{},"body":{"components/MemoriesComponent.html":{},"components/NavComponent.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["memories'},{'name",{"_index":242,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["memories.component.html",{"_index":1121,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memories.component.scss",{"_index":1122,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memoriescomponent",{"_index":241,"title":{"components/MemoriesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["menu",{"_index":1124,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'name",{"_index":244,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["menu.component.html",{"_index":1125,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1126,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":243,"title":{"components/MenuComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["menuisopen",{"_index":700,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":329,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":76,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["methods",{"_index":110,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["mime",{"_index":1060,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{}}}],["minima",{"_index":790,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minlength",{"_index":535,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["minus",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minus,ratione",{"_index":916,"title":{},"body":{"components/DashboardComponent.html":{}}}],["miscellaneous",{"_index":1981,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":1288,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["mobile",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["modalfiltersisopen",{"_index":1730,"title":{},"body":{"components/UploadsComponent.html":{}}}],["models",{"_index":57,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{}}}],["modi",{"_index":838,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modules",{"_index":2029,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["molestiae",{"_index":886,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaedolores",{"_index":976,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestias",{"_index":893,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaset",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitia",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitiaaliquam",{"_index":981,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mpga",{"_index":1685,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["multi",{"_index":80,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["mutate",{"_index":1674,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["mutation",{"_index":1006,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["nam",{"_index":887,"title":{},"body":{"components/DashboardComponent.html":{}}}],["name",{"_index":128,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["natus",{"_index":794,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nav",{"_index":1128,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":246,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["nav.component.html",{"_index":1131,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":1132,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":245,"title":{"components/NavComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["navigationend",{"_index":713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["near",{"_index":1292,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["nearend",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["nearend(posy",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["necessitatibus",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nemo",{"_index":785,"title":{},"body":{"components/DashboardComponent.html":{}}}],["neque",{"_index":909,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nesciunt",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{}}}],["network",{"_index":188,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["new",{"_index":302,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["next",{"_index":197,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(status",{"_index":1352,"title":{},"body":{"injectables/ScrollService.html":{}}}],["nextstep",{"_index":1509,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["ng_value_accessor",{"_index":79,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ngafterviewinit",{"_index":1370,"title":{},"body":{"components/SignInComponent.html":{}}}],["ngdompurifysanitizer",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngondestroy",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ngoninit",{"_index":112,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["nihil",{"_index":797,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilconsectetur",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihildicta",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilpossimus",{"_index":922,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisi",{"_index":817,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisieaque",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisivero",{"_index":925,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nobis",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{}}}],["non",{"_index":882,"title":{},"body":{"components/DashboardComponent.html":{}}}],["normalize.css",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["nostrum",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nostrumbeatae",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{}}}],["notfound",{"_index":1165,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["notfoundcomponent",{"_index":247,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["null",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nulla",{"_index":766,"title":{},"body":{"components/DashboardComponent.html":{}}}],["number",{"_index":333,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Env.html":{},"interfaces/GraphqlError.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/functions.html":{}}}],["numquam",{"_index":898,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecati",{"_index":810,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecatinostrum",{"_index":974,"title":{},"body":{"components/DashboardComponent.html":{}}}],["object",{"_index":1319,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["object.assign(env",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys",{"_index":527,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["object.keys(this.form.controls).foreach((control",{"_index":522,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["observable",{"_index":141,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["odio",{"_index":870,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odioat",{"_index":961,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odiomaiores",{"_index":993,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odit",{"_index":841,"title":{},"body":{"components/DashboardComponent.html":{}}}],["oditaspernatur",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["of(new",{"_index":676,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(null",{"_index":680,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(tui_russian_language",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officia",{"_index":878,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiis",{"_index":786,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiispariatur",{"_index":964,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnis",{"_index":911,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnisrepudiandae",{"_index":996,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onchange",{"_index":120,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ondelete",{"_index":1601,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["ondestroy",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["oninit",{"_index":74,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["onsubmit",{"_index":489,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ontouched",{"_index":109,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["oops",{"_index":1169,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops'},{'name",{"_index":250,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["oops.component.html",{"_index":1170,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops.component.scss",{"_index":1171,"title":{},"body":{"components/OopsComponent.html":{}}}],["oopscomponent",{"_index":249,"title":{"components/OopsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["opacity",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":202,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["open(err",{"_index":691,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["open(this.preview",{"_index":1667,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["open(tui_prompt",{"_index":1672,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["opened",{"_index":1336,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["optio",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{}}}],["optional",{"_index":129,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":1017,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["originalname",{"_index":1566,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["out",{"_index":1904,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out.animation.ts",{"_index":1907,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":1049,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadListItemComponent.html":{}}}],["output('clickupload",{"_index":1653,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["output('ondelete",{"_index":1652,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["output('selectextension",{"_index":1654,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["outputs",{"_index":1032,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadListItemComponent.html":{}}}],["overview",{"_index":2030,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1482,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["owner_id",{"_index":1687,"title":{},"body":{"interfaces/UploadModel.html":{}}}],["owneronly",{"_index":2005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["package",{"_index":1947,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":323,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["paginatedquery",{"_index":2042,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pagination",{"_index":1492,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":1711,"title":{},"body":{"injectables/UploadService.html":{}}}],["parameters",{"_index":127,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1744,"title":{},"body":{"components/UploadsComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1345,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["pariatur",{"_index":779,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pass",{"_index":484,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["pass'},{'name",{"_index":225,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["pass.component",{"_index":446,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["pass.component.html",{"_index":485,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.scss",{"_index":486,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts",{"_index":483,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["pass.component.ts:120",{"_index":495,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:28",{"_index":508,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:29",{"_index":506,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:30",{"_index":499,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:31",{"_index":507,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:33",{"_index":504,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:34",{"_index":505,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:36",{"_index":502,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:42",{"_index":492,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:47",{"_index":497,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:72",{"_index":498,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["password",{"_index":1409,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":330,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{}}}],["payload",{"_index":450,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"miscellaneous/variables.html":{}}}],["payload.token",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pdf",{"_index":1659,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["pdfviewer",{"_index":1590,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["perferendis",{"_index":844,"title":{},"body":{"components/DashboardComponent.html":{}}}],["permission",{"_index":252,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permission.owneronly",{"_index":1709,"title":{},"body":{"injectables/UploadService.html":{}}}],["permissioninput",{"_index":1184,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["permissioninputcomponent",{"_index":251,"title":{"components/PermissionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["permissions",{"_index":1174,"title":{},"body":{"components/PermissionInputComponent.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permissions.includes(permission.public",{"_index":1833,"title":{},"body":{"components/UploadsComponent.html":{}}}],["perspiciatis",{"_index":825,"title":{},"body":{"components/DashboardComponent.html":{}}}],["perspiciatislibero",{"_index":972,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pipe",{"_index":190,"title":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["pipe(takeuntildestroyed(this.destroyref",{"_index":196,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["pipes",{"_index":1079,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadListItemComponent.html":{},"overview.html":{}}}],["pipetransform",{"_index":1090,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}}}],["pixels",{"_index":1327,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["placeat",{"_index":907,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeat,voluptatum",{"_index":968,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeholder",{"_index":1031,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["platform",{"_index":2035,"title":{},"body":{"properties.html":{}}}],["polymorpheus",{"_index":664,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["polymorpheus_context",{"_index":662,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["polymorpheuscomponent",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["polymorpheuscomponent(changeavatarcomponent",{"_index":1277,"title":{},"body":{"components/ProfileComponent.html":{}}}],["polymorpheuscomponent(uploadfilecomponent",{"_index":1857,"title":{},"body":{"components/UploadsComponent.html":{}}}],["polymorpheuscomponent(uploadinfocomponent",{"_index":1858,"title":{},"body":{"components/UploadsComponent.html":{}}}],["polymorpheuscontent",{"_index":1616,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["polymorpheusmodule",{"_index":1583,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["porro",{"_index":913,"title":{},"body":{"components/DashboardComponent.html":{}}}],["position",{"_index":1333,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["possimus",{"_index":798,"title":{},"body":{"components/DashboardComponent.html":{}}}],["possimusaliquam",{"_index":992,"title":{},"body":{"components/DashboardComponent.html":{}}}],["posy",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["praesentium",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{}}}],["praesentiumnecessitatibus",{"_index":937,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pragma",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prev.concat(res.data.uploads",{"_index":1814,"title":{},"body":{"components/UploadsComponent.html":{}}}],["preview",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["previewcontent",{"_index":1604,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["previewdialog",{"_index":1591,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["private",{"_index":103,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{}}}],["production",{"_index":1022,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1187,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile!.username",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":254,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["profile.component.html",{"_index":1191,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1192,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.ngoninit",{"_index":1201,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.roles",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":253,"title":{"components/ProfileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["promise",{"_index":707,"title":{},"body":{"injectables/ConfigService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"properties.html":{}}}],["protectedroutes",{"_index":1138,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":78,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":61,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["providehttpclient(withinterceptors([httprequestinterceptor",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provident",{"_index":800,"title":{},"body":{"components/DashboardComponent.html":{}}}],["providerouter(routes",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":77,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":2004,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["px",{"_index":1304,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["quae",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quaerat",{"_index":896,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quam",{"_index":811,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamobcaecati",{"_index":926,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamrecusandae",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quas",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quasi",{"_index":848,"title":{},"body":{"components/DashboardComponent.html":{}}}],["query",{"_index":42,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryref",{"_index":52,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["qui",{"_index":822,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quia",{"_index":812,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdam",{"_index":840,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdamperferendis",{"_index":965,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quidem",{"_index":815,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quireprehenderit",{"_index":994,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quis",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquam",{"_index":782,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquamnihil",{"_index":986,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisvelit",{"_index":920,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quo",{"_index":834,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quod",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quos",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ratione",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":92,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["readonly",{"_index":633,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["recusandae",{"_index":846,"title":{},"body":{"components/DashboardComponent.html":{}}}],["redirecturl",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["refetchuploads",{"_index":1738,"title":{},"body":{"components/UploadsComponent.html":{}}}],["refresh",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":480,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["registeronchange",{"_index":113,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registeronchange(onchange",{"_index":133,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched",{"_index":114,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched(ontouched",{"_index":135,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["reiciendis",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reiciendisnostrum",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rem",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{}}}],["removeavatar",{"_index":285,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["removeavatar(dto",{"_index":287,"title":{},"body":{"injectables/AccountService.html":{}}}],["removeavatardto",{"_index":288,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["removefile",{"_index":638,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["repellat",{"_index":803,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repellendus",{"_index":890,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit",{"_index":829,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit,fugit",{"_index":973,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repudiandae",{"_index":875,"title":{},"body":{"components/DashboardComponent.html":{}}}],["req",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":532,"title":{},"body":{"components/AuthPassComponent.html":{},"components/MeComponent.html":{}}}],["rerum",{"_index":808,"title":{},"body":{"components/DashboardComponent.html":{}}}],["res",{"_index":198,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["res.data",{"_index":1573,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["res.data.uploads.length",{"_index":1812,"title":{},"body":{"components/UploadsComponent.html":{}}}],["res.url",{"_index":690,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["resetuploads",{"_index":1739,"title":{},"body":{"components/UploadsComponent.html":{}}}],["results",{"_index":35,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":310,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":131,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":26,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":62,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["root'},{'name",{"_index":218,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["route",{"_index":429,"title":{"interfaces/Route.html":{}},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route.title",{"_index":1155,"title":{},"body":{"components/NavComponent.html":{}}}],["router",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth/sign",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1129,"title":{},"body":{"components/NavComponent.html":{}}}],["routerlinkactive",{"_index":1130,"title":{},"body":{"components/NavComponent.html":{}}}],["routermodule",{"_index":1066,"title":{},"body":{"components/HeaderComponent.html":{},"components/NotFoundComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["routeroutlet",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["row",{"_index":1861,"title":{},"body":{"components/UploadsComponent.html":{}}}],["ru",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":175,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1037,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["saepe",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{}}}],["saepetotam",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["safety",{"_index":1320,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sanitizer",{"_index":1592,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["sapiente",{"_index":793,"title":{},"body":{"components/DashboardComponent.html":{}}}],["save",{"_index":1318,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["scheme",{"_index":1398,"title":{},"body":{"components/SignInComponent.html":{}}}],["scroll",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadsComponent.html":{}}}],["scrolled",{"_index":1331,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["scrollnearend",{"_index":274,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["scrollnearenddirective",{"_index":273,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["scrollservice",{"_index":381,"title":{"injectables/ScrollService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrollstate",{"_index":1359,"title":{},"body":{"injectables/ScrollService.html":{},"miscellaneous/typealiases.html":{}}}],["scrolltobottom",{"_index":1349,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sed",{"_index":789,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sedminima",{"_index":921,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectedfile",{"_index":1532,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectedfile.ext",{"_index":1536,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectextension",{"_index":1602,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["selector",{"_index":84,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["sentry",{"_index":177,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/variables.html":{}}}],["sentry.createerrorhandler",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.traceclass",{"_index":181,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["sentry.tracemethod",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["sentry.traceservice",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry/angular",{"_index":178,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["sentry/cli",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["sentrydsn",{"_index":1018,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["sequi",{"_index":910,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sequirepellat",{"_index":975,"title":{},"body":{"components/DashboardComponent.html":{}}}],["serializepermissions",{"_index":1793,"title":{},"body":{"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializepermissions(permissions",{"_index":2025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["serializerole",{"_index":1197,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializerole(role",{"_index":1203,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["serializesex",{"_index":1198,"title":{},"body":{"components/ProfileComponent.html":{}}}],["serializesex(sex",{"_index":1205,"title":{},"body":{"components/ProfileComponent.html":{}}}],["services",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadsComponent.html":{}}}],["set",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["set('access",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set(data",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["set(errors).foreach((error",{"_index":538,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["setdisabledstate",{"_index":115,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["setdisabledstate(disabled",{"_index":137,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["setextensionfilter",{"_index":1740,"title":{},"body":{"components/UploadsComponent.html":{}}}],["setextensionfilter(ext",{"_index":1753,"title":{},"body":{"components/UploadsComponent.html":{}}}],["sex",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sexicons",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sexicons[0",{"_index":1275,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexicons[sex",{"_index":1274,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexpipe",{"_index":1190,"title":{"pipes/SexPipe.html":{}},"body":{"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"coverage.html":{}}}],["showchangeavatardialog",{"_index":1196,"title":{},"body":{"components/ProfileComponent.html":{}}}],["showconfirmform",{"_index":1419,"title":{},"body":{"components/SignUpComponent.html":{}}}],["showdialog",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showerror",{"_index":639,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showerror(err",{"_index":649,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showmodalfilters",{"_index":1741,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showpreview",{"_index":1597,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showpreview(actions",{"_index":1615,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showprompt",{"_index":1598,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showprompt(label",{"_index":1619,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showref",{"_index":1162,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["showuploadfile",{"_index":1742,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showuploadfiledialog",{"_index":1731,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showuploadinfo",{"_index":1743,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showuploadinfo(uploadid",{"_index":1757,"title":{},"body":{"components/UploadsComponent.html":{}}}],["showuploadinfodialog",{"_index":1732,"title":{},"body":{"components/UploadsComponent.html":{}}}],["shrinks",{"_index":1337,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sign",{"_index":256,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["signal",{"_index":145,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/functions.html":{}}}],["signal(1",{"_index":1762,"title":{},"body":{"components/UploadsComponent.html":{}}}],["signal(20",{"_index":1765,"title":{},"body":{"components/UploadsComponent.html":{}}}],["signal(false",{"_index":658,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{}}}],["signal(initialaccount",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{}}}],["signal(initialauthenticateduser",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["signal(null",{"_index":1527,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signal(true",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["signin",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["signin(dto",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin.ngafterviewinit",{"_index":1373,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngondestroy",{"_index":1375,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngoninit",{"_index":1377,"title":{},"body":{"components/SignInComponent.html":{}}}],["signincomponent",{"_index":255,"title":{"components/SignInComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["signindto",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["signinvk",{"_index":454,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{}}}],["signinvk(dto",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["signup(dto",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.ngondestroy",{"_index":1423,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup.ngoninit",{"_index":1425,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signupcomponent",{"_index":258,"title":{"components/SignUpComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["signupdto",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["similique",{"_index":891,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sint",{"_index":754,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sit",{"_index":738,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitaliquam",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitcumque",{"_index":946,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitincidunt",{"_index":1002,"title":{},"body":{"components/DashboardComponent.html":{}}}],["size",{"_index":321,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["skeleton",{"_index":1282,"title":{},"body":{"components/ProfileComponent.html":{}}}],["skeletonrows",{"_index":1733,"title":{},"body":{"components/UploadsComponent.html":{}}}],["soluta",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutadeleniti",{"_index":1000,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutaquo",{"_index":971,"title":{},"body":{"components/DashboardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["sourcesignal",{"_index":2020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spaceofelementandpage",{"_index":1346,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["spomen",{"_index":85,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"index.html":{}}}],["src/.../account.dtos.ts",{"_index":2044,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.gql.ts",{"_index":2038,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.interface.ts",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../accounts",{"_index":2039,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api.enum.ts",{"_index":1983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":2012,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.dtos.ts",{"_index":2040,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auth.guard.ts",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticated",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete",{"_index":2041,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../enter",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.development.ts",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.staging.ts",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.ts",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../funcs.ts",{"_index":2013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../graphql.provider.ts",{"_index":2011,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../http.interceptor.ts",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../in",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2043,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../nav.component.ts",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":1984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../profile.component.ts",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":1985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../scroll.service.ts",{"_index":2045,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sentry.ts",{"_index":2014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../serialize.ts",{"_index":2015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sex.interface.ts",{"_index":2046,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../upload",{"_index":2047,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../upload.dtos.ts",{"_index":2048,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../uploads.gql.ts",{"_index":2049,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:119",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:124",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:89",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1891,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.component.ts",{"_index":459,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":469,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:23",{"_index":467,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:24",{"_index":468,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:27",{"_index":466,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/callback/auth",{"_index":423,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["src/app/auth/pass/auth",{"_index":482,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["src/app/auth/sign",{"_index":1363,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/chats/chats.component.ts",{"_index":692,"title":{},"body":{"components/ChatsComponent.html":{},"coverage.html":{}}}],["src/app/common/animations/enter",{"_index":1901,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/animations/in",{"_index":1903,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/account",{"_index":70,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/extension",{"_index":1027,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts",{"_index":1064,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts:27",{"_index":1073,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:28",{"_index":1074,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:30",{"_index":1075,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/me/me.component.ts",{"_index":1092,"title":{},"body":{"components/MeComponent.html":{},"coverage.html":{}}}],["src/app/common/components/me/me.component.ts:23",{"_index":1107,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:24",{"_index":1105,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:25",{"_index":1104,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:26",{"_index":1103,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:27",{"_index":1108,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:29",{"_index":1100,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:31",{"_index":1101,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:37",{"_index":1102,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/menu/menu.component.ts",{"_index":1123,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/common/components/nav/nav.component.ts",{"_index":1127,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/nav/nav.component.ts:54",{"_index":1140,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:55",{"_index":1137,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:57",{"_index":1135,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:59",{"_index":1139,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:61",{"_index":1136,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/not",{"_index":1156,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/common/components/oops/oops.component.ts",{"_index":1168,"title":{},"body":{"components/OopsComponent.html":{},"coverage.html":{}}}],["src/app/common/components/permission",{"_index":1172,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/directives/scroll",{"_index":1291,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["src/app/core/graphql/graphql.provider.ts",{"_index":1916,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/index.ts",{"_index":2051,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/models/getaccount.model.ts",{"_index":1062,"title":{},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["src/app/core/graphql/mutations/delete",{"_index":1004,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/account.gql.ts",{"_index":40,"title":{},"body":{"injectables/AccountGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/account.gql.ts:20",{"_index":51,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["src/app/core/graphql/queries/accounts",{"_index":316,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/upload",{"_index":1476,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts",{"_index":1863,"title":{},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts:63",{"_index":1864,"title":{},"body":{"injectables/UploadsGQL.html":{}}}],["src/app/core/guards/auth",{"_index":1920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/http.interceptor.ts",{"_index":1925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/pipes/iframe",{"_index":1080,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts",{"_index":1360,"title":{},"body":{"pipes/SexPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts:10",{"_index":1362,"title":{},"body":{"pipes/SexPipe.html":{}}}],["src/app/core/services/account.service.ts",{"_index":282,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts:18",{"_index":296,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:20",{"_index":293,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:33",{"_index":289,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:101",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:105",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:109",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:120",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:34",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:36",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:38",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:42",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:43",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:45",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:49",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:50",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:52",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:73",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:77",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:97",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/config.service.ts",{"_index":697,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/config.service.ts:11",{"_index":712,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:12",{"_index":711,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:14",{"_index":709,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:15",{"_index":710,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:16",{"_index":704,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:33",{"_index":706,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:38",{"_index":708,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:42",{"_index":705,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/scroll.service.ts",{"_index":1350,"title":{},"body":{"injectables/ScrollService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/scroll.service.ts:14",{"_index":1354,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:19",{"_index":1358,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:25",{"_index":1353,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/upload.service.ts",{"_index":1688,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/core/services/upload.service.ts:21",{"_index":1697,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:23",{"_index":1696,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:47",{"_index":1691,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":731,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/events/events.component.ts",{"_index":1023,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/memories/memories.component.ts",{"_index":1119,"title":{},"body":{"components/MemoriesComponent.html":{},"coverage.html":{}}}],["src/app/profile/change",{"_index":624,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1185,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/profile/profile.component.ts:100",{"_index":1199,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:113",{"_index":1202,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:162",{"_index":1200,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:188",{"_index":1204,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:192",{"_index":1206,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:196",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:70",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:71",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:72",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:73",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:74",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:75",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:76",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:77",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:79",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:81",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:82",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:83",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:84",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:86",{"_index":1220,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:90",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:94",{"_index":1213,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/timelines/timelines.component.ts",{"_index":1472,"title":{},"body":{"components/TimelinesComponent.html":{},"coverage.html":{}}}],["src/app/uploads/upload",{"_index":1497,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["src/app/uploads/uploads.component.ts",{"_index":1719,"title":{},"body":{"components/UploadsComponent.html":{},"coverage.html":{}}}],["src/app/uploads/uploads.component.ts:101",{"_index":1763,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:102",{"_index":1766,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:104",{"_index":1767,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:105",{"_index":1768,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:107",{"_index":1784,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:114",{"_index":1764,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:115",{"_index":1760,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:116",{"_index":1759,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:117",{"_index":1761,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:119",{"_index":1750,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:202",{"_index":1756,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:208",{"_index":1758,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:214",{"_index":1755,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:218",{"_index":1747,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:222",{"_index":1749,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:226",{"_index":1754,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:239",{"_index":1790,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:257",{"_index":1751,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:263",{"_index":1752,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:271",{"_index":1745,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:277",{"_index":1780,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:285",{"_index":1781,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:85",{"_index":1771,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:86",{"_index":1773,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:87",{"_index":1769,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:88",{"_index":1772,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:89",{"_index":1779,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:90",{"_index":1786,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:91",{"_index":1774,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:93",{"_index":1776,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:95",{"_index":1788,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:96",{"_index":1777,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:98",{"_index":1783,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/app/uploads/uploads.component.ts:99",{"_index":1778,"title":{},"body":{"components/UploadsComponent.html":{}}}],["src/envs/env.development.ts",{"_index":1937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.staging.ts",{"_index":1938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.ts",{"_index":1939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/dtos/account.dtos.ts",{"_index":2052,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/auth.dtos.ts",{"_index":2050,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/upload.dtos.ts",{"_index":2054,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/enums/api.enum.ts",{"_index":1986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/permission.enum.ts",{"_index":2003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/role.enum.ts",{"_index":2008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/interfaces/account.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/authenticated",{"_index":621,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/env.interface.ts",{"_index":1013,"title":{},"body":{"interfaces/Env.html":{},"coverage.html":{}}}],["src/types/interfaces/error.interface.ts",{"_index":328,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["src/types/interfaces/route.interface.ts",{"_index":1290,"title":{},"body":{"interfaces/Route.html":{},"coverage.html":{}}}],["src/types/interfaces/sex.interface.ts",{"_index":2053,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/interfaces/upload.interface.ts",{"_index":1058,"title":{},"body":{"interfaces/FileParams.html":{},"coverage.html":{}}}],["src/types/models/account.model.ts",{"_index":276,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"coverage.html":{}}}],["src/types/models/auth.model.ts",{"_index":478,"title":{},"body":{"interfaces/AuthModel.html":{},"coverage.html":{}}}],["src/types/models/upload.model.ts",{"_index":1686,"title":{},"body":{"interfaces/UploadModel.html":{},"coverage.html":{}}}],["src/utils/funcs.ts",{"_index":1941,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/sentry.ts",{"_index":1943,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/serialize.ts",{"_index":1945,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/validation.ts",{"_index":1869,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/utils/validation.ts:4",{"_index":1873,"title":{},"body":{"classes/Validation.html":{}}}],["staging",{"_index":1021,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":87,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["start",{"_index":1343,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["started",{"_index":2027,"title":{"index.html":{}},"body":{}}],["state",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["statements",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1870,"title":{},"body":{"classes/Validation.html":{}}}],["status",{"_index":203,"title":{},"body":{"components/AccountInputComponent.html":{},"interfaces/ApiError.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GraphqlError.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":1402,"title":{},"body":{"components/SignInComponent.html":{}}}],["styleurl",{"_index":97,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["sub.unsubscribe",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subs",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe",{"_index":193,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["subscribe((items",{"_index":1817,"title":{},"body":{"components/UploadsComponent.html":{}}}],["subscribe((permissions",{"_index":1825,"title":{},"body":{"components/UploadsComponent.html":{}}}],["subscribe((res",{"_index":1669,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["subscription",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{}}}],["success",{"_index":1271,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["sunt",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{}}}],["surname",{"_index":1431,"title":{},"body":{"components/SignUpComponent.html":{}}}],["suscipit",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{}}}],["switch",{"_index":530,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["switchmap",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["switchmap((res",{"_index":678,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["t",{"_index":2023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":1791,"title":{},"body":{"components/UploadsComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["tablebars",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1946,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":166,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["takelast",{"_index":665,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takelast(1",{"_index":688,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takeuntildestroyed",{"_index":168,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["takeuntildestroyed(this.destroyref",{"_index":191,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/UploadsComponent.html":{}}}],["targetaccountid",{"_index":635,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["template",{"_index":67,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["templateref",{"_index":1633,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["templateurl",{"_index":95,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tempora",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tempore",{"_index":795,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibus",{"_index":895,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibuslaudantium",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tenetur",{"_index":824,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.$$accountfilter",{"_index":189,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$$isme.pipe(takeuntildestroyed(this.destroyref)).subscribe",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$accounts().map((val",{"_index":149,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accounts.set(res.data.accounts",{"_index":199,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter",{"_index":185,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter.set(val.trim",{"_index":206,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$ext",{"_index":1848,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$ext().length",{"_index":1847,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$ext.set(items",{"_index":1821,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$extensions.set(data.uploadextensions",{"_index":1055,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.$isloading.asobservable",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isloading.next(true",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isme",{"_index":1212,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isme.set(params['username",{"_index":1210,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isnotfoundpage.set",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$loading",{"_index":1281,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$loading.set(false",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.$loading.set(loading",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$menuisopen",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(!this.$menuisopen",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(false",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$name",{"_index":1846,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$name().trim().length",{"_index":1845,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$name.set(items",{"_index":1823,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$owner",{"_index":1842,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$owner().length",{"_index":1841,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$owner.set([this.currentuser",{"_index":1808,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$owner.set(items",{"_index":1818,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$page",{"_index":1844,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$page.set(1",{"_index":1853,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$page.set(this.$page",{"_index":1856,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$permissions",{"_index":1850,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$permissions().length",{"_index":1849,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$permissions.set(serializepermissions(permissions",{"_index":1826,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$profile",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().avatar",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().birthday",{"_index":1286,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().full_name",{"_index":1284,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().id",{"_index":1280,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().sex",{"_index":1289,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().username",{"_index":1285,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().vk_avatar",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set(this.auth.$user",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.update((profile",{"_index":1272,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query.set(params['username",{"_index":1209,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$size",{"_index":1843,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$upload()!.ext",{"_index":1578,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload.set(upload",{"_index":1574,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$uploads",{"_index":1860,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploads().length",{"_index":1859,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploads.set",{"_index":1854,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploads.update((items",{"_index":1830,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploads.update((prev",{"_index":1813,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploadsloading",{"_index":1803,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploadsloading.set(false",{"_index":1815,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$uploadsloading.set(true",{"_index":1851,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.$user().avatar",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().id",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().roles.includes(role.administrator",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().vk_avatar",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set(initialauthenticateduser",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.account",{"_index":673,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.accountgql",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.accountinfogql.watch",{"_index":184,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery",{"_index":183,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery!.refetch",{"_index":194,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery.valuechanges",{"_index":195,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.alerts",{"_index":201,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["this.alerts.open",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth",{"_index":453,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.$$isloading",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isauth",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.auth.$isloading.next(false",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isloading.next(true",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$user().id",{"_index":1077,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.auth.$user().username",{"_index":1211,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.$user.update((user",{"_index":1273,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.clear",{"_index":1116,"title":{},"body":{"components/MeComponent.html":{}}}],["this.auth.init().subscribe",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.set(data",{"_index":456,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.set(user",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.signout().subscribe",{"_index":1115,"title":{},"body":{"components/MeComponent.html":{}}}],["this.authenticatedroutes",{"_index":1153,"title":{},"body":{"components/NavComponent.html":{}}}],["this.avataralreadyexists",{"_index":669,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.callbackurl",{"_index":475,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.clickupload.emit",{"_index":1656,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.close.emit",{"_index":1112,"title":{},"body":{"components/MeComponent.html":{}}}],["this.config.$isrefusedpage",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$isrefusedpage.set(true",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$menuisopen",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.config.$menuisopen.set(false",{"_index":1152,"title":{},"body":{"components/NavComponent.html":{}}}],["this.config.closemenu",{"_index":1111,"title":{},"body":{"components/MeComponent.html":{}}}],["this.confirmform",{"_index":1446,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.reset",{"_index":1452,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.setvalue",{"_index":1470,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.value!.trim",{"_index":1451,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.context.completewith(res",{"_index":689,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.context.completewith(true",{"_index":686,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.control.setvalue(null",{"_index":671,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value",{"_index":687,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value!.name",{"_index":1541,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.currentstep",{"_index":1537,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.currentuser",{"_index":1806,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.deleteuploadbyidgql",{"_index":1673,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.dialog",{"_index":1671,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.dialogs",{"_index":1113,"title":{},"body":{"components/MeComponent.html":{}}}],["this.dialogs.open",{"_index":1276,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["this.dialogsub",{"_index":1660,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.dialogsub.unsubscribe",{"_index":1676,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.disabled",{"_index":209,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(url",{"_index":1091,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["this.el.nativeelement.scrollheight",{"_index":1329,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.fb.group",{"_index":515,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.fetchmoreuploads",{"_index":1805,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.fileform.controls['compress'].value",{"_index":1545,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].disable",{"_index":1531,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].setvalue",{"_index":1535,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].value",{"_index":1543,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].setvalue(selectedfile.name",{"_index":1534,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].valid",{"_index":1538,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value",{"_index":1542,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value!.trim().length",{"_index":1539,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['private'].value",{"_index":1546,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls[\\'ext\\'].value",{"_index":1550,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.form",{"_index":514,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls",{"_index":528,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls.birthday.touched",{"_index":1454,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.birthday.value!.toutcnativedate().toisostring",{"_index":1455,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.errors",{"_index":1449,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.touched",{"_index":1457,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.valid",{"_index":1458,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim",{"_index":1460,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim().length",{"_index":1459,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.login.errors",{"_index":1405,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.login.value!.trim",{"_index":1408,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.name.errors",{"_index":1447,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.touched",{"_index":1461,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.valid",{"_index":1462,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim",{"_index":1464,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim().length",{"_index":1463,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.errors",{"_index":1406,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.pass.reset",{"_index":1453,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.value!.trim",{"_index":1410,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.surname.errors",{"_index":1448,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.touched",{"_index":1465,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.valid",{"_index":1466,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim",{"_index":1468,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim().length",{"_index":1467,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls[control",{"_index":523,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls].errors",{"_index":526,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.valid",{"_index":520,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.handledelete",{"_index":1670,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.handleuploadresult(res",{"_index":681,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.http.delete",{"_index":313,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.get(`${env.apiurl}${api.auth_me",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":311,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_refresh",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_in",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_out",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_up",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.upload",{"_index":1710,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.injector",{"_index":1278,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["this.isadministrator",{"_index":1840,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.islastpage",{"_index":1804,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.isloading.asobservable",{"_index":438,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(false",{"_index":1411,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(true",{"_index":541,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.set(false",{"_index":682,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.isloading.set(true",{"_index":672,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.ismobile",{"_index":1663,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.isprivate",{"_index":1678,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.me().pipe",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.me().pipe(map((val",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.modalfiltersisopen",{"_index":1829,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.onchange",{"_index":207,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.ondelete.emit",{"_index":1677,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.ontouched",{"_index":208,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.pdfviewer",{"_index":1661,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.placeholder",{"_index":1056,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.previewdialog",{"_index":1666,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.refetchuploads",{"_index":1855,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.refresh().pipe",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resetuploads",{"_index":1819,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.route.params.pipe",{"_index":1207,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":451,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{}}}],["this.route.snapshot.queryparams['url",{"_index":476,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.events",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.router.navigate",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.router.navigate(['/404",{"_index":1269,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1117,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigate([`/${this.auth.$user().username",{"_index":1110,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigatebyurl(getcurrentpath(this.router",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl",{"_index":1662,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.scroll.isend",{"_index":1801,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.scroll.next(false",{"_index":1802,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.scroll.next(true",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectextension.emit",{"_index":1657,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.serializerole(role",{"_index":1283,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.set(data",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.showchangeavatardialog().subscribe((res",{"_index":1270,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.showconfirmform",{"_index":1450,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.showerror(err",{"_index":684,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.showerror(res.error.message",{"_index":675,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.showprompt",{"_index":1668,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.showref",{"_index":1167,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.showuploadfiledialog",{"_index":1827,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.showuploadinfodialog(uploadid",{"_index":1828,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.skeletonrows",{"_index":1862,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.subs$.foreach((sub",{"_index":458,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push",{"_index":452,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open",{"_index":540,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open(error).subscribe",{"_index":539,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs.foreach((sub",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subs.push",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["this.targetaccountid",{"_index":667,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.title",{"_index":1166,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.title.settitle(profile!.full_name",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.token.next(payload.token",{"_index":513,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.upload",{"_index":1544,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.upload!.ext",{"_index":1658,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload!.file_name",{"_index":1683,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload!.id",{"_index":1675,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload!.name",{"_index":1665,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload!.url",{"_index":1655,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload.getfileparams(this.control.value",{"_index":1533,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadavatar",{"_index":679,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadavatar().subscribe",{"_index":683,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadbyidgql",{"_index":1571,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploaded.set(res",{"_index":1548,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadextensionsgql",{"_index":1051,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.uploadfiltersform.controls['account'].setvalue([this.currentuser",{"_index":1807,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['account'].valuechanges",{"_index":1816,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['ext'].setvalue",{"_index":1839,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['ext'].setvalue([ext",{"_index":1836,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['ext'].value",{"_index":1835,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['ext'].valuechanges",{"_index":1820,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['name'].valuechanges",{"_index":1822,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadfiltersform.controls['permissions'].valuechanges",{"_index":1824,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadid",{"_index":1569,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['name'].setvalue(upload.name",{"_index":1575,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['originalname'].setvalue",{"_index":1576,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadsgql.watch(this.params",{"_index":1810,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadsquery",{"_index":1809,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadsquery!.refetch(this.params",{"_index":1852,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.uploadsquery.valuechanges",{"_index":1811,"title":{},"body":{"components/UploadsComponent.html":{}}}],["this.user.id",{"_index":1547,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.vkidonetap.render",{"_index":1395,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap",{"_index":1394,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap.nativeelement",{"_index":1397,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.window",{"_index":1321,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.document.documentelement.scrollheight",{"_index":1325,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.innerheight",{"_index":1340,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.scrolly",{"_index":1335,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["threshold",{"_index":1296,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["throwerror",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["timelines",{"_index":1148,"title":{},"body":{"components/NavComponent.html":{},"components/TimelinesComponent.html":{},"miscellaneous/variables.html":{}}}],["timelines'},{'name",{"_index":261,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["timelines.component.html",{"_index":1473,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelines.component.scss",{"_index":1474,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelinescomponent",{"_index":260,"title":{"components/TimelinesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["tinkoff/ng",{"_index":663,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["title",{"_index":1141,"title":{},"body":{"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1471,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["togglemenustatus",{"_index":703,"title":{},"body":{"injectables/ConfigService.html":{}}}],["token",{"_index":488,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["toobservable",{"_index":169,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{}}}],["toobservable(this.$accountsfilter",{"_index":142,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["toobservable(this.$isauth",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["toobservable(this.$profile).pipe",{"_index":1214,"title":{},"body":{"components/ProfileComponent.html":{}}}],["toobservable(this.$state).pipe",{"_index":1355,"title":{},"body":{"injectables/ScrollService.html":{}}}],["top",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totam",{"_index":832,"title":{},"body":{"components/DashboardComponent.html":{}}}],["totamperferendis",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{}}}],["trace",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1154,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["transform",{"_index":1083,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(url",{"_index":1084,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["transform(value",{"_index":1361,"title":{},"body":{"pipes/SexPipe.html":{}}}],["transition(':enter",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(50",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":69,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["trigger('enterleave",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout200",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout500",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid200",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid500",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":81,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1977,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":1692,"title":{},"body":{"injectables/UploadService.html":{}}}],["tui_is_mobile",{"_index":1647,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tui_language",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tui_prompt",{"_index":1643,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tui_sanitizer",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tuialertmodule",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["tuialertservice",{"_index":165,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tuiavatarmodule",{"_index":1067,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuibuttonmodule",{"_index":1582,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuichipmodule",{"_index":1189,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuidatalistwrappermodule",{"_index":91,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/UploadsComponent.html":{}}}],["tuiday",{"_index":1442,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiday(2000",{"_index":1433,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuidialogcontext",{"_index":641,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuidialogmodule",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadsComponent.html":{}}}],["tuidialogservice",{"_index":1109,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tuifilelike",{"_index":661,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["tuihintmodule",{"_index":629,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tuihosteddropdownmodule",{"_index":1069,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuiiconairplaylarge",{"_index":1143,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconcalendarlarge",{"_index":1145,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconchartlinelarge",{"_index":1149,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconmessagecirclelarge",{"_index":1150,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiinputdatemodule",{"_index":1415,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiinputfilesmodule",{"_index":627,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["tuiinputinlinemodule",{"_index":1501,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuiinputmodule",{"_index":1721,"title":{},"body":{"components/UploadsComponent.html":{}}}],["tuiinputtagmodule",{"_index":94,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuilineclampmodule",{"_index":1068,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuilinkmodule",{"_index":1503,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuiloadermodule",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["tuipdfviewermodule",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["tuipdfvieweroptions",{"_index":1644,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuipdfviewerservice",{"_index":1645,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuipreviewdialogservice",{"_index":1646,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuipreviewmodule",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuipromptmodule",{"_index":1584,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuirootmodule",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiselectmodule",{"_index":1722,"title":{},"body":{"components/UploadsComponent.html":{}}}],["tuiskeletonmodule",{"_index":1188,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuisteppermodule",{"_index":1500,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuisvgmodule",{"_index":628,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["tuitablepaginationmodule",{"_index":1723,"title":{},"body":{"components/UploadsComponent.html":{}}}],["tuitabsmodule",{"_index":460,"title":{},"body":{"components/AuthComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":93,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/UploadsComponent.html":{}}}],["tuitogglemodule",{"_index":1502,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["type",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2036,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":525,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["ui/addon",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["ui/cdk",{"_index":1443,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":167,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["ui/experimental",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["ui/icons",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":172,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["ui/styles",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["ullam",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ullamsuscipit",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unde",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{}}}],["undefined",{"_index":1456,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadsComponent.html":{}}}],["unknown",{"_index":306,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["untracked",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["untracked(this.auth.$user",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["up",{"_index":1414,"title":{},"body":{"components/SignUpComponent.html":{},"miscellaneous/enumerations.html":{}}}],["up'},{'name",{"_index":259,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["up.component",{"_index":474,"title":{},"body":{"components/AuthComponent.html":{}}}],["up.component.html",{"_index":1416,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":1417,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":1413,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:111",{"_index":1427,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:141",{"_index":1422,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:232",{"_index":1424,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:41",{"_index":1428,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:42",{"_index":1429,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:43",{"_index":1439,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:45",{"_index":1421,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:47",{"_index":1441,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:49",{"_index":1437,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:50",{"_index":1438,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:52",{"_index":1440,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:54",{"_index":1436,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:70",{"_index":1430,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:74",{"_index":1420,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:79",{"_index":1426,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":473,"title":{},"body":{"components/AuthComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["updated_at",{"_index":278,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["upload",{"_index":263,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["upload($id",{"_index":1477,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload(where",{"_index":1478,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload.created_at",{"_index":1680,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["upload.ext",{"_index":1679,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["upload.file_name",{"_index":1577,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadavatar",{"_index":286,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["uploadavatar(dto",{"_index":291,"title":{},"body":{"injectables/AccountService.html":{}}}],["uploadavatardto",{"_index":292,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidgql",{"_index":1475,"title":{"injectables/UploadByIdGQL.html":{}},"body":{"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["uploadbyidqueryref",{"_index":1486,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidresponse",{"_index":1484,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidvariables",{"_index":1485,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploaded",{"_index":1508,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["uploadextensions",{"_index":1494,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions($size",{"_index":1488,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions(page",{"_index":1490,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensionsgql",{"_index":1030,"title":{"injectables/UploadExtensionsGQL.html":{}},"body":{"components/ExtensionInputComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{}}}],["uploadextensionsqueryref",{"_index":1496,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsresponse",{"_index":1493,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsvariables",{"_index":1495,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadfile",{"_index":1510,"title":{},"body":{"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["uploadfile(dto",{"_index":1694,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfilecomponent",{"_index":262,"title":{"components/UploadFileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["uploadfiledto",{"_index":1695,"title":{},"body":{"injectables/UploadService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadfiltersform",{"_index":1734,"title":{},"body":{"components/UploadsComponent.html":{}}}],["uploadid",{"_index":1555,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["uploadinfo",{"_index":1568,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadinfocomponent",{"_index":265,"title":{"components/UploadInfoComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["uploadinfoform",{"_index":1556,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadlistitem",{"_index":1648,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["uploadlistitemcomponent",{"_index":267,"title":{"components/UploadListItemComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["uploadmodel",{"_index":279,"title":{"interfaces/UploadModel.html":{}},"body":{"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploads",{"_index":271,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["uploads.component.html",{"_index":1724,"title":{},"body":{"components/UploadsComponent.html":{}}}],["uploads.component.scss",{"_index":1725,"title":{},"body":{"components/UploadsComponent.html":{}}}],["uploadscomponent",{"_index":270,"title":{"components/UploadsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"coverage.html":{}}}],["uploadservice",{"_index":1029,"title":{"injectables/UploadService.html":{}},"body":{"components/ExtensionInputComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsgql",{"_index":1720,"title":{"injectables/UploadsGQL.html":{}},"body":{"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploadsloading",{"_index":1726,"title":{},"body":{"components/UploadsComponent.html":{}}}],["uploadsquery",{"_index":1735,"title":{},"body":{"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsqueryref",{"_index":1787,"title":{},"body":{"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsresponse",{"_index":1865,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsvariables",{"_index":1866,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["url",{"_index":49,"title":{},"body":{"injectables/AccountGQL.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/NavComponent.html":{},"interfaces/Route.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["url.pipe.ts",{"_index":1081,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:11",{"_index":1085,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["useclass",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":82,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["usefactory",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadFileComponent.html":{}}}],["user.interface.ts",{"_index":622,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["username.gql.ts",{"_index":317,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["username.gql.ts:24",{"_index":324,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["username}!`).subscribe",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ut",{"_index":874,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utconsequuntur",{"_index":970,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"components/UploadsComponent.html":{}}}],["val",{"_index":130,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{}}}],["val.isend",{"_index":1356,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.posy",{"_index":1357,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.trim",{"_index":205,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.trim().length",{"_index":204,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.username",{"_index":150,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["validation",{"_index":510,"title":{"classes/Validation.html":{}},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validation.match('pass",{"_index":519,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["validatorfn",{"_index":1875,"title":{},"body":{"classes/Validation.html":{}}}],["validators",{"_index":509,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.email",{"_index":1445,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators.maxlength(30",{"_index":518,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(2",{"_index":1444,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.minlength(4",{"_index":1393,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(8",{"_index":517,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.required",{"_index":516,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["value",{"_index":45,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"injectables/UploadService.html":{},"components/UploadsComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuechanges.pipe(takeuntildestroyed(this.destroyref",{"_index":1054,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{}}}],["valuechanges.subscribe",{"_index":1572,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["var",{"_index":214,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{}}}],["variable",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2055,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":897,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velit",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velmagnam",{"_index":985,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veniam",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veritatis",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vero",{"_index":818,"title":{},"body":{"components/DashboardComponent.html":{}}}],["version",{"_index":2033,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":1392,"title":{},"body":{"components/SignInComponent.html":{},"components/UploadListItemComponent.html":{}}}],["viewchild('preview",{"_index":1634,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["viewchild('vkidsdkonetap",{"_index":1390,"title":{},"body":{"components/SignInComponent.html":{}}}],["visible",{"_index":1344,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["vitae",{"_index":845,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vk",{"_index":1999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vk_avatar",{"_index":19,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["vk_id",{"_index":20,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"miscellaneous/variables.html":{}}}],["vk_id_exchange_token",{"_index":1998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vkid",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["vkid.config.set",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["vkid.languages.rus",{"_index":1401,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.onetap",{"_index":1388,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.scheme.dark",{"_index":1399,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid/sdk",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{},"dependencies.html":{}}}],["vkidonetap",{"_index":1368,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkidsdkonetap",{"_index":1369,"title":{},"body":{"components/SignInComponent.html":{}}}],["void",{"_index":123,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadsComponent.html":{},"miscellaneous/functions.html":{}}}],["voluptas",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptas,eligendi",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptate",{"_index":821,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatem",{"_index":830,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptaterepellat",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptates",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatesitaque",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatibus",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatum",{"_index":791,"title":{},"body":{"components/DashboardComponent.html":{}}}],["watch",{"_index":1052,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["webp",{"_index":1684,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["whether",{"_index":1348,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["whole",{"_index":1323,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window",{"_index":1294,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window.location.reload",{"_index":1118,"title":{},"body":{"components/MeComponent.html":{}}}],["window:scroll",{"_index":1298,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent",{"_index":1295,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent(event",{"_index":1313,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["withcredentials",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlatestfrom(auth.$$isloading",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withviewtransitions",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":696,"title":{},"body":{"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/MemoriesComponent.html":{},"components/TimelinesComponent.html":{}}}],["works!lorem",{"_index":915,"title":{},"body":{"components/DashboardComponent.html":{}}}],["writablesignal",{"_index":144,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadsComponent.html":{}}}],["writevalue",{"_index":116,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["x",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":1332,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["yes",{"_index":1086,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadListItemComponent.html":{}}}],["yyyy",{"_index":1681,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["zone.js",{"_index":1979,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/account.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"0\" | \"1\" | \"2\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"0\" | \"1\" | \"2\" | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../enums/role.enum'\n\nexport const initialAccount: Account = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n\nexport interface Account {\n  id: string | null\n  vk_id: string | null\n  username: string | null\n  email: string | null\n  roles: Role[]\n  avatar: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  full_name: string | null\n  birthday: Date | null\n  sex: '0' | '1' | '2' | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountGQL.html":{"url":"injectables/AccountGQL.html","title":"injectable - AccountGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/account.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/account.gql.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountModel } from '@models'\n\nexport type AccountResponse = {\n  account: AccountModel\n}\n\nexport type AccountVariables = {\n  username: string\n}\n\nexport type AccountQueryRef = QueryRef\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountGQL extends Query {\n  document = gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountInputComponent.html":{"url":"components/AccountInputComponent.html","title":"component - AccountInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/account-input/account-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: AccountInputComponent,\n}\n                                AccountsInfoByUsernameGQL\n                \n            \n\n\n            \n                selector\n                spomen-account-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            TuiDataListWrapperModule\n                            ReactiveFormsModule\n                            TuiTextfieldControllerModule\n                            TuiInputTagModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$accountFilter\n                            \n                            \n                                $accounts\n                            \n                            \n                                $accountsFilter\n                            \n                            \n                                $accountsList\n                            \n                            \n                                    Private\n                                accountInfoGQL\n                            \n                            \n                                    Private\n                                accountInfoQuery\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:68\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleChange\n                        \n                    \n                \n            \n            \n                \nhandleChange(val: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$accountFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$accountsFilter)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountsInfoByUsernameGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsInfoByUsernameQueryRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  computed,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Signal,\n  signal,\n  WritableSignal,\n} from '@angular/core'\n\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\n\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { debounceTime, distinctUntilChanged, Observable } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  AccountsInfoByUsernameGQL,\n  AccountsInfoByUsernameQueryRef,\n} from '@graphql'\nimport { AccountShortModel } from '@models'\n\n@Component({\n  selector: 'spomen-account-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    TuiDataListWrapperModule,\n    ReactiveFormsModule,\n    TuiTextfieldControllerModule,\n    TuiInputTagModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: AccountInputComponent,\n    },\n    AccountsInfoByUsernameGQL,\n  ],\n  templateUrl: './account-input.component.html',\n  styleUrl: './account-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'AccountInput' })\nexport class AccountInputComponent implements OnInit, ControlValueAccessor {\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  private accountInfoGQL = inject(AccountsInfoByUsernameGQL)\n\n  private accountInfoQuery: AccountsInfoByUsernameQueryRef | null = null\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  $accounts: WritableSignal = signal([])\n\n  $accountsList: Signal = computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n\n  $accountsFilter: WritableSignal = signal('')\n  $$accountFilter: Observable = toObservable(this.$accountsFilter)\n\n  ngOnInit() {\n    this.accountInfoQuery = this.accountInfoGQL.watch(\n      {\n        username: this.$accountsFilter(),\n      },\n      { fetchPolicy: 'cache-and-network' }\n    )\n\n    this.$$accountFilter\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe(() => {\n        this.accountInfoQuery!.refetch({\n          username: this.$accountsFilter(),\n        })\n      })\n\n    this.accountInfoQuery.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.$accounts.set(res.data.accounts)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список аккаунтов', { status: 'error' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  handleChange(val: string) {\n    if (val.trim().length > 0 && val.trim() !== this.$accountsFilter()) {\n      this.$accountsFilter.set(val.trim())\n    }\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  Аккаунт\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Аккаунт      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountModel.html":{"url":"interfaces/AccountModel.html","title":"interface - AccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         UploadModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"0\" | \"1\" | \"2\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"0\" | \"1\" | \"2\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: '0' | '1' | '2'\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/account.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для работы с аккаунтами\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeAvatar\n                            \n                            \n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar(dto: RemoveAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RemoveAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \nuploadAvatar(dto: UploadAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\n\nimport { RemoveAvatarDto, UploadAvatarDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для работы с аккаунтами\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadAvatar(dto: UploadAvatarDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n\n    if (dto.id) body.append('id', dto.id)\n\n    return this.http.post(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}`,\n      body\n    )\n  }\n\n  removeAvatar(dto: RemoveAvatarDto) {\n    return this.http.delete(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}${dto.id ? `?id=${dto.id}` : ''}`\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountShortModel.html":{"url":"interfaces/AccountShortModel.html","title":"interface - AccountShortModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountShortModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: '0' | '1' | '2'\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsInfoByUsernameGQL.html":{"url":"injectables/AccountsInfoByUsernameGQL.html","title":"injectable - AccountsInfoByUsernameGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountsInfoByUsernameGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/accounts-info-by-username.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountShortModel } from '@models'\n\nexport type AccountsInfoByUsernameResponse = {\n  accounts: AccountShortModel[]\n}\n\nexport type AccountsInfoByUsernameVariables = {\n  username: string\n}\n\nexport type AccountsInfoByUsernameQueryRef = QueryRef\n\n@Injectable()\nexport class AccountsInfoByUsernameGQL extends Query {\n  document = gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ScrollNearEndDirective\n                \n            \n\n\n            \n                selector\n                spomen-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterOutlet\n                            TuiRootModule\n                            TuiDialogModule\n                            TuiAlertModule\n                            TuiPreviewModule\n                            TuiPdfViewerModule\n                            TuiLoaderModule\n                                HeaderComponent\n                                NavComponent\n                                OopsComponent\n                                MenuComponent\n                                ScrollNearEndDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scroll\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:70\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nearEnd\n                        \n                    \n                \n            \n            \n                \nnearEnd(posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScrollService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiRootModule,\n  TuiDialogModule,\n  TuiAlertModule,\n  TuiAlertService,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n  effect,\n  inject,\n  untracked,\n} from '@angular/core'\n\nimport { TuiPreviewModule } from '@taiga-ui/addon-preview'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Router, RouterOutlet } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\nimport { Subscription } from 'rxjs'\nimport * as VKID from '@vkid/sdk'\n\nimport { env } from '@env'\n\nimport { AuthService, ConfigService, ScrollService } from '@services'\nimport { inOutAnimation200, inOutAnimation500 } from '@animations'\nimport { ScrollNearEndDirective } from '@directives'\nimport { TuiPdfViewerModule } from '@taiga-ui/kit'\nimport { getCurrentPath } from '@utils'\n\nimport { HeaderComponent } from '@components/header'\nimport { OopsComponent } from '@components/oops'\nimport { MenuComponent } from '@components/menu'\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    TuiRootModule,\n    TuiDialogModule,\n    TuiAlertModule,\n    TuiPreviewModule,\n    TuiPdfViewerModule,\n    TuiLoaderModule,\n    HeaderComponent,\n    NavComponent,\n    OopsComponent,\n    MenuComponent,\n    ScrollNearEndDirective,\n  ],\n  animations: [inOutAnimation200, inOutAnimation500],\n  providers: [ScrollNearEndDirective],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\n@Sentry.TraceClass({ name: 'App' })\nexport class AppComponent implements OnInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private scroll = inject(ScrollService)\n  private router = inject(Router)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  private subs: Subscription[] = []\n\n  constructor() {\n    effect(() => {\n      if (this.auth.$isAuth()) {\n        const { first_name, username } = untracked(this.auth.$user)\n\n        this.subs.push(\n          this.alerts.open(`Привет, ${first_name || username}!`).subscribe()\n        )\n\n        if (getCurrentPath(this.router).includes('/auth')) {\n          this.router.navigate(['/'])\n        }\n      }\n    }, {})\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnInit' })\n  ngOnInit(): void {\n    VKID.Config.set({\n      app: env.appId,\n      redirectUrl: env.redirectUrl,\n      state: 'dj29fnsadjsd82f249k293c139j1kd3',\n    })\n\n    this.auth.$isLoading.next(true)\n\n    this.subs.push(\n      this.auth.init().subscribe({\n        next: (user) => {\n          this.auth.set(user)\n          this.auth.$isLoading.next(false)\n        },\n        error: (err: HttpErrorResponse) => {\n          if (err.status === 0) {\n            this.config.$isRefusedPage.set(true)\n            this.auth.$isLoading.next(false)\n            return\n          }\n\n          this.auth.$isLoading.next(false)\n\n          this.router.navigateByUrl(getCurrentPath(this.router))\n        },\n      })\n    )\n  }\n\n  nearEnd(posY: number) {\n    this.scroll.next(true, posY)\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n  @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {\n    \n  } @else if (!this.config.$isRefusedPage()) {\n    @if (this.auth.$isAuth()) {\n      \n        \n        \n          \n        \n      \n    } @else {\n      \n    }\n\n    @if (this.config.$menuIsOpen()) {\n      \n    }\n  }\n\n  @if (this.config.$isRefusedPage()) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {      } @else if (!this.config.$isRefusedPage()) {    @if (this.auth.$isAuth()) {                                                  } @else {          }    @if (this.config.$menuIsOpen()) {          }  }  @if (this.config.$isRefusedPage()) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthCallbackComponent.html":{"url":"components/AuthCallbackComponent.html","title":"component - AuthCallbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthCallbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/callback/auth-callback.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-callback\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiLoaderModule\n                                AuthPassComponent\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-callback.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-callback.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { TuiLoaderModule } from '@taiga-ui/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthPassComponent } from '@app/auth/pass/auth-pass.component'\n\nimport { getQueryPayload } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-auth-callback',\n  standalone: true,\n  imports: [CommonModule, TuiLoaderModule, AuthPassComponent, TuiLoaderModule],\n  templateUrl: './auth-callback.component.html',\n  styleUrl: './auth-callback.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthCallback' })\nexport class AuthCallbackComponent implements OnInit, OnDestroy {\n  private route = inject(ActivatedRoute)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(true)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.subs$.push(\n      this.auth\n        .signInVK({\n          ...payload,\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n            this.router.navigate(['/'])\n          },\n          error: (err) => {\n            this.router.navigate(['/'])\n            console.log(err)\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        @if (isLoading$$ | async) {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (isLoading$$ | async) {  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthCallbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiTabsModule\n                                SignInComponent\n                                SignUpComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemIndex\n                            \n                            \n                                callbackUrl\n                            \n                            \n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Auth.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/auth.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        callbackUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { TuiTabsModule } from '@taiga-ui/kit'\nimport * as Sentry from '@sentry/angular'\n\nimport { enterLeaveAnimation } from '@animations'\n\nimport { SignInComponent } from './sign-in/sign-in.component'\nimport { SignUpComponent } from './sign-up/sign-up.component'\n\n@Component({\n  selector: 'spomen-auth',\n  standalone: true,\n  imports: [TuiTabsModule, SignInComponent, SignUpComponent],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n  animations: [enterLeaveAnimation],\n})\n@Sentry.TraceClass({ name: 'Auth' })\nexport class AuthComponent implements OnInit {\n  route = inject(ActivatedRoute)\n\n  activeItemIndex: number = 0\n  callbackUrl: string | null = null\n\n  @Sentry.TraceMethod({ name: 'Auth.ngOnInit' })\n  ngOnInit(): void {\n    this.callbackUrl = this.route.snapshot.queryParams['url'] ?? null\n  }\n}\n\n    \n\n    \n        \n  Вход\n  Регистрация\n\n\n  @if (activeItemIndex === 0) {\n    \n  }\n  @if (activeItemIndex === 1) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Вход  Регистрация  @if (activeItemIndex === 0) {      }  @if (activeItemIndex === 1) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthModel.html":{"url":"interfaces/AuthModel.html","title":"interface - AuthModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/auth.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AccountModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from './account.model'\n\nexport interface AuthModel extends AccountModel {\n  access_token: string\n  refresh_token: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthPassComponent.html":{"url":"components/AuthPassComponent.html","title":"component - AuthPassComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthPassComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pass/auth-pass.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-pass\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-pass.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-pass.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pass/auth-pass.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { getQueryPayload, Validation } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\n\n@Component({\n  selector: 'spomen-auth-pass',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './auth-pass.component.html',\n  styleUrl: './auth-pass.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthPass' })\nexport class AuthPassComponent implements OnInit, OnDestroy {\n  private token: BehaviorSubject = new BehaviorSubject('')\n  private route = inject(ActivatedRoute)\n  private alerts = inject(TuiAlertService)\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    confirmPass: FormControl\n  }> = new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.token.next(payload.token)\n\n    this.form = this.fb.group(\n      {\n        pass: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(30),\n          ],\n        ],\n        confirmPass: ['', [Validators.required]],\n      },\n      {\n        validators: [Validation.match('pass', 'confirmPass')],\n      }\n    )\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      Object.keys(this.form.controls).forEach((control) => {\n        if (\n          this.form.controls[control as keyof typeof this.form.controls].errors\n        ) {\n          Object.keys(\n            this.form.controls[control as keyof typeof this.form.controls]\n              .errors!\n          ).forEach((error) => {\n            switch (error) {\n              case 'required': {\n                errors.push('Пароль обязателен')\n                break\n              }\n\n              case 'minlength': {\n                errors.push('Пароль должен быть не менее 8 символов')\n                break\n              }\n\n              case 'match': {\n                errors.push('Пароли должны быть одинаковы')\n                break\n              }\n\n              default: {\n                errors.push('Проверьте правильность полей')\n              }\n            }\n          })\n        }\n      })\n\n      new Set(errors).forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.subs$.push(this.alerts.open('Запрос на сервер...').subscribe())\n    this.isLoading.next(true)\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  Придумайте пароль\n  \n  \n  \n    \n      Продолжить\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Придумайте пароль                Продолжить      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthPassComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isAuth\n                            \n                            \n                                $$isLoading\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isAdmin\n                            \n                            \n                                $isAuth\n                            \n                            \n                                $isLoading\n                            \n                            \n                                $user\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                init\n                            \n                            \n                                me\n                            \n                            \n                                refresh\n                            \n                            \n                                set\n                            \n                            \n                                signIn\n                            \n                            \n                                signInVK\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(data: AuthModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AuthModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(dto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInVK\n                        \n                    \n                \n            \n            \n                \nsignInVK(dto: AuthCallbackDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            AuthCallbackDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(dto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$isAuth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.$isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() => !!this.$user().id)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAuthenticatedUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Signal,\n  WritableSignal,\n  computed,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  BehaviorSubject,\n  Observable,\n  catchError,\n  map,\n  switchMap,\n  throwError,\n} from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { toObservable } from '@angular/core/rxjs-interop'\n\nimport { AuthenticatedUser, initialAuthenticatedUser } from '@interfaces'\nimport { AuthCallbackDto, SignUpDto, SignInDto } from '@dtos'\nimport { AuthModel } from '@models'\n\nimport { API, Role } from '@enums'\n\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private http: HttpClient = inject(HttpClient)\n\n  $user: WritableSignal = signal(initialAuthenticatedUser)\n\n  $avatar: Signal = computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n\n  $isAuth: Signal = computed(() => !!this.$user().id)\n  $$isAuth: Observable = toObservable(this.$isAuth)\n\n  $isAdmin: Signal = computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n\n  $isLoading: BehaviorSubject = new BehaviorSubject(false)\n  $$isLoading: Observable = this.$isLoading.asObservable()\n\n  set(data: AuthModel) {\n    this.$user.set({\n      id: data.id,\n      username: data.username,\n      birthday: data.birthday,\n      sex: data.sex,\n      token: data.access_token,\n      roles: data.roles.sort((a, b) => a.localeCompare(b)),\n      vk_id: data.vk_id || null,\n      avatar: data.avatar ? data.avatar.url : null,\n      vk_avatar: data.vk_avatar || null,\n      email: data.email || null,\n      first_name: data.first_name || null,\n      last_name: data.last_name || null,\n      full_name:\n        data.first_name && data.last_name\n          ? `${data.first_name.trim()} ${data.last_name.trim()}`\n          : null,\n    })\n  }\n\n  clear() {\n    this.$user.set(initialAuthenticatedUser)\n  }\n\n  init(): Observable {\n    this.$isLoading.next(true)\n\n    return this.me().pipe(\n      map((data) => {\n        this.set(data)\n        return data\n      }),\n      catchError((err: HttpErrorResponse) => {\n        if (err.status === 401) {\n          return this.refresh().pipe(\n            switchMap(() => this.me().pipe(map((val) => val)))\n          )\n        }\n\n        return throwError(() => err)\n      })\n    )\n  }\n\n  signIn(dto: SignInDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_IN}`, dto)\n  }\n\n  signUp(dto: SignUpDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_UP}`, dto)\n  }\n\n  signOut(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_OUT}`, {})\n  }\n\n  signInVK(dto: AuthCallbackDto): Observable {\n    return this.http.post(\n      `${env.apiUrl}${API.VK_ID_EXCHANGE_TOKEN}`,\n      dto\n    )\n  }\n\n  me(): Observable {\n    return this.http.get(`${env.apiUrl}${API.AUTH_ME}`)\n  }\n\n  refresh(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_REFRESH}`, {})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticatedUser.html":{"url":"interfaces/AuthenticatedUser.html","title":"interface - AuthenticatedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticatedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/authenticated-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Account\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from './account.interface'\n\nexport const initialAuthenticatedUser: AuthenticatedUser = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n\nexport interface AuthenticatedUser extends Account {\n  token: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeAvatarComponent.html":{"url":"components/ChangeAvatarComponent.html","title":"component - ChangeAvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangeAvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/change-avatar/change-avatar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-change-avatar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiSvgModule\n                            TuiHintModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-avatar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./change-avatar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                account\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                avatarAlreadyExists\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                targetAccountId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    Private\n                                handleUploadResult\n                            \n                            \n                                removeAvatar\n                            \n                            \n                                removeFile\n                            \n                            \n                                    Private\n                                showError\n                            \n                            \n                                    Private\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(context: TuiDialogContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    TuiDialogContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleUploadResult\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUploadResult(res: UploadModel | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            UploadModel | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(err: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarAlreadyExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        targetAccountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Inject,\n  WritableSignal,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogContext,\n  TuiHintModule,\n  TuiLoaderModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { TuiFileLike, TuiInputFilesModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus'\nimport { catchError, of, switchMap, takeLast } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AccountService } from '@services'\n\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-change-avatar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiSvgModule,\n    TuiHintModule,\n  ],\n  templateUrl: './change-avatar.component.html',\n  styleUrl: './change-avatar.component.scss',\n})\n@Sentry.TraceClass({ name: 'ChangeAvatar' })\nexport class ChangeAvatarComponent {\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private account = inject(AccountService)\n\n  constructor(\n    @Inject(POLYMORPHEUS_CONTEXT)\n    private readonly context: TuiDialogContext\n  ) {\n    this.targetAccountId = context.data.accountId\n    this.avatarAlreadyExists = context.data.avatarAlreadyExists\n  }\n\n  readonly control = new FormControl(null)\n\n  isLoading: WritableSignal = signal(false)\n\n  private targetAccountId: string\n  avatarAlreadyExists: boolean\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  changeAvatar() {\n    this.isLoading.set(true)\n\n    if (this.avatarAlreadyExists) {\n      this.account\n        .removeAvatar({\n          id: this.targetAccountId,\n        })\n        .pipe(\n          takeUntilDestroyed(this.destroyRef),\n          catchError((res) => {\n            this.showError(res.error.message)\n            return of(new Error(res.error))\n          }),\n          switchMap((res) => (res ? this.uploadAvatar() : of(null)))\n        )\n        .subscribe({\n          next: (res) => this.handleUploadResult(res as UploadModel),\n          error: () => {\n            this.isLoading.set(false)\n          },\n        })\n    } else {\n      this.uploadAvatar().subscribe({\n        next: (res) => this.handleUploadResult(res as UploadModel),\n        error: () => {\n          this.isLoading.set(false)\n        },\n      })\n    }\n  }\n\n  removeAvatar() {\n    this.isLoading.set(true)\n\n    this.account\n      .removeAvatar({\n        id: this.targetAccountId,\n      })\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        catchError((err) => {\n          this.showError(err)\n          return of(new Error(err))\n        })\n      )\n      .subscribe({\n        next: () => {\n          this.isLoading.set(false)\n          this.context.completeWith(true)\n        },\n        error: () => {\n          this.isLoading.set(false)\n        },\n      })\n  }\n\n  private uploadAvatar() {\n    return this.account\n      .uploadAvatar({\n        file: this.control.value!,\n        id: this.targetAccountId,\n      })\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        takeLast(1),\n        catchError((res) => {\n          this.showError(res.error.message)\n          return of(new Error(res.error))\n        })\n      )\n  }\n\n  private handleUploadResult(res: UploadModel | null) {\n    this.isLoading.set(false)\n\n    this.context.completeWith(res ? res.url : null)\n  }\n\n  private showError(err: string) {\n    this.alerts\n      .open(err, { status: 'error' })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe()\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      Обновить аватар\n    \n\n    @if (avatarAlreadyExists) {\n      \n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Обновить аватар        @if (avatarAlreadyExists) {                        }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangeAvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatsComponent.html":{"url":"components/ChatsComponent.html","title":"component - ChatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chats/chats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-chats\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./chats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-chats',\n  standalone: true,\n  imports: [],\n  templateUrl: './chats.component.html',\n  styleUrl: './chats.component.scss',\n})\n@Sentry.TraceClass({ name: 'Chats' })\nexport class ChatsComponent {}\n\n    \n\n    \n        chats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'chats works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $isNotFoundPage\n                            \n                            \n                                $isRefusedPage\n                            \n                            \n                                $menuIsOpen\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                    Async\n                                loadConfig\n                            \n                            \n                                toggleMenuStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/config.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenuStatus\n                        \n                    \n                \n            \n            \n                \ntoggleMenuStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $isNotFoundPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isRefusedPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $menuIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, WritableSignal, inject, signal } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { filter, firstValueFrom, map } from 'rxjs'\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private router = inject(Router)\n  private http = inject(HttpClient)\n\n  $isNotFoundPage: WritableSignal = signal(false)\n  $isRefusedPage: WritableSignal = signal(false)\n  $menuIsOpen: WritableSignal = signal(false)\n\n  constructor() {\n    this.router.events\n      .pipe(\n        filter((val) => val instanceof NavigationEnd),\n        map((a: any) => {\n          if (a.url && a.urlAfterRedirects) {\n            this.$isNotFoundPage.set(\n              a.url.includes('/404') || a.urlAfterRedirects.includes('/404')\n            )\n          }\n        })\n      )\n      .subscribe()\n  }\n\n  async loadConfig(): Promise {\n    const config = await firstValueFrom(this.http.get('/assets/config.json'))\n    Object.assign(env, config)\n  }\n\n  toggleMenuStatus() {\n    this.$menuIsOpen.set(!this.$menuIsOpen())\n  }\n\n  closeMenu() {\n    if (this.$menuIsOpen()) {\n      this.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-dashboard',\n  standalone: true,\n  imports: [],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\n@Sentry.TraceClass({ name: 'Dashboard' })\nexport class DashboardComponent {}\n\n    \n\n    \n        dashboard works!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,\nratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequatur\nmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!\nSoluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atque\neaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quis\nvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sed\nminima voluptatum adipisci sapiente officiis natus tempore itaque, nihil\npossimus nemo deserunt atque provident et in eius repellat facere magni culpa\nconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, aut\nquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisi\nvero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quam\nobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enim\ndeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepe\ntotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, odit\naspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totam\nperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptate\nrepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiis\nlaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,\nimpedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!\nAspernatur, dolor inventore quae doloremque accusantium quos odit nostrum\nbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantium\nquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentium\nnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animi\ncommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,\nnemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat amet\nimpedit iure modi rem unde sit officia! Voluptate veritatis optio quam\nrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihil\nconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,\noptio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illum\nobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctio\naliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sit\ncumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,\nest nemo ex recusandae, accusamus nostrum dolorum at, totam qui esse\nperspiciatis labore autem minima! Error veniam soluta corporis ad voluptates\nitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihil\ndicta quos consequuntur similique doloremque provident voluptate at iste itaque\nbeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facere\nquae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestias\net consectetur cum iusto modi, sit reprehenderit dicta temporibus deleniti\nquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullam\nsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architecto\nnesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiat\nfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendis\nnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditate\nquasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,\neligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odio\nat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernatur\nquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventore\nillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiis\npariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdam\nperferendis ratione cum, minus molestiae reprehenderit autem architecto deserunt\naut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,\nmolestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,\nvoluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditate\nreiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus ut\nconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe soluta\nquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatis\nlibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,\nfugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecati\nnostrum, laudantium maiores repudiandae aspernatur perferendis libero sequi\nrepellat corporis expedita temporibus explicabo quae placeat odit molestiae\ndolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisi\neaque impedit officia consequatur deserunt incidunt, inventore corrupti sit\naliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibus\nlaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquid\npraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitia\naliquam nihil similique voluptate iure tenetur at velit nulla officia corporis\ndicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequuntur\ncommodi numquam, totam corporis recusandae maiores tempore aperiam distinctio\nvoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro vel\nmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquam\nnihil laudantium quibusdam, nulla, possimus asperiores quas delectus\nconsequuntur dolores alias, odit amet odio? Perferendis tenetur deleniti\npariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsa\nneque est odit, vel voluptates repellendus quod suscipit minima, accusamus\nreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborum\ncupiditate officiis sint unde nihil! Rerum enim laudantium esse possimus\naliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odio\nmaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam qui\nreprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquam\nearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnis\nrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iusto\narchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribus\nut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaque\nlaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque soluta\ndeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illum\ndeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sit\nincidunt, aperiam quia omnis! Sequi, aliquam eligendi!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,ratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequaturmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!Soluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atqueeaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quisvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sedminima voluptatum adipisci sapiente officiis natus tempore itaque, nihilpossimus nemo deserunt atque provident et in eius repellat facere magni culpaconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, autquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisivero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quamobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enimdeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepetotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, oditaspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totamperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptaterepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiislaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,impedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!Aspernatur, dolor inventore quae doloremque accusantium quos odit nostrumbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantiumquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentiumnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animicommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,nemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat ametimpedit iure modi rem unde sit officia! Voluptate veritatis optio quamrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihilconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,optio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illumobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctioaliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sitcumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,est nemo ex recusandae, accusamus nostrum dolorum at, totam qui esseperspiciatis labore autem minima! Error veniam soluta corporis ad voluptatesitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihildicta quos consequuntur similique doloremque provident voluptate at iste itaquebeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facerequae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestiaset consectetur cum iusto modi, sit reprehenderit dicta temporibus delenitiquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullamsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architectonesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiatfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendisnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditatequasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,eligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odioat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernaturquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventoreillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiispariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdamperferendis ratione cum, minus molestiae reprehenderit autem architecto deseruntaut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,molestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,voluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditatereiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus utconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe solutaquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatislibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,fugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecatinostrum, laudantium maiores repudiandae aspernatur perferendis libero sequirepellat corporis expedita temporibus explicabo quae placeat odit molestiaedolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisieaque impedit officia consequatur deserunt incidunt, inventore corrupti sitaliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibuslaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquidpraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitiaaliquam nihil similique voluptate iure tenetur at velit nulla officia corporisdicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequunturcommodi numquam, totam corporis recusandae maiores tempore aperiam distinctiovoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro velmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquamnihil laudantium quibusdam, nulla, possimus asperiores quas delectusconsequuntur dolores alias, odit amet odio? Perferendis tenetur delenitipariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsaneque est odit, vel voluptates repellendus quod suscipit minima, accusamusreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborumcupiditate officiis sint unde nihil! Rerum enim laudantium esse possimusaliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odiomaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam quireprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquamearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnisrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iustoarchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribusut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaquelaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque solutadeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illumdeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sitincidunt, aperiam quia omnis! Sequi, aliquam eligendi!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUploadByIdGQL.html":{"url":"injectables/DeleteUploadByIdGQL.html","title":"injectable - DeleteUploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Mutation\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DeleteUploadByIdQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/mutations/delete-upload-by-id.gql.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { gql, Mutation } from 'apollo-angular'\n\nexport type DeleteUploadByIdResponse = {\n  id: string\n}\n\nexport type DeleteUploadByIdVariables = {\n  id: string\n}\n\nexport const DeleteUploadByIdQuery = gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n\n@Injectable()\nexport class DeleteUploadByIdGQL extends Mutation {\n  document = DeleteUploadByIdQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Env.html":{"url":"interfaces/Env.html","title":"interface - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Env\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/env.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiUrl\n                                        \n                                \n                                \n                                        \n                                            appId\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            origin\n                                        \n                                \n                                \n                                        \n                                            redirectUrl\n                                        \n                                \n                                \n                                        \n                                            sentryDsn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        origin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sentryDsn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sentryDsn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Env {\n  environment: 'local' | 'dev' | 'staging' | 'production'\n  appId: number\n  redirectUrl: string\n  apiUrl: string\n  origin: string\n  sentryDsn: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-events\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n            \n                styleUrl\n                ./events.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n@Component({\n  selector: 'spomen-events',\n  standalone: true,\n  imports: [],\n  templateUrl: './events.component.html',\n  styleUrl: './events.component.scss',\n})\n@Sentry.TraceClass({ name: 'Events' })\nexport class EventsComponent {}\n\n    \n\n    \n        events works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'events works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtensionInputComponent.html":{"url":"components/ExtensionInputComponent.html","title":"component - ExtensionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtensionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/extension-input/extension-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: ExtensionInputComponent,\n}\n                                UploadService\n                                UploadExtensionsGQL\n                \n            \n\n\n            \n                selector\n                spomen-extension-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiDataListWrapperModule\n                            TuiTextfieldControllerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./extension-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./extension-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Private\n                                uploadExtensionsGQL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                $extensions\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Тип'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        $extensions\n                    \n                \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:67\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadExtensionsGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadExtensionsGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Output,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadExtensionsGQL } from '@graphql'\nimport { UploadService } from '@services'\n\n@Component({\n  selector: 'spomen-extension-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiDataListWrapperModule,\n    TuiTextfieldControllerModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: ExtensionInputComponent,\n    },\n    UploadService,\n    UploadExtensionsGQL,\n  ],\n  templateUrl: './extension-input.component.html',\n  styleUrl: './extension-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'ExtensionInput' })\nexport class ExtensionInputComponent implements OnInit, ControlValueAccessor {\n  private uploadExtensionsGQL = inject(UploadExtensionsGQL)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Тип'\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  @Output() $extensions: WritableSignal = signal([])\n\n  ngOnInit() {\n    this.uploadExtensionsGQL\n      .watch({\n        size: 20,\n        page: 1,\n      })\n      .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: ({ data }) => {\n          this.$extensions.set(data.uploadExtensions)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список расширений', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExtensionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileParams.html":{"url":"interfaces/FileParams.html","title":"interface - FileParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/upload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileParams {\n  name: string\n  ext: string\n  mime?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAccountModel.html":{"url":"interfaces/GetAccountModel.html","title":"interface - GetAccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/models/getAccount.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '@enums'\n\nexport interface GetAccountModel {\n  account: {\n    id: string\n    username: string\n    email: string | null\n    roles: Role[]\n    avatar: {\n      url: string\n    } | null\n    vk_id: string | null\n    vk_avatar: string | null\n    first_name: string | null\n    last_name: string | null\n    birthday: Date | null\n    sex: '0' | '1' | '2' | null\n    created_at: Date\n    updated_at: Date\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphqlError.html":{"url":"interfaces/GraphqlError.html","title":"interface - GraphqlError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphqlError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiHostedDropdownModule\n                                MeComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                isOpenProfileDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpenProfileDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiHostedDropdownModule, TuiSvgModule } from '@taiga-ui/core'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { Component, inject } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\n\nimport { MeComponent } from '@components/me'\n\n@Component({\n  selector: 'spomen-header',\n  standalone: true,\n  imports: [\n    RouterModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiHostedDropdownModule,\n    MeComponent,\n  ],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\n@Sentry.TraceClass({ name: 'Header' })\nexport class HeaderComponent {\n  auth = inject(AuthService)\n  config = inject(ConfigService)\n\n  isOpenProfileDropdown = false\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n    \n  \n  \n    \n      \n    \n  \n  \n    @if (this.auth.$user().id) {\n      \n        \n\n        \n        \n      \n    } @else {\n      Войти\n    }\n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      @if (this.auth.$user().id) {                                        } @else {      Войти    }          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IFrameUrlPipe.html":{"url":"pipes/IFrameUrlPipe.html","title":"pipe - IFrameUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IFrameUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/iframe-url.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        iframeUrl\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(url?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/iframe-url.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DomSanitizer } from '@angular/platform-browser'\nimport { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'iframeUrl',\n  standalone: true,\n})\nexport class IFrameUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  transform(url?: string): any {\n    return url ? this.domSanitizer.bypassSecurityTrustResourceUrl(url) : null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeComponent.html":{"url":"components/MeComponent.html","title":"component - MeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/me/me.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-me\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./me.component.html\n            \n\n\n\n            \n                styleUrl\n                ./me.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                destroyRef\n                            \n                            \n                                dialogs\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMe\n                            \n                            \n                                handleSignOut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/me/me.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMe\n                        \n                    \n                \n            \n            \n                \nhandleMe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  EventEmitter,\n  Output,\n  inject,\n} from '@angular/core'\n\nimport { TuiDialogService, TuiSvgModule } from '@taiga-ui/core'\nimport { AuthService, ConfigService } from '@services'\nimport * as Sentry from '@sentry/angular'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'spomen-me',\n  standalone: true,\n  imports: [TuiSvgModule],\n  templateUrl: './me.component.html',\n  styleUrl: './me.component.scss',\n})\n@Sentry.TraceClass({ name: 'Me' })\nexport class MeComponent {\n  dialogs = inject(TuiDialogService)\n  destroyRef = inject(DestroyRef)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n  router = inject(Router)\n\n  @Output() close = new EventEmitter()\n\n  handleMe() {\n    this.router.navigate([`/${this.auth.$user().username}`])\n    this.config.closeMenu()\n    this.close.emit()\n  }\n\n  handleSignOut() {\n    this.dialogs\n      .open('Выйти из воспоминаний?', {\n        size: 's',\n        required: true,\n      })\n      .subscribe({\n        error: () => {},\n        complete: () =>\n          this.auth.signOut().subscribe({\n            next: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n            },\n            error: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n              window.location.reload()\n            },\n          }),\n      })\n  }\n}\n\n    \n\n    \n        \n  Профиль\n  \n\n\n  Выйти\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Профиль    Выйти  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemoriesComponent.html":{"url":"components/MemoriesComponent.html","title":"component - MemoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/memories/memories.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-memories\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./memories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./memories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-memories',\n  standalone: true,\n  imports: [],\n  templateUrl: './memories.component.html',\n  styleUrl: './memories.component.scss',\n})\n@Sentry.TraceClass({ name: 'Memories' })\nexport class MemoriesComponent {}\n\n    \n\n    \n        memories works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'memories works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/menu/menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-menu',\n  standalone: true,\n  imports: [NavComponent],\n  templateUrl: './menu.component.html',\n  styleUrl: './menu.component.scss',\n})\n@Sentry.TraceClass({ name: 'Menu' })\nexport class MenuComponent {}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/nav/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-nav\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterLink\n                                RouterLinkActive\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n            \n                styleUrl\n                ./nav.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                authenticatedRoutes\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fixed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fixed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/nav/nav.component.ts:57\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/nav/nav.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticatedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : protectedRoutes\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { RouterLink, RouterLinkActive } from '@angular/router'\nimport { Component, Input, inject } from '@angular/core'\nimport { TuiSvgModule } from '@taiga-ui/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\nimport { Route } from '@interfaces'\n\nconst protectedRoutes: Route[] = [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n\n@Component({\n  selector: 'spomen-nav',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive, TuiSvgModule],\n  templateUrl: './nav.component.html',\n  styleUrl: './nav.component.scss',\n})\n@Sentry.TraceClass({ name: 'Nav' })\nexport class NavComponent {\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  @Input() fixed: boolean = false\n\n  authenticatedRoutes = protectedRoutes\n\n  closeMenu() {\n    if (this.config.$menuIsOpen()) {\n      this.config.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n    \n        \n  @if (this.auth.$isAuth()) {\n    @for (route of this.authenticatedRoutes; track route) {\n      \n        \n        {{ route.title }}\n      \n    }\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (this.auth.$isAuth()) {    @for (route of this.authenticatedRoutes; track route) {                      {{ route.title }}          }  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showRef\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showRef\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Такой страницы не существует'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { RouterModule } from '@angular/router'\nimport { Component, Input } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-not-found',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss',\n})\n@Sentry.TraceClass({ name: 'NotFound' })\nexport class NotFoundComponent {\n  @Input() title: string = 'Такой страницы не существует'\n  @Input() showRef: boolean = true\n}\n\n    \n\n    \n        {{ this.title }}\n\n@if (this.showRef) {\n  На главную\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ this.title }}@if (this.showRef) {  На главную}'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OopsComponent.html":{"url":"components/OopsComponent.html","title":"component - OopsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OopsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/oops/oops.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-oops\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./oops.component.html\n            \n\n\n\n            \n                styleUrl\n                ./oops.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-oops',\n  standalone: true,\n  imports: [],\n  templateUrl: './oops.component.html',\n  styleUrl: './oops.component.scss',\n})\n@Sentry.TraceClass({ name: 'Oops' })\nexport class OopsComponent {}\n\n    \n\n    \n        \n  \n    У нас технические работы\n    Попробуйте вернуться позже\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      У нас технические работы    Попробуйте вернуться позже          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'OopsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermissionInputComponent.html":{"url":"components/PermissionInputComponent.html","title":"component - PermissionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PermissionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/permission-input/permission-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: PermissionInputComponent,\n}\n                \n            \n\n\n            \n                selector\n                spomen-permission-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiTextfieldControllerModule\n                            TuiDataListWrapperModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./permission-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./permission-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                permissions\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissions\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Права доступа'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { Component, Input } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-permission-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiTextfieldControllerModule,\n    TuiDataListWrapperModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: PermissionInputComponent,\n    },\n  ],\n  templateUrl: './permission-input.component.html',\n  styleUrl: './permission-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'PermissionInput' })\nexport class PermissionInputComponent implements ControlValueAccessor {\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Права доступа'\n  @Input() permissions: string[] = [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'PermissionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                spomen-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiAvatarModule\n                            TuiSkeletonModule\n                            TuiDialogModule\n                            TuiChipModule\n                            TuiLineClampModule\n                            TuiSvgModule\n                            TuiHintModule\n                                SexPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isMe\n                            \n                            \n                                $$roles\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isMe\n                            \n                            \n                                $loading\n                            \n                            \n                                $profile\n                            \n                            \n                                $query\n                            \n                            \n                                    Private\n                                accountGQL\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                showChangeAvatarDialog\n                            \n                            \n                                    Private\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                serializeRole\n                            \n                            \n                                serializeSex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:100\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Profile.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeSex\n                        \n                    \n                \n            \n            \n                \nserializeSex(sex: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sex\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAccount)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showChangeAvatarDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Title)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Injector,\n  OnInit,\n  Signal,\n  WritableSignal,\n  computed,\n  effect,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiDialogService,\n  TuiHintModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiChipModule, TuiSkeletonModule } from '@taiga-ui/experimental'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus'\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ApolloError } from '@apollo/client/errors'\nimport { Title } from '@angular/platform-browser'\nimport * as Sentry from '@sentry/angular'\nimport { Observable, map } from 'rxjs'\n\nimport { isNotFound, serializeRole } from '@utils'\nimport { AuthService } from '@services'\nimport { AccountGQL } from '@graphql'\nimport { SexPipe } from '@pipes'\n\nimport { Account, Sex, initialAccount } from '@interfaces'\n\nimport { Role } from '@enums'\n\nimport { ChangeAvatarComponent } from './change-avatar/change-avatar.component'\n\nconst sexIcons = {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n\n@Component({\n  selector: 'spomen-profile',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TuiAvatarModule,\n    TuiSkeletonModule,\n    TuiDialogModule,\n    TuiChipModule,\n    TuiLineClampModule,\n    TuiSvgModule,\n    TuiHintModule,\n    SexPipe,\n  ],\n  providers: [DatePipe],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.scss',\n})\n@Sentry.TraceClass({ name: 'Profile' })\nexport class ProfileComponent implements OnInit {\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private route = inject(ActivatedRoute)\n  private injector = inject(Injector)\n  private router = inject(Router)\n  private title = inject(Title)\n  auth = inject(AuthService)\n\n  private accountGQL = inject(AccountGQL)\n\n  $profile: WritableSignal = signal(initialAccount)\n  $loading: WritableSignal = signal(true)\n  $isMe: WritableSignal = signal(false)\n  $query: WritableSignal = signal('')\n\n  $avatar: Signal = computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n\n  $$roles: Observable = toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n\n  $$isMe: Observable = this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n\n  constructor() {\n    effect(() => {\n      if (this.$profile()) {\n        const profile = this.$profile()\n\n        this.title.setTitle(profile!.full_name || profile!.username || '')\n      }\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'Profile.ngOnInit' })\n  ngOnInit(): void {\n    this.$$isMe.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n      next: (isMe) => {\n        if (isMe) {\n          this.$profile.set(this.auth.$user())\n          this.$loading.set(false)\n\n          return\n        }\n\n        this.accountGQL\n          .watch(\n            { username: this.$query() },\n            { fetchPolicy: 'cache-and-network' }\n          )\n          .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe({\n            next: ({ data, loading }) => {\n              const { account } = data\n\n              this.$loading.set(loading)\n\n              this.$profile.set({\n                ...account,\n                birthday: account.birthday || null,\n                avatar: account.avatar ? account.avatar.url : null,\n                vk_avatar: account.vk_avatar || null,\n                full_name:\n                  account.first_name && account.last_name\n                    ? `${account.first_name.trim()} ${account.last_name.trim()}`\n                    : null,\n              })\n            },\n            error: (err: ApolloError) => {\n              if (isNotFound(err.message)) {\n                this.router.navigate(['/404'])\n                return\n              }\n\n              this.alerts\n                .open('Сервер временно недоступен', { status: 'error' })\n                .pipe(takeUntilDestroyed(this.destroyRef))\n                .subscribe()\n            },\n          })\n      },\n    })\n  }\n\n  changeAvatar() {\n    this.showChangeAvatarDialog().subscribe((res: string | boolean | null) => {\n      if (res) {\n        this.alerts\n          .open(\n            `Аватар успешно ${typeof res === 'string' ? 'изменён' : 'удалён'}`,\n            { status: 'success' }\n          )\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe()\n\n        this.$profile.update((profile) => ({\n          ...profile,\n          avatar: typeof res === 'string' ? res : null,\n        }))\n\n        if (this.$isMe()) {\n          this.auth.$user.update((user) => ({\n            ...user,\n            avatar: typeof res === 'string' ? res : null,\n          }))\n        }\n      }\n    })\n  }\n\n  serializeRole(role: Role) {\n    return serializeRole(role)\n  }\n\n  serializeSex(sex: Sex | null): string {\n    return sex ? sexIcons[sex] : sexIcons[0]\n  }\n\n  private showChangeAvatarDialog = () =>\n    this.dialogs.open(\n      new PolymorpheusComponent(ChangeAvatarComponent, this.injector),\n      {\n        size: 's',\n        data: {\n          accountId: this.$profile().id,\n          avatarAlreadyExists: !!this.$profile().avatar,\n        },\n      }\n    )\n}\n\n    \n\n    \n        \n  \n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    \n  }\n  \n    @if (this.$loading()) {\n      @for (skeleton of [1, 2]; track skeleton) {\n        \n      }\n    } @else {\n      {{ this.serializeRole(role) }}\n    }\n  \n\n\n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    {{\n      this.$profile().full_name || this.$profile().username || ''\n    }}\n  }\n  \n    \n      \n      {{\n        this.$profile().birthday\n          ? (this.$profile().birthday | date: 'd MMMM')\n          : 'Не указан'\n      }}\n    \n    \n      \n      {{ this.$profile().sex | sex }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (this.$loading()) {    skeleton  } @else {      }      @if (this.$loading()) {      @for (skeleton of [1, 2]; track skeleton) {              }    } @else {      {{ this.serializeRole(role) }}    }    @if (this.$loading()) {    skeleton  } @else {    {{      this.$profile().full_name || this.$profile().username || \\'\\'    }}  }                  {{        this.$profile().birthday          ? (this.$profile().birthday | date: \\'d MMMM\\')          : \\'Не указан\\'      }}                    {{ this.$profile().sex | sex }}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Route.html":{"url":"interfaces/Route.html","title":"interface - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/route.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exact\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customIcon:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exact\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exact:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Route {\n  url: string\n  icon: string\n  title: string\n  customIcon?: boolean\n  exact?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScrollNearEndDirective.html":{"url":"directives/ScrollNearEndDirective.html","title":"directive - ScrollNearEndDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ScrollNearEndDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/directives/scroll-near-end.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [scrollNearEnd]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                windowScrollEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                threshold\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        threshold\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:21\n                            \n                        \n                \n                    \n                        threshold in PX when to emit before page end scroll\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nearEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:16\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n\n\n            \n                \n                    Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        windowScrollEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    windowScrollEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                    \n                        \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core'\n\n@Directive({\n  selector: '[scrollNearEnd]',\n  standalone: true,\n})\nexport class ScrollNearEndDirective implements OnInit {\n  @Output() nearEnd: EventEmitter = new EventEmitter()\n\n  /**\n   * threshold in PX when to emit before page end scroll\n   */\n  @Input() threshold = 20\n\n  private window!: Window\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit(): void {\n    // save window object for type safety\n    this.window = window\n  }\n\n  @HostListener('window:scroll', ['$event.target'])\n  windowScrollEvent(event: KeyboardEvent) {\n    // height of whole window page\n    const heightOfWholePage = this.window.document.documentElement.scrollHeight\n\n    // how big in pixels the element is\n    const heightOfElement = this.el.nativeElement.scrollHeight\n\n    // currently scrolled Y position\n    const currentScrolledY = this.window.scrollY\n\n    // height of opened window - shrinks if console is opened\n    const innerHeight = this.window.innerHeight\n\n    /**\n     * the area between the start of the page and when this element is visible\n     * in the parent component\n     */\n    const spaceOfElementAndPage = heightOfWholePage - heightOfElement\n\n    // calculated whether we are near the end\n    const scrollToBottom =\n      heightOfElement - innerHeight - currentScrolledY + spaceOfElementAndPage\n\n    // if the user is near end\n    if (scrollToBottom \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScrollService.html":{"url":"injectables/ScrollService.html","title":"injectable - ScrollService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScrollService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/scroll.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $state\n                            \n                            \n                                isEnd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(status: boolean, posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/scroll.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal({\n    posY: 0,\n    isEnd: false,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, WritableSignal } from '@angular/core'\nimport { toObservable } from '@angular/core/rxjs-interop'\nimport { debounceTime, filter, Observable } from 'rxjs'\n\ntype ScrollState = {\n  posY: number\n  isEnd: boolean\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScrollService {\n  private $state: WritableSignal = signal({\n    posY: 0,\n    isEnd: false,\n  })\n\n  isEnd: Observable = toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SexPipe.html":{"url":"pipes/SexPipe.html","title":"pipe - SexPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SexPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/sex.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sex\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/sex.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core'\n\nimport { Sex } from '@interfaces'\n\n@Pipe({\n  name: 'sex',\n  standalone: true,\n})\nexport class SexPipe implements PipeTransform {\n  transform(value: Sex | null): string {\n    switch (value) {\n      case '1': {\n        return 'Мужской'\n      }\n      case '2': {\n        return 'Женский'\n      }\n      default: {\n        return 'Не указан'\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-in/sign-in.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-in\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                vkIdOneTap\n                            \n                            \n                                    \n                                VkIdSdkOneTap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngAfterViewInit\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-in/sign-in.component.ts:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngAfterViewInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        vkIdOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new VKID.OneTap()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        VkIdSdkOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('VkIdSdkOneTap')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\nimport * as VKID from '@vkid/sdk'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  inject,\n} from '@angular/core'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-in',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './sign-in.component.html',\n  styleUrl: './sign-in.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignIn' })\nexport class SignInComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('VkIdSdkOneTap') VkIdSdkOneTap!: ElementRef\n\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private vkIdOneTap = new VKID.OneTap()\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    pass: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngAfterViewInit' })\n  ngAfterViewInit(): void {\n    if (this.VkIdSdkOneTap) {\n      this.vkIdOneTap.render({\n        container: this.VkIdSdkOneTap.nativeElement,\n        scheme: VKID.Scheme.DARK,\n        lang: VKID.Languages.RUS,\n        styles: {\n          borderRadius: 50,\n        },\n      })\n    }\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signIn({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err) => {\n            this.isLoading.next(false)\n\n            if (err.status === 401 || err.status === 400) {\n              this.subs$.push(this.alerts.open(`Вход не выполнен`).subscribe())\n              return\n            }\n\n            this.subs$.push(\n              this.alerts.open(`Приложение временно недоступно`).subscribe()\n            )\n          },\n          complete: () => this.isLoading.next(false),\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Войти\n      \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Войти          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-up/sign-up.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-up\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                            TuiInputDateModule\n                            TuiDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                confirmForm\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                showConfirmForm\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPass\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-up/sign-up.component.ts:45\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPass\n                        \n                    \n                \n            \n            \n                \nconfirmPass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport { Component, Input, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { TuiInputDateModule } from '@taiga-ui/kit'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport { TuiDay } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-up',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiLoaderModule,\n    TuiInputDateModule,\n    TuiDialogModule,\n  ],\n  templateUrl: './sign-up.component.html',\n  styleUrl: './sign-up.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignUp' })\nexport class SignUpComponent implements OnInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  showConfirmForm = false\n\n  form: FormGroup\n    pass: FormControl\n    name: FormControl\n    surname: FormControl\n    email: FormControl\n    birthday: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n\n  confirmForm: FormGroup\n  }> = new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(30),\n        ],\n      ],\n      name: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      surname: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      email: [\n        '',\n        [Validators.email, Validators.minLength(4), Validators.maxLength(30)],\n      ],\n      birthday: [new TuiDay(2000, 4, 27)],\n    })\n\n    this.confirmForm = this.fb.group({\n      confirmPass: ['', [Validators.required]],\n    })\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      if (this.form.controls.name.errors || this.form.controls.surname.errors) {\n        errors.push('Введите корректные имя и фамилию')\n      }\n\n      if (this.form.controls.email.errors) {\n        errors.push('Введите корректную почту')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.showConfirmForm = true\n  }\n\n  confirmPass() {\n    if (\n      this.form.controls.pass.value!.trim() !==\n      this.confirmForm.controls.confirmPass.value!.trim()\n    ) {\n      this.subs$.push(this.alerts.open('Некорректный пароль').subscribe())\n      this.confirmForm.controls.confirmPass.reset()\n      this.form.controls.pass.reset()\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signUp({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n          birthday: this.form.controls.birthday.touched\n            ? this.form.controls.birthday.value!.toUtcNativeDate().toISOString()\n            : undefined,\n          email:\n            this.form.controls.email.touched &&\n            this.form.controls.email.valid &&\n            this.form.controls.email.value!.trim().length > 0\n              ? this.form.controls.email.value!.trim()\n              : undefined,\n          first_name:\n            this.form.controls.name.touched &&\n            this.form.controls.name.valid &&\n            this.form.controls.name.value!.trim().length > 2\n              ? this.form.controls.name.value!.trim()\n              : undefined,\n          last_name:\n            this.form.controls.surname.touched &&\n            this.form.controls.surname.valid &&\n            this.form.controls.surname.value!.trim().length > 2\n              ? this.form.controls.surname.value!.trim()\n              : undefined,\n        })\n        .subscribe({\n          next: (data) => {\n            this.isLoading.next(false)\n\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err: HttpErrorResponse) => {\n            if (err.status === 409) {\n              if (this.form.controls.email.value!.trim().length === 0) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данный логин уже зарегистрирован')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              } else if (\n                this.form.controls.email.touched &&\n                this.form.controls.email.valid\n              ) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данная почта уже зарегистрирована')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              }\n            }\n\n            this.subs$.push(\n              this.alerts.open('Сервер временно недоступен').subscribe()\n            )\n\n            this.isLoading.next(false)\n            return\n          },\n          complete: () => {\n            this.confirmForm.controls.confirmPass.setValue('')\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n// TODO: Сброс паролей в обеих формах при неудачной регистрации\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n      Дата рождения\n      \n    \n  \n  \n    \n      Продолжить\n    \n\n\n\n  \n    \n\n    \n      ОК\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Дата рождения                        Продолжить                    ОК      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinesComponent.html":{"url":"components/TimelinesComponent.html","title":"component - TimelinesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelinesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timelines/timelines.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-timelines\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./timelines.component.html\n            \n\n\n\n            \n                styleUrl\n                ./timelines.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-timelines',\n  standalone: true,\n  imports: [],\n  templateUrl: './timelines.component.html',\n  styleUrl: './timelines.component.scss',\n})\n@Sentry.TraceClass({ name: 'Timelines' })\nexport class TimelinesComponent {}\n\n    \n\n    \n        timelines works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'timelines works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadByIdGQL.html":{"url":"injectables/UploadByIdGQL.html","title":"injectable - UploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-by-id.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { UploadModel } from '@models'\n\nexport type UploadByIdResponse = {\n  upload: UploadModel\n}\n\nexport type UploadByIdVariables = {\n  id?: string\n}\n\nexport type UploadByIdQueryRef = QueryRef\n\n@Injectable()\nexport class UploadByIdGQL extends Query {\n  document = gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadExtensionsGQL.html":{"url":"injectables/UploadExtensionsGQL.html","title":"injectable - UploadExtensionsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadExtensionsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-extensions.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-extensions.gql.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\n\nexport type UploadExtensionsResponse = {\n  uploadExtensions: string[]\n}\n\nexport type UploadExtensionsVariables = Pagination & {}\n\nexport type UploadExtensionsQueryRef = QueryRef\n\n@Injectable()\nexport class UploadExtensionsGQL extends Query {\n  document = gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadFileComponent.html":{"url":"components/UploadFileComponent.html","title":"component - UploadFileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadFileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-file/upload-file.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadService\n                \n            \n\n\n            \n                selector\n                spomen-upload-file\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiStepperModule\n                            TuiInputInlineModule\n                            TuiToggleModule\n                            TuiChipModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiLinkModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-file.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-file.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                currentStep\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Readonly\n                                fileForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                upload\n                            \n                            \n                                uploaded\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextStep\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFile\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nextStep\n                        \n                    \n                \n            \n            \n                \nnextStep()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UploadService\n\n                    \n                \n                \n                    \n                        Default value : inject(UploadService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService).$user()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiFileLike,\n  TuiInputFilesModule,\n  TuiInputInlineModule,\n  TuiLineClampModule,\n  TuiStepperModule,\n  TuiToggleModule,\n} from '@taiga-ui/kit'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  OnInit,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport {\n  TuiAlertService,\n  TuiLoaderModule,\n  TuiSvgModule,\n  TuiLinkModule,\n} from '@taiga-ui/core'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, UploadService } from '@services'\nimport { AuthenticatedUser } from '@interfaces'\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-upload-file',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiStepperModule,\n    TuiInputInlineModule,\n    TuiToggleModule,\n    TuiChipModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiLinkModule,\n  ],\n  providers: [UploadService],\n  templateUrl: './upload-file.component.html',\n  styleUrl: './upload-file.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadFile' })\nexport class UploadFileComponent implements OnInit {\n  private user: AuthenticatedUser = inject(AuthService).$user()\n  private upload: UploadService = inject(UploadService)\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  isLoading: WritableSignal = signal(false)\n  uploaded: WritableSignal = signal(null)\n\n  readonly control = new FormControl(null)\n\n  readonly fileForm = new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n\n  currentStep: number = 1\n\n  ngOnInit() {\n    this.fileForm.controls['ext'].disable()\n  }\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  nextStep() {\n    if (!this.control.value) {\n      return\n    }\n\n    const selectedFile = this.upload.getFileParams(this.control.value)\n\n    this.fileForm.controls['name'].setValue(selectedFile.name)\n    this.fileForm.controls['ext'].setValue('.' + selectedFile.ext)\n\n    this.currentStep++\n  }\n\n  uploadFile() {\n    if (\n      !this.fileForm.controls['name'].valid ||\n      this.fileForm.controls['name'].value!.trim().length === 0\n    ) {\n      this.alerts\n        .open('Название файла не может быть меньше 2 символов')\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe()\n\n      return\n    }\n\n    const isCustomName =\n      this.control.value!.name !==\n      this.fileForm.controls['name'].value! +\n        '' +\n        this.fileForm.controls['ext'].value!\n\n    this.isLoading.set(true)\n\n    this.upload\n      .uploadFile({\n        file: this.control.value!,\n        compress: this.fileForm.controls['compress'].value!,\n        private: this.fileForm.controls['private'].value!,\n        path: this.user.id!,\n        name: isCustomName ? this.fileForm.controls['name'].value! : undefined,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.isLoading.set(false)\n\n          this.uploaded.set(res)\n\n          this.alerts\n            .open('Файл успешно загружен', {\n              status: 'success',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.currentStep++\n        },\n        error: () => {\n          this.isLoading.set(false)\n\n          this.alerts\n            .open('Ошибка загрузки файла', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          // TODO: Обработка превышенного лимита файлов\n        },\n      })\n  }\n}\n\n    \n\n    \n        \n  \n    @switch (this.currentStep) {\n      @case (1) {\n        \n      }\n\n      @case (2) {\n        \n          \n            \n            \n            {{ this.fileForm.controls['ext'].value }}\n          \n          \n            \n              \n                Сжать\n                \n              \n              \n                Личный\n                \n              \n            \n            \n              \n                Загрузить\n              \n            \n          \n        \n      }\n\n      @case (3) {\n            \n              \n              Файл успешно загружен\n            \n            \n              Название\n              \n              Файл\n              \n              Ссылка\n              \n              \n              \n            \n      }\n      @default {\n        \n      }\n    }\n  \n\n\n\n  \n    \n      \n    \n    \n      \n    \n    @if (this.control.value) {\n      Далее\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @switch (this.currentStep) {      @case (1) {              }      @case (2) {                                                      {{ this.fileForm.controls[\\'ext\\'].value }}                                                              Сжать                                                            Личный                                                                                    Загрузить                                                  }      @case (3) {                                        Файл успешно загружен                                      Название                            Файл                            Ссылка                                                            }      @default {              }    }                                    @if (this.control.value) {      Далее    }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadFileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadInfoComponent.html":{"url":"components/UploadInfoComponent.html","title":"component - UploadInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-info/upload-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadByIdGQL\n                \n            \n\n\n            \n                selector\n                spomen-upload-info\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputInlineModule\n                            TuiChipModule\n                            TuiLineClampModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-info.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-info.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $loading\n                            \n                            \n                                $upload\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                uploadByIdGQL\n                            \n                            \n                                    Private\n                                uploadId\n                            \n                            \n                                uploadInfoForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(context: TuiDialogContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    TuiDialogContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Inject,\n  OnInit,\n  WritableSignal,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport { TuiInputInlineModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { TuiAlertService, TuiDialogContext } from '@taiga-ui/core'\nimport { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadByIdGQL } from '@graphql'\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-upload-info',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputInlineModule,\n    TuiChipModule,\n    TuiLineClampModule,\n  ],\n  providers: [UploadByIdGQL],\n  templateUrl: './upload-info.component.html',\n  styleUrl: './upload-info.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadInfo' })\nexport class UploadInfoComponent implements OnInit {\n  private uploadByIdGQL = inject(UploadByIdGQL)\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  uploadInfoForm: FormGroup = new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n  })\n\n  constructor(\n    @Inject(POLYMORPHEUS_CONTEXT)\n    private readonly context: TuiDialogContext\n  ) {\n    this.uploadId = context.data.uploadId\n  }\n\n  private uploadId: string\n\n  $upload: WritableSignal = signal(null)\n  $loading: WritableSignal = signal(true)\n\n  ngOnInit(): void {\n    this.uploadByIdGQL\n      .watch({\n        id: this.uploadId,\n      })\n      .valueChanges.subscribe({\n        next: (res) => {\n          const { upload } = res.data\n\n          this.$upload.set(upload)\n\n          this.uploadInfoForm.controls['name'].setValue(upload.name)\n          this.uploadInfoForm.controls['originalName'].setValue(\n            upload.file_name\n          )\n\n          this.$loading.set(false)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить информацию о загрузке', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n          this.$loading.set(false)\n        },\n      })\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      Имя\n    \n    \n      \n    \n  \n  \n    \n      Тип\n    \n    {{ this.$upload()!.ext }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Имя                                Тип        {{ this.$upload()!.ext }}  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadListItemComponent.html":{"url":"components/UploadListItemComponent.html","title":"component - UploadListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-list-item/upload-list-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                                DeleteUploadByIdGQL\n                \n            \n\n\n            \n                selector\n                spomen-upload-list-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterModule\n                            TuiSkeletonModule\n                            TuiLineClampModule\n                            TuiPreviewModule\n                            TuiButtonModule\n                            TuiChipModule\n                            TuiHintModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                            PolymorpheusModule\n                            TuiPromptModule\n                            IFrameUrlPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-list-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-list-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alerts\n                            \n                            \n                                deleteUploadByIdGQL\n                            \n                            \n                                destroyRef\n                            \n                            \n                                dialog\n                            \n                            \n                                    Private\n                                dialogSub\n                            \n                            \n                                index\n                            \n                            \n                                isMobile\n                            \n                            \n                                pdfViewer\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                preview\n                            \n                            \n                                previewDialog\n                            \n                            \n                                router\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                handleClickUpload\n                            \n                            \n                                    Private\n                                handleDelete\n                            \n                            \n                                handleSelectExtension\n                            \n                            \n                                showPreview\n                            \n                            \n                                    Private\n                                showPrompt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isPrivate\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickUpload\n                            \n                            \n                                onDelete\n                            \n                            \n                                selectExtension\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    previewContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isPrivate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:88\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        upload\n                    \n                \n                \n                    \n                        Type :         UploadModel | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:86\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickUpload\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:91\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:90\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectExtension\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:92\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleClickUpload\n                        \n                    \n                \n            \n            \n                \nhandleClickUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSelectExtension\n                        \n                    \n                \n            \n            \n                \nhandleSelectExtension()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPreview\n                        \n                    \n                \n            \n            \n                \nshowPreview(actions: PolymorpheusContent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actions\n                                            \n                                                        PolymorpheusContent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showPrompt\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPrompt(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DeleteUploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TUI_IS_MOBILE)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pdfViewer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPdfViewerService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('preview')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previewDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPreviewDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sanitizer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:81\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        previewContent\n                    \n                \n\n                \n                    \n                        getpreviewContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:100\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  TUI_PROMPT,\n  TuiAvatarModule,\n  TuiLineClampModule,\n  TuiPdfViewerOptions,\n  TuiPdfViewerService,\n  TuiPromptModule,\n} from '@taiga-ui/kit'\n\nimport {\n  Component,\n  DestroyRef,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core'\nimport {\n  TuiAlertService,\n  TuiDialogContext,\n  TuiDialogService,\n  TuiHintModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\nimport {\n  TuiButtonModule,\n  TuiChipModule,\n  TuiSkeletonModule,\n} from '@taiga-ui/experimental'\nimport {\n  TuiPreviewDialogService,\n  TuiPreviewModule,\n} from '@taiga-ui/addon-preview'\nimport {\n  PolymorpheusContent,\n  PolymorpheusModule,\n} from '@tinkoff/ng-polymorpheus'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { Router, RouterModule } from '@angular/router'\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\n\nimport { DeleteUploadByIdGQL } from '@graphql'\nimport { IFrameUrlPipe } from '@pipes'\nimport { UploadModel } from '@models'\nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'spomen-upload-list-item',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    TuiSkeletonModule,\n    TuiLineClampModule,\n    TuiPreviewModule,\n    TuiButtonModule,\n    TuiChipModule,\n    TuiHintModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n    PolymorpheusModule,\n    TuiPromptModule,\n    IFrameUrlPipe,\n  ],\n  providers: [DatePipe, DeleteUploadByIdGQL],\n  templateUrl: './upload-list-item.component.html',\n  styleUrl: './upload-list-item.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadListItem' })\nexport class UploadListItemComponent {\n  deleteUploadByIdGQL = inject(DeleteUploadByIdGQL)\n  previewDialog = inject(TuiPreviewDialogService)\n  pdfViewer = inject(TuiPdfViewerService)\n  dialog = inject(TuiDialogService)\n  alerts = inject(TuiAlertService)\n  sanitizer = inject(DomSanitizer)\n  destroyRef = inject(DestroyRef)\n  isMobile = inject(TUI_IS_MOBILE)\n  router = inject(Router)\n\n  @Input('upload') upload: UploadModel | null = null\n  @Input('isLoading') isLoading: boolean = false\n  @Input('isPrivate') isPrivate: boolean = false\n\n  @Output('onDelete') onDelete: EventEmitter = new EventEmitter()\n  @Output('clickUpload') clickUpload: EventEmitter = new EventEmitter()\n  @Output('selectExtension') selectExtension: EventEmitter =\n    new EventEmitter()\n\n  @ViewChild('preview')\n  readonly preview?: TemplateRef\n\n  index = 0\n\n  get previewContent(): PolymorpheusContent {\n    return this.upload!.url\n  }\n\n  handleClickUpload() {\n    this.clickUpload.emit()\n  }\n\n  handleSelectExtension() {\n    this.selectExtension.emit()\n  }\n\n  private dialogSub: Subscription | null = null\n\n  showPreview(actions: PolymorpheusContent) {\n    if (this.upload!.ext === 'pdf') {\n      this.dialogSub = this.pdfViewer\n        .open(\n          this.sanitizer.bypassSecurityTrustResourceUrl(\n            this.isMobile\n              ? `https://drive.google.com/viewerng/viewer?embedded=true&url=${this.upload!.url}`\n              : this.upload!.url\n          ),\n          {\n            label: this.upload!.name,\n            actions,\n          }\n        )\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe()\n\n      return\n    }\n\n    this.dialogSub = this.previewDialog\n      .open(this.preview || '')\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe()\n  }\n\n  delete() {\n    this.showPrompt('Удалить файл?').subscribe((res) => {\n      if (res) {\n        this.showPrompt('Вы уверены?').subscribe((res) => {\n          if (res) this.handleDelete()\n        })\n      }\n    })\n  }\n\n  private showPrompt(label: string) {\n    return this.dialog\n      .open(TUI_PROMPT, {\n        label,\n        size: 's',\n        data: {\n          yes: 'Да',\n          no: 'Нет',\n        },\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n  }\n\n  private handleDelete() {\n    this.deleteUploadByIdGQL\n      .mutate({\n        id: this.upload!.id,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: () => {\n          if (this.dialogSub) this.dialogSub.unsubscribe()\n\n          this.alerts\n            .open('Файл успешно удалён', {\n              status: 'success',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.onDelete.emit()\n        },\n        error: (err) => {\n          console.log(err)\n\n          this.alerts\n            .open('Удалить файл не удалось', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n}\n\n    \n\n    \n        @if (upload && !isLoading) {\n  \n    \n      \n    \n    \n      \n      \n      @if (this.isPrivate) {\n        \n      }\n    \n    \n      \n      \n    \n    {{ upload.ext }}\n    \n    \n      \n\n      \n    \n    {{\n        upload.created_at | date: 'd MMMM, YYYY г.'\n      }}\n  \n} @else {\n  \n          \n          \n    \n    \n      \n    \n    loading\n    \n    \n      \n\n      \n    \n    01.01.2001\n  \n}\n\n\n  \n    {{ this.upload!.file_name }}.{{ this.upload!.ext }}\n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n\n    @switch (this.upload!.ext) {\n      @case ('webp') {\n        \n      }\n      @case ('mpga') {\n        \n      }\n      @default {\n        \n          \n          Просмотр не поддерживается\n        \n      }\n    }\n\n  \n\n\n\n  \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (upload && !isLoading) {                                      @if (this.isPrivate) {              }                            {{ upload.ext }}                            {{        upload.created_at | date: \\'d MMMM, YYYY г.\\'      }}  } @else {                                            loading                            01.01.2001  }      {{ this.upload!.file_name }}.{{ this.upload!.ext }}                                                  @switch (this.upload!.ext) {      @case (\\'webp\\') {              }      @case (\\'mpga\\') {              }      @default {                            Просмотр не поддерживается              }    }                  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadModel.html":{"url":"interfaces/UploadModel.html","title":"interface - UploadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/upload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            file_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_system\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            owner_id\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_system\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_system:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AccountModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         Permission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from '@models'\nimport { Permission } from '@enums'\n\nexport interface UploadModel {\n  id: string\n  bucket: string\n  name: string\n  ext: string\n  file_name: string\n  path: string\n  url: string\n  owner_id: string\n  owner?: AccountModel\n  permissions: Permission[]\n  is_system: boolean\n  created_at: Date\n  updated_at: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/upload.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для загрузки файлов\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFileParams\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFileParams\n                        \n                    \n                \n            \n            \n                \ngetFileParams(file: TuiFileLike)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Получение параметров файла\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        TuiFileLike\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Файл tui-kit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileParams\n\n                        \n                            \n                                Параметры файла\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(dto: UploadFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/upload.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { TuiFileLike } from '@taiga-ui/kit'\n\nimport { FileParams } from '@interfaces'\n\nimport { UploadFileDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API, Permission } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для загрузки файлов\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UploadService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadFile(dto: UploadFileDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n    body.append('path', dto.path)\n    body.append('compress', dto.compress.toString())\n    body.append('originalName', dto.file.name)\n\n    if (dto.name) {\n      body.append('name', dto.name)\n    }\n\n    if (dto.private) {\n      body.append('acl', Permission.OwnerOnly)\n    }\n\n    return this.http.post(`${env.apiUrl}${API.UPLOAD}`, body)\n  }\n\n  /**\n   * Получение параметров файла\n   * @param {TuiFileLike} file Файл tui-kit\n   * @return {FileParams} Параметры файла\n   */\n  getFileParams(file: TuiFileLike): FileParams {\n    const filename = file.name.split('.')\n    const ext = filename[filename.length - 1]\n\n    delete filename[filename.length - 1]\n\n    return {\n      name: filename.join('.').slice(0, filename.join('-').length - 1),\n      ext,\n      mime: file.type,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadsComponent.html":{"url":"components/UploadsComponent.html","title":"component - UploadsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/uploads.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadsGQL\n                \n            \n\n\n            \n                selector\n                spomen-uploads\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputModule\n                            TuiTextfieldControllerModule\n                            TuiSelectModule\n                            TuiDataListWrapperModule\n                            TuiSvgModule\n                                TuiTablePaginationModule\n                            TuiDialogModule\n                            TuiHintModule\n                                UploadListItemComponent\n                                ExtensionInputComponent\n                                AccountInputComponent\n                                PermissionInputComponent\n                                NotFoundComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./uploads.component.html\n            \n\n\n\n            \n                styleUrl\n                ./uploads.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $ext\n                            \n                            \n                                    Private\n                                $name\n                            \n                            \n                                    Private\n                                $owner\n                            \n                            \n                                $page\n                            \n                            \n                                    Private\n                                $permissions\n                            \n                            \n                                $size\n                            \n                            \n                                $uploads\n                            \n                            \n                                $uploadsLoading\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                isAdministrator\n                            \n                            \n                                    Private\n                                isLastPage\n                            \n                            \n                                modalFiltersIsOpen\n                            \n                            \n                                    Private\n                                scroll\n                            \n                            \n                                    Private\n                                showUploadFileDialog\n                            \n                            \n                                    Private\n                                showUploadInfoDialog\n                            \n                            \n                                skeletonRows\n                            \n                            \n                                uploadFiltersForm\n                            \n                            \n                                    Private\n                                uploadsGQL\n                            \n                            \n                                    Private\n                                uploadsQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchMoreUploads\n                            \n                            \n                                handleUploadDeleted\n                            \n                            \n                                isPrivate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                refetchUploads\n                            \n                            \n                                    Private\n                                resetUploads\n                            \n                            \n                                setExtensionFilter\n                            \n                            \n                                showModalFilters\n                            \n                            \n                                showUploadFile\n                            \n                            \n                                showUploadInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    params\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchMoreUploads\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchMoreUploads()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:271\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleUploadDeleted\n                        \n                    \n                \n            \n            \n                \nhandleUploadDeleted(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:218\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPrivate\n                        \n                    \n                \n            \n            \n                \nisPrivate(permissions: Permission[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissions\n                                            \n                                                            Permission[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        refetchUploads\n                        \n                    \n                \n            \n            \n                \n                        \n                    refetchUploads()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:257\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetUploads\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetUploads()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:263\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setExtensionFilter\n                        \n                    \n                \n            \n            \n                \nsetExtensionFilter(ext: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:226\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ext\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModalFilters\n                        \n                    \n                \n            \n            \n                \nshowModalFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:214\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUploadFile\n                        \n                    \n                \n            \n            \n                \nshowUploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:202\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUploadInfo\n                        \n                    \n                \n            \n            \n                \nshowUploadInfo(uploadId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/uploads.component.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uploadId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $page\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $size\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(20)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $uploads\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $uploadsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$user().username\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdministrator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$isAdmin()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLastPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalFiltersIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScrollService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showUploadFileDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:277\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showUploadInfoDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:285\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skeletonRows\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Array(10)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFiltersForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl(),\n    ext: new FormControl(),\n    account: new FormControl(),\n    permissions: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadsGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadsGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadsQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UploadsQueryRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/uploads.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n                \n                    \n                        getparams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/uploads/uploads.component.ts:239\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiDialogService,\n  TuiHintModule,\n  TuiSvgModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/core'\n\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  Injector,\n  OnInit,\n  signal,\n  WritableSignal,\n} from '@angular/core'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms'\n\nimport {\n  TuiDataListWrapperModule,\n  TuiInputModule,\n  TuiSelectModule,\n} from '@taiga-ui/kit'\nimport { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus'\nimport { TuiTablePaginationModule } from '@taiga-ui/addon-table'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { debounceTime, distinctUntilChanged } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport { RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadsQueryRef, UploadsGQL } from '@graphql'\nimport { AuthService, ScrollService } from '@services'\nimport { inOutGridAnimation200 } from '@animations'\nimport { serializePermissions } from '@utils'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nimport { PermissionInputComponent } from '@components/permission-input'\nimport { ExtensionInputComponent } from '@components/extension-input'\nimport { AccountInputComponent } from '@components/account-input'\nimport { NotFoundComponent } from '@components/not-found'\n\nimport { UploadListItemComponent } from './upload-list-item/upload-list-item.component'\nimport { UploadFileComponent } from './upload-file/upload-file.component'\nimport { UploadInfoComponent } from './upload-info/upload-info.component'\n\n@Component({\n  selector: 'spomen-uploads',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputModule,\n    TuiTextfieldControllerModule,\n    TuiSelectModule,\n    TuiDataListWrapperModule,\n    TuiSvgModule,\n    TuiTablePaginationModule,\n    TuiDialogModule,\n    TuiHintModule,\n    UploadListItemComponent,\n    ExtensionInputComponent,\n    AccountInputComponent,\n    PermissionInputComponent,\n    NotFoundComponent,\n  ],\n  providers: [UploadsGQL],\n  animations: [inOutGridAnimation200],\n  templateUrl: './uploads.component.html',\n  styleUrl: './uploads.component.scss',\n})\n@Sentry.TraceClass({ name: 'Uploads' })\nexport class UploadsComponent implements OnInit {\n  private currentUser = inject(AuthService).$user().username\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private scroll = inject(ScrollService)\n  private uploadsGQL = inject(UploadsGQL)\n  private injector = inject(Injector)\n\n  isAdministrator = inject(AuthService).$isAdmin()\n\n  private uploadsQuery: UploadsQueryRef | null = null\n  private isLastPage = false\n\n  skeletonRows = new Array(10)\n  modalFiltersIsOpen = false\n\n  $page: WritableSignal = signal(1)\n  $size: WritableSignal = signal(20)\n\n  $uploads: WritableSignal = signal([])\n  $uploadsLoading: WritableSignal = signal(true)\n\n  uploadFiltersForm = new FormGroup({\n    name: new FormControl(),\n    ext: new FormControl(),\n    account: new FormControl(),\n    permissions: new FormControl(),\n  })\n\n  private $permissions: WritableSignal = signal([])\n  private $name: WritableSignal = signal('')\n  private $ext: WritableSignal = signal([])\n  private $owner: WritableSignal = signal([])\n\n  ngOnInit() {\n    this.scroll.isEnd\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        this.scroll.next(false, 0)\n\n        if (this.$uploadsLoading() || this.isLastPage) return\n\n        this.fetchMoreUploads()\n      })\n\n    if (this.currentUser) {\n      this.uploadFiltersForm.controls['account'].setValue([this.currentUser])\n\n      this.$owner.set([this.currentUser])\n    }\n\n    this.uploadsQuery = this.uploadsGQL.watch(this.params)\n\n    this.uploadsQuery.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          if (res.data.uploads.length === 0) this.isLastPage = true\n\n          this.$uploads.update((prev) => prev.concat(res.data.uploads))\n\n          this.$uploadsLoading.set(false)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список загрузок', { status: 'error' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n          this.$uploadsLoading.set(false)\n        },\n      })\n\n    this.uploadFiltersForm.controls['account'].valueChanges\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe((items) => {\n        this.$owner.set(items)\n        this.resetUploads()\n      })\n\n    this.uploadFiltersForm.controls['ext'].valueChanges\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe((items) => {\n        this.$ext.set(items)\n        this.resetUploads()\n      })\n\n    this.uploadFiltersForm.controls['name'].valueChanges\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe((items) => {\n        this.$name.set(items)\n        this.resetUploads()\n      })\n\n    this.uploadFiltersForm.controls['permissions'].valueChanges\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe((permissions) => {\n        this.$permissions.set(serializePermissions(permissions))\n        this.resetUploads()\n      })\n  }\n\n  showUploadFile() {\n    this.showUploadFileDialog()\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe()\n  }\n\n  showUploadInfo(uploadId: string) {\n    this.showUploadInfoDialog(uploadId)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe()\n  }\n\n  showModalFilters() {\n    this.modalFiltersIsOpen = true\n  }\n\n  handleUploadDeleted(id: string) {\n    this.$uploads.update((items) => items.filter((item) => item.id !== id))\n  }\n\n  isPrivate(permissions: Permission[]) {\n    return !permissions.includes(Permission.Public)\n  }\n\n  setExtensionFilter(ext: string) {\n    const currentValue = this.uploadFiltersForm.controls['ext'].value\n\n    if (!currentValue) this.uploadFiltersForm.controls['ext'].setValue([ext])\n\n    if (Array.isArray(currentValue) && !currentValue.includes(ext.trim())) {\n      this.uploadFiltersForm.controls['ext'].setValue([\n        ...this.uploadFiltersForm.controls['ext'].value,\n        ext,\n      ])\n    }\n  }\n\n  private get params() {\n    const owner = !this.isAdministrator\n      ? [this.currentUser!]\n      : this.$owner().length === 0\n        ? undefined\n        : this.$owner()\n\n    return {\n      size: this.$size(),\n      page: this.$page(),\n      owner,\n      name: this.$name().trim().length === 0 ? undefined : this.$name(),\n      ext: this.$ext().length === 0 ? undefined : this.$ext(),\n      permissions:\n        this.$permissions().length === 0 ? undefined : this.$permissions(),\n    }\n  }\n\n  private refetchUploads() {\n    this.$uploadsLoading.set(true)\n\n    this.uploadsQuery!.refetch(this.params)\n  }\n\n  private resetUploads() {\n    this.$page.set(1)\n    this.$uploads.set([])\n    this.isLastPage = false\n\n    this.refetchUploads()\n  }\n\n  private fetchMoreUploads() {\n    this.$page.set(this.$page() + 1)\n\n    this.refetchUploads()\n  }\n\n  private showUploadFileDialog = () =>\n    this.dialogs.open(\n      new PolymorpheusComponent(UploadFileComponent, this.injector),\n      {\n        size: 's',\n      }\n    )\n\n  private showUploadInfoDialog = (uploadId: string) =>\n    this.dialogs.open(\n      new PolymorpheusComponent(UploadInfoComponent, this.injector),\n      {\n        size: 'page',\n        data: {\n          uploadId,\n        },\n      }\n    )\n}\n\n    \n\n    \n        \n  \n    Название\n  \n  \n  \n    \n  \n  \n    \n  \n\n\n  @if (this.$uploads().length > 0) {\n    \n      @for (upload of this.$uploads(); track $index) {\n        \n      }\n    \n  }\n\n  @if (this.$uploadsLoading()) {\n    \n      @for (row of this.skeletonRows; track $index) {\n        \n      }\n    \n  }\n\n\n@if (this.$uploads().length === 0 && !this.$uploadsLoading()) {\n  \n    \n  \n}\n\n\n  \n    \n      \n\n      @if (this.isAdministrator) {\n        \n      }\n\n      \n\n      Найти\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Название                      @if (this.$uploads().length > 0) {          @for (upload of this.$uploads(); track $index) {              }      }  @if (this.$uploadsLoading()) {          @for (row of this.skeletonRows; track $index) {              }      }@if (this.$uploads().length === 0 && !this.$uploadsLoading()) {        }                  @if (this.isAdministrator) {              }            Найти      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsGQL.html":{"url":"injectables/UploadsGQL.html","title":"injectable - UploadsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/uploads.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UploadsQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/uploads.gql.ts:63\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nexport type UploadsResponse = {\n  uploads: UploadModel[]\n}\n\nexport type UploadsVariables = Pagination & {\n  owner?: string[]\n  name?: string\n  ext?: string[]\n  permissions?: Permission[]\n}\n\nexport type UploadsQueryRef = QueryRef\n\nexport const UploadsQuery = gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n\n@Injectable()\nexport class UploadsGQL extends Query {\n  document = UploadsQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                        \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/validation.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                checkControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from '@angular/forms'\n\nexport class Validation {\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName)\n      const checkControl = controls.get(checkControlName)\n\n      if (checkControl?.errors && !checkControl.errors['matching']) {\n        return null\n      }\n\n      if (control?.value !== checkControl?.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true })\n        return { matching: true }\n      } else {\n        return null\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            appInitializerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/callback/auth-callback.component.ts\n            \n            component\n            AuthCallbackComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/pass/auth-pass.component.ts\n            \n            component\n            AuthPassComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/sign-in/sign-in.component.ts\n            \n            component\n            SignInComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/auth/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/chats/chats.component.ts\n            \n            component\n            ChatsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/enter-leave.animation.ts\n            \n            variable\n            enterLeaveAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/account-input/account-input.component.ts\n            \n            component\n            AccountInputComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/common/components/extension-input/extension-input.component.ts\n            \n            component\n            ExtensionInputComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/common/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/components/me/me.component.ts\n            \n            component\n            MeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/components/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            variable\n            protectedRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/components/oops/oops.component.ts\n            \n            component\n            OopsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/permission-input/permission-input.component.ts\n            \n            component\n            PermissionInputComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/common/directives/scroll-near-end.directive.ts\n            \n            directive\n            ScrollNearEndDirective\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            function\n            apolloOptionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            variable\n            graphqlProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/models/getAccount.model.ts\n            \n            interface\n            GetAccountModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            injectable\n            DeleteUploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            variable\n            DeleteUploadByIdQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/account.gql.ts\n            \n            injectable\n            AccountGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n            \n            injectable\n            AccountsInfoByUsernameGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-by-id.gql.ts\n            \n            injectable\n            UploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-extensions.gql.ts\n            \n            injectable\n            UploadExtensionsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            injectable\n            UploadsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            variable\n            UploadsQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth-callback.guard.ts\n            \n            variable\n            authCallbackGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/http.interceptor.ts\n            \n            variable\n            httpRequestInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/iframe-url.pipe.ts\n            \n            pipe\n            IFrameUrlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/sex.pipe.ts\n            \n            pipe\n            SexPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/scroll.service.ts\n            \n            injectable\n            ScrollService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/memories/memories.component.ts\n            \n            component\n            MemoriesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/profile/change-avatar/change-avatar.component.ts\n            \n            component\n            ChangeAvatarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            variable\n            sexIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/timelines/timelines.component.ts\n            \n            component\n            TimelinesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-file/upload-file.component.ts\n            \n            component\n            UploadFileComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-info/upload-info.component.ts\n            \n            component\n            UploadInfoComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-list-item/upload-list-item.component.ts\n            \n            component\n            UploadListItemComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/uploads/uploads.component.ts\n            \n            component\n            UploadsComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/envs/env.development.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.staging.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            variable\n            initialAccount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            interface\n            AuthenticatedUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            variable\n            initialAuthenticatedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/env.interface.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            ApiError\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            GraphqlError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/interfaces/route.interface.ts\n            \n            interface\n            Route\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/interfaces/upload.interface.ts\n            \n            interface\n            FileParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountShortModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/models/auth.model.ts\n            \n            interface\n            AuthModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/models/upload.model.ts\n            \n            interface\n            UploadModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            debouncedSignal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getCurrentPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getQueryPayload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            isNotFound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/sentry.ts\n            \n            function\n            initSentry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializePermissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializeRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/validation.ts\n            \n            class\n            Validation\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/cdk : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @apollo/client : ^3.0.0\n        \n            @sentry/angular : ^8.13.0\n        \n            @sentry/cli : ^2.32.1\n        \n            @taiga-ui/addon-charts : ^3.83.0\n        \n            @taiga-ui/addon-commerce : ^3.83.0\n        \n            @taiga-ui/addon-mobile : ^3.83.0\n        \n            @taiga-ui/addon-preview : ^3.83.0\n        \n            @taiga-ui/addon-table : ^3.83.0\n        \n            @taiga-ui/addon-tablebars : ^3.83.0\n        \n            @taiga-ui/cdk : ^3.83.0\n        \n            @taiga-ui/core : ^3.83.0\n        \n            @taiga-ui/experimental : ^3.84.0\n        \n            @taiga-ui/icons : ^3.83.0\n        \n            @taiga-ui/kit : ^3.83.0\n        \n            @taiga-ui/layout : ^3.83.0\n        \n            @taiga-ui/styles : ^3.83.0\n        \n            @tinkoff/ng-dompurify : 4.0.0\n        \n            @vkid/sdk : ^1.1.0\n        \n            apollo-angular : 7.0.2\n        \n            dompurify : 3.0.6\n        \n            graphql : ^16\n        \n            normalize.css : ^8.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.6.3\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API   (src/.../api.enum.ts)\n                        \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/enums/api.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        API\n                    \n                \n                        \n                            \n                                 AUTH_ME\n                            \n                        \n                        \n                            \n                                Value : /auth\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_IN\n                            \n                        \n                        \n                            \n                                Value : /auth/token\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_UP\n                            \n                        \n                        \n                            \n                                Value : /auth/sign-up\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_OUT\n                            \n                        \n                        \n                            \n                                Value : /auth/logout\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH_CLEAR\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh/clear\n                            \n                        \n                        \n                            \n                                 VK_ID_EXCHANGE_TOKEN\n                            \n                        \n                        \n                            \n                                Value : /vk-id/exchange-token\n                            \n                        \n                        \n                            \n                                 ACCOUNT_AVATAR\n                            \n                        \n                        \n                            \n                                Value : /account/avatar\n                            \n                        \n                        \n                            \n                                 UPLOAD\n                            \n                        \n                        \n                            \n                                Value : /upload\n                            \n                        \n            \n        \n\n    src/types/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 OwnerOnly\n                            \n                        \n                        \n                            \n                                Value : OwnerOnly\n                            \n                        \n                        \n                            \n                                 ChatOnly\n                            \n                        \n                        \n                            \n                                Value : ChatOnly\n                            \n                        \n                        \n                            \n                                 MemberOnly\n                            \n                        \n                        \n                            \n                                Value : MemberOnly\n                            \n                        \n            \n        \n\n    src/types/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 Administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apolloOptionsFactory   (src/.../graphql.provider.ts)\n                        \n                        \n                            appInitializerFactory   (src/.../app.config.ts)\n                        \n                        \n                            debouncedSignal   (src/.../funcs.ts)\n                        \n                        \n                            getCurrentPath   (src/.../funcs.ts)\n                        \n                        \n                            getQueryPayload   (src/.../funcs.ts)\n                        \n                        \n                            initSentry   (src/.../sentry.ts)\n                        \n                        \n                            isNotFound   (src/.../funcs.ts)\n                        \n                        \n                            serializePermissions   (src/.../serialize.ts)\n                        \n                        \n                            serializeRole   (src/.../serialize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apolloOptionsFactory\n                        \n                    \n                \n            \n            \n                \napolloOptionsFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ApolloClientOptions\n\n                        \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appInitializerFactory\n                        \n                    \n                \n            \n            \n                \nappInitializerFactory(config: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/funcs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debouncedSignal\n                        \n                    \n                \n            \n            \n                \ndebouncedSignal(sourceSignal: Signal, debounceTimeInMs: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                sourceSignal\n                                            \n                                                        Signal\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                debounceTimeInMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentPath\n                        \n                    \n                \n            \n            \n                \ngetCurrentPath(router: Router)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQueryPayload\n                        \n                    \n                \n            \n            \n                \ngetQueryPayload(params: Params)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotFound\n                        \n                    \n                \n            \n            \n                \nisNotFound(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/sentry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initSentry\n                        \n                    \n                \n            \n            \n                \ninitSentry()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    src/utils/serialize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serializePermissions\n                        \n                    \n                \n            \n            \n                \nserializePermissions(permissions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissions\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Permission[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nspomen-client\nПлатформа воспоминаний\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.2\n        \n            Description : Platform of memories\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountQueryRef   (src/.../account.gql.ts)\n                        \n                        \n                            AccountResponse   (src/.../account.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameQueryRef   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameResponse   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameVariables   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountVariables   (src/.../account.gql.ts)\n                        \n                        \n                            AuthCallbackDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            DeleteUploadByIdResponse   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            DeleteUploadByIdVariables   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            PaginatedQuery   (src/.../index.ts)\n                        \n                        \n                            Pagination   (src/.../index.ts)\n                        \n                        \n                            RemoveAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            ScrollState   (src/.../scroll.service.ts)\n                        \n                        \n                            Sex   (src/.../sex.interface.ts)\n                        \n                        \n                            SignInDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            SignUpDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            UploadAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            UploadByIdQueryRef   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdResponse   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdVariables   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadExtensionsQueryRef   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsResponse   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsVariables   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadFileDto   (src/.../upload.dtos.ts)\n                        \n                        \n                            UploadsQueryRef   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsResponse   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsVariables   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/queries/account.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/auth.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    AuthCallbackDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignInDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignUpDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/index.ts\n    \n    \n        \n            \n                \n                    \n                    PaginatedQuery\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pagination\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/account.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    RemoveAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/services/scroll.service.ts\n    \n    \n        \n            \n                \n                    \n                    ScrollState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/interfaces/sex.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Sex\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\"\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadByIdQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-extensions.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/types/dtos/upload.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    UploadFileDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/uploads.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authCallbackGuard   (src/.../auth-callback.guard.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            DeleteUploadByIdQuery   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            enterLeaveAnimation   (src/.../enter-leave.animation.ts)\n                        \n                        \n                            env   (src/.../env.development.ts)\n                        \n                        \n                            env   (src/.../env.staging.ts)\n                        \n                        \n                            env   (src/.../env.ts)\n                        \n                        \n                            graphqlProvider   (src/.../graphql.provider.ts)\n                        \n                        \n                            httpRequestInterceptor   (src/.../http.interceptor.ts)\n                        \n                        \n                            initialAccount   (src/.../account.interface.ts)\n                        \n                        \n                            initialAuthenticatedUser   (src/.../authenticated-user.interface.ts)\n                        \n                        \n                            inOutAnimation200   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutAnimation500   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutGridAnimation200   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            inOutGridAnimation500   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            protectedRoutes   (src/.../nav.component.ts)\n                        \n                        \n                            sexIcons   (src/.../profile.component.ts)\n                        \n                        \n                            UploadsQuery   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes, withViewTransitions()),\n    importProvidersFrom(TuiRootModule),\n    provideHttpClient(withInterceptors([httpRequestInterceptor])),\n    {\n      provide: ErrorHandler,\n      useValue: Sentry.createErrorHandler({\n        showDialog: false,\n      }),\n    },\n    {\n      provide: Sentry.TraceService,\n      deps: [Router],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: appInitializerFactory,\n      deps: [ConfigService, Sentry.TraceService],\n      multi: true,\n    },\n    { provide: TUI_SANITIZER, useClass: NgDompurifySanitizer },\n    {\n      provide: TUI_LANGUAGE,\n      useValue: of(TUI_RUSSIAN_LANGUAGE),\n    },\n    { provide: LOCALE_ID, useValue: 'ru' },\n    graphqlProvider,\n    ConfigService,\n    AuthService,\n    AccountService,\n    UploadService,\n    ScrollService,\n    AccountGQL,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth-callback.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authCallbackGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route) => {\n  const router = inject(Router)\n\n  const payload = getQueryPayload(route.queryParams)\n\n  return payload && payload.token\n    ? true\n    : router.createUrlTree(['/auth/sign-in'])\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const auth = inject(AuthService)\n  const router = inject(Router)\n\n  const currentPath = getCurrentPath(router)\n  const isAuthPage = currentPath.includes('/auth')\n\n  return auth.$$isAuth.pipe(\n    withLatestFrom(auth.$$isLoading),\n    filter(([_, loading]) => !loading),\n    map(([isAuth]) => {\n      if (\n        (currentPath.includes('/auth/callback') && isAuth) ||\n        (isAuthPage && !isAuth)\n      ) {\n        return true\n      }\n\n      if (isAuthPage && isAuth) {\n        return router.createUrlTree(['/'])\n      }\n\n      return isAuth\n        ? true\n        : router.createUrlTree(['/auth'], {\n            queryParams: { url: currentPath },\n          })\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeleteUploadByIdQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/enter-leave.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enterLeaveAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('enterLeave', [\n  transition(':enter', [\n    style({\n      transform: 'translateX(-50%)',\n      opacity: 0,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(0)',\n        opacity: 1,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      transform: 'translateX(0)',\n      opacity: 1,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(50%)',\n        opacity: 0,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/envs/env.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'local',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn:\n    'https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.staging.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'staging',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'production',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        graphqlProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  Apollo,\n  {\n    provide: APOLLO_OPTIONS,\n    useFactory: apolloOptionsFactory,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/http.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpRequestInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  req = req.clone({\n    withCredentials: true,\n    headers: req.headers\n      .set('Access-Control-Allow-Origin', env.origin)\n      .set('Access-Control-Allow-Methods', 'GET,POST,PUT,DELETE,OPTIONS')\n      .set(\n        'Access-Control-Allow-Headers',\n        'Accept, Cache-Control, Pragma, Origin, Authorization, Content-Type, X-Requested-With, sentry-trace, baggage'\n      )\n      .set('Access-Control-Allow-Credentials', 'true'),\n  })\n\n  return next(req).pipe(\n    catchError((err: Error) => {\n      if (env.environment !== 'production') {\n        console.log(err)\n      }\n      return throwError(() => err)\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/account.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAccount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/authenticated-user.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAuthenticatedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out-grid.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/components/nav/nav.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        protectedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/profile/profile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sexIcons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/queries/uploads.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UploadsQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
