var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,0.864,1,0.709]],["body/interfaces/Account.html",[0,0.958,1,1.161,2,1.654,3,0.163,4,0.2,5,0.163,6,3.411,7,0.259,8,0.48,9,3.216,10,3.539,11,3.724,12,3.073,13,4.736,14,2.49,15,3.216,16,3.724,17,3.807,18,2.702,19,3.37,20,3.93,21,1.357,22,0.015,23,2.676,24,0.577,25,3.764,26,3.78,27,0.423,28,1.969,29,0.264,30,1.465,31,3.126,32,0.011,33,0.011]],["title/injectables/AccountGQL.html",[34,0.97,35,2.616]],["body/injectables/AccountGQL.html",[1,0.922,3,0.191,4,0.235,5,0.191,7,0.304,8,0.532,9,2.879,10,3.168,11,3.334,12,2.751,14,2.229,15,2.879,16,3.334,18,2.936,19,3.017,20,3.518,21,1.153,22,0.015,24,0.511,27,0.511,29,0.334,32,0.012,33,0.012,34,1.572,35,4.24,36,2.112,37,4.002,38,3.334,39,4.373,40,4.059,41,0.814,42,0.78,43,3.833,44,6.393,45,6.393,46,2.879,47,0.78,48,5.128,49,3.963,50,2.674,51,2.822,52,0.563,53,3.726,54,1.94,55,4.449,56,4.449,57,4.449,58,2.989,59,2.822,60,0.48]],["title/components/AccountInputComponent.html",[61,0.181,62,0.864]],["body/components/AccountInputComponent.html",[1,1.137,3,0.093,4,0.115,5,0.093,7,0.148,8,0.322,18,1.463,21,1.047,22,0.015,23,1.711,24,0.526,27,0.503,29,0.115,32,0.007,33,0.007,41,1.137,42,1.09,47,1.152,52,0.275,54,0.947,60,0.234,61,0.216,62,1.329,63,0.88,64,0.592,65,0.592,66,0.592,67,6.61,68,6.61,69,1.79,70,1.525,71,2.127,72,3.686,73,0.527,74,2.016,75,2.765,76,3.686,77,2.765,78,0.994,79,3.017,80,3.378,81,1.73,82,1.726,83,2.849,84,0.783,85,0.951,86,2.033,87,2.928,88,3.686,89,2.463,90,3.686,91,3.686,92,0.88,93,3.017,94,0.88,95,3.017,96,4.723,97,4.098,98,4.723,99,4.723,100,2.192,101,4.723,102,4.723,103,2.127,104,2.923,105,4.48,106,4.48,107,0.915,108,3.866,109,2.392,110,3.017,111,3.017,112,3.017,113,4.145,114,1.741,115,3.686,116,3.34,117,4.48,118,3.686,119,2.503,120,2.172,121,1.745,122,2.172,123,2.172,124,3.866,125,2.503,126,1.645,127,0.83,128,1.306,129,1.79,130,1.436,131,2.503,132,3.017,133,2.503,134,3.017,135,2.503,136,3.017,137,1.945,138,2.503,139,2.503,140,2.599,141,3.866,142,2.503,143,2.994,144,3.238,145,2.503,146,2.503,147,2.928,148,3.866,149,3.866,150,2.503,151,3.866,152,2.172,153,3.686,154,2.172,155,1.741,156,2.172,157,2.127,158,2.172,159,1.825,160,2.503,161,2.503,162,0.691,163,1.181,164,1.127,165,1.066,166,0.746,167,1.459,168,1.79,169,1.305,170,1.305,171,0.988,172,2.172,173,3.866,174,0.988,175,1.031,176,0.592,177,0.592,178,1.459,179,1.552,180,0.616,181,2.503,182,2.503,183,2.503,184,4.723,185,2.172,186,1.953,187,2.172,188,2.503,189,1.24,190,1.953,191,2.172,192,1.945,193,2.503,194,2.503,195,2.253,196,1.077,197,1.552,198,2.503,199,1.525,200,1.459,201,1.24,202,1.181,203,2.503,204,0.988,205,2.503,206,2.503,207,1.953,208,1.953,209,1.953,210,3.017,211,0.592,212,0.915,213,0.88,214,0.507,215,1.257,216,0.592,217,1.118,218,0.548,219,0.592,220,0.548,221,0.847,222,0.592,223,0.548,224,0.592,225,0.548,226,0.592,227,0.548,228,0.592,229,0.592,230,0.548,231,0.592,232,0.507,233,0.57,234,0.592,235,0.548,236,0.592,237,0.548,238,0.592,239,0.548,240,0.592,241,0.548,242,0.592,243,0.548,244,0.592,245,0.548,246,0.592,247,0.548,248,0.592,249,0.548,250,0.592,251,0.548,252,0.592,253,0.548,254,0.592,255,0.548,256,0.45,257,0.548,258,0.592,259,0.548,260,0.915,261,0.592,262,0.548,263,0.592,264,0.548,265,0.592,266,0.548,267,1.032,268,0.592,269,0.548,270,0.592,271,0.548,272,0.592,273,0.548,274,0.57,275,0.592,276,0.548,277,0.592,278,0.57,279,0.527,280,0.57,281,0.527,282,0.57,283,0.592]],["title/interfaces/AccountModel.html",[0,0.864,53,2.299]],["body/interfaces/AccountModel.html",[0,1.286,2,1.682,3,0.167,4,0.205,5,0.167,7,0.266,8,0.489,9,3.124,10,3.438,11,3.618,12,3.099,14,2.511,15,3.243,16,3.618,17,3.783,18,2.724,19,3.274,20,3.818,21,1.356,22,0.015,23,2.642,24,0.583,25,4.499,26,3.818,27,0.48,28,2.02,29,0.269,32,0.011,33,0.011,53,3.42,54,1.697,179,2.78,284,3.5,285,4.043,286,4.601,287,2.858]],["title/injectables/AccountService.html",[34,0.97,288,2.616]],["body/injectables/AccountService.html",[3,0.184,4,0.226,5,0.184,7,0.293,8,0.52,22,0.015,24,0.502,27,0.556,28,2.225,29,0.226,30,1.655,32,0.011,33,0.011,34,1.536,36,2.035,41,0.784,42,0.751,47,1.041,52,0.542,54,1.869,58,2.879,59,2.719,60,0.462,100,2.121,107,1.478,126,1.934,127,0.793,128,1.536,130,1.478,162,1.363,287,2.035,288,4.142,289,4.287,290,3.277,291,4.898,292,5.418,293,5.418,294,6.246,295,6.242,296,4.941,297,4.874,298,6.246,299,6.242,300,4.941,301,4.898,302,4.467,303,4.941,304,3.063,305,3.277,306,3.534,307,3.095,308,5.418,309,1.949,310,4.287,311,4.287,312,4.287,313,3.856,314,4.287,315,6.246,316,4.941,317,2.268,318,4.287,319,4.941,320,4.941,321,4.941,322,4.941]],["title/interfaces/AccountShortModel.html",[0,0.864,179,2.445]],["body/interfaces/AccountShortModel.html",[0,1.4,2,1.833,3,0.191,4,0.235,5,0.191,7,0.304,8,0.532,9,2.309,10,2.541,11,2.674,12,3.229,14,2.616,15,3.379,16,2.674,17,3.452,18,2.839,19,2.42,20,2.822,21,1.358,22,0.015,23,2.611,24,0.535,25,4.059,26,3.518,27,0.511,28,2.309,29,0.293,32,0.012,33,0.012,53,2.989,54,1.94,179,3.963,284,4.002,285,2.989,286,3.401,287,2.633]],["title/injectables/AccountsInfoByUsernameGQL.html",[34,0.97,80,2.821]],["body/injectables/AccountsInfoByUsernameGQL.html",[3,0.259,4,0.235,5,0.191,7,0.303,8,0.532,12,2.749,14,2.227,15,2.876,18,2.935,21,1.152,22,0.015,24,0.511,27,0.511,29,0.334,32,0.012,33,0.012,34,1.57,36,2.109,38,3.33,39,4.37,40,4.056,41,0.812,42,0.778,43,3.83,47,0.778,49,3.959,50,2.67,51,2.817,52,0.562,54,1.937,60,0.479,80,4.568,97,6.039,153,3.995,179,3.959,323,4.984,324,3.995,325,6.387,326,4.984,327,4.984,328,3.33,329,6.387,330,3.959,331,3.014,332,5.12,333,4.442,334,4.442]],["title/interfaces/ApiError.html",[0,0.864,335,2.821]],["body/interfaces/ApiError.html",[0,1.494,2,1.634,3,0.212,4,0.261,5,0.212,7,0.338,8,0.568,21,1.357,22,0.015,24,0.555,29,0.312,32,0.012,33,0.012,128,1.677,202,3.569,290,5.127,335,4.878,336,4.449,337,5.127,338,5.015,339,4.078,340,4.947,341,2.691]],["title/components/AppComponent.html",[61,0.181,218,0.864]],["body/components/AppComponent.html",[1,0.494,3,0.102,4,0.126,5,0.102,7,0.163,8,0.345,12,1.786,18,1.039,22,0.015,24,0.304,27,0.561,29,0.126,30,0.92,32,0.008,33,0.008,41,1.037,42,0.993,47,1.099,52,0.301,59,2.284,60,0.257,61,0.229,62,0.602,63,0.945,64,0.65,65,0.65,66,0.65,70,1.637,71,2.252,73,0.579,74,2.164,78,0.776,81,1.745,82,1.741,84,0.841,85,1.02,86,2.153,92,0.945,94,0.945,100,2.307,103,2.252,107,0.982,109,2.51,121,1.736,126,0.851,127,0.906,128,0.675,130,1.319,155,1.869,162,0.758,164,1.237,165,1.38,166,0.818,171,1.084,174,1.084,175,1.131,176,0.65,177,0.65,180,0.675,196,1.182,199,1.084,204,1.084,211,0.65,212,0.982,213,0.945,214,0.556,215,1.319,216,0.65,217,1.184,218,1.221,219,0.65,220,0.602,221,1.311,222,0.65,223,0.602,224,0.65,225,0.602,226,0.65,227,0.602,228,0.65,229,0.65,230,0.602,231,0.65,232,0.556,233,0.625,234,0.65,235,0.602,236,0.65,237,0.602,238,0.65,239,0.602,240,0.65,241,1.221,242,0.65,243,0.602,244,0.65,245,0.602,246,0.65,247,1.221,248,0.65,249,1.221,250,0.65,251,0.602,252,0.65,253,1.221,254,0.65,255,0.602,256,0.494,257,0.602,258,0.65,259,0.602,260,0.982,261,0.65,262,0.602,263,0.65,264,0.602,265,0.65,266,0.602,267,1.075,268,0.65,269,0.602,270,0.65,271,0.602,272,0.65,273,0.602,274,0.625,275,0.65,276,0.602,277,0.65,278,0.625,279,0.579,280,0.945,281,1.326,282,0.625,283,0.65,304,1.702,307,2.056,317,0.997,341,2.36,342,2.383,343,4.339,344,3.317,345,5.002,346,5.002,347,3.903,348,5.002,349,3.903,350,5.002,351,2.752,352,4.15,353,4.15,354,3.1,355,5.002,356,2.63,357,4.339,358,3.317,359,3.6,360,4.836,361,3.696,362,2.36,363,4.15,364,4.15,365,2.746,366,3.6,367,2.608,368,4.15,369,2.746,370,4.15,371,2.746,372,4.15,373,2.746,374,2.746,375,2.164,376,2.746,377,2.968,378,2.746,379,4.15,380,2.746,381,2.056,382,2.746,383,4.15,384,2.746,385,3.1,386,3.238,387,2.746,388,1.821,389,1.821,390,3.238,391,1.084,392,2.383,393,2.143,394,1.084,395,1.432,396,1.821,397,1.821,398,1.182,399,3.238,400,3.238,401,3.6,402,2.143,403,1.964,404,2.746,405,2.746,406,2.746,407,2.383,408,3.6,409,4.339,410,2.746,411,4.15,412,2.383,413,2.746,414,2.746,415,1.821,416,2.915,417,2.746,418,2.746,419,2.143,420,2.746,421,2.383,422,2.746,423,2.746,424,2.746,425,1.821,426,2.746,427,5.002,428,1.432,429,1.964,430,2.746,431,2.746,432,2.746,433,2.746,434,2.746,435,1.821,436,4.15,437,3.238,438,6.294,439,3.6]],["title/components/AuthCallbackComponent.html",[61,0.181,220,0.864]],["body/components/AuthCallbackComponent.html",[1,0.59,3,0.122,4,0.15,5,0.122,7,0.194,8,0.394,22,0.015,24,0.407,27,0.537,29,0.15,30,1.1,32,0.009,33,0.009,41,1.065,42,1.02,47,1.077,52,0.36,60,0.307,61,0.254,62,0.719,63,1.078,64,0.777,65,0.777,66,0.777,70,1.868,71,2.5,73,0.692,78,0.886,81,1.771,82,1.768,84,0.959,85,1.164,86,2.389,92,1.078,94,1.078,100,2.377,107,1.12,109,2.737,121,1.676,127,0.9,130,1.12,140,3.055,162,0.906,165,0.906,166,0.978,174,1.295,175,1.352,176,0.777,177,0.777,180,0.807,192,1.352,196,1.413,199,1.295,211,0.777,212,1.12,213,1.078,214,0.665,215,1.438,216,0.777,217,1.314,218,0.719,219,0.777,220,1.331,221,1.625,222,0.777,223,0.719,224,0.777,225,1.331,226,0.777,227,0.719,228,0.777,229,0.777,230,0.719,231,0.777,232,0.665,233,0.747,234,0.777,235,0.719,236,0.777,237,0.719,238,0.777,239,0.719,240,0.777,241,0.719,242,0.777,243,0.719,244,0.777,245,0.719,246,0.777,247,0.719,248,0.777,249,0.719,250,0.777,251,0.719,252,0.777,253,0.719,254,0.777,255,0.719,256,0.59,257,0.719,258,0.777,259,0.719,260,1.12,261,0.777,262,0.719,263,0.777,264,0.719,265,0.777,266,0.719,267,1.158,268,0.777,269,0.719,270,0.777,271,0.719,272,0.777,273,0.719,274,0.747,275,0.777,276,0.719,277,0.777,278,0.747,279,0.692,280,0.747,281,0.692,282,0.747,283,0.777,305,2.177,309,1.868,344,3.682,351,3.546,356,2.868,358,3.682,361,4.03,367,2.469,375,2.469,381,2.346,385,3.442,391,1.295,394,1.295,398,1.413,403,2.348,415,3.139,416,2.759,428,1.712,435,2.177,437,3.694,440,6.26,441,2.848,442,4.734,443,4.734,444,4.734,445,3.693,446,2.895,447,4.734,448,3.283,449,4.734,450,3.283,451,3.283,452,3.682,453,4.734,454,3.283,455,3.386,456,3.283,457,3.386,458,3.283,459,3.283,460,3.283,461,2.348,462,3.283,463,3.283,464,3.386,465,2.348,466,3.283,467,3.694,468,2.848,469,2.562,470,2.562,471,2.848,472,1.549,473,2.562,474,2.562,475,2.348]],["title/components/AuthComponent.html",[61,0.181,223,0.864]],["body/components/AuthComponent.html",[1,0.671,3,0.139,4,0.171,5,0.139,7,0.221,8,0.432,21,0.858,22,0.015,23,2.178,24,0.38,27,0.527,29,0.171,32,0.009,33,0.009,41,0.945,42,0.905,47,0.978,52,0.409,60,0.349,61,0.273,62,0.817,63,1.18,64,0.883,65,0.883,66,0.883,70,2.045,71,2.682,73,0.786,78,0.97,81,1.788,82,1.786,84,1.05,85,1.275,92,1.18,94,1.18,107,1.227,109,2.898,121,1.43,127,0.889,130,0.883,162,1.029,165,1.029,171,1.472,176,0.883,177,0.883,180,0.918,204,2.539,211,0.883,212,1.227,213,1.18,214,0.756,215,1.523,216,0.883,217,1.41,218,0.817,219,0.883,220,0.817,221,1.481,222,0.883,223,1.41,224,0.883,225,0.817,226,0.883,227,0.817,228,0.883,229,0.883,230,0.817,231,0.883,232,0.756,233,0.85,234,0.883,235,0.817,236,0.883,237,0.817,238,0.883,239,0.817,240,0.883,241,0.817,242,0.883,243,0.817,244,0.883,245,0.817,246,0.883,247,0.817,248,0.883,249,0.817,250,0.883,251,0.817,252,0.883,253,0.817,254,0.883,255,0.817,256,0.671,257,0.817,258,0.883,259,1.41,260,1.523,261,0.883,262,1.41,263,0.883,264,0.817,265,0.883,266,0.817,267,1.215,268,0.883,269,0.817,270,0.883,271,0.817,272,0.883,273,0.817,274,0.85,275,0.883,276,0.817,277,0.883,278,0.85,279,0.786,280,0.85,281,0.786,282,0.85,283,0.883,331,2.446,341,2.446,367,1.946,391,1.472,401,4.497,416,2.175,446,3.106,457,3.707,461,2.669,476,3.237,477,5.956,478,5.184,479,5.184,480,7.179,481,4.648,482,5.184,483,3.732,484,3.732,485,3.732,486,3.732,487,4.045,488,2.912,489,3.732,490,2.912,491,3.732,492,2.912,493,3.732]],["title/interfaces/AuthModel.html",[0,0.864,494,2.821]],["body/interfaces/AuthModel.html",[0,1.302,2,1.703,3,0.221,4,0.272,5,0.221,7,0.352,8,0.582,21,1.311,22,0.015,24,0.513,27,0.436,29,0.272,32,0.013,33,0.013,38,3.645,53,4.327,494,4.999,495,5.155,496,7.665,497,7.665,498,5.942]],["title/components/AuthPassComponent.html",[61,0.181,225,0.864]],["body/components/AuthPassComponent.html",[1,0.512,3,0.106,4,0.131,5,0.106,7,0.169,8,0.355,21,0.472,22,0.015,24,0.468,27,0.51,29,0.131,30,0.955,32,0.008,33,0.008,41,1.08,42,1.006,47,1.093,52,0.313,60,0.266,61,0.234,62,0.624,63,0.971,64,0.674,65,0.674,66,0.674,70,1.683,71,2.303,73,0.6,78,0.798,81,1.751,82,1.747,84,0.864,85,1.049,86,2.201,89,2.667,92,0.971,94,0.971,100,2.322,103,2.303,107,1.01,109,2.557,116,3.346,121,1.677,126,0.883,127,0.884,128,0.701,130,1.21,140,2.814,155,1.921,162,0.786,163,1.345,164,1.283,165,0.786,166,0.849,174,1.124,175,1.174,176,0.674,177,0.674,180,0.701,192,1.174,199,1.124,211,0.674,212,1.01,213,0.971,214,0.577,215,1.344,216,0.674,217,1.21,218,0.624,219,0.674,220,0.624,221,1.49,222,0.674,223,0.624,224,0.674,225,1.244,226,0.674,227,0.624,228,0.674,229,0.674,230,0.624,231,0.674,232,0.577,233,0.649,234,0.674,235,0.624,236,0.674,237,0.624,238,0.674,239,0.624,240,0.674,241,0.624,242,0.674,243,0.624,244,0.674,245,0.624,246,0.674,247,0.624,248,0.674,249,0.624,250,0.674,251,0.624,252,0.674,253,0.624,254,0.674,255,0.624,256,0.512,257,0.624,258,0.674,259,0.624,260,1.01,261,0.674,262,0.624,263,0.674,264,0.624,265,0.674,266,0.624,267,1.093,268,0.674,269,0.624,270,0.674,271,0.624,272,0.674,273,0.624,274,0.649,275,0.674,276,0.624,277,0.674,278,0.649,279,0.6,280,0.649,281,0.6,282,0.649,283,0.674,305,1.89,309,2.838,317,1.035,344,3.391,351,2.814,358,3.391,361,3.765,362,1.345,367,2.225,385,3.17,391,1.124,403,2.038,416,2.486,435,1.89,445,3.328,446,2.667,452,4.388,455,3.051,457,3.051,461,2.038,464,3.051,465,2.038,467,2.224,468,2.472,475,2.038,499,6.32,500,2.472,501,4.745,502,4.266,503,4.266,504,3.991,505,3.391,506,4.431,507,2.224,508,4.431,509,2.85,510,3.329,511,4.266,512,2.85,513,4.266,514,2.85,515,2.85,516,2.85,517,3.956,518,5.275,519,2.85,520,3.051,521,2.85,522,2.85,523,2.85,524,2.85,525,2.85,526,3.051,527,2.038,528,2.85,529,1.89,530,2.85,531,2.224,532,2.224,533,3.051,534,2.472,535,2.224,536,2.85,537,2.224,538,3.329,539,2.85,540,4.266,541,4.266,542,3.701,543,2.85,544,2.85,545,2.85,546,2.85,547,1.766,548,3.17,549,1.766,550,4.431,551,3.991,552,2.85,553,2.85,554,2.472,555,2.85,556,2.224,557,2.224,558,2.224]],["title/injectables/AuthService.html",[34,0.97,394,1.556]],["body/injectables/AuthService.html",[2,0.935,3,0.121,4,0.149,5,0.121,7,0.193,8,0.392,9,2.729,10,1.616,11,1.701,12,1.404,13,2.163,14,1.137,15,1.469,16,1.701,17,1.616,18,1.234,19,1.539,20,1.795,22,0.015,23,2.224,24,0.549,26,1.795,27,0.529,28,1.469,29,0.149,32,0.009,33,0.009,34,1.159,36,1.343,41,1.122,42,1.075,47,1.179,52,0.358,54,1.234,58,1.901,59,1.795,60,0.305,100,1.714,107,1.115,121,1.3,126,1.877,127,0.77,128,1.49,129,2.333,130,1.705,140,4.307,143,2.885,144,3.504,147,4.281,162,0.9,168,2.333,169,1.701,170,1.701,174,1.287,291,3.957,297,5.227,301,3.957,302,3.37,304,2.022,305,2.163,306,2.333,307,2.335,309,1.859,317,2.656,318,2.83,390,3.677,394,1.859,425,3.669,428,1.701,429,2.333,445,3.493,452,3.669,465,4.334,471,4.088,472,2.224,494,4.334,505,2.163,520,3.37,559,2.83,560,5.811,561,4.317,562,6.06,563,5.257,564,6.06,565,3.677,566,4.088,567,6.06,568,4.088,569,3.262,570,3.262,571,3.262,572,3.262,573,4.713,574,3.262,575,4.713,576,5.257,577,3.262,578,4.713,579,3.262,580,3.262,581,4.713,582,5.257,583,3.262,584,4.713,585,3.262,586,4.713,587,3.262,588,4.713,589,4.713,590,3.262,591,4.713,592,3.262,593,4.713,594,3.262,595,3.262,596,4.713,597,3.262,598,3.262,599,2.83,600,2.163,601,4.088,602,4.088,603,2.022,604,2.333,605,3.262,606,3.262,607,3.262,608,3.262,609,3.262,610,3.262,611,3.262,612,3.262,613,3.262,614,3.262,615,3.262,616,3.262,617,3.262,618,3.262,619,4.713,620,4.713,621,3.262,622,3.262,623,3.262,624,3.262,625,3.262,626,3.262,627,3.262,628,2.83,629,2.83,630,3.262,631,3.262,632,3.262,633,3.262,634,3.262,635,3.262,636,3.262,637,3.262]],["title/interfaces/AuthenticatedUser.html",[0,0.864,603,2.445]],["body/interfaces/AuthenticatedUser.html",[0,1.229,1,1.302,2,1.608,3,0.209,4,0.257,5,0.209,7,0.332,8,0.562,9,2.526,10,2.78,11,2.925,12,2.414,13,3.72,14,1.956,15,2.526,16,2.925,17,2.78,18,2.122,19,2.647,20,3.087,21,1.199,22,0.015,23,2.643,24,0.412,27,0.412,29,0.309,30,1.879,32,0.012,33,0.012,38,3.522,505,5.104,603,4.492,604,4.012,638,4.377,639,4.377,640,5.609]],["title/components/ChangeAvatarComponent.html",[61,0.181,227,0.864]],["body/components/ChangeAvatarComponent.html",[1,0.987,3,0.099,4,0.122,5,0.151,7,0.158,8,0.338,9,1.827,14,1.713,21,0.978,22,0.015,23,0.859,24,0.457,27,0.52,29,0.122,32,0.007,33,0.007,41,0.937,42,0.898,47,1.116,52,0.293,54,1.009,60,0.249,61,0.225,62,0.584,63,0.924,64,0.631,65,0.631,66,0.631,73,0.562,78,0.759,81,1.74,82,1.737,84,0.822,85,0.998,86,2.114,87,3.045,89,2.562,92,0.924,94,0.924,100,2.391,103,2.212,104,3.021,107,0.96,121,1.716,126,1.521,127,0.822,128,1.208,130,1.472,137,1.671,143,2.562,144,1.321,155,1.827,157,2.233,162,1.119,163,1.258,164,1.201,165,1.119,166,0.794,167,1.554,169,1.39,170,1.39,171,1.052,174,1.052,175,1.098,176,0.631,177,0.631,180,0.656,189,1.321,190,2.081,192,2.023,195,2.365,196,2.114,197,3.857,199,2.695,202,1.258,211,0.631,212,0.96,213,0.924,214,0.54,215,1.299,216,0.631,217,1.162,218,0.584,219,0.631,220,0.584,221,0.889,222,0.631,223,0.584,224,0.631,225,0.584,226,0.631,227,1.203,228,1.531,229,0.631,230,0.584,231,0.631,232,0.54,233,0.607,234,0.631,235,0.584,236,0.631,237,0.584,238,0.631,239,0.584,240,0.631,241,0.584,242,0.631,243,0.584,244,0.631,245,0.584,246,0.631,247,0.584,248,0.631,249,0.584,250,0.631,251,0.584,252,0.631,253,0.584,254,0.631,255,0.584,256,0.479,257,0.584,258,0.631,259,0.584,260,0.96,261,0.631,262,0.584,263,0.631,264,0.584,265,0.631,266,0.584,267,1.062,268,0.631,269,0.584,270,0.631,271,0.584,272,0.631,273,0.584,274,0.607,275,0.631,276,0.584,277,0.631,278,0.607,279,0.562,280,0.607,281,0.562,282,0.607,283,0.631,287,2.433,288,1.768,292,5.398,293,5.125,309,1.601,317,1.473,351,2.703,362,1.915,398,1.148,428,3.245,445,2.562,472,1.258,517,1.653,599,2.313,601,2.313,641,6.427,642,5.781,643,2.313,644,4.262,645,2.562,646,3.513,647,4.058,648,4.058,649,5.125,650,3.641,651,3.258,652,4.912,653,5.125,654,4.058,655,4.763,656,4.058,657,2.313,658,4.763,659,4.058,660,3.166,661,2.666,662,4.058,663,2.666,664,2.666,665,2.666,666,4.058,667,2.666,668,2.666,669,4.058,670,2.666,671,2.666,672,3.166,673,2.666,674,2.666,675,2.691,676,2.666,677,2.666,678,2.081,679,2.081,680,1.554,681,1.653,682,2.666,683,2.081,684,5.49,685,2.666,686,4.058,687,2.666,688,2.313,689,3.52,690,4.912,691,2.666,692,2.666,693,2.666,694,2.666,695,3.52,696,2.666,697,2.666,698,4.058,699,5.49,700,4.912,701,2.666,702,4.262,703,2.081,704,2.313,705,2.666,706,2.666,707,2.666,708,2.666]],["title/components/ChatsComponent.html",[61,0.181,230,0.864]],["body/components/ChatsComponent.html",[1,0.807,3,0.167,4,0.206,5,0.167,22,0.015,27,0.431,29,0.206,32,0.011,33,0.011,52,0.493,60,0.42,61,0.3,62,0.984,63,1.338,64,1.063,65,1.063,66,1.063,73,0.946,78,1.099,81,1.809,82,1.807,84,1.19,85,1.104,92,1.338,94,1.338,127,0.882,176,1.063,177,1.063,180,1.104,211,1.063,212,1.39,213,1.338,214,0.91,215,1.643,216,1.063,217,1.549,218,0.984,219,1.063,220,0.984,221,1.287,222,1.063,223,0.984,224,1.063,225,0.984,226,1.063,227,0.984,228,1.063,229,1.063,230,1.521,231,1.063,232,0.91,233,1.023,234,1.063,235,0.984,236,1.063,237,0.984,238,1.063,239,0.984,240,1.063,241,0.984,242,1.063,243,0.984,244,1.063,245,0.984,246,1.063,247,0.984,248,1.063,249,0.984,250,1.063,251,0.984,252,1.063,253,0.984,254,1.063,255,0.984,256,0.807,257,0.984,258,1.063,259,0.984,260,1.39,261,1.063,262,0.984,263,1.063,264,0.984,265,1.063,266,0.984,267,1.295,268,1.063,269,0.984,270,1.063,271,0.984,272,1.063,273,0.984,274,1.023,275,1.063,276,0.984,277,1.063,278,1.023,279,0.946,280,1.023,281,0.946,282,1.023,283,1.063,709,3.897,710,5.622,711,5.874,712,5.874,713,3.895]],["title/injectables/ConfigService.html",[34,0.97,395,2.057]],["body/injectables/ConfigService.html",[3,0.169,4,0.208,5,0.169,7,0.269,8,0.492,22,0.015,24,0.483,27,0.53,29,0.208,30,1.52,32,0.011,33,0.011,34,1.454,36,1.869,41,1.147,42,1.099,47,1.176,52,0.498,58,2.644,59,2.497,60,0.424,100,2.295,107,1.399,121,1.631,129,3.245,130,1.557,143,3.936,144,2.248,162,1.252,174,1.79,189,2.248,192,1.869,291,4.704,301,3.245,302,4.229,304,2.812,307,2.93,354,3.665,356,3.289,362,3.104,381,2.93,391,1.79,395,3.083,437,5.133,600,3.009,675,4.915,695,3.936,714,3.936,715,6.578,716,6.578,717,6.578,718,6.047,719,6.97,720,6.97,721,5.913,722,4.537,723,4.537,724,5.913,725,4.537,726,4.537,727,4.537,728,4.537,729,4.537,730,5.913,731,3.541,732,4.537,733,4.537,734,3.541,735,4.537,736,4.537,737,4.537,738,4.537,739,4.537,740,4.537,741,4.537,742,4.537,743,4.537,744,4.537,745,4.537,746,4.537]],["title/components/ConfirmAlertComponent.html",[61,0.181,232,0.799]],["body/components/ConfirmAlertComponent.html",[0,0.869,1,0.712,3,0.148,4,0.182,5,0.148,7,0.235,8,0.45,21,1.093,22,0.015,24,0.397,27,0.484,29,0.182,32,0.01,33,0.01,47,0.935,52,0.435,60,0.371,61,0.282,62,0.869,63,1.231,64,0.938,65,0.938,66,0.938,73,0.835,78,1.011,81,1.795,82,1.793,84,1.095,92,1.231,94,1.231,100,1.228,107,1.279,121,1.491,126,1.228,127,0.839,128,0.975,130,0.938,137,2.532,162,1.094,165,1.491,166,1.181,211,0.938,212,1.279,213,1.231,214,0.803,215,1.563,216,0.938,217,1.455,218,0.869,219,0.938,220,0.869,221,1.184,222,0.938,223,0.869,224,0.938,225,0.869,226,0.938,227,0.869,228,0.938,229,0.938,230,0.869,231,0.938,232,1.338,233,1.662,234,0.938,235,0.869,236,0.938,237,0.869,238,0.938,239,0.869,240,0.938,241,0.869,242,0.938,243,0.869,244,0.938,245,0.869,246,0.938,247,0.869,248,0.938,249,0.869,250,0.938,251,0.869,252,0.938,253,0.869,254,0.938,255,0.869,256,0.712,257,0.869,258,0.938,259,0.869,260,1.279,261,0.938,262,0.869,263,0.938,264,0.869,265,0.938,266,0.869,267,1.242,268,0.938,269,0.869,270,0.938,271,0.869,272,0.938,273,0.869,274,0.903,275,0.938,276,0.869,277,0.938,278,0.903,279,0.835,280,0.903,281,0.835,282,0.903,283,0.938,337,2.629,362,2.551,650,2.629,657,3.44,660,4.217,679,3.094,680,2.31,681,2.458,683,3.094,703,3.094,747,5.153,748,5.153,749,3.094,750,4.217,751,4.689,752,4.689,753,5.153,754,4.093,755,5.729,756,5.404,757,3.965,758,3.44,759,2.629,760,2.836,761,5.334,762,3.44]],["title/interfaces/ConfirmAlertOptions.html",[0,0.864,760,2.821]],["body/interfaces/ConfirmAlertOptions.html",[0,1.176,2,1.539,3,0.2,4,0.246,5,0.2,7,0.318,8,0.547,21,1.297,22,0.015,24,0.482,27,0.544,29,0.246,32,0.012,33,0.012,52,0.589,60,0.502,61,0.301,78,1.004,81,1.176,82,1.176,84,1.087,92,1.222,94,1.222,100,1.662,121,1.481,137,2.21,162,1.481,165,1.814,166,1.599,232,1.087,233,1.619,337,4.914,362,2.533,650,3.559,660,4.188,679,4.188,680,3.128,681,3.327,683,4.188,703,4.188,747,4.188,748,4.188,749,4.188,750,4.188,751,4.657,752,4.657,753,5.932,754,3.327,755,5.705,758,4.657,759,3.559,760,4.703,761,4.657,762,4.657]],["title/components/DashboardComponent.html",[61,0.181,235,0.864]],["body/components/DashboardComponent.html",[1,0.235,3,0.049,4,0.06,5,0.049,14,1.246,22,0.011,27,0.166,29,0.06,32,0.004,33,0.004,52,0.143,60,0.122,61,0.137,62,0.286,63,0.516,64,0.309,65,0.309,66,0.309,73,0.275,78,0.424,81,1.586,82,1.579,84,0.459,85,0.321,92,0.516,94,0.516,127,0.454,176,0.309,177,0.309,180,0.321,199,1.748,211,0.309,212,0.536,213,0.516,214,0.265,215,0.846,216,0.309,217,0.709,218,0.286,219,0.309,220,0.286,221,0.496,222,0.309,223,0.286,224,0.309,225,0.286,226,0.309,227,0.286,228,0.309,229,0.309,230,0.286,231,0.309,232,0.265,233,0.298,234,0.309,235,0.783,236,0.309,237,0.286,238,0.309,239,0.286,240,0.309,241,0.286,242,0.309,243,0.286,244,0.309,245,0.286,246,0.309,247,0.286,248,0.309,249,0.286,250,0.309,251,0.286,252,0.309,253,0.286,254,0.309,255,0.286,256,0.235,257,0.286,258,0.309,259,0.286,260,0.536,261,0.309,262,0.286,263,0.309,264,0.286,265,0.309,266,0.286,267,0.727,268,0.309,269,0.286,270,0.309,271,0.286,272,0.309,273,0.286,274,0.298,275,0.309,276,0.286,277,0.309,278,0.298,279,0.275,280,0.298,281,0.275,282,0.298,283,0.309,713,0.866,763,1.134,764,4.043,765,2.264,766,2.264,767,1.307,768,6.094,769,6.657,770,6.211,771,5.269,772,6.317,773,2.264,774,2.264,775,4.429,776,5.659,777,5.965,778,6.094,779,5.477,780,6.582,781,3.575,782,5.965,783,5.659,784,6.501,785,5.659,786,5.031,787,5.269,788,4.429,789,3.575,790,5.477,791,5.269,792,6.094,793,5.659,794,5.659,795,4.754,796,4.754,797,5.269,798,6.317,799,6.413,800,4.429,801,2.264,802,5.821,803,5.965,804,5.031,805,4.043,806,5.659,807,4.429,808,5.031,809,5.477,810,5.965,811,5.477,812,5.477,813,5.269,814,5.965,815,5.031,816,5.031,817,5.965,818,6.413,819,5.477,820,6.094,821,4.043,822,5.965,823,5.269,824,5.477,825,3.575,826,2.264,827,6.094,828,5.269,829,6.905,830,5.477,831,5.821,832,4.429,833,5.269,834,6.094,835,5.477,836,5.031,837,5.269,838,4.429,839,5.031,840,6.094,841,4.754,842,5.659,843,6.094,844,6.094,845,3.575,846,5.659,847,4.043,848,5.477,849,2.264,850,5.269,851,5.477,852,4.754,853,5.269,854,5.965,855,4.429,856,5.477,857,5.031,858,4.754,859,6.094,860,5.031,861,5.477,862,4.429,863,5.821,864,6.094,865,5.477,866,5.269,867,6.582,868,4.754,869,3.575,870,5.821,871,5.659,872,5.269,873,5.965,874,5.659,875,4.043,876,6.317,877,5.821,878,5.965,879,5.031,880,5.659,881,5.269,882,4.429,883,5.031,884,4.754,885,5.269,886,5.031,887,6.211,888,5.659,889,3.575,890,5.477,891,2.997,892,5.031,893,4.429,894,4.754,895,5.659,896,4.429,897,5.031,898,5.659,899,3.575,900,4.754,901,4.754,902,5.821,903,4.754,904,5.821,905,5.031,906,5.031,907,4.754,908,4.429,909,4.754,910,5.477,911,5.269,912,4.754,913,5.659,914,5.031,915,2.264,916,2.264,917,5.477,918,4.754,919,4.429,920,5.659,921,2.264,922,4.429,923,3.575,924,4.754,925,2.264,926,5.821,927,4.754,928,2.997,929,4.754,930,3.575,931,2.264,932,4.043,933,5.031,934,4.754,935,5.659,936,2.997,937,3.575,938,4.429,939,2.997,940,4.429,941,2.997,942,4.754,943,4.754,944,2.264,945,4.429,946,1.965,947,1.307,948,1.307,949,1.307,950,1.307,951,1.307,952,1.307,953,1.307,954,1.307,955,1.307,956,1.307,957,1.307,958,1.307,959,1.307,960,1.307,961,1.307,962,1.307,963,1.307,964,1.307,965,1.307,966,1.307,967,1.307,968,1.307,969,1.307,970,1.307,971,1.307,972,1.307,973,1.307,974,1.307,975,1.307,976,1.307,977,1.307,978,1.307,979,1.307,980,1.307,981,1.307,982,1.307,983,1.307,984,1.307,985,1.307,986,1.307,987,1.307,988,1.307,989,1.307,990,1.307,991,1.307,992,1.307,993,1.307,994,1.307,995,1.307,996,1.307,997,1.307,998,1.307,999,1.307,1000,1.307,1001,1.307,1002,1.307,1003,1.307,1004,1.307,1005,1.307,1006,1.307,1007,1.307,1008,1.307,1009,1.307,1010,1.307,1011,1.307,1012,1.307,1013,1.307,1014,1.307,1015,1.307,1016,1.307,1017,1.307,1018,1.307,1019,1.307,1020,1.307,1021,1.307,1022,1.307,1023,1.307,1024,1.307,1025,1.307,1026,1.307,1027,1.307,1028,1.307,1029,1.307,1030,1.307,1031,1.307,1032,1.307,1033,1.307,1034,1.307]],["title/injectables/DeleteUploadByIdGQL.html",[34,0.97,1035,2.821]],["body/injectables/DeleteUploadByIdGQL.html",[3,0.206,4,0.253,5,0.206,7,0.327,8,0.557,14,2.672,21,1.191,22,0.015,24,0.491,27,0.491,29,0.343,30,1.849,32,0.012,33,0.012,34,1.645,36,2.273,38,3.488,40,4.194,41,0.876,42,0.839,43,3.681,47,0.839,50,2.878,51,3.038,52,0.606,60,0.516,267,1.202,1035,4.784,1036,4.784,1037,3.421,1038,5.838,1039,5.616,1040,5.52,1041,4.789,1042,4.789,1043,4.789,1044,4.789]],["title/interfaces/Env.html",[0,0.864,307,1.955]],["body/interfaces/Env.html",[0,1.18,2,1.544,3,0.201,4,0.247,5,0.201,7,0.319,8,0.549,21,1.352,22,0.015,24,0.575,29,0.247,32,0.012,33,0.012,307,3.265,341,3.36,419,5.789,1045,4.673,1046,6.436,1047,6.436,1048,5.789,1049,6.436,1050,6.436,1051,6.436,1052,6.177,1053,7.12,1054,6.177,1055,6.177]],["title/components/EventsComponent.html",[61,0.181,237,0.864]],["body/components/EventsComponent.html",[1,0.807,3,0.167,4,0.206,5,0.167,22,0.015,27,0.431,29,0.206,32,0.011,33,0.011,52,0.493,60,0.42,61,0.3,62,0.984,63,1.338,64,1.063,65,1.063,66,1.063,73,0.946,78,1.099,81,1.809,82,1.807,84,1.19,85,1.104,92,1.338,94,1.338,127,0.882,176,1.063,177,1.063,180,1.104,211,1.063,212,1.39,213,1.338,214,0.91,215,1.643,216,1.063,217,1.549,218,0.984,219,1.063,220,0.984,221,1.287,222,1.063,223,0.984,224,1.063,225,0.984,226,1.063,227,0.984,228,1.063,229,1.063,230,0.984,231,1.063,232,0.91,233,1.023,234,1.063,235,0.984,236,1.063,237,1.521,238,1.063,239,0.984,240,1.063,241,0.984,242,1.063,243,0.984,244,1.063,245,0.984,246,1.063,247,0.984,248,1.063,249,0.984,250,1.063,251,0.984,252,1.063,253,0.984,254,1.063,255,0.984,256,0.807,257,0.984,258,1.063,259,0.984,260,1.39,261,1.063,262,0.984,263,1.063,264,0.984,265,1.063,266,0.984,267,1.295,268,1.063,269,0.984,270,1.063,271,0.984,272,1.063,273,0.984,274,1.023,275,1.063,276,0.984,277,1.063,278,1.023,279,0.946,280,1.023,281,0.946,282,1.023,283,1.063,713,3.895,1056,3.897,1057,5.622,1058,5.874,1059,5.874]],["title/components/ExtensionInputComponent.html",[61,0.181,239,0.864]],["body/components/ExtensionInputComponent.html",[1,0.497,3,0.103,4,0.127,5,0.103,7,0.164,8,0.348,21,0.926,22,0.015,24,0.506,27,0.506,29,0.127,32,0.008,33,0.008,41,1.095,42,1.049,47,1.143,52,0.304,60,0.259,61,0.23,62,0.606,63,0.951,64,0.655,65,0.655,66,0.655,69,1.98,70,1.647,71,2.263,72,3.922,73,0.583,74,2.177,75,2.986,76,3.922,77,2.986,78,1.047,79,3.258,81,1.746,82,1.743,83,3.037,84,0.846,85,1.027,86,2.163,87,3.115,88,3.922,89,2.621,90,3.922,91,3.922,92,0.951,93,3.258,94,0.951,95,3.258,100,2.138,103,2.263,104,3.08,105,4.686,106,4.686,107,0.988,109,2.52,110,3.258,111,3.258,112,3.258,113,4.367,114,1.88,115,3.922,116,3.474,117,4.686,118,3.922,120,2.402,121,1.741,122,2.402,123,2.402,126,1.557,127,0.832,128,1.236,130,1.421,132,3.258,134,3.258,136,3.258,137,2.07,143,2.621,144,2.069,152,2.402,154,2.402,155,1.88,156,2.402,157,2.297,158,2.402,159,1.97,162,0.764,163,1.307,164,1.247,165,1.152,166,0.825,167,1.613,169,1.444,170,1.444,171,1.092,175,1.14,176,0.655,177,0.655,178,1.613,180,0.681,192,1.719,195,1.613,196,1.191,199,1.647,200,1.613,201,1.372,202,1.307,207,2.16,208,2.16,209,2.16,210,3.258,211,0.655,212,0.988,213,0.951,214,0.561,215,1.324,216,0.655,217,1.189,218,0.606,219,0.655,220,0.606,221,0.915,222,0.655,223,0.606,224,0.655,225,0.606,226,0.655,227,0.606,228,0.655,229,0.655,230,0.606,231,0.655,232,0.561,233,0.63,234,0.655,235,0.606,236,0.655,237,0.606,238,0.655,239,1.383,240,1.551,241,0.606,242,0.655,243,0.606,244,0.655,245,0.606,246,0.655,247,0.606,248,0.655,249,0.606,250,0.655,251,0.606,252,0.655,253,0.606,254,0.655,255,0.606,256,0.497,257,0.606,258,0.655,259,0.606,260,0.988,261,0.655,262,0.606,263,0.655,264,0.606,265,0.655,266,0.606,267,1.079,268,0.655,269,0.606,270,0.655,271,0.606,272,0.655,273,0.606,274,0.63,275,0.655,276,0.606,277,0.655,278,0.63,279,0.583,280,0.63,281,0.583,282,0.63,283,0.655,328,2.918,330,1.716,331,1.307,398,1.191,472,1.307,1060,6.565,1061,6.565,1062,3.115,1063,4.515,1064,2.433,1065,5.026,1066,2.768,1067,2.402,1068,3.622,1069,3.711,1070,3.622,1071,2.768,1072,2.768,1073,2.768,1074,2.768,1075,2.768,1076,2.402,1077,4.175,1078,2.402,1079,2.433,1080,2.768,1081,2.768,1082,2.16,1083,2.402,1084,2.402,1085,2.768]],["title/interfaces/FileParams.html",[0,0.864,1086,2.821]],["body/interfaces/FileParams.html",[0,1.297,2,1.697,3,0.22,4,0.271,5,0.22,7,0.351,8,0.581,21,1.34,22,0.015,24,0.544,29,0.271,32,0.013,33,0.013,127,0.972,128,1.715,1086,4.987,1087,5.135,1088,4.213,1089,6.642]],["title/interfaces/GetAccountModel.html",[0,0.864,1090,3.078]],["body/interfaces/GetAccountModel.html",[0,1.211,1,1.345,2,1.585,3,0.206,4,0.253,5,0.206,7,0.327,8,0.557,9,2.49,10,2.74,11,2.883,12,2.38,14,1.928,15,2.49,16,2.883,17,2.74,18,2.092,19,2.61,20,3.043,21,1.316,22,0.015,23,2.562,24,0.528,25,4.197,26,3.685,27,0.406,28,2.49,29,0.253,32,0.012,33,0.012,46,2.49,204,2.182,285,3.222,286,3.667,331,2.61,1090,5.225,1091,4.797,1092,5.225,1093,3.043]],["title/interfaces/GraphqlError.html",[0,0.864,339,2.821]],["body/interfaces/GraphqlError.html",[0,1.506,2,1.656,3,0.215,4,0.265,5,0.215,7,0.342,8,0.572,21,1.341,22,0.015,24,0.538,29,0.315,32,0.013,33,0.013,128,1.69,202,2.726,290,5.145,335,4.131,336,4.507,337,5.145,338,3.83,339,4.916,340,6.589,341,3.463]],["title/components/HeaderComponent.html",[61,0.181,241,0.864]],["body/components/HeaderComponent.html",[1,0.712,3,0.148,4,0.182,5,0.148,7,0.235,8,0.45,22,0.015,27,0.535,29,0.182,32,0.01,33,0.01,41,0.976,42,0.935,47,0.935,52,0.435,60,0.371,61,0.282,62,0.869,63,1.231,64,0.938,65,0.938,66,0.938,73,0.835,78,1.011,81,1.795,82,1.793,84,1.095,85,1.329,92,1.231,94,1.231,127,0.839,159,2.551,162,1.094,165,1.491,166,1.181,171,1.564,176,0.938,177,0.938,180,0.975,211,0.938,212,1.279,213,1.231,214,0.803,215,1.563,216,0.938,217,1.455,218,0.869,219,0.938,220,0.869,221,1.514,222,0.938,223,0.869,224,0.938,225,0.869,226,0.938,227,0.869,228,0.938,229,0.938,230,0.869,231,0.938,232,0.803,233,0.903,234,0.938,235,0.869,236,0.938,237,0.869,238,0.938,239,0.869,240,0.938,241,1.447,242,0.938,243,1.447,244,0.938,245,0.869,246,0.938,247,0.869,248,0.938,249,0.869,250,0.938,251,0.869,252,0.938,253,0.869,254,0.938,255,0.869,256,0.712,257,0.869,258,0.938,259,0.869,260,1.279,261,0.938,262,0.869,263,0.938,264,0.869,265,0.938,266,0.869,267,1.242,268,0.938,269,0.869,270,0.938,271,0.869,272,0.938,273,0.869,274,0.903,275,0.938,276,0.869,277,0.938,278,0.903,279,0.835,280,0.903,281,0.835,282,0.903,283,0.938,354,3.811,375,2.818,377,3.865,391,1.564,394,1.564,395,2.067,398,1.706,645,3.206,1094,3.44,1095,6.149,1096,4.798,1097,4.397,1098,4.078,1099,6.149,1100,5.404,1101,5.404,1102,6.149,1103,3.965,1104,3.965,1105,3.965,1106,3.965,1107,5.404]],["title/pipes/IFrameUrlPipe.html",[189,1.955,1108,2.821]],["body/pipes/IFrameUrlPipe.html",[3,0.209,4,0.257,5,0.209,21,1.198,22,0.015,23,2.421,24,0.411,27,0.495,29,0.257,32,0.012,33,0.012,46,3.038,47,0.851,52,0.614,60,0.524,70,2.209,73,1.18,78,1.262,84,1.367,107,1.325,126,1.734,127,0.92,128,1.377,130,1.325,189,3.343,317,2.033,529,3.713,1108,4.825,1109,3.713,1110,5.853,1111,4.858,1112,6.747,1113,4.369,1114,6.747,1115,5.599,1116,6.282,1117,4.004,1118,4.004,1119,5.853,1120,5.599]],["title/components/MeComponent.html",[61,0.181,243,0.864]],["body/components/MeComponent.html",[1,0.655,3,0.136,4,0.167,5,0.136,7,0.216,8,0.424,22,0.015,24,0.267,27,0.492,29,0.167,32,0.009,33,0.009,41,1.064,42,1.019,47,1.106,52,0.4,60,0.341,61,0.269,62,0.798,63,1.161,64,0.862,65,0.862,66,0.862,73,0.768,78,1.1,81,1.785,82,1.783,84,1.033,85,1.254,92,1.161,94,1.161,104,3.505,107,1.207,121,1.406,127,0.809,130,1.207,157,2.806,162,1.005,165,1.005,166,1.086,176,0.862,177,0.862,180,0.896,192,1.501,196,1.568,199,2.012,201,1.806,211,0.862,212,1.207,213,1.161,214,0.738,215,1.507,216,0.862,217,1.392,218,0.798,219,0.862,220,0.798,221,1.469,222,0.862,223,0.798,224,0.862,225,0.798,226,0.862,227,0.798,228,0.862,229,0.862,230,0.798,231,0.862,232,0.738,233,0.83,234,0.862,235,0.798,236,0.862,237,0.798,238,0.862,239,0.798,240,0.862,241,0.798,242,0.862,243,1.395,244,0.862,245,0.798,246,0.862,247,0.798,248,0.862,249,0.798,250,0.862,251,0.798,252,0.862,253,0.798,254,0.862,255,0.798,256,0.655,257,0.798,258,0.862,259,0.798,260,1.207,261,0.862,262,0.798,263,0.862,264,0.798,265,0.862,266,0.798,267,1.205,268,0.862,269,0.798,270,0.862,271,0.798,272,0.862,273,0.798,274,0.83,275,0.862,276,0.798,277,0.862,278,0.83,279,0.768,280,0.83,281,0.768,282,0.83,283,0.862,309,1.438,328,1.9,354,3.645,356,3.006,375,2.659,377,3.647,381,2.527,391,1.438,394,1.438,395,1.9,398,1.568,549,2.259,645,3.067,754,2.259,1064,2.971,1069,2.417,1079,2.971,1121,3.162,1122,5.099,1123,5.099,1124,4.589,1125,6.37,1126,6.37,1127,5.881,1128,5.102,1129,3.644,1130,3.644,1131,3.644,1132,3.644,1133,3.644,1134,3.644,1135,3.979,1136,3.644,1137,3.644,1138,2.844,1139,3.644,1140,3.644,1141,5.881,1142,3.162,1143,3.644,1144,5.099,1145,5.099,1146,3.644]],["title/components/MemoriesComponent.html",[61,0.181,245,0.864]],["body/components/MemoriesComponent.html",[1,0.807,3,0.167,4,0.206,5,0.167,22,0.015,27,0.431,29,0.206,32,0.011,33,0.011,52,0.493,60,0.42,61,0.3,62,0.984,63,1.338,64,1.063,65,1.063,66,1.063,73,0.946,78,1.099,81,1.809,82,1.807,84,1.19,85,1.104,92,1.338,94,1.338,127,0.882,176,1.063,177,1.063,180,1.104,211,1.063,212,1.39,213,1.338,214,0.91,215,1.643,216,1.063,217,1.549,218,0.984,219,1.063,220,0.984,221,1.287,222,1.063,223,0.984,224,1.063,225,0.984,226,1.063,227,0.984,228,1.063,229,1.063,230,0.984,231,1.063,232,0.91,233,1.023,234,1.063,235,0.984,236,1.063,237,0.984,238,1.063,239,0.984,240,1.063,241,0.984,242,1.063,243,0.984,244,1.063,245,1.521,246,1.063,247,0.984,248,1.063,249,0.984,250,1.063,251,0.984,252,1.063,253,0.984,254,1.063,255,0.984,256,0.807,257,0.984,258,1.063,259,0.984,260,1.39,261,1.063,262,0.984,263,1.063,264,0.984,265,1.063,266,0.984,267,1.295,268,1.063,269,0.984,270,1.063,271,0.984,272,1.063,273,0.984,274,1.023,275,1.063,276,0.984,277,1.063,278,1.023,279,0.946,280,1.023,281,0.946,282,1.023,283,1.063,713,3.895,1147,3.897,1148,5.152,1149,5.874,1150,5.874]],["title/components/MenuComponent.html",[61,0.181,247,0.864]],["body/components/MenuComponent.html",[1,0.778,3,0.161,4,0.198,5,0.161,7,0.256,8,0.477,22,0.015,27,0.502,29,0.198,32,0.011,33,0.011,41,0.687,42,0.658,47,0.658,52,0.475,60,0.405,61,0.294,62,0.948,63,1.305,64,1.024,65,1.024,66,1.024,73,0.912,78,1.073,81,1.805,82,1.803,84,1.161,85,1.41,92,1.305,94,1.305,127,0.869,176,1.024,177,1.024,180,1.064,211,1.024,212,1.357,213,1.305,214,0.877,215,1.619,216,1.024,217,1.521,218,0.948,219,1.024,220,0.948,221,1.256,222,1.024,223,0.948,224,1.024,225,0.948,226,1.024,227,0.948,228,1.024,229,1.024,230,0.948,231,1.024,232,0.877,233,0.986,234,1.024,235,0.948,236,1.024,237,0.948,238,1.024,239,0.948,240,1.024,241,0.948,242,1.024,243,0.948,244,1.024,245,0.948,246,1.024,247,1.499,248,1.024,249,1.499,250,1.024,251,0.948,252,1.024,253,0.948,254,1.024,255,0.948,256,0.778,257,0.948,258,1.024,259,0.948,260,1.357,261,1.024,262,0.948,263,1.024,264,0.948,265,1.024,266,0.948,267,1.279,268,1.024,269,0.948,270,1.024,271,0.948,272,1.024,273,0.948,274,0.986,275,1.024,276,0.948,277,1.024,278,0.986,279,0.912,280,0.986,281,0.912,282,0.986,283,1.024,307,2.841,407,3.756,1048,5.555,1151,3.756,1152,5.577,1153,5.733,1154,5.733,1155,5.733,1156,4.329]],["title/components/NavComponent.html",[61,0.181,249,0.864]],["body/components/NavComponent.html",[1,0.638,2,1.017,3,0.132,4,0.163,5,0.132,7,0.21,8,0.417,22,0.015,24,0.26,27,0.505,29,0.163,30,1.189,32,0.009,33,0.009,41,0.999,42,0.957,46,3.102,47,1.009,52,0.389,60,0.332,61,0.266,62,0.777,63,1.14,64,0.84,65,0.84,66,0.84,73,0.748,78,1.242,81,1.781,82,1.779,83,2.254,84,1.014,85,1.231,92,1.14,94,1.14,107,1.184,114,2.254,121,0.979,127,0.8,130,0.84,137,2.061,159,2.362,162,0.979,165,0.979,166,1.057,176,0.84,177,0.84,180,0.873,211,0.84,212,1.184,213,1.14,214,0.719,215,1.49,216,0.84,217,1.372,218,0.777,219,0.84,220,0.777,221,1.454,222,0.84,223,0.777,224,0.84,225,0.777,226,0.84,227,0.777,228,0.84,229,0.84,230,0.777,231,0.84,232,0.719,233,0.808,234,0.84,235,0.777,236,0.84,237,0.777,238,0.84,239,0.777,240,0.84,241,0.777,242,0.84,243,0.777,244,0.84,245,0.777,246,0.84,247,0.777,248,0.84,249,1.379,250,0.84,251,0.777,252,0.84,253,0.777,254,0.84,255,0.777,256,0.638,257,0.777,258,0.84,259,0.777,260,1.184,261,0.84,262,0.777,263,0.84,264,0.777,265,0.84,266,0.777,267,1.193,268,0.84,269,0.777,270,0.84,271,0.777,272,0.84,273,0.777,274,0.808,275,0.84,276,0.777,277,0.84,278,0.808,279,1.054,280,0.808,281,0.748,282,0.808,283,0.84,354,3.593,375,2.61,377,3.579,391,1.4,394,1.4,395,1.85,398,1.527,409,4.342,439,3.079,446,3.592,645,3.023,710,2.769,718,5.462,1057,2.769,1148,2.538,1157,2.769,1158,5.797,1159,5.797,1160,5.797,1161,5.004,1162,5.004,1163,5.797,1164,4.524,1165,3.549,1166,3.549,1167,3.549,1168,4.524,1169,3.549,1170,3.549,1171,4.27,1172,5.375,1173,3.079,1174,2.769,1175,3.079,1176,3.079,1177,3.905,1178,2.769,1179,3.079,1180,3.079,1181,3.079,1182,3.549,1183,5.004,1184,4.342,1185,5.004]],["title/components/NotFoundComponent.html",[61,0.181,251,0.864]],["body/components/NotFoundComponent.html",[1,0.737,3,0.153,4,0.188,5,0.153,7,0.243,21,0.915,22,0.015,24,0.406,27,0.459,29,0.188,32,0.01,33,0.01,41,0.877,42,0.841,47,0.841,52,0.45,60,0.383,61,0.287,62,0.898,63,1.259,64,0.97,65,0.97,66,0.97,73,0.864,78,1.253,81,1.799,82,1.797,83,2.817,84,1.12,85,1.36,92,1.259,94,1.259,114,2.49,127,0.85,137,2.277,176,0.97,177,0.97,180,1.008,211,0.97,212,1.308,213,1.259,214,0.831,215,1.584,216,0.97,217,1.48,218,0.898,219,0.97,220,0.898,221,1.211,222,0.97,223,0.898,224,0.97,225,0.898,226,0.97,227,0.898,228,0.97,229,0.97,230,0.898,231,0.97,232,0.831,233,0.934,234,0.97,235,0.898,236,0.97,237,0.898,238,0.97,239,0.898,240,0.97,241,0.898,242,0.97,243,0.898,244,0.97,245,0.898,246,0.97,247,0.898,248,0.97,249,0.898,250,0.97,251,1.467,252,0.97,253,0.898,254,0.97,255,0.898,256,0.737,257,0.898,258,0.97,259,0.898,260,1.308,261,0.97,262,0.898,263,0.97,264,0.898,265,0.97,266,0.898,267,1.256,268,0.97,269,0.898,270,0.97,271,0.898,272,0.97,273,0.898,274,0.934,275,0.97,276,0.898,277,0.97,278,0.934,279,0.864,280,0.934,281,0.864,282,0.934,283,0.97,391,1.618,1096,4.882,1171,3.878,1186,5.427,1187,5.427,1188,3.558,1189,5.529,1190,5.529,1191,5.529,1192,6.256,1193,4.101,1194,4.101,1195,4.101,1196,4.797,1197,5.529]],["title/components/OopsComponent.html",[61,0.181,253,0.864]],["body/components/OopsComponent.html",[1,0.793,3,0.164,4,0.202,5,0.164,22,0.015,27,0.426,29,0.202,32,0.011,33,0.011,52,0.484,60,0.413,61,0.297,62,0.967,63,1.323,64,1.045,65,1.045,66,1.045,73,0.93,78,1.087,81,1.807,82,1.805,84,1.177,85,1.086,92,1.323,94,1.323,127,0.876,176,1.045,177,1.045,180,1.086,211,1.045,212,1.374,213,1.323,214,0.894,215,1.632,216,1.045,217,1.536,218,0.967,219,1.045,220,0.967,221,1.272,222,1.045,223,0.967,224,1.045,225,0.967,226,1.045,227,0.967,228,1.045,229,1.045,230,0.967,231,1.045,232,0.894,233,1.005,234,1.045,235,0.967,236,1.045,237,0.967,238,1.045,239,0.967,240,1.045,241,0.967,242,1.045,243,0.967,244,1.045,245,0.967,246,1.045,247,0.967,248,1.045,249,0.967,250,1.045,251,0.967,252,1.045,253,1.511,254,1.045,255,0.967,256,0.793,257,0.967,258,1.045,259,0.967,260,1.374,261,1.045,262,0.967,263,1.045,264,0.967,265,1.045,266,0.967,267,1.287,268,1.045,269,0.967,270,1.045,271,0.967,272,1.045,273,0.967,274,1.005,275,1.045,276,0.967,277,1.045,278,1.005,279,0.93,280,1.005,281,0.93,282,1.005,283,1.045,1198,3.83,1199,6.491,1200,5.808,1201,5.808]],["title/components/PermissionInputComponent.html",[61,0.181,255,0.864]],["body/components/PermissionInputComponent.html",[1,0.552,3,0.114,4,0.141,5,0.114,7,0.182,8,0.376,21,1.086,22,0.015,24,0.521,27,0.481,29,0.141,32,0.008,33,0.008,41,1.076,42,1.031,47,1.125,52,0.337,60,0.287,61,0.245,62,0.673,63,1.027,64,0.727,65,0.727,66,0.727,69,2.197,70,1.78,72,4.171,73,0.647,74,2.352,75,3.226,76,4.171,77,3.226,78,1.102,79,3.52,81,1.762,82,1.759,83,3.196,84,0.914,85,1.109,86,2.301,87,3.313,88,4.171,89,2.788,90,4.171,91,4.171,92,1.027,93,3.52,94,1.027,95,3.52,105,4.896,106,4.896,107,1.067,110,3.52,111,3.52,112,3.52,113,4.597,114,2.031,115,4.171,116,3.61,117,4.896,118,4.171,121,1.731,126,1.656,127,0.861,128,1.314,130,1.394,132,3.52,134,3.52,136,3.52,137,2.201,159,2.129,163,1.45,165,1.244,166,0.915,171,1.212,175,1.265,176,0.727,177,0.727,180,0.755,207,2.397,208,2.397,209,2.397,210,3.52,211,0.727,212,1.067,213,1.027,214,0.622,215,1.394,216,0.727,217,1.265,218,0.673,219,0.727,220,0.673,221,0.988,222,0.727,223,0.673,224,0.727,225,0.673,226,0.727,227,0.673,228,0.727,229,0.727,230,0.673,231,0.727,232,0.622,233,0.699,234,0.727,235,0.673,236,0.727,237,0.673,238,0.727,239,0.673,240,0.727,241,0.673,242,0.727,243,0.673,244,0.727,245,0.673,246,0.727,247,0.673,248,0.727,249,0.673,250,0.727,251,0.673,252,0.727,253,0.673,254,0.727,255,1.437,256,1.218,257,0.673,258,0.727,259,0.673,260,1.067,261,0.727,262,0.673,263,0.727,264,0.673,265,0.727,266,0.673,267,1.128,268,0.727,269,0.673,270,0.727,271,0.673,272,0.727,273,0.673,274,0.699,275,0.727,276,0.673,277,0.727,278,0.699,279,0.647,280,0.699,281,0.647,282,0.699,283,0.727,328,2.788,1067,2.665,1068,3.914,1069,3.906,1070,3.914,1076,2.665,1078,2.665,1202,6.483,1203,6.483,1204,2.942,1205,3.072,1206,3.072,1207,3.072,1208,3.072,1209,3.072,1210,3.072,1211,3.072,1212,3.072,1213,3.072,1214,3.072]],["title/components/ProfileComponent.html",[61,0.181,257,0.864]],["body/components/ProfileComponent.html",[1,0.855,2,0.588,3,0.076,4,0.094,5,0.076,7,0.122,8,0.275,9,2.51,10,1.017,13,1.361,16,2.164,17,3.021,18,0.776,19,0.969,21,0.922,22,0.015,23,2.081,24,0.462,25,1.926,26,2.87,27,0.534,28,0.924,29,0.094,30,1.39,31,1.468,32,0.006,33,0.006,35,3.155,39,2.418,41,1.137,42,1.089,47,1.129,52,0.225,60,0.192,61,0.19,62,0.45,63,0.753,64,0.486,65,0.486,66,0.486,70,1.304,71,1.869,73,0.432,74,1.724,78,0.618,81,1.693,82,1.688,84,0.67,85,0.813,86,1.786,92,0.753,94,0.753,100,2.355,103,1.869,104,2.618,107,0.782,109,2.142,121,1.145,126,1.024,127,0.774,128,0.813,130,1.126,137,0.845,140,2.87,143,3.282,144,2.762,147,2.572,155,1.488,157,1.819,162,0.566,164,0.924,165,1.145,166,0.611,167,1.196,168,1.468,169,1.07,170,1.07,171,0.81,174,0.81,175,0.845,176,0.486,177,0.486,178,1.196,180,0.505,185,1.781,186,1.602,187,1.781,192,1.709,195,1.926,196,1.422,197,3.455,199,1.304,200,1.926,201,1.638,202,1.56,204,0.81,211,0.486,212,0.782,213,0.753,214,0.416,215,1.126,216,0.486,217,0.982,218,0.45,219,0.486,220,0.45,221,1.143,222,0.486,223,0.45,224,0.486,225,0.45,226,0.486,227,0.724,228,0.782,229,0.486,230,0.45,231,0.486,232,0.416,233,0.467,234,0.486,235,0.45,236,0.486,237,0.45,238,0.486,239,0.45,240,0.486,241,0.45,242,0.486,243,0.45,244,0.486,245,0.45,246,0.486,247,0.45,248,0.486,249,0.45,250,0.486,251,0.45,252,0.486,253,0.45,254,0.486,255,0.45,256,0.369,257,1.042,258,0.486,259,0.45,260,0.782,261,0.486,262,0.45,263,0.486,264,0.45,265,0.486,266,0.45,267,0.937,268,0.486,269,0.45,270,0.486,271,0.45,272,0.486,273,0.45,274,0.467,275,0.486,276,0.45,277,0.486,278,0.467,279,0.432,280,0.467,281,0.432,282,0.467,283,0.486,309,0.81,317,2.024,328,1.07,331,1.958,347,3.238,356,2.245,362,1.958,367,1.07,375,1.724,381,1.638,386,2.579,391,0.81,394,0.81,398,0.883,403,1.468,416,1.196,425,1.361,428,1.07,446,2.164,457,2.364,461,1.468,472,1.958,542,3.6,600,1.361,642,1.602,645,2.164,646,2.968,649,1.781,653,4.127,675,2.192,680,1.196,681,1.272,1069,1.361,1082,1.602,1084,1.781,1093,2.284,1097,2.968,1098,2.752,1109,1.361,1117,1.468,1118,1.468,1124,3.238,1135,2.579,1138,1.602,1171,2.949,1184,2.868,1215,1.602,1216,3.6,1217,5.289,1218,3.6,1219,2.968,1220,2.968,1221,3.305,1222,3.305,1223,6.097,1224,3.402,1225,4.127,1226,4.15,1227,3.238,1228,3.305,1229,2.052,1230,2.052,1231,3.305,1232,2.052,1233,3.6,1234,2.052,1235,3.305,1236,2.052,1237,3.305,1238,3.305,1239,3.305,1240,3.305,1241,3.305,1242,4.15,1243,2.052,1244,3.305,1245,3.305,1246,3.305,1247,2.052,1248,4.15,1249,3.305,1250,2.052,1251,2.052,1252,2.868,1253,2.052,1254,3.305,1255,2.052,1256,2.052,1257,3.305,1258,2.052,1259,2.052,1260,2.052,1261,2.052,1262,2.052,1263,2.868,1264,2.052,1265,2.052,1266,2.052,1267,2.052,1268,3.305,1269,2.052,1270,1.361,1271,1.781,1272,3.305,1273,2.052,1274,1.602,1275,2.052,1276,1.602,1277,1.781,1278,1.781,1279,1.781,1280,3.305,1281,2.052,1282,2.052,1283,2.052,1284,2.052,1285,1.781,1286,2.052,1287,2.052,1288,2.052,1289,2.052,1290,2.052,1291,2.052,1292,2.052,1293,2.052,1294,2.052,1295,2.052,1296,2.052,1297,2.052,1298,2.052,1299,2.052,1300,2.052,1301,1.602,1302,2.052,1303,2.052,1304,2.052,1305,2.052,1306,2.052,1307,2.052,1308,1.781,1309,2.052,1310,2.052,1311,5.574,1312,6.097,1313,3.305,1314,3.305,1315,3.305,1316,4.757,1317,2.868,1318,2.868,1319,3.305]],["title/injectables/PwaService.html",[34,0.97,396,2.616]],["body/injectables/PwaService.html",[3,0.222,4,0.211,5,0.171,7,0.272,8,0.496,22,0.015,27,0.546,29,0.211,32,0.011,33,0.011,34,1.467,36,1.893,41,1.05,42,1.006,47,1.065,52,0.504,58,2.679,59,2.53,60,0.43,100,2.402,103,2.981,107,1.411,130,1.088,155,2.686,159,2.17,162,1.268,164,2.07,165,1.268,166,1.37,174,1.814,189,2.278,192,2.456,197,2.85,199,1.814,200,3.476,201,2.955,202,2.815,232,0.931,309,1.814,313,3.588,317,1.669,396,3.955,472,2.17,547,2.85,548,4.103,551,4.654,600,3.049,680,2.679,681,2.85,750,3.588,753,3.588,1225,6.077,1263,5.174,1271,3.989,1308,3.989,1320,3.989,1321,6.62,1322,6.077,1323,4.598,1324,4.598,1325,4.598,1326,5.964,1327,4.598,1328,4.598,1329,3.989,1330,3.588,1331,4.598,1332,4.598,1333,4.598,1334,4.598,1335,7.005,1336,6.62,1337,4.598,1338,4.598,1339,4.598,1340,4.598,1341,3.588,1342,4.598,1343,3.989,1344,4.598,1345,4.598,1346,4.598,1347,4.598]],["title/interfaces/Route.html",[0,0.864,446,2.057]],["body/interfaces/Route.html",[0,1.249,2,1.634,3,0.212,4,0.261,5,0.212,7,0.338,8,0.568,21,1.332,22,0.015,24,0.567,29,0.261,32,0.012,33,0.012,46,3.406,128,1.86,137,3.232,446,3.557,1171,4.688,1172,5.901,1174,5.901,1177,5.901,1348,4.947]],["title/directives/ScrollNearEndDirective.html",[214,0.799,281,0.831]],["body/directives/ScrollNearEndDirective.html",[3,0.156,4,0.192,5,0.156,7,0.248,8,0.467,22,0.015,24,0.531,27,0.307,29,0.192,30,2.427,32,0.01,33,0.01,41,0.664,42,0.636,47,1.125,52,0.459,60,0.391,61,0.192,70,2.211,71,2.846,73,0.881,78,1.049,81,1.228,83,2.524,84,1.135,100,1.957,107,1.326,109,3.04,114,2.524,121,1.743,126,1.736,127,0.712,128,1.378,130,1.326,213,1.276,214,1.135,280,0.953,281,1.181,282,1.276,309,1.651,330,4.184,341,1.974,357,4.862,359,5.483,362,1.974,367,2.181,425,2.774,529,2.774,1064,3.266,1079,3.266,1083,4.862,1128,5.856,1349,6.523,1350,6.676,1351,3.629,1352,7.616,1353,5.604,1354,7.038,1355,5.604,1356,5.604,1357,4.183,1358,5.856,1359,5.604,1360,5.604,1361,4.183,1362,5.604,1363,5.604,1364,5.604,1365,6.75,1366,4.183,1367,4.183,1368,6.319,1369,5.604,1370,4.183,1371,5.604,1372,6.319,1373,5.604,1374,4.183,1375,4.183,1376,2.992,1377,3.629,1378,4.183,1379,4.183,1380,5.604,1381,4.183,1382,5.604,1383,4.183,1384,4.183,1385,4.183,1386,6.319,1387,4.183,1388,4.183,1389,4.183,1390,4.183,1391,3.629,1392,5.604,1393,4.183,1394,5.604,1395,4.183,1396,4.183,1397,5.604,1398,4.183,1399,4.183,1400,4.183,1401,4.183,1402,4.183,1403,4.183,1404,5.604,1405,4.183,1406,4.183,1407,5.604]],["title/injectables/ScrollService.html",[34,0.97,397,2.616]],["body/injectables/ScrollService.html",[3,0.191,4,0.235,5,0.191,7,0.303,8,0.532,22,0.015,24,0.535,27,0.511,29,0.235,32,0.012,33,0.012,34,1.57,36,2.109,41,1.013,42,0.971,47,1.058,52,0.562,58,2.984,59,2.817,60,0.479,100,2.156,107,1.511,121,1.412,126,1.586,127,0.65,128,1.259,130,1.212,137,2.867,140,3.83,143,3.63,144,3.449,159,3.014,168,3.662,169,2.67,170,2.67,172,4.442,174,2.02,191,5.541,196,2.749,202,2.416,204,2.52,341,3.285,366,6.507,397,4.235,421,6.039,731,3.995,734,5.687,1408,3.995,1409,7.648,1410,5.12,1411,5.12,1412,5.12,1413,6.387,1414,6.387,1415,6.387,1416,5.12,1417,4.442]],["title/pipes/SexPipe.html",[189,1.955,1220,2.821]],["body/pipes/SexPipe.html",[2,1.574,3,0.204,4,0.252,5,0.204,17,3.854,21,1.103,22,0.015,23,2.312,24,0.403,27,0.489,29,0.252,32,0.012,33,0.012,41,0.871,42,1.014,47,0.835,52,0.602,60,0.513,70,2.166,73,1.157,78,1.247,84,1.351,107,1.299,126,1.7,127,0.912,128,1.35,130,1.299,189,3.304,317,2.607,331,2.591,547,3.403,548,4.133,1093,3.021,1109,3.641,1113,4.284,1119,5.784,1220,4.768,1418,4.763,1419,6.667,1420,5.491]],["title/components/SignInComponent.html",[61,0.181,259,0.864]],["body/components/SignInComponent.html",[1,0.473,3,0.098,4,0.121,5,0.098,7,0.156,8,0.335,18,0.997,21,0.807,22,0.015,23,1.757,24,0.473,27,0.499,29,0.121,32,0.007,33,0.007,41,1.08,42,1.035,47,1.124,52,0.289,60,0.246,61,0.223,62,0.577,63,0.916,64,0.623,65,0.623,66,0.623,70,1.586,71,2.196,73,0.555,78,0.752,81,1.738,82,1.735,83,1.811,84,0.815,85,0.989,86,2.099,89,2.543,92,0.916,94,0.916,100,2.34,103,2.196,107,0.952,109,2.457,114,1.811,116,3.234,121,1.777,126,0.816,127,0.897,128,0.648,130,1.291,140,2.683,155,1.811,162,0.727,163,1.243,164,1.186,165,0.727,166,0.785,174,1.04,175,1.085,176,0.623,177,0.623,180,0.648,192,2.008,196,1.134,199,1.04,211,0.623,212,0.952,213,0.916,214,0.534,215,1.291,216,0.623,217,1.154,218,0.577,219,0.623,220,0.577,221,1.287,222,0.623,223,0.577,224,0.623,225,0.577,226,0.623,227,0.577,228,0.623,229,0.623,230,0.577,231,0.623,232,0.534,233,0.6,234,0.623,235,0.577,236,0.623,237,0.577,238,0.623,239,0.577,240,0.623,241,0.577,242,0.623,243,0.577,244,0.623,245,0.577,246,0.623,247,0.577,248,0.623,249,0.577,250,0.623,251,0.577,252,0.623,253,0.577,254,0.623,255,0.577,256,0.473,257,0.577,258,0.623,259,1.195,260,1.572,261,0.623,262,0.577,263,0.623,264,0.577,265,0.623,266,0.577,267,1.056,268,0.623,269,0.577,270,0.623,271,0.577,272,0.623,273,0.577,274,0.6,275,0.623,276,0.577,277,0.623,278,0.6,279,0.555,280,0.6,281,0.555,282,0.6,283,0.623,309,2.74,317,1.46,343,4.23,344,3.234,351,2.683,356,2.575,358,3.234,360,4.734,361,3.619,362,1.243,367,2.845,375,2.097,381,1.992,385,3.023,391,1.04,392,2.286,393,2.056,394,1.04,398,1.134,412,2.286,415,1.747,416,2.842,428,1.374,429,2.876,435,1.747,445,3.23,452,3.234,455,2.876,469,3.138,470,2.056,472,1.243,473,2.056,475,1.884,481,3.805,488,5.815,492,3.138,501,4.258,504,3.805,506,4.258,507,2.056,508,4.258,510,3.138,517,3.839,520,2.876,526,1.884,529,1.747,531,2.056,532,2.056,533,2.876,535,3.138,537,2.056,538,2.056,550,3.138,556,2.056,557,2.056,558,2.056,566,3.489,629,2.286,754,1.633,1358,4.23,1421,5.815,1422,2.286,1423,4.021,1424,4.021,1425,4.876,1426,4.876,1427,2.635,1428,2.635,1429,4.021,1430,2.635,1431,4.021,1432,2.635,1433,4.021,1434,2.635,1435,2.635,1436,2.635,1437,2.635,1438,4.23,1439,2.635,1440,2.635,1441,2.635,1442,2.635,1443,2.635,1444,4.021,1445,2.635,1446,4.021,1447,2.635,1448,2.286,1449,3.489,1450,2.635,1451,2.635,1452,2.635,1453,2.635,1454,2.635,1455,2.635,1456,2.635,1457,2.635,1458,2.635,1459,2.635,1460,2.056,1461,2.286,1462,2.286,1463,2.286,1464,2.286,1465,2.286,1466,2.286,1467,3.489,1468,2.635]],["title/components/SignUpComponent.html",[61,0.181,262,0.864]],["body/components/SignUpComponent.html",[1,0.411,3,0.085,4,0.105,5,0.085,7,0.135,8,0.3,10,2.725,11,2.868,12,0.983,15,1.029,18,0.864,21,0.737,22,0.015,23,1.628,24,0.449,27,0.499,29,0.105,32,0.007,33,0.007,41,1.059,42,1.015,47,1.092,52,0.251,60,0.214,61,0.204,62,0.5,63,0.82,64,0.541,65,0.541,66,0.541,70,1.42,71,2.006,73,0.481,78,0.834,81,1.714,82,1.709,83,1.621,84,0.729,85,0.885,86,1.917,89,2.323,92,0.82,94,0.82,100,2.225,103,2.006,107,0.852,109,2.276,114,1.621,116,3.588,121,1.612,126,0.708,127,0.892,128,0.562,130,1.196,140,2.451,155,1.621,159,1.699,162,0.63,163,1.078,164,1.029,165,1.229,166,0.681,171,0.901,174,0.901,175,0.941,176,0.541,177,0.541,180,0.562,192,2.265,196,0.983,199,1.42,200,2.596,201,2.207,202,1.078,204,1.42,211,0.541,212,0.852,213,0.82,214,0.463,215,1.196,216,0.541,217,1.054,218,0.5,219,0.541,220,0.5,221,1.205,222,0.541,223,0.5,224,0.541,225,0.5,226,0.541,227,0.5,228,0.541,229,0.541,230,0.5,231,0.541,232,0.463,233,0.52,234,0.541,235,0.5,236,0.541,237,0.5,238,0.541,239,0.5,240,0.541,241,0.5,242,0.541,243,0.5,244,0.541,245,0.5,246,0.541,247,0.5,248,0.541,249,0.5,250,0.541,251,0.5,252,0.541,253,0.5,254,0.541,255,0.5,256,0.411,257,0.5,258,0.541,259,0.5,260,1.499,261,0.541,262,1.107,263,0.541,264,0.5,265,0.541,266,0.5,267,0.988,268,0.541,269,0.5,270,0.541,271,0.5,272,0.541,273,0.5,274,0.52,275,0.541,276,0.5,277,0.541,278,0.52,279,0.481,280,0.52,281,0.481,282,0.52,283,0.541,304,1.416,309,2.965,317,1.997,344,2.954,347,3.476,351,2.451,356,2.386,358,2.954,361,3.352,362,1.078,367,1.877,375,1.877,381,1.784,385,2.761,390,2.809,391,0.901,394,0.901,398,0.983,415,1.515,416,2.098,428,1.191,429,1.634,435,1.515,445,3.047,452,2.954,455,2.575,469,3.945,470,1.783,472,1.078,473,1.783,475,1.634,481,3.476,490,5.661,492,2.809,501,3.945,504,3.476,506,3.945,507,1.783,508,3.945,510,2.809,517,4.571,518,5.305,520,2.575,526,1.634,529,1.515,531,1.783,532,2.809,533,3.186,534,1.982,535,4.292,537,1.783,538,1.783,550,3.945,556,1.783,557,1.783,558,1.783,568,3.123,754,1.416,759,1.515,1093,1.981,1421,5.661,1438,3.865,1449,3.123,1461,1.982,1462,1.982,1463,1.982,1464,1.982,1465,1.982,1466,3.123,1467,4.386,1469,1.982,1470,3.123,1471,4.455,1472,3.6,1473,3.6,1474,4.455,1475,4.455,1476,2.284,1477,2.284,1478,2.284,1479,3.6,1480,2.284,1481,3.6,1482,2.284,1483,2.284,1484,2.284,1485,2.284,1486,2.284,1487,5.055,1488,3.6,1489,4.455,1490,4.455,1491,4.455,1492,2.284,1493,2.284,1494,2.284,1495,2.284,1496,2.284,1497,2.284,1498,2.284,1499,3.123,1500,2.284,1501,2.284,1502,2.284,1503,2.284,1504,2.284,1505,2.284,1506,2.284,1507,3.6,1508,3.6,1509,2.284,1510,2.284,1511,4.386,1512,3.6,1513,3.6,1514,3.6,1515,2.284,1516,2.284,1517,2.284,1518,2.284,1519,2.284,1520,2.284,1521,2.284,1522,2.284,1523,2.284,1524,2.284,1525,2.284]],["title/components/TimelinesComponent.html",[61,0.181,264,0.864]],["body/components/TimelinesComponent.html",[1,0.807,3,0.167,4,0.206,5,0.167,22,0.015,27,0.431,29,0.206,32,0.011,33,0.011,52,0.493,60,0.42,61,0.3,62,0.984,63,1.338,64,1.063,65,1.063,66,1.063,73,0.946,78,1.099,81,1.809,82,1.807,84,1.19,85,1.104,92,1.338,94,1.338,127,0.882,176,1.063,177,1.063,180,1.104,211,1.063,212,1.39,213,1.338,214,0.91,215,1.643,216,1.063,217,1.549,218,0.984,219,1.063,220,0.984,221,1.287,222,1.063,223,0.984,224,1.063,225,0.984,226,1.063,227,0.984,228,1.063,229,1.063,230,0.984,231,1.063,232,0.91,233,1.023,234,1.063,235,0.984,236,1.063,237,0.984,238,1.063,239,0.984,240,1.063,241,0.984,242,1.063,243,0.984,244,1.063,245,0.984,246,1.063,247,0.984,248,1.063,249,0.984,250,1.063,251,0.984,252,1.063,253,0.984,254,1.063,255,0.984,256,0.807,257,0.984,258,1.063,259,0.984,260,1.39,261,1.063,262,0.984,263,1.063,264,1.521,265,1.063,266,0.984,267,1.295,268,1.063,269,0.984,270,1.063,271,0.984,272,1.063,273,0.984,274,1.023,275,1.063,276,0.984,277,1.063,278,1.023,279,0.946,280,1.023,281,0.946,282,1.023,283,1.063,713,3.895,1178,5.622,1526,3.897,1527,5.874,1528,5.874]],["title/injectables/UpdateUploadByIdGQL.html",[34,0.97,1529,2.821]],["body/injectables/UpdateUploadByIdGQL.html",[3,0.195,4,0.239,5,0.195,7,0.309,8,0.538,14,2.68,21,1.303,22,0.015,24,0.474,27,0.515,28,2.352,29,0.336,30,1.75,32,0.012,33,0.012,34,1.59,36,2.151,38,3.372,40,4.093,41,0.829,42,0.794,43,3.558,46,2.912,47,0.794,50,2.724,51,2.874,52,0.573,60,0.488,127,0.892,256,1.262,267,1.162,472,3.052,1037,3.238,1038,5.727,1204,3.865,1529,4.625,1530,4.625,1531,5.481,1532,5.223,1533,4.531,1534,4.531,1535,4.353,1536,4.531,1537,4.531,1538,4.531,1539,4.076]],["title/components/UploadActionsComponent.html",[61,0.181,266,0.864]],["body/components/UploadActionsComponent.html",[1,0.653,2,1.041,3,0.135,4,0.166,5,0.135,7,0.215,8,0.423,22,0.015,27,0.491,29,0.166,32,0.009,33,0.009,41,0.807,42,0.773,46,3.015,47,1.138,52,0.398,60,0.34,61,0.269,62,0.795,63,1.158,64,0.859,65,0.859,66,0.859,73,0.765,78,1.098,81,1.784,82,1.782,83,2.643,84,1.03,85,1.251,92,1.158,94,1.158,114,2.29,121,1.403,127,0.808,165,1.403,166,1.082,176,0.859,177,0.859,180,0.893,211,0.859,212,1.204,213,1.158,214,0.736,215,1.505,216,0.859,217,1.389,218,0.795,219,0.859,220,0.795,221,1.114,222,0.859,223,0.795,224,0.859,225,0.795,226,0.859,227,0.795,228,0.859,229,0.859,230,0.795,231,0.859,232,0.736,233,0.827,234,0.859,235,0.795,236,0.859,237,0.795,238,0.859,239,0.795,240,0.859,241,0.795,242,0.859,243,0.795,244,0.859,245,0.795,246,0.859,247,0.795,248,0.859,249,0.795,250,0.859,251,0.795,252,0.859,253,0.795,254,0.859,255,0.795,256,0.653,257,0.795,258,0.859,259,0.795,260,1.204,261,0.859,262,0.795,263,0.859,264,0.795,265,0.859,266,1.393,267,1.36,268,0.859,269,0.795,270,0.859,271,0.795,272,0.859,273,0.795,274,0.827,275,0.859,276,0.795,277,0.859,278,0.827,279,0.765,280,0.827,281,0.765,282,0.827,283,0.859,388,2.408,389,4.218,549,2.251,645,3.061,646,4.198,946,4.413,1064,2.964,1079,3.706,1540,4.69,1541,5.411,1542,3.151,1543,4.963,1544,5.87,1545,5.086,1546,5.086,1547,5.87,1548,5.809,1549,5.809,1550,6.696,1551,5.086,1552,5.086,1553,5.086,1554,5.086,1555,4.198,1556,3.631,1557,5.086,1558,3.631,1559,2.408,1560,3.151,1561,5.086,1562,5.086,1563,5.086,1564,5.086]],["title/interfaces/UploadActionsParams.html",[0,0.864,1559,2.616]],["body/interfaces/UploadActionsParams.html",[0,1.287,2,1.684,3,0.219,4,0.269,5,0.219,7,0.348,8,0.578,22,0.015,24,0.542,29,0.269,32,0.013,33,0.013,128,1.943,137,3.33,201,3.784,1376,5.462,1559,4.604,1565,5.096,1566,5.462]],["title/injectables/UploadByIdGQL.html",[34,0.97,1567,2.821]],["body/injectables/UploadByIdGQL.html",[3,0.185,4,0.227,5,0.185,7,0.294,8,0.521,9,2.818,12,2.693,14,2.742,15,2.818,18,2.368,19,2.953,21,1.135,22,0.015,24,0.503,27,0.503,29,0.33,32,0.011,33,0.011,34,1.539,36,2.041,38,3.263,39,4.329,40,3.997,41,0.786,42,0.754,43,3.774,46,3.416,47,0.754,49,3.879,50,2.585,51,2.728,52,0.544,54,1.875,60,0.464,127,0.795,267,0.891,285,3.647,286,4.15,287,2.577,338,4.15,1037,3.072,1088,3.444,1204,3.444,1535,3.879,1567,4.476,1568,4.476,1569,6.258,1570,6.258,1571,5.429,1572,5.429,1573,3.879,1574,4.957,1575,4.3,1576,4.3,1577,4.3]],["title/injectables/UploadExtensionsGQL.html",[34,0.97,1063,2.821]],["body/injectables/UploadExtensionsGQL.html",[3,0.201,4,0.247,5,0.201,7,0.32,8,0.549,21,0.893,22,0.015,24,0.523,27,0.523,29,0.34,32,0.012,33,0.012,34,1.622,36,2.222,38,3.44,39,4.437,40,4.152,41,0.856,42,0.82,43,3.921,47,0.82,49,4.089,50,2.813,51,2.969,52,0.592,60,0.505,178,3.144,328,3.871,330,4.601,1063,4.718,1568,4.718,1578,4.21,1579,6.597,1580,5.792,1581,6.597,1582,5.395,1583,5.147,1584,4.681,1585,5.395,1586,4.681,1587,4.681]],["title/components/UploadFileComponent.html",[61,0.181,269,0.864]],["body/components/UploadFileComponent.html",[1,0.454,2,0.725,3,0.094,4,0.116,5,0.199,7,0.15,8,0.324,22,0.015,24,0.423,27,0.513,29,0.116,30,1.305,32,0.007,33,0.007,41,1.109,42,1.022,47,1.092,52,0.277,54,0.956,60,0.236,61,0.218,62,0.554,63,0.887,64,0.598,65,0.598,66,0.598,70,1.537,71,2.14,73,0.533,74,2.031,78,0.729,81,1.731,82,1.728,84,0.789,85,0.958,86,2.045,87,2.946,89,2.478,92,0.887,94,0.887,100,2.271,103,2.14,104,2.938,107,0.922,109,2.404,116,2.615,121,1.591,127,0.806,130,1.264,143,3.007,144,1.253,155,1.754,157,2.143,162,0.697,163,1.193,164,1.138,165,1.311,166,0.753,167,1.473,169,1.318,170,1.318,171,0.997,175,1.041,176,0.598,177,0.598,180,0.622,192,2.199,195,3.112,196,1.088,197,1.567,199,1.537,200,2.769,201,2.355,202,1.838,204,0.997,211,0.598,212,0.922,213,0.887,214,0.512,215,1.264,216,0.598,217,1.125,218,0.554,219,0.598,220,0.554,221,0.853,222,0.598,223,0.554,224,0.598,225,0.554,226,0.598,227,0.554,228,0.598,229,0.598,230,0.554,231,0.598,232,0.512,233,0.576,234,0.598,235,0.554,236,0.598,237,0.554,238,0.598,239,0.554,240,0.598,241,0.554,242,0.598,243,0.554,244,0.598,245,0.554,246,0.598,247,0.554,248,0.598,249,0.554,250,0.598,251,0.554,252,0.598,253,0.554,254,0.598,255,0.554,256,0.454,257,0.554,258,0.598,259,0.554,260,0.922,261,0.598,262,0.554,263,0.598,264,0.554,265,0.598,266,0.554,267,1.305,268,0.598,269,1.17,270,0.598,271,0.554,272,0.598,273,0.554,274,0.576,275,0.598,276,0.554,277,0.598,278,0.576,279,0.533,280,0.576,281,0.533,282,0.576,283,0.598,287,1.041,309,2.798,317,1.414,331,2.52,338,1.676,341,1.838,351,2.615,394,0.997,398,1.088,425,3.151,445,2.478,517,1.567,526,3.399,533,2.786,547,2.414,548,3.776,603,2.946,644,4.123,645,2.478,650,4.04,651,3.151,655,4.632,672,3.04,675,2.583,678,1.972,688,2.193,689,2.193,702,3.379,704,4.632,1062,3.575,1088,2.143,1093,2.615,1098,3.151,1219,3.399,1270,1.676,1301,1.972,1499,3.379,1511,2.193,1540,4.502,1588,6.301,1589,2.193,1590,4.752,1591,4.123,1592,4.123,1593,4.752,1594,3.895,1595,3.895,1596,4.752,1597,4.752,1598,4.752,1599,5.339,1600,5.286,1601,2.528,1602,2.528,1603,2.528,1604,2.528,1605,2.528,1606,2.528,1607,2.528,1608,2.528,1609,3.895,1610,3.895,1611,4.752,1612,4.632,1613,2.528,1614,2.528,1615,3.895,1616,2.528,1617,3.379,1618,2.528,1619,3.895,1620,2.528,1621,2.528,1622,2.528,1623,2.528,1624,2.528,1625,2.528,1626,2.528,1627,5.339,1628,2.528,1629,2.528,1630,3.895,1631,2.528,1632,3.895,1633,3.895,1634,1.972,1635,2.528,1636,2.528,1637,2.528,1638,2.528,1639,2.528,1640,3.895,1641,2.528]],["title/components/UploadInfoComponent.html",[61,0.181,271,0.864]],["body/components/UploadInfoComponent.html",[1,0.313,2,0.499,3,0.138,4,0.08,5,0.065,7,0.103,8,0.24,14,1.502,21,0.981,22,0.015,23,1.758,24,0.435,27,0.501,28,0.783,29,0.08,30,1.829,32,0.005,33,0.005,41,1.084,42,1.089,47,1.133,52,0.191,54,0.658,60,0.163,61,0.17,62,0.381,63,0.657,64,0.412,65,0.412,66,0.412,70,1.139,71,1.666,73,0.366,74,1.505,78,0.692,81,1.658,82,1.652,83,0.783,84,0.585,85,0.71,86,1.593,87,2.294,89,1.93,92,0.657,94,0.657,100,2.352,103,1.666,104,2.371,107,0.683,109,1.94,114,1.3,116,2.629,121,1.506,126,0.894,127,0.814,128,0.71,129,2.064,130,1.352,143,2.847,144,0.862,147,2.962,155,1.3,157,1.588,159,2.432,162,0.48,163,0.821,164,0.783,165,1.021,166,0.518,167,1.013,169,0.907,170,0.907,171,0.686,174,0.686,175,0.716,176,0.412,177,0.412,178,1.013,180,0.428,189,0.862,190,1.357,192,2.249,195,3.182,196,1.593,197,2.67,199,2.033,200,2.51,201,2.554,202,2.033,204,0.686,211,0.412,212,0.683,213,0.657,214,0.352,215,1.019,216,0.412,217,0.876,218,0.381,219,0.412,220,0.381,221,0.632,222,0.412,223,0.381,224,0.412,225,0.381,226,0.412,227,0.381,228,0.412,229,0.412,230,0.381,231,0.412,232,0.352,233,0.396,234,0.412,235,0.381,236,0.412,237,0.381,238,0.412,239,0.381,240,0.412,241,0.381,242,0.412,243,0.381,244,0.412,245,0.381,246,0.412,247,0.381,248,0.412,249,0.381,250,0.412,251,0.381,252,0.412,253,0.381,254,0.412,255,0.381,256,0.519,257,0.381,258,0.412,259,0.381,260,0.683,261,0.412,262,0.381,263,0.412,264,0.381,265,0.412,266,0.944,267,1.255,268,0.412,269,0.381,270,0.412,271,0.944,272,0.412,273,0.381,274,0.396,275,0.412,276,0.381,277,0.412,278,0.396,279,0.366,280,0.396,281,0.366,282,0.396,283,0.412,287,0.716,309,2.622,317,2.075,328,0.907,351,2.036,356,2.033,381,1.43,391,0.686,394,0.686,398,0.748,415,1.153,428,1.505,472,2.255,474,1.357,517,2.962,547,1.078,548,2.294,549,1.078,551,2.888,561,2.888,565,2.888,600,1.153,651,1.153,672,3.362,675,1.914,731,1.357,734,2.252,1035,3.686,1064,1.682,1069,1.153,1079,2.51,1082,1.357,1092,2.888,1097,2.646,1098,2.454,1124,2.888,1135,2.252,1138,1.357,1142,1.509,1204,0.957,1219,2.646,1224,2.646,1252,2.504,1270,1.153,1285,4.471,1301,1.357,1341,2.252,1376,2.064,1529,3.686,1534,2.504,1535,1.078,1539,2.252,1540,4.639,1541,1.244,1543,2.888,1555,1.244,1559,1.153,1566,2.064,1567,3.686,1573,1.789,1591,3.21,1592,3.21,1612,3.737,1617,2.504,1642,6.493,1643,1.509,1644,2.887,1645,2.887,1646,3.7,1647,3.7,1648,4.778,1649,3.7,1650,4.778,1651,3.7,1652,3.21,1653,4.308,1654,4.308,1655,4.308,1656,4.308,1657,4.308,1658,2.887,1659,2.887,1660,2.887,1661,1.739,1662,1.739,1663,1.739,1664,1.739,1665,1.739,1666,1.739,1667,2.887,1668,1.739,1669,1.739,1670,5.46,1671,2.887,1672,1.739,1673,5.46,1674,2.504,1675,2.504,1676,2.504,1677,2.504,1678,1.739,1679,1.739,1680,1.739,1681,1.739,1682,1.739,1683,2.887,1684,1.739,1685,1.739,1686,1.739,1687,2.504,1688,1.739,1689,1.739,1690,1.739,1691,2.887,1692,1.739,1693,2.887,1694,1.739,1695,3.7,1696,4.471,1697,2.887,1698,2.887,1699,1.739,1700,2.504,1701,1.739,1702,2.887,1703,1.739,1704,1.509,1705,1.739,1706,1.739,1707,1.739,1708,1.739,1709,1.739,1710,1.739,1711,1.739,1712,1.739,1713,3.7,1714,1.739,1715,1.739,1716,1.739,1717,1.739,1718,1.739,1719,1.739,1720,1.739,1721,1.739,1722,1.739,1723,1.739,1724,2.887,1725,2.887,1726,2.887,1727,1.739,1728,1.739,1729,1.739,1730,1.739,1731,1.739,1732,1.739,1733,2.887,1734,1.739,1735,1.739,1736,1.739,1737,1.739,1738,6.413,1739,1.739,1740,1.739,1741,1.739,1742,1.739,1743,2.887,1744,2.887,1745,1.739,1746,2.887,1747,1.739,1748,2.887,1749,1.739,1750,1.739,1751,1.739,1752,1.739,1753,1.739,1754,1.739,1755,1.739,1756,1.739,1757,1.739,1758,1.739,1759,1.739,1760,4.778,1761,1.739,1762,1.739,1763,3.21,1764,1.739,1765,2.887,1766,1.739,1767,1.739,1768,1.739,1769,2.887,1770,2.887,1771,1.739]],["title/components/UploadListItemComponent.html",[61,0.181,273,0.864]],["body/components/UploadListItemComponent.html",[1,0.514,3,0.107,4,0.131,5,0.107,7,0.337,8,0.356,22,0.015,23,1.378,24,0.21,25,2.493,27,0.511,29,0.131,32,0.008,33,0.008,41,1.014,42,0.972,47,1.149,52,0.314,54,1.082,60,0.267,61,0.235,62,0.627,63,0.974,64,0.677,65,0.677,66,0.677,73,0.603,74,2.231,78,1.064,81,1.751,82,1.748,83,1.288,84,0.867,85,1.052,86,2.206,92,0.974,94,0.974,103,2.308,114,1.927,127,0.723,147,3.775,155,1.927,162,0.789,164,1.288,165,1.569,166,0.852,171,1.128,175,1.178,176,0.677,177,0.677,180,0.703,204,1.688,211,0.677,212,1.012,213,0.974,214,0.579,215,1.346,216,0.677,217,1.213,218,0.627,219,0.677,220,0.627,221,0.937,222,0.677,223,0.627,224,0.677,225,0.627,226,0.677,227,0.627,228,0.677,229,0.677,230,0.627,231,0.677,232,0.579,233,0.651,234,0.677,235,0.627,236,0.677,237,0.627,238,0.677,239,0.627,240,0.677,241,0.627,242,0.677,243,0.627,244,0.677,245,0.627,246,0.677,247,0.627,248,0.677,249,0.627,250,0.677,251,0.627,252,0.677,253,0.627,254,0.677,255,0.627,256,0.514,257,0.627,258,0.677,259,0.627,260,1.012,261,0.677,262,0.627,263,0.677,264,0.627,265,0.677,266,0.627,267,1.337,268,0.677,269,0.627,270,0.677,271,0.627,272,0.677,273,1.246,274,1.844,275,0.677,276,0.627,277,0.677,278,0.651,279,0.603,280,0.651,281,0.603,282,0.651,283,0.677,287,1.178,341,1.35,349,3.999,356,2.685,381,2.12,388,1.897,389,1.897,391,1.128,445,3.176,549,2.652,645,2.673,646,3.666,1064,2.493,1079,3.315,1096,3.999,1097,3.666,1098,3.399,1216,4.447,1218,4.447,1219,3.666,1224,3.06,1270,1.897,1317,3.712,1318,3.712,1343,3.712,1540,4.714,1555,4.068,1573,3.177,1634,3.338,1696,5.284,1772,6.599,1773,2.481,1774,5.125,1775,4.278,1776,4.278,1777,5.125,1778,6.09,1779,6.09,1780,6.09,1781,4.278,1782,4.278,1783,4.278,1784,4.278,1785,4.278,1786,2.86,1787,5.689,1788,4.278,1789,5.689,1790,4.278,1791,2.86,1792,2.86,1793,5.689,1794,5.689,1795,4.278,1796,4.278,1797,2.86,1798,2.86,1799,2.86,1800,2.86,1801,4.278,1802,3.712,1803,4.278,1804,4.278,1805,4.278]],["title/interfaces/UploadModel.html",[0,0.864,287,1.624]],["body/interfaces/UploadModel.html",[0,1.089,2,1.425,3,0.185,4,0.228,5,0.185,7,0.294,8,0.522,14,2.515,21,1.364,22,0.015,24,0.591,25,4.424,27,0.46,28,2.239,29,0.228,32,0.011,33,0.011,46,3.248,53,4.203,54,1.881,127,0.916,128,1.542,137,2.829,256,1.296,285,4.203,286,4.783,287,2.582,338,4.783,1088,3.969,1204,3.969,1535,4.47,1571,6.257,1572,6.257,1573,4.47,1806,4.314,1807,7.212]],["title/components/UploadPreviewComponent.html",[61,0.181,276,0.864]],["body/components/UploadPreviewComponent.html",[1,0.374,3,0.078,4,0.095,5,0.078,7,0.284,8,0.279,14,1.462,22,0.015,23,1.546,24,0.386,27,0.511,29,0.095,30,1.121,32,0.006,33,0.006,41,1.188,42,1.125,46,1.888,47,1.183,52,0.229,54,0.788,60,0.195,61,0.192,62,0.457,63,0.762,64,0.493,65,0.493,66,0.493,73,0.439,78,0.984,81,1.696,82,1.691,83,0.938,84,0.678,85,0.823,92,0.762,94,0.762,100,1.299,104,2.641,107,0.792,114,1.507,121,0.575,126,0.645,127,0.779,128,1.293,130,0.493,147,4.528,157,1.841,159,3.188,162,0.575,165,1.324,166,0.621,167,1.214,169,1.087,170,1.087,171,0.822,174,0.822,176,0.493,177,0.493,180,0.512,192,1.378,195,1.95,201,2.078,204,1.32,211,0.493,212,0.792,213,0.762,214,0.422,215,1.136,216,0.493,217,0.992,218,0.457,219,0.493,220,0.457,221,0.733,222,0.493,223,0.457,224,0.493,225,0.457,226,0.493,227,0.457,228,0.493,229,0.493,230,0.457,231,0.493,232,0.422,233,0.475,234,0.493,235,0.457,236,0.493,237,0.457,238,0.493,239,0.457,240,0.493,241,0.457,242,0.493,243,0.457,244,0.493,245,0.457,246,0.493,247,0.457,248,0.493,249,0.457,250,0.493,251,0.457,252,0.493,253,0.457,254,0.493,255,0.457,256,0.374,257,0.457,258,0.493,259,0.457,260,0.792,261,0.493,262,0.457,263,0.493,264,0.457,265,0.493,266,1.051,267,1.292,268,0.493,269,0.457,270,0.493,271,0.457,272,0.493,273,0.457,274,0.475,275,0.493,276,1.051,277,0.493,278,0.475,279,0.439,280,0.475,281,0.439,282,0.475,283,0.493,287,0.858,317,1.743,341,0.983,349,3.272,362,1.979,367,1.745,385,2.599,386,2.611,388,1.382,389,3.722,394,0.822,398,0.897,445,2.741,547,2.074,548,2.975,549,1.292,561,3.272,645,2.186,650,3.722,658,1.808,680,1.214,681,1.292,754,2.074,759,1.382,1064,1.95,1079,2.797,1088,2.307,1108,2.998,1109,1.382,1116,1.808,1117,1.49,1118,1.49,1171,2.599,1196,2.903,1341,1.626,1376,2.393,1448,1.808,1540,4.836,1541,1.49,1543,4.102,1548,4.56,1549,4.56,1555,2.998,1560,3.637,1566,2.393,1634,5.656,1652,3.637,1674,2.903,1675,2.903,1676,2.903,1677,2.903,1687,2.903,1700,2.903,1704,1.808,1802,4.869,1808,6.768,1809,1.808,1810,4.193,1811,3.346,1812,3.346,1813,5.256,1814,4.193,1815,4.193,1816,5.256,1817,4.193,1818,4.193,1819,4.193,1820,4.193,1821,4.193,1822,4.193,1823,3.346,1824,3.346,1825,4.193,1826,2.084,1827,3.346,1828,3.346,1829,3.346,1830,3.346,1831,3.346,1832,3.346,1833,5.256,1834,2.084,1835,5.256,1836,3.346,1837,2.084,1838,2.084,1839,2.084,1840,3.346,1841,2.084,1842,2.084,1843,2.084,1844,2.084,1845,3.346,1846,2.084,1847,5.612,1848,2.084,1849,2.084,1850,3.346,1851,2.084,1852,3.346,1853,2.084,1854,3.346,1855,2.084,1856,3.346,1857,2.084,1858,2.084,1859,3.346,1860,2.084,1861,3.346,1862,2.084,1863,2.084,1864,3.346,1865,2.084,1866,3.346,1867,2.084,1868,2.084,1869,2.084,1870,2.084,1871,2.084,1872,2.084,1873,2.084,1874,2.084,1875,2.084,1876,2.084,1877,3.346,1878,2.084,1879,2.084,1880,4.193,1881,2.084,1882,4.193,1883,2.084,1884,2.084,1885,2.084,1886,2.084,1887,2.084,1888,2.084,1889,3.346,1890,2.084,1891,2.084,1892,3.346]],["title/injectables/UploadService.html",[34,0.97,1062,2.445]],["body/injectables/UploadService.html",[2,1.284,3,0.167,4,0.205,5,0.243,7,0.265,8,0.488,22,0.015,24,0.48,27,0.56,28,2.017,29,0.205,30,2.19,32,0.011,33,0.011,34,1.442,36,1.844,41,0.711,42,0.681,47,0.994,52,0.491,54,1.694,58,2.61,59,2.465,60,0.419,100,2.024,107,1.387,126,1.816,127,0.83,128,1.442,130,1.387,162,1.235,165,1.235,171,1.767,256,0.805,287,1.844,290,3.888,291,4.675,297,3.495,301,4.675,302,4.193,304,2.776,305,2.97,306,3.203,307,2.905,308,5.086,309,1.767,310,3.885,311,3.885,312,3.885,313,3.495,314,3.885,317,2.373,331,3.085,678,5.617,1062,3.634,1086,4.96,1088,3.226,1089,3.885,1566,3.203,1600,5.086,1763,3.885,1893,3.885,1894,5.863,1895,5.863,1896,4.479,1897,5.863,1898,5.863,1899,5.863,1900,6.016,1901,4.479,1902,4.479,1903,4.479,1904,4.479,1905,4.479,1906,4.479,1907,4.479,1908,4.479,1909,4.479,1910,5.863,1911,4.479,1912,4.479,1913,4.479,1914,4.479,1915,4.479,1916,4.479,1917,4.479,1918,5.863,1919,4.479,1920,4.479,1921,4.479,1922,4.479]],["title/injectables/UploadsGQL.html",[34,0.97,1923,3.078]],["body/injectables/UploadsGQL.html",[3,0.18,4,0.221,5,0.18,7,0.286,8,0.513,9,2.177,12,2.08,14,2.147,15,2.177,18,2.33,19,2.281,21,1.247,22,0.015,24,0.497,27,0.541,28,2.177,29,0.338,30,1.619,32,0.011,33,0.011,34,1.514,36,1.991,38,3.212,39,4.159,40,3.95,41,0.767,42,0.735,43,3.389,46,2.773,47,0.735,49,3.818,50,2.52,51,2.66,52,0.53,54,1.829,60,0.452,127,0.936,178,2.817,256,1.218,279,1.428,285,2.817,287,2.536,326,3.772,327,3.772,328,3.535,330,4.202,1088,4.057,1204,4.057,1535,2.996,1573,4.569,1580,4.806,1583,4.806,1923,4.806,1924,3.457,1925,5.29,1926,4.834,1927,4.193,1928,4.193,1929,4.193,1930,4.193]],["title/classes/Validation.html",[60,0.369,527,2.821]],["body/classes/Validation.html",[3,0.203,4,0.249,5,0.203,7,0.322,21,1.285,22,0.015,23,2.136,24,0.399,27,0.399,29,0.249,30,2.222,32,0.012,33,0.014,47,0.827,60,0.509,78,1.241,107,1.569,126,1.686,127,0.691,128,1.338,130,1.288,163,2.568,317,2.703,527,4.743,554,5.753,651,3.609,1931,5.442,1932,4.722,1933,7.153,1934,6.632,1935,7.153,1936,5.442,1937,5.442,1938,7.153,1939,6.632,1940,5.442,1941,5.442,1942,5.442,1943,5.442,1944,5.442,1945,5.442,1946,5.442,1947,5.442,1948,5.442]],["title/changelog.html",[1949,2.857,1950,2.857,1951,2.857]],["body/changelog.html",[5,0.167,22,0.015,32,0.011,33,0.011,279,1.236,408,6.759,563,5.091,1152,3.891,1164,4.579,1217,3.891,1322,3.891,1330,5.619,1951,3.891,1952,4.485,1953,4.485,1954,4.485,1955,4.485,1956,4.485,1957,4.485,1958,5.091,1959,4.485,1960,4.485,1961,3.891,1962,7.635,1963,7.527,1964,6.939,1965,7.388,1966,4.485,1967,4.485,1968,7.201,1969,7.201,1970,4.485,1971,4.485,1972,4.485,1973,4.485,1974,4.485,1975,4.485,1976,4.485,1977,6.541,1978,4.485,1979,4.485,1980,8.01,1981,4.485,1982,4.485,1983,4.485,1984,3.891,1985,4.485,1986,3.891,1987,4.485,1988,4.485,1989,4.485,1990,4.485,1991,4.485,1992,4.485,1993,4.485,1994,4.485,1995,4.485,1996,4.485,1997,4.485,1998,4.485,1999,4.485,2000,4.485,2001,4.485,2002,4.485,2003,4.485,2004,4.485,2005,4.485,2006,4.485,2007,5.868,2008,4.485,2009,6.541,2010,4.485,2011,3.5,2012,4.485,2013,4.485,2014,4.485,2015,4.485,2016,4.485,2017,4.485,2018,4.485,2019,4.485,2020,4.485,2021,4.485]],["title/coverage.html",[2022,4.672]],["body/coverage.html",[0,1.631,1,0.516,3,0.107,5,0.107,6,3.35,22,0.015,24,0.211,31,2.055,32,0.008,33,0.008,34,1.814,35,1.905,37,2.242,53,1.674,60,0.269,61,0.364,62,0.629,67,2.493,68,2.493,69,3.676,80,2.055,179,1.781,189,2.127,204,3.274,214,0.582,218,0.629,220,0.629,223,0.629,225,0.629,227,0.629,230,0.629,232,0.582,235,0.629,237,0.629,239,0.629,241,0.629,243,0.629,245,0.629,247,0.629,249,0.629,251,0.629,253,0.629,255,0.629,257,0.629,259,0.629,262,0.629,264,0.629,266,0.629,267,1.025,269,0.629,271,0.629,273,0.629,274,0.978,276,0.629,278,0.654,281,0.605,284,3.35,287,1.183,288,1.905,289,2.493,307,2.825,309,1.134,323,2.242,324,2.242,335,2.055,336,3.35,339,2.055,342,2.493,394,1.134,395,1.498,396,1.905,397,1.905,399,2.242,400,2.242,402,2.242,440,2.493,441,2.493,446,1.498,464,2.055,476,2.493,487,2.242,488,2.242,490,2.242,494,2.055,495,2.493,499,2.493,500,2.493,527,2.055,559,2.493,603,1.781,604,2.055,638,3.35,639,3.35,641,2.493,642,2.242,643,2.493,709,2.493,714,2.493,747,3.35,748,3.35,749,3.35,760,2.055,763,2.493,1035,2.055,1036,3.07,1037,3.782,1039,2.242,1045,2.493,1056,2.493,1060,2.493,1061,2.493,1062,1.781,1063,2.055,1086,2.055,1087,2.493,1090,2.242,1091,2.493,1094,2.493,1108,2.055,1110,2.493,1111,2.493,1121,2.493,1147,2.493,1151,2.493,1157,3.35,1168,2.242,1186,2.493,1187,2.493,1188,2.493,1198,2.493,1202,2.493,1203,2.493,1215,3.35,1220,2.055,1227,2.242,1274,2.242,1276,2.242,1320,2.493,1348,2.493,1349,2.493,1350,2.493,1351,2.493,1408,2.242,1418,2.493,1421,3.35,1422,2.493,1460,2.242,1469,2.493,1526,2.493,1529,2.055,1530,3.07,1531,2.242,1540,3.782,1541,2.055,1542,2.493,1559,1.905,1565,2.493,1567,2.055,1568,3.07,1578,2.242,1588,2.493,1589,2.493,1642,2.493,1643,2.493,1772,2.493,1773,2.493,1806,2.493,1808,2.493,1809,2.493,1893,2.493,1923,2.242,1924,3.07,1925,2.242,1932,2.493,2022,2.493,2023,2.873,2024,2.873,2025,2.873,2026,5.139,2027,3.35,2028,6.973,2029,2.242,2030,8.06,2031,7.731,2032,2.493,2033,5.702,2034,4.293,2035,2.873,2036,4.293,2037,2.493,2038,2.493,2039,4.946,2040,3.724,2041,3.724,2042,2.493,2043,2.493,2044,3.724,2045,2.873,2046,6.402,2047,5.139,2048,4.293,2049,7.206,2050,4.293,2051,2.873,2052,2.873,2053,3.35,2054,2.242,2055,2.493,2056,2.493,2057,2.493,2058,2.493,2059,2.493,2060,2.493,2061,2.493,2062,2.493,2063,2.873,2064,2.873,2065,2.873,2066,2.873,2067,2.873,2068,2.873,2069,2.873,2070,2.873,2071,5.139,2072,2.873,2073,2.873,2074,2.873,2075,2.873,2076,2.493,2077,2.493,2078,2.493,2079,2.873,2080,4.946,2081,2.493,2082,2.493,2083,2.493,2084,3.724,2085,2.493,2086,2.873,2087,2.493]],["title/dependencies.html",[2011,2.57,2088,4.116]],["body/dependencies.html",[22,0.015,32,0.012,33,0.012,50,2.644,51,2.79,52,0.556,163,2.393,165,2.225,166,1.51,171,2,174,2,175,2.088,177,1.2,178,2.954,388,5.059,389,3.362,391,2,393,3.956,680,2.954,759,3.362,1117,4.54,1118,4.54,1270,3.362,1329,4.398,1330,3.956,2087,4.398,2088,4.398,2089,5.07,2090,7.95,2091,5.07,2092,5.07,2093,5.07,2094,5.07,2095,5.07,2096,5.07,2097,5.07,2098,5.07,2099,5.07,2100,8.035,2101,5.07,2102,5.07,2103,5.07,2104,5.07,2105,5.07,2106,5.07,2107,5.07,2108,6.347,2109,5.07,2110,5.07,2111,5.07,2112,5.07,2113,5.07,2114,5.07,2115,5.07,2116,5.07,2117,5.07,2118,5.07,2119,5.07,2120,5.07]],["title/miscellaneous/enumerations.html",[2121,1.812,2122,4.116]],["body/miscellaneous/enumerations.html",[7,0.329,22,0.015,26,3.693,32,0.012,33,0.012,42,1.246,221,1.216,256,1.206,267,1.206,306,4.799,505,3.68,1470,4.814,2121,3.054,2122,4.814,2123,5.549,2124,5.549,2125,5.549,2126,5.549,2127,5.549,2128,5.549,2129,5.549,2130,5.549,2131,5.549,2132,5.549,2133,5.549,2134,5.549,2135,5.549,2136,5.549,2137,5.549,2138,5.549,2139,5.549,2140,5.549,2141,5.549,2142,5.549,2143,5.549,2144,7.494,2145,6.71,2146,6.71,2147,6.71,2148,5.549,2149,6.71]],["title/miscellaneous/functions.html",[2121,1.812,2150,4.116]],["body/miscellaneous/functions.html",[7,0.301,21,1.203,22,0.015,23,1.635,24,0.56,26,3.816,32,0.012,33,0.012,41,0.806,42,0.772,121,1.401,126,2.398,127,0.984,128,1.904,130,1.853,137,2.091,144,3.436,204,2.004,256,0.913,337,3.368,341,2.999,354,3.148,356,3.273,395,3.313,402,4.958,464,4.544,1204,2.794,1227,4.958,1233,4.406,1274,4.958,2027,3.963,2029,4.958,2053,3.963,2054,5.411,2080,4.406,2081,5.512,2082,4.406,2083,6.016,2084,4.406,2085,5.512,2121,2.794,2150,4.406,2151,4.406,2152,4.406,2153,7.267,2154,5.078,2155,6.354,2156,5.078,2157,5.078,2158,5.078,2159,6.354,2160,5.078,2161,4.406,2162,5.078,2163,6.935,2164,5.078,2165,5.078,2166,5.078]],["title/index.html",[7,0.195,1949,2.857,1950,2.857]],["body/index.html",[22,0.014,32,0.013,33,0.013,82,1.401,2167,6.393]],["title/modules.html",[2168,4.672]],["body/modules.html",[22,0.013,32,0.013,33,0.013,2168,5.581]],["title/overview.html",[2169,4.672]],["body/overview.html",[2,1.799,22,0.013,32,0.013,33,0.013,36,2.585,60,0.587,63,1.429,214,1.272,331,3.406,1093,3.454,1109,4.163,1984,5.446,1986,5.446,2169,5.446,2170,6.277]],["title/properties.html",[8,0.395,2011,2.57]],["body/properties.html",[8,0.528,22,0.014,32,0.013,33,0.013,290,4.205,1148,4.535,1958,5.501,1961,5.501,2171,6.341]],["title/miscellaneous/typealiases.html",[2121,1.812,2172,4.745]],["body/miscellaneous/typealiases.html",[3,0.262,7,0.277,17,2.987,22,0.013,24,0.599,32,0.011,33,0.011,37,3.647,49,4.63,55,5.229,56,5.229,57,5.229,153,4.704,204,1.844,267,1.342,295,5.229,299,5.229,323,3.647,324,5.5,331,2.206,333,5.229,334,5.229,465,4.311,576,5.229,582,5.229,1036,3.343,1037,4.863,1041,5.229,1042,5.229,1092,6.362,1093,2.572,1408,3.647,1417,5.229,1530,3.343,1533,5.229,1536,5.229,1568,4.311,1575,5.229,1576,5.229,1577,5.229,1578,5.5,1583,4.704,1584,5.229,1586,5.229,1587,5.229,1900,5.229,1924,3.343,1927,5.229,1928,5.229,1929,5.229,2121,2.572,2173,4.674,2174,6.672,2175,6.672,2176,6.672,2177,5.229,2178,6.028,2179,6.028,2180,6.028,2181,4.674,2182,4.674,2183,5.229,2184,7.47,2185,4.674,2186,5.788,2187,4.674,2188,4.674,2189,4.674,2190,4.674,2191,4.674]],["title/miscellaneous/variables.html",[2121,1.812,2192,4.116]],["body/miscellaneous/variables.html",[1,0.362,6,1.571,7,0.119,9,1.845,10,1.613,11,1.697,12,1.763,13,2.159,14,2.29,15,1.845,16,1.697,17,1.613,18,1.78,19,1.933,20,1.791,21,0.855,22,0.015,23,2.398,24,0.491,30,1.851,31,2.328,32,0.006,33,0.006,35,1.335,39,1.174,41,1.16,42,1.111,43,2.255,46,2.892,50,1.05,74,1.05,75,4.159,77,1.44,78,1.202,107,0.477,127,0.656,159,1.536,176,0.477,186,1.571,196,0.867,199,0.795,204,3.222,221,0.441,256,0.362,267,0.846,279,0.863,285,1.174,288,1.335,307,3.098,317,2.112,326,1.571,327,1.571,328,2.136,330,2.539,331,3.099,356,1.933,375,1.05,381,1.613,394,0.795,395,1.697,396,1.335,397,1.335,399,2.54,400,2.54,419,3.197,428,1.05,446,1.697,467,2.54,472,0.95,474,1.571,487,2.54,505,1.335,560,4.082,565,1.571,602,1.747,603,1.248,604,2.328,628,1.747,638,1.571,639,2.54,651,3.426,710,1.571,1036,1.44,1037,2.917,1038,2.54,1039,2.54,1043,1.747,1044,1.747,1046,3.554,1047,3.554,1048,3.197,1049,3.554,1050,4.481,1051,3.554,1052,1.747,1054,1.747,1055,2.824,1057,1.571,1062,1.248,1088,2.589,1093,1.108,1113,3.672,1148,1.44,1157,1.571,1164,4.724,1168,2.54,1171,3.425,1172,4.312,1173,1.747,1174,1.571,1175,1.747,1176,1.747,1177,2.54,1178,1.571,1179,1.747,1180,1.747,1181,1.747,1204,2.843,1215,1.571,1224,2.328,1276,2.54,1277,1.747,1278,1.747,1279,1.747,1377,1.747,1391,6.343,1460,1.571,1530,1.44,1531,2.54,1535,2.018,1537,1.747,1538,1.747,1539,1.571,1573,2.917,1580,2.54,1924,1.44,1925,2.54,1930,1.747,2027,1.571,2029,1.571,2032,2.824,2037,1.747,2038,2.824,2039,2.824,2040,3.554,2041,3.554,2042,2.824,2043,2.824,2044,3.554,2053,1.571,2054,1.571,2055,3.554,2056,1.747,2057,2.824,2058,2.824,2059,1.747,2060,2.824,2061,1.747,2062,2.824,2076,1.747,2077,1.747,2078,1.747,2121,1.108,2151,1.747,2152,1.747,2161,1.747,2177,1.747,2183,1.747,2186,1.747,2192,1.747,2193,2.014,2194,2.014,2195,2.014,2196,2.014,2197,2.014,2198,2.014,2199,2.014,2200,2.014,2201,2.014,2202,4.705,2203,2.014,2204,2.014,2205,2.014,2206,2.014,2207,2.014,2208,2.014,2209,2.014,2210,2.014,2211,2.014,2212,2.014,2213,2.014,2214,4.097,2215,2.014,2216,2.014,2217,3.255,2218,3.255,2219,2.014,2220,3.255,2221,2.014,2222,2.014,2223,2.014,2224,2.014,2225,2.014,2226,2.014,2227,2.014,2228,2.014,2229,2.014,2230,3.255,2231,2.014,2232,2.014,2233,2.014,2234,3.255,2235,2.014,2236,2.014,2237,2.014,2238,3.255,2239,4.097,2240,2.014,2241,2.014,2242,2.014,2243,2.014,2244,2.014,2245,2.014,2246,2.014,2247,2.014,2248,2.014,2249,2.014,2250,5.166,2251,7.311,2252,2.014,2253,7.311,2254,6.693,2255,7.311,2256,6.422,2257,5.526,2258,6.422,2259,3.255,2260,5.166,2261,2.014,2262,2.014,2263,4.097,2264,4.097,2265,2.014,2266,2.014,2267,3.255,2268,2.014,2269,2.014,2270,3.255,2271,2.014,2272,4.097,2273,4.705,2274,2.014,2275,2.014,2276,2.014,2277,2.014,2278,2.014,2279,2.014,2280,2.014,2281,2.014,2282,2.014,2283,2.014,2284,2.014,2285,2.014,2286,2.014,2287,2.014,2288,2.014,2289,7.066,2290,7.066,2291,7.066,2292,4.705,2293,2.014,2294,2.014,2295,2.014]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":204,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":1961,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.14.3",{"_index":2120,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2066,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2070,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2071,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2068,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2065,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2049,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2069,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2072,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2073,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":2075,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2079,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["008b84c",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["01.01.2001",{"_index":1805,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["02",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":331,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/AuthComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":2110,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":2064,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["10415fc",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1986,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["14",{"_index":1984,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1599df4",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2113,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1093,"title":{},"body":{"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.32.1",{"_index":2098,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2118,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":2067,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1083,"title":{},"body":{"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["200ms",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2063,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1491,"title":{},"body":{"components/SignUpComponent.html":{}}}],["29",{"_index":2170,"title":{},"body":{"overview.html":{}}}],["2d9a901",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1640,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["3.0.0",{"_index":2095,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":2112,"title":{},"body":{"dependencies.html":{}}}],["3.83.0",{"_index":2100,"title":{},"body":{"dependencies.html":{}}}],["3.84.0",{"_index":2104,"title":{},"body":{"dependencies.html":{}}}],["3e56403",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1490,"title":{},"body":{"components/SignUpComponent.html":{}}}],["4.0.0",{"_index":2109,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1468,"title":{},"body":{"components/SignInComponent.html":{}}}],["401",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["40226bb",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":1524,"title":{},"body":{"components/SignUpComponent.html":{}}}],["45fe8c7",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["4ff626a",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":329,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["50",{"_index":1460,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["500ms",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5712d8d",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["5ee44fb",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":2111,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2116,"title":{},"body":{"dependencies.html":{}}}],["75f0adf",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["7bb7ca5",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":553,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["8.0.1",{"_index":2115,"title":{},"body":{"dependencies.html":{}}}],["8.13.0",{"_index":2096,"title":{},"body":{"dependencies.html":{}}}],["8e4ac0a",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["990cabe",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["9d20609",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["9dc7642",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["_actions",{"_index":1547,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["a,optio",{"_index":975,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a.localecompare(b",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["a.url",{"_index":736,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.url.includes('/404",{"_index":739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects",{"_index":737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects.includes('/404",{"_index":740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a9ca01e",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["absolute",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":1939,"title":{},"body":{"classes/Validation.html":{}}}],["accept",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token",{"_index":496,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["accessors",{"_index":1824,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["account($username",{"_index":44,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account(where",{"_index":45,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account.avatar",{"_index":1291,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.avatar.url",{"_index":1292,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.birthday",{"_index":1290,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name",{"_index":1294,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name.trim",{"_index":1296,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.interface",{"_index":640,"title":{},"body":{"interfaces/AuthenticatedUser.html":{}}}],["account.last_name",{"_index":1295,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.last_name.trim",{"_index":1297,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.model",{"_index":498,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["account.vk_avatar",{"_index":1293,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account/avatar",{"_index":2142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["account_avatar",{"_index":2141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accountfilter",{"_index":96,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountgql",{"_index":35,"title":{"injectables/AccountGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountid",{"_index":1309,"title":{},"body":{"components/ProfileComponent.html":{}}}],["accountinfogql",{"_index":101,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinfoquery",{"_index":102,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinput",{"_index":181,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinputcomponent",{"_index":62,"title":{"components/AccountInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["accountmodel",{"_index":53,"title":{"interfaces/AccountModel.html":{}},"body":{"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/AuthModel.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["accountqueryref",{"_index":57,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountresponse",{"_index":55,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accounts",{"_index":97,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountservice",{"_index":288,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountsfilter",{"_index":98,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountshortmodel",{"_index":179,"title":{"interfaces/AccountShortModel.html":{}},"body":{"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusername($username",{"_index":325,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountsinfobyusernamegql",{"_index":80,"title":{"injectables/AccountsInfoByUsernameGQL.html":{}},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusernamequeryref",{"_index":153,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernameresponse",{"_index":333,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernamevariables",{"_index":334,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountslist",{"_index":99,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountvariables",{"_index":56,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accusamus",{"_index":813,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusamusreiciendis",{"_index":1022,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantium",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantiumquidem",{"_index":968,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actions",{"_index":1543,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["actions'},{'name",{"_index":268,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["actions.component",{"_index":1704,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["actions.component.html",{"_index":1545,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.scss",{"_index":1546,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts",{"_index":1542,"title":{},"body":{"components/UploadActionsComponent.html":{},"coverage.html":{}}}],["actions.component.ts:17",{"_index":1556,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:18",{"_index":1551,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:20",{"_index":1558,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:22",{"_index":1553,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:23",{"_index":1554,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:24",{"_index":1552,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions/upload",{"_index":1541,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":461,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["activeitemindex",{"_index":480,"title":{},"body":{"components/AuthComponent.html":{}}}],["actual_component",{"_index":283,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["ad",{"_index":921,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisci",{"_index":824,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisicing",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{}}}],["administrator",{"_index":2149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["alert",{"_index":750,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"injectables/PwaService.html":{}}}],["alert'},{'name",{"_index":234,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["alert.component.html",{"_index":751,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["alert.component.scss",{"_index":752,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["alert.component.ts",{"_index":749,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"coverage.html":{}}}],["alert.component.ts:18",{"_index":756,"title":{},"body":{"components/ConfirmAlertComponent.html":{}}}],["alert.component.ts:30",{"_index":757,"title":{},"body":{"components/ConfirmAlertComponent.html":{}}}],["alert/confirm",{"_index":748,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"coverage.html":{}}}],["alerts",{"_index":103,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["alias",{"_index":946,"title":{},"body":{"components/DashboardComponent.html":{},"components/UploadActionsComponent.html":{}}}],["aliases",{"_index":2173,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliquam",{"_index":871,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquam,nemo",{"_index":971,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquamearum",{"_index":1027,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid",{"_index":795,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid!soluta",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquidpraesentium",{"_index":1012,"title":{},"body":{"components/DashboardComponent.html":{}}}],["allow",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amet",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ametimpedit",{"_index":972,"title":{},"body":{"components/DashboardComponent.html":{}}}],["angular",{"_index":51,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":175,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":304,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/SignUpComponent.html":{},"injectables/UploadService.html":{}}}],["angular/compiler",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":52,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":169,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["angular/forms",{"_index":163,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"classes/Validation.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1117,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":1329,"title":{},"body":{"injectables/PwaService.html":{},"dependencies.html":{}}}],["animate",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animations",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["animi",{"_index":903,"title":{},"body":{"components/DashboardComponent.html":{}}}],["animicommodi",{"_index":970,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aperiam",{"_index":792,"title":{},"body":{"components/DashboardComponent.html":{}}}],["api",{"_index":306,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["apierror",{"_index":335,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["apiurl",{"_index":1046,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":50,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["apollo/client",{"_index":2094,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/errors",{"_index":1273,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollo_options",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apolloclientoptions",{"_index":2156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apolloerror",{"_index":1272,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollooptionsfactory",{"_index":2054,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["app.component.html",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngonafterviewinit",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngondestroy",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngoninit",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/pass/auth",{"_index":462,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["app_initializer",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":218,"title":{"components/AppComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2032,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":1047,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory",{"_index":2029,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory(config",{"_index":2157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applicationconfig",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appversion",{"_index":1048,"title":{},"body":{"interfaces/Env.html":{},"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["architecto",{"_index":846,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architecto,molestias",{"_index":999,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architectonesciunt",{"_index":988,"title":{},"body":{"components/DashboardComponent.html":{}}}],["area",{"_index":1399,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["arguments",{"_index":1367,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["asperiores",{"_index":883,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernatur",{"_index":874,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernaturquia",{"_index":994,"title":{},"body":{"components/DashboardComponent.html":{}}}],["assumenda",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{}}}],["async",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{}}}],["atque",{"_index":803,"title":{},"body":{"components/DashboardComponent.html":{}}}],["atqueeaque",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aut",{"_index":819,"title":{},"body":{"components/DashboardComponent.html":{}}}],["autem",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{}}}],["auth",{"_index":221,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":224,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["auth.$$isauth.pipe",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.component.html",{"_index":478,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":479,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.ngoninit",{"_index":482,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth/logout",{"_index":2133,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh",{"_index":2135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh/clear",{"_index":2137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/sign",{"_index":2131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/token",{"_index":2129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_me",{"_index":2127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh",{"_index":2134,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh_clear",{"_index":2136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_in",{"_index":2128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_out",{"_index":2132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_up",{"_index":2130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authcallback",{"_index":466,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngondestroy",{"_index":447,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngoninit",{"_index":449,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallbackcomponent",{"_index":220,"title":{"components/AuthCallbackComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["authcallbackdto",{"_index":465,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["authcallbackguard",{"_index":2058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcomponent",{"_index":223,"title":{"components/AuthComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["authenticatedroutes",{"_index":1163,"title":{},"body":{"components/NavComponent.html":{}}}],["authenticateduser",{"_index":603,"title":{"interfaces/AuthenticatedUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/UploadFileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":2060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodel",{"_index":494,"title":{"interfaces/AuthModel.html":{}},"body":{"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authorization",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authpass",{"_index":528,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngondestroy",{"_index":511,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngoninit",{"_index":513,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpasscomponent",{"_index":225,"title":{"components/AuthPassComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":394,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autoclose",{"_index":1342,"title":{},"body":{"injectables/PwaService.html":{}}}],["autquia",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{}}}],["avatar",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["avatar'},{'name",{"_index":229,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["avatar.component",{"_index":1275,"title":{},"body":{"components/ProfileComponent.html":{}}}],["avatar.component.html",{"_index":647,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.scss",{"_index":648,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts",{"_index":643,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["avatar.component.ts:111",{"_index":664,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:130",{"_index":668,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:139",{"_index":663,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:150",{"_index":667,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:47",{"_index":670,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:48",{"_index":674,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:49",{"_index":659,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:65",{"_index":673,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:67",{"_index":676,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:69",{"_index":677,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:70",{"_index":671,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:72",{"_index":665,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:76",{"_index":661,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar/change",{"_index":642,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["avataralreadyexists",{"_index":649,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["avatarurl",{"_index":1777,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["await",{"_index":741,"title":{},"body":{"injectables/ConfigService.html":{}}}],["b",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["b2e3f4f",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["b322198",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["b8284fa",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["b8f80ba",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bbdd633",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["bc42044",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["be41310",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["beatae",{"_index":816,"title":{},"body":{"components/DashboardComponent.html":{}}}],["before",{"_index":1364,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["behaviorsubject",{"_index":452,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(false",{"_index":520,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(true",{"_index":453,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["between",{"_index":1400,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["big",{"_index":1384,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["birthday",{"_index":10,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["blanditiis",{"_index":875,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blanditiislaudantium",{"_index":964,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blob",{"_index":314,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body",{"_index":308,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('acl",{"_index":1913,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('compress",{"_index":1906,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('file",{"_index":311,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('id",{"_index":316,"title":{},"body":{"injectables/AccountService.html":{}}}],["body.append('name",{"_index":1911,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('originalname",{"_index":1908,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('path",{"_index":1904,"title":{},"body":{"injectables/UploadService.html":{}}}],["boolean",{"_index":137,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"injectables/ScrollService.html":{},"interfaces/UploadActionsParams.html":{},"interfaces/UploadModel.html":{},"miscellaneous/functions.html":{}}}],["borderradius",{"_index":1459,"title":{},"body":{"components/SignInComponent.html":{}}}],["bottom",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":551,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/PwaService.html":{},"components/UploadInfoComponent.html":{}}}],["browser",{"_index":1118,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["bucket",{"_index":1571,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["bug",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":186,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["calculated",{"_index":1405,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["callback",{"_index":442,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback'},{'name",{"_index":222,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["callback.component.html",{"_index":443,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.scss",{"_index":444,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts",{"_index":441,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["callback.component.ts:23",{"_index":458,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:24",{"_index":451,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:25",{"_index":459,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:27",{"_index":460,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:29",{"_index":454,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:30",{"_index":456,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:33",{"_index":450,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:57",{"_index":448,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.guard.ts",{"_index":2057,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["callbackurl",{"_index":481,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["canactivatefn",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":548,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/PwaService.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["catcherror",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["catcherror((err",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["catcherror((res",{"_index":691,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["change",{"_index":228,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["changeavatar",{"_index":653,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["changeavatarcomponent",{"_index":227,"title":{"components/ChangeAvatarComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["changelog",{"_index":1951,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["charts",{"_index":2099,"title":{},"body":{"dependencies.html":{}}}],["chatonly",{"_index":2146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chats",{"_index":710,"title":{},"body":{"components/ChatsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["chats'},{'name",{"_index":231,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["chats.component.html",{"_index":711,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chats.component.scss",{"_index":712,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chatscomponent",{"_index":230,"title":{"components/ChatsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["checkcontrol",{"_index":1942,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors['matching",{"_index":1945,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.errors",{"_index":1944,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.value",{"_index":1947,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":1935,"title":{},"body":{"classes/Validation.html":{}}}],["ci",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":60,"title":{"classes/Validation.html":{}},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1931,"title":{},"body":{"classes/Validation.html":{}}}],["clear",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["clickowner",{"_index":1653,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["clickupload",{"_index":1778,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["client",{"_index":2167,"title":{},"body":{"index.html":{}}}],["close",{"_index":1127,"title":{},"body":{"components/MeComponent.html":{}}}],["closemenu",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{},"components/NavComponent.html":{}}}],["code",{"_index":340,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{}}}],["commerce",{"_index":2101,"title":{},"body":{"dependencies.html":{}}}],["commit",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["commitizen",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["commodi",{"_index":815,"title":{},"body":{"components/DashboardComponent.html":{}}}],["commonmodule",{"_index":86,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["complete",{"_index":754,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/MeComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["component",{"_index":61,"title":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":216,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["components",{"_index":63,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"overview.html":{}}}],["components/confirm",{"_index":1331,"title":{},"body":{"injectables/PwaService.html":{}}}],["components/header",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["components/me",{"_index":1106,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/menu",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["components/nav",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["components/oops",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["compress",{"_index":1611,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["computed",{"_index":147,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["config",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"miscellaneous/functions.html":{}}}],["configservice",{"_index":395,"title":{"injectables/ConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":233,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["confirmalertcomponent",{"_index":232,"title":{"components/ConfirmAlertComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["confirmalertoptions",{"_index":760,"title":{"interfaces/ConfirmAlertOptions.html":{}},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"coverage.html":{}}}],["confirmform",{"_index":1474,"title":{},"body":{"components/SignUpComponent.html":{}}}],["confirmmessage",{"_index":753,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"injectables/PwaService.html":{}}}],["confirmpass",{"_index":518,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["consectetur",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequatur",{"_index":787,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequaturmollitia",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequuntur",{"_index":794,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequunturcommodi",{"_index":1015,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console",{"_index":1396,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["console.log",{"_index":1335,"title":{},"body":{"injectables/PwaService.html":{}}}],["console.log(err",{"_index":474,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["constructor(context",{"_index":657,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{}}}],["constructor(el",{"_index":1357,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["constructor(fb",{"_index":507,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(private",{"_index":529,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/IFrameUrlPipe.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["container",{"_index":1452,"title":{},"body":{"components/SignInComponent.html":{}}}],["contains",{"_index":327,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":660,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["context.data.accountid",{"_index":685,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["context.data.avataralreadyexists",{"_index":687,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["control",{"_index":651,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["control?.value",{"_index":1946,"title":{},"body":{"classes/Validation.html":{}}}],["controlevent",{"_index":1702,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["controlname",{"_index":1937,"title":{},"body":{"classes/Validation.html":{}}}],["controls",{"_index":1940,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":1943,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":1948,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":1941,"title":{},"body":{"classes/Validation.html":{}}}],["controlvalueaccessor",{"_index":72,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["corporis",{"_index":913,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corporisdicta",{"_index":1014,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corrupti",{"_index":908,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coverage",{"_index":2022,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":285,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["credentials",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["culpa",{"_index":837,"title":{},"body":{"components/DashboardComponent.html":{}}}],["culpaconsectetur",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cum",{"_index":926,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cumque",{"_index":881,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditate",{"_index":785,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatequasi",{"_index":991,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatereiciendis",{"_index":1001,"title":{},"body":{"components/DashboardComponent.html":{}}}],["currently",{"_index":1388,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentpath",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth/callback",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentscrolledy",{"_index":1392,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentstep",{"_index":1596,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["customicon",{"_index":1177,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":1317,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["d5e22c5",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["d5e5421",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["dashboard",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":236,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["dashboard.component.html",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":766,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":235,"title":{"components/DashboardComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["data",{"_index":472,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["data.access_token",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar.url",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.birthday",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.email",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name.trim",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name.trim",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.roles.sort((a",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.sex",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.username",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_avatar",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_id",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["data[object.keys(val)[0",{"_index":1740,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["date",{"_index":25,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{}}}],["datepipe",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["dded140",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["debitis",{"_index":916,"title":{},"body":{"components/DashboardComponent.html":{}}}],["debouncedsignal",{"_index":2081,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["debouncedsignal(sourcesignal",{"_index":2158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debouncetime",{"_index":172,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{}}}],["debouncetime(1000",{"_index":191,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{}}}],["debouncetimeinms",{"_index":2159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":47,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["delectus",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delectusconsequuntur",{"_index":1019,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deleniti",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitipariatur",{"_index":1020,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitiquaerat",{"_index":986,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delete",{"_index":1566,"title":{},"body":{"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{}}}],["deleteupload",{"_index":1654,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["deleteupload(where",{"_index":1044,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyid($id",{"_index":1043,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidgql",{"_index":1035,"title":{"injectables/DeleteUploadByIdGQL.html":{}},"body":{"injectables/DeleteUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["deleteuploadbyidquery",{"_index":1039,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidresponse",{"_index":1041,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["deleteuploadbyidvariables",{"_index":1042,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":2088,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":290,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadService.html":{},"properties.html":{}}}],["deserunt",{"_index":831,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deseruntaut",{"_index":998,"title":{},"body":{"components/DashboardComponent.html":{}}}],["destroyref",{"_index":104,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["dev",{"_index":1053,"title":{},"body":{"interfaces/Env.html":{}}}],["dialogs",{"_index":1124,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["dicta",{"_index":904,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dignissimos",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{}}}],["directive",{"_index":214,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":280,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["disabled",{"_index":105,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["distinctio",{"_index":781,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctioaliquid",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctiovoluptates",{"_index":1016,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctuntilchanged",{"_index":173,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["dj29fnsadjsd82f249k293c139j1kd3",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["document",{"_index":40,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["document.location.reload",{"_index":1345,"title":{},"body":{"injectables/PwaService.html":{}}}],["documentation",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["dolor",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolore",{"_index":915,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorem",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloremque",{"_index":879,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolores",{"_index":924,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus",{"_index":893,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus!aspernatur",{"_index":966,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribusut",{"_index":1030,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorum",{"_index":848,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dom",{"_index":65,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["dompurify",{"_index":2108,"title":{},"body":{"dependencies.html":{}}}],["domsanitizer",{"_index":1116,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadPreviewComponent.html":{}}}],["dto",{"_index":297,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["dto.compress.tostring",{"_index":1907,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.file",{"_index":312,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["dto.file.name",{"_index":1909,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.id",{"_index":315,"title":{},"body":{"injectables/AccountService.html":{}}}],["dto.name",{"_index":1910,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.path",{"_index":1905,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.private",{"_index":1912,"title":{},"body":{"injectables/UploadService.html":{}}}],["dtos",{"_index":305,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["ducimus",{"_index":789,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dynamic",{"_index":2093,"title":{},"body":{"dependencies.html":{}}}],["e.currentversion.hash",{"_index":1338,"title":{},"body":{"injectables/PwaService.html":{}}}],["e.error",{"_index":1347,"title":{},"body":{"injectables/PwaService.html":{}}}],["e.latestversion.hash",{"_index":1339,"title":{},"body":{"injectables/PwaService.html":{}}}],["e.source.dirty",{"_index":1709,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["e.type",{"_index":1333,"title":{},"body":{"injectables/PwaService.html":{}}}],["e.version.hash",{"_index":1336,"title":{},"body":{"injectables/PwaService.html":{}}}],["e50d064",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["e7319e4",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["e95ed38",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["ea",{"_index":937,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eaque",{"_index":804,"title":{},"body":{"components/DashboardComponent.html":{}}}],["earum",{"_index":909,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ease",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editable",{"_index":1646,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["edited",{"_index":1647,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["effect",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["eius",{"_index":834,"title":{},"body":{"components/DashboardComponent.html":{}}}],["el",{"_index":1360,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["element",{"_index":213,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["elementref",{"_index":1358,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{}}}],["eligendi",{"_index":901,"title":{},"body":{"components/DashboardComponent.html":{}}}],["elit",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{}}}],["email",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["emit",{"_index":1363,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["enabled",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":1365,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts",{"_index":1351,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["end.directive.ts:16",{"_index":1366,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:21",{"_index":1361,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:23",{"_index":1359,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:27",{"_index":1370,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:33",{"_index":1369,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["enim",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enimdeleniti",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enterleaveanimation",{"_index":487,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2122,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":28,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}}}],["env",{"_index":307,"title":{"interfaces/Env.html":{}},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/Env.html":{},"components/MenuComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.apiurl}${api.account_avatar",{"_index":319,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.account_avatar}${dto.id",{"_index":321,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.vk_id_exchange_token",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["env.appid",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["env.appversion",{"_index":1155,"title":{},"body":{"components/MenuComponent.html":{}}}],["env.environment",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.origin",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.redirecturl",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["environment",{"_index":1049,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["eos",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eos,impedit",{"_index":965,"title":{},"body":{"components/DashboardComponent.html":{}}}],["err",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["err.status",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["error",{"_index":199,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["error(res.error",{"_index":693,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["errorhandler",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":538,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.foreach((error",{"_index":1463,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.push",{"_index":550,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["esse",{"_index":920,"title":{},"body":{"components/DashboardComponent.html":{}}}],["esseperspiciatis",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{}}}],["est",{"_index":912,"title":{},"body":{"components/DashboardComponent.html":{}}}],["et",{"_index":833,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eum",{"_index":917,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eveniet",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event",{"_index":1374,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["event.target",{"_index":1368,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["eventcoalescing",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1128,"title":{},"body":{"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["events",{"_index":1057,"title":{},"body":{"components/EventsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["events'},{'name",{"_index":238,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["events.component.html",{"_index":1058,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.scss",{"_index":1059,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":237,"title":{"components/EventsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["ex",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exact",{"_index":1174,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["excepturi",{"_index":889,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exercitationem",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{}}}],["expedita",{"_index":886,"title":{},"body":{"components/DashboardComponent.html":{}}}],["explicabo",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{}}}],["export",{"_index":29,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["ext",{"_index":1088,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":38,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["extension",{"_index":240,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["extensioninput",{"_index":1080,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensioninputcomponent",{"_index":239,"title":{"components/ExtensionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["extensions",{"_index":1065,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensions.gql.ts",{"_index":1578,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["extensions.gql.ts:22",{"_index":1582,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["f0169b3",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["facere",{"_index":799,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facerequae",{"_index":984,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facilis",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{}}}],["false",{"_index":159,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"injectables/PwaService.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":510,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["features",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["fetchpolicy",{"_index":185,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{}}}],["file'},{'name",{"_index":270,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["file.component.html",{"_index":1594,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.scss",{"_index":1595,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts",{"_index":1589,"title":{},"body":{"components/UploadFileComponent.html":{},"coverage.html":{}}}],["file.component.ts:104",{"_index":1604,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:62",{"_index":1620,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:63",{"_index":1616,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:64",{"_index":1608,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:65",{"_index":1605,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:67",{"_index":1614,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:68",{"_index":1618,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:70",{"_index":1606,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:72",{"_index":1613,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:81",{"_index":1607,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:83",{"_index":1602,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:87",{"_index":1603,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:91",{"_index":1601,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.name.split",{"_index":1917,"title":{},"body":{"injectables/UploadService.html":{}}}],["file.type",{"_index":1922,"title":{},"body":{"injectables/UploadService.html":{}}}],["file/upload",{"_index":1588,"title":{},"body":{"components/UploadFileComponent.html":{},"coverage.html":{}}}],["file_name",{"_index":1535,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["fileform",{"_index":1597,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["filename",{"_index":1916,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join",{"_index":1920,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join('.').slice(0",{"_index":1919,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename[filename.length",{"_index":1918,"title":{},"body":{"injectables/UploadService.html":{}}}],["fileparams",{"_index":1086,"title":{"interfaces/FileParams.html":{}},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["filter",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"components/UploadInfoComponent.html":{}}}],["filter(([_",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter((e",{"_index":1708,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["filter((val",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"components/UploadInfoComponent.html":{}}}],["filters",{"_index":326,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["first_name",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["firstvaluefrom(this.http.get('/assets/config.json",{"_index":742,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fixed",{"_index":1164,"title":{},"body":{"components/NavComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["fixes",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["float",{"_index":1580,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["foreach((error",{"_index":546,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["form",{"_index":504,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formbuilder",{"_index":508,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontrol",{"_index":517,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrol('.png",{"_index":1610,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol('file",{"_index":1609,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol(false",{"_index":1612,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrol(new",{"_index":1488,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formcontrol(null",{"_index":672,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrolname",{"_index":115,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["formdata",{"_index":310,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["formgroup",{"_index":116,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formsmodule",{"_index":87,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["found",{"_index":1189,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":252,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["found.component.html",{"_index":1190,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1191,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1188,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:14",{"_index":1194,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:15",{"_index":1193,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1187,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["fuga",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat",{"_index":812,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat,est",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiatfacilis",{"_index":989,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugit",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{}}}],["full_name",{"_index":13,"title":{},"body":{"interfaces/Account.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2150,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get,post,put,delete,options",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getaccountmodel",{"_index":1090,"title":{"interfaces/GetAccountModel.html":{}},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["getcurrentpath",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcurrentpath(router",{"_index":2161,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getcurrentpath(this.router).includes('/auth",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["getfileparams",{"_index":1894,"title":{},"body":{"injectables/UploadService.html":{}}}],["getfileparams(file",{"_index":1895,"title":{},"body":{"injectables/UploadService.html":{}}}],["getpreviewcontent",{"_index":1869,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["getquerypayload",{"_index":464,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getquerypayload(params",{"_index":2162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getquerypayload(route.queryparams",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1949,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["getupdatedfields",{"_index":1655,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["gql",{"_index":43,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["graphql",{"_index":178,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["graphqlerror",{"_index":339,"title":{"interfaces/GraphqlError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["graphqlprovider",{"_index":2055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["grid.animation.ts",{"_index":2041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guidelines",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["handlechange",{"_index":108,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handlechange(val",{"_index":124,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handleclose",{"_index":1813,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["handledelete",{"_index":1548,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["handledeleteupload",{"_index":1656,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["handleme",{"_index":1125,"title":{},"body":{"components/MeComponent.html":{}}}],["handleopen",{"_index":1549,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["handlesave",{"_index":1550,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["handlesaveupload",{"_index":1657,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["handlesignout",{"_index":1126,"title":{},"body":{"components/MeComponent.html":{}}}],["handleuploadresult",{"_index":654,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["handleuploadresult(res",{"_index":662,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["harum",{"_index":838,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hasevery",{"_index":1930,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1095,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":242,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["header.component.html",{"_index":1100,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1101,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":241,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1380,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofelement",{"_index":1386,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofwholepage",{"_index":1382,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hic",{"_index":784,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hostlistener",{"_index":1375,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlistener('window:scroll",{"_index":1373,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlisteners",{"_index":1355,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["html",{"_index":212,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["http",{"_index":291,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httpclient",{"_index":301,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httperrorresponse",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["httpheaders",{"_index":1903,"title":{},"body":{"injectables/UploadService.html":{}}}],["httpinterceptorfn",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequestinterceptor",{"_index":2062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://drive.google.com/viewerng/viewer?embedded=true&url=${this.url",{"_index":1887,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["husky",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":1172,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/GetAccountModel.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts",{"_index":1037,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts:24",{"_index":1574,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["id.gql.ts:25",{"_index":1040,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{}}}],["id.gql.ts:42",{"_index":1532,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{}}}],["id/exchange",{"_index":2140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id=${dto.id",{"_index":322,"title":{},"body":{"injectables/AccountService.html":{}}}],["identifier",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["if(this.preview",{"_index":1564,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["iframeurl",{"_index":1112,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["iframeurlpipe",{"_index":1108,"title":{"pipes/IFrameUrlPipe.html":{}},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["illo",{"_index":841,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illum",{"_index":905,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumdeserunt",{"_index":1033,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumobcaecati",{"_index":976,"title":{},"body":{"components/DashboardComponent.html":{}}}],["images/cake.svg",{"_index":1176,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/files.svg",{"_index":1181,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/man.svg",{"_index":1278,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/tor.svg",{"_index":1277,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/woman.svg",{"_index":1279,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["impedit",{"_index":890,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":70,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["import",{"_index":27,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["importprovidersfrom(tuirootmodule",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":85,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["in'},{'name",{"_index":261,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["in.component",{"_index":489,"title":{},"body":{"components/AuthComponent.html":{}}}],["in.component.html",{"_index":1423,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":1424,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts",{"_index":1422,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:151",{"_index":1432,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:38",{"_index":1447,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:40",{"_index":1436,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:41",{"_index":1437,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:42",{"_index":1442,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:44",{"_index":1428,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:46",{"_index":1445,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:47",{"_index":1443,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:49",{"_index":1440,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:50",{"_index":1441,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:52",{"_index":1439,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:58",{"_index":1427,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:63",{"_index":1434,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:85",{"_index":1430,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:98",{"_index":1435,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":488,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["incidunt",{"_index":911,"title":{},"body":{"components/DashboardComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["info'},{'name",{"_index":272,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["info.component.html",{"_index":1644,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.scss",{"_index":1645,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts",{"_index":1643,"title":{},"body":{"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:100",{"_index":1681,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:101",{"_index":1680,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:102",{"_index":1679,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:104",{"_index":1678,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:113",{"_index":1672,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:119",{"_index":1666,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:181",{"_index":1661,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:187",{"_index":1665,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:201",{"_index":1664,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:211",{"_index":1669,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:245",{"_index":1662,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:273",{"_index":1663,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:335",{"_index":1668,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:74",{"_index":1694,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:75",{"_index":1686,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:76",{"_index":1682,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:77",{"_index":1685,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:78",{"_index":1690,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:80",{"_index":1684,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:81",{"_index":1692,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:83",{"_index":1701,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:84",{"_index":1688,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:86",{"_index":1699,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:95",{"_index":1659,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:97",{"_index":1689,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:98",{"_index":1660,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info/upload",{"_index":1642,"title":{},"body":{"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["init",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["initialaccount",{"_index":31,"title":{},"body":{"interfaces/Account.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialauthenticateduser",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initsentry",{"_index":2083,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":162,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{}}}],["inject(accountgql",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(accountservice",{"_index":669,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["inject(accountsinfobyusernamegql",{"_index":151,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["inject(activatedroute",{"_index":457,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["inject(authservice",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice).$isadmin",{"_index":1687,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inject(authservice).$user",{"_index":1619,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["inject(authservice).$user().id",{"_index":1700,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inject(configservice",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{}}}],["inject(deleteuploadbyidgql",{"_index":1683,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(destroyref",{"_index":157,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inject(domsanitizer",{"_index":1859,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(httpclient",{"_index":302,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["inject(injector",{"_index":1263,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/PwaService.html":{}}}],["inject(polymorpheus_context",{"_index":683,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["inject(pwaservice",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(router",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(scrollservice",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(swupdate",{"_index":1326,"title":{},"body":{"injectables/PwaService.html":{}}}],["inject(title",{"_index":1268,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(tui_is_mobile",{"_index":1845,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(tuialertservice",{"_index":155,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["inject(tuidialogservice",{"_index":1135,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["inject(tuipdfviewerservice",{"_index":1852,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(tuipreviewdialogservice",{"_index":1856,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(updateuploadbyidgql",{"_index":1691,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(uploadbyidgql",{"_index":1693,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(uploadextensionsgql",{"_index":1077,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["inject(uploadservice",{"_index":1615,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["injectable",{"_index":34,"title":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/PwaService.html":{},"injectables/ScrollService.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/PwaService.html":{},"injectables/ScrollService.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":36,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/PwaService.html":{},"injectables/ScrollService.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"overview.html":{}}}],["injector",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/PwaService.html":{}}}],["innerheight",{"_index":1397,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["inoutanimation200",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutanimation500",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation200",{"_index":2042,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation500",{"_index":2043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":83,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["input'},{'name",{"_index":217,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["input(false",{"_index":1876,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["input.component.html",{"_index":93,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.scss",{"_index":95,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts",{"_index":69,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:101",{"_index":1073,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:119",{"_index":125,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:125",{"_index":139,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:127",{"_index":133,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:131",{"_index":135,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:135",{"_index":138,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:37",{"_index":1206,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:38",{"_index":1205,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:39",{"_index":1210,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:40",{"_index":1209,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:41",{"_index":1208,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:48",{"_index":1207,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:50",{"_index":1213,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:52",{"_index":1078,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:53",{"_index":1075,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:54",{"_index":1076,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:56",{"_index":1067,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:57",{"_index":1066,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:58",{"_index":158,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:59",{"_index":156,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:60",{"_index":1211,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:61",{"_index":152,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:63",{"_index":154,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:64",{"_index":1212,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:65",{"_index":120,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:66",{"_index":119,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:67",{"_index":123,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:69",{"_index":122,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:71",{"_index":161,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:73",{"_index":160,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:75",{"_index":145,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:77",{"_index":150,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:81",{"_index":146,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:82",{"_index":142,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:84",{"_index":131,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:91",{"_index":1074,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:93",{"_index":1071,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:97",{"_index":1072,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.required",{"_index":1555,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["input/account",{"_index":68,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["input/extension",{"_index":1061,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["input/permission",{"_index":1203,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":114,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["instanceof",{"_index":695,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/ConfirmAlertOptions.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadActionsParams.html":{},"interfaces/UploadModel.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadActionsParams.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/ConfirmAlertOptions.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["interop",{"_index":170,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inventore",{"_index":894,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inventoreillo",{"_index":995,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsa",{"_index":783,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsam",{"_index":869,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsaneque",{"_index":1021,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsum",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{}}}],["is_system",{"_index":1572,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["isadmin",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["isauth",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["isauthpage",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscustomname",{"_index":1630,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["isdevmode",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseditable",{"_index":1814,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["isend",{"_index":1409,"title":{},"body":{"injectables/ScrollService.html":{}}}],["isloading",{"_index":445,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["isme",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ismobile",{"_index":1815,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["isnotfound",{"_index":1274,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotfound(err.message",{"_index":1298,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isnotfound(message",{"_index":2165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotfoundpage",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isopen",{"_index":1816,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["isopenprofiledropdown",{"_index":1102,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isprivate",{"_index":1696,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["isrefusedpage",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isrotatable",{"_index":1817,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["issystem",{"_index":1697,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["iste",{"_index":845,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iszoomable",{"_index":1818,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["itaque",{"_index":828,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquebeatae",{"_index":983,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquelaudantium",{"_index":1031,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item",{"_index":1343,"title":{},"body":{"injectables/PwaService.html":{},"components/UploadListItemComponent.html":{}}}],["item'},{'name",{"_index":275,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["item.component.html",{"_index":1775,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.scss",{"_index":1776,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts",{"_index":1773,"title":{},"body":{"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:42",{"_index":1786,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:43",{"_index":1798,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:45",{"_index":1799,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:46",{"_index":1782,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:47",{"_index":1781,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:49",{"_index":1785,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:50",{"_index":1783,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:51",{"_index":1784,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:53",{"_index":1791,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:61",{"_index":1797,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:71",{"_index":1792,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item/upload",{"_index":1772,"title":{},"body":{"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["iure",{"_index":820,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iusto",{"_index":805,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iustoarchitecto",{"_index":1029,"title":{},"body":{"components/DashboardComponent.html":{}}}],["key",{"_index":1738,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["keyboardevent",{"_index":1372,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["keyof",{"_index":541,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["kit",{"_index":1898,"title":{},"body":{"injectables/UploadService.html":{}}}],["l",{"_index":1070,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["label",{"_index":1341,"title":{},"body":{"injectables/PwaService.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["labore",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laboriosam",{"_index":790,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborum",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborumcupiditate",{"_index":1023,"title":{},"body":{"components/DashboardComponent.html":{}}}],["lang",{"_index":1456,"title":{},"body":{"components/SignInComponent.html":{}}}],["last_name",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["latest",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laudantium",{"_index":887,"title":{},"body":{"components/DashboardComponent.html":{}}}],["leave.animation.ts",{"_index":2038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":211,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["length",{"_index":1921,"title":{},"body":{"injectables/UploadService.html":{}}}],["libero",{"_index":885,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list",{"_index":274,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["literal",{"_index":1092,"title":{},"body":{"interfaces/GetAccountModel.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfig",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["loading",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1052,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["locale_id",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1438,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["lorem",{"_index":767,"title":{},"body":{"components/DashboardComponent.html":{}}}],["m",{"_index":1068,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["magnam",{"_index":891,"title":{},"body":{"components/DashboardComponent.html":{}}}],["magni",{"_index":836,"title":{},"body":{"components/DashboardComponent.html":{}}}],["maiores",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{}}}],["map",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/UploadInfoComponent.html":{}}}],["map(([isauth",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map((a",{"_index":735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["map((control",{"_index":1754,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["map((data",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((e",{"_index":1710,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["map((params",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{}}}],["map((profile",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{}}}],["map((res",{"_index":1344,"title":{},"body":{"injectables/PwaService.html":{}}}],["map((val",{"_index":1757,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["match",{"_index":554,"title":{},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":1934,"title":{},"body":{"classes/Validation.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxime",{"_index":839,"title":{},"body":{"components/DashboardComponent.html":{}}}],["me'},{'name",{"_index":244,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["me.component.html",{"_index":1122,"title":{},"body":{"components/MeComponent.html":{}}}],["me.component.scss",{"_index":1123,"title":{},"body":{"components/MeComponent.html":{}}}],["mecomponent",{"_index":243,"title":{"components/MeComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["memberonly",{"_index":2147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["memories",{"_index":1148,"title":{},"body":{"components/MemoriesComponent.html":{},"components/NavComponent.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["memories'},{'name",{"_index":246,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["memories.component.html",{"_index":1149,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memories.component.scss",{"_index":1150,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memoriescomponent",{"_index":245,"title":{"components/MemoriesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["menu",{"_index":1152,"title":{},"body":{"components/MenuComponent.html":{},"changelog.html":{}}}],["menu'},{'name",{"_index":248,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["menu.component.html",{"_index":1153,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1154,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":247,"title":{"components/MenuComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["menuisopen",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":337,"title":{},"body":{"interfaces/ApiError.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"interfaces/GraphqlError.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":73,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["methods",{"_index":107,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["mime",{"_index":1089,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{}}}],["minima",{"_index":822,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minlength",{"_index":552,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["minus",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minus,ratione",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{}}}],["miscellaneous",{"_index":2121,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":1318,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["mobile",{"_index":2102,"title":{},"body":{"dependencies.html":{}}}],["models",{"_index":54,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}}}],["modi",{"_index":870,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modules",{"_index":2168,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["molestiae",{"_index":918,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaedolores",{"_index":1008,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestias",{"_index":925,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaset",{"_index":985,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitia",{"_index":788,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitiaaliquam",{"_index":1013,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mpga",{"_index":1892,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["multi",{"_index":77,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["mutate",{"_index":1748,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["mutation",{"_index":1038,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["nam",{"_index":919,"title":{},"body":{"components/DashboardComponent.html":{}}}],["name",{"_index":127,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["natus",{"_index":826,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nav",{"_index":1158,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":250,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["nav.component.html",{"_index":1161,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":1162,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":249,"title":{"components/NavComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["navigationend",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["near",{"_index":1350,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["nearend",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["nearend(posy",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["necessitatibus",{"_index":900,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nemo",{"_index":817,"title":{},"body":{"components/DashboardComponent.html":{}}}],["neque",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nesciunt",{"_index":810,"title":{},"body":{"components/DashboardComponent.html":{}}}],["network",{"_index":187,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["new",{"_index":309,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["next",{"_index":196,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(status",{"_index":1410,"title":{},"body":{"injectables/ScrollService.html":{}}}],["nextstep",{"_index":1599,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["ng_value_accessor",{"_index":76,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ngafterviewinit",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["ngdompurifysanitizer",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngondestroy",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ngoninit",{"_index":109,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["nihil",{"_index":829,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilconsectetur",{"_index":974,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihildicta",{"_index":982,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilpossimus",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisi",{"_index":849,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisieaque",{"_index":1009,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisivero",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nobis",{"_index":801,"title":{},"body":{"components/DashboardComponent.html":{}}}],["non",{"_index":914,"title":{},"body":{"components/DashboardComponent.html":{}}}],["normalize.css",{"_index":2114,"title":{},"body":{"dependencies.html":{}}}],["nostrum",{"_index":782,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nostrumbeatae",{"_index":967,"title":{},"body":{"components/DashboardComponent.html":{}}}],["notable",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":1195,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["notfoundcomponent",{"_index":251,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["null",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["null>(null",{"_index":1557,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["nulla",{"_index":798,"title":{},"body":{"components/DashboardComponent.html":{}}}],["number",{"_index":341,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Env.html":{},"interfaces/GraphqlError.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/functions.html":{}}}],["numquam",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecati",{"_index":842,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecatinostrum",{"_index":1006,"title":{},"body":{"components/DashboardComponent.html":{}}}],["object",{"_index":1377,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["object.assign(env",{"_index":743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys",{"_index":544,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["object.keys(this.form.controls).foreach((control",{"_index":539,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["object.keys(this.uploadinfoform.controls",{"_index":1753,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["object.keys(val!)[0",{"_index":1758,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["observable",{"_index":140,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["odio",{"_index":902,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odioat",{"_index":993,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odiomaiores",{"_index":1025,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odit",{"_index":873,"title":{},"body":{"components/DashboardComponent.html":{}}}],["oditaspernatur",{"_index":961,"title":{},"body":{"components/DashboardComponent.html":{}}}],["of(new",{"_index":692,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(res",{"_index":696,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(tui_russian_language",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officia",{"_index":910,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiis",{"_index":818,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiispariatur",{"_index":996,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnis",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnisrepudiandae",{"_index":1028,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onchange",{"_index":117,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ondelete",{"_index":1648,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["ondestroy",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["oninit",{"_index":71,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["onsubmit",{"_index":506,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ontouched",{"_index":106,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["onupdate",{"_index":1649,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["oops",{"_index":1199,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops'},{'name",{"_index":254,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["oops.component.html",{"_index":1200,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops.component.scss",{"_index":1201,"title":{},"body":{"components/OopsComponent.html":{}}}],["oopscomponent",{"_index":253,"title":{"components/OopsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["opacity",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":201,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignUpComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["open(this.preview",{"_index":1891,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["open(tui_prompt",{"_index":1767,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["opened",{"_index":1394,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["optio",{"_index":888,"title":{},"body":{"components/DashboardComponent.html":{}}}],["optional",{"_index":128,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":1050,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["originalname",{"_index":1695,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["out",{"_index":2040,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out.animation.ts",{"_index":2044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":1079,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["outputs",{"_index":1064,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["overview",{"_index":2169,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1573,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["owner_id",{"_index":1807,"title":{},"body":{"interfaces/UploadModel.html":{}}}],["owneravatar",{"_index":1698,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["owneronly",{"_index":2145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["p",{"_index":1765,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["package",{"_index":2011,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["page",{"_index":330,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["paginatedquery",{"_index":2178,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pagination",{"_index":1583,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":1915,"title":{},"body":{"injectables/UploadService.html":{}}}],["parameters",{"_index":126,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parent",{"_index":1403,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["pariatur",{"_index":811,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pass",{"_index":501,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["pass'},{'name",{"_index":226,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["pass.component",{"_index":463,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["pass.component.html",{"_index":502,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.scss",{"_index":503,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts",{"_index":500,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["pass.component.ts:120",{"_index":512,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:28",{"_index":525,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:29",{"_index":523,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:30",{"_index":516,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:31",{"_index":524,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:33",{"_index":521,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:34",{"_index":522,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:36",{"_index":519,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:42",{"_index":509,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:47",{"_index":514,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:72",{"_index":515,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["password",{"_index":1465,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":338,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{}}}],["payload",{"_index":467,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"miscellaneous/variables.html":{}}}],["payload.token",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pdf",{"_index":1883,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["pdfviewers",{"_index":1819,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["perferendis",{"_index":876,"title":{},"body":{"components/DashboardComponent.html":{}}}],["permission",{"_index":256,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permission.owneronly",{"_index":1763,"title":{},"body":{"components/UploadInfoComponent.html":{},"injectables/UploadService.html":{}}}],["permissioninput",{"_index":1214,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["permissioninputcomponent",{"_index":255,"title":{"components/PermissionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["permissions",{"_index":1204,"title":{},"body":{"components/PermissionInputComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["perspiciatis",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{}}}],["perspiciatislibero",{"_index":1004,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pipe",{"_index":189,"title":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"pipes/IFrameUrlPipe.html":{},"injectables/PwaService.html":{},"pipes/SexPipe.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["pipe(takeuntildestroyed(this.destroyref",{"_index":195,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["pipes",{"_index":1109,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadPreviewComponent.html":{},"overview.html":{}}}],["pipetransform",{"_index":1119,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}}}],["pixels",{"_index":1385,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["placeat",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeat,voluptatum",{"_index":1000,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeholder",{"_index":118,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["platform",{"_index":2171,"title":{},"body":{"properties.html":{}}}],["polymorpheus",{"_index":681,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/UploadPreviewComponent.html":{}}}],["polymorpheus_context",{"_index":679,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["polymorpheuscomponent",{"_index":1271,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/PwaService.html":{}}}],["polymorpheuscomponent(changeavatarcomponent",{"_index":1307,"title":{},"body":{"components/ProfileComponent.html":{}}}],["polymorpheuscomponent(confirmalertcomponent",{"_index":1340,"title":{},"body":{"injectables/PwaService.html":{}}}],["polymorpheuscontent",{"_index":1833,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["polymorpheusmodule",{"_index":1810,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["porro",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{}}}],["position",{"_index":1391,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["possimus",{"_index":830,"title":{},"body":{"components/DashboardComponent.html":{}}}],["possimusaliquam",{"_index":1024,"title":{},"body":{"components/DashboardComponent.html":{}}}],["posy",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["praesentium",{"_index":899,"title":{},"body":{"components/DashboardComponent.html":{}}}],["praesentiumnecessitatibus",{"_index":969,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pragma",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preview",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["preview'},{'name",{"_index":277,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["preview.component.html",{"_index":1811,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.scss",{"_index":1812,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts",{"_index":1809,"title":{},"body":{"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:100",{"_index":1855,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:103",{"_index":1837,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:105",{"_index":1870,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:107",{"_index":1826,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:117",{"_index":1834,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:49",{"_index":1857,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:50",{"_index":1853,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:51",{"_index":1860,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:53",{"_index":1838,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:54",{"_index":1846,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:56",{"_index":1868,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:57",{"_index":1843,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:59",{"_index":1863,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:60",{"_index":1827,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:61",{"_index":1828,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:63",{"_index":1830,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:64",{"_index":1831,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:65",{"_index":1829,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:67",{"_index":1848,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:70",{"_index":1849,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:73",{"_index":1844,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:82",{"_index":1841,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:83",{"_index":1862,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:86",{"_index":1839,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:87",{"_index":1851,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:88",{"_index":1867,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:90",{"_index":1865,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:96",{"_index":1858,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:97",{"_index":1842,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview/upload",{"_index":1808,"title":{},"body":{"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["previewcontent",{"_index":1825,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["previews",{"_index":1820,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["previewsub",{"_index":1821,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["private",{"_index":100,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{}}}],["production",{"_index":1055,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{},"changelog.html":{}}}],["profile!.username",{"_index":1282,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":258,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["profile,uploads",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["profile.component.html",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.ngoninit",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.roles",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":257,"title":{"components/ProfileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["project",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"properties.html":{}}}],["protectedroutes",{"_index":1168,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":75,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":58,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/PwaService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["providehttpclient(withinterceptors([httprequestinterceptor",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provident",{"_index":832,"title":{},"body":{"components/DashboardComponent.html":{}}}],["providerouter(routes",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":74,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserviceworker('ngsw",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":2144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pwa",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["pwaservice",{"_index":396,"title":{"injectables/PwaService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PwaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["px",{"_index":1362,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["quae",{"_index":895,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quaerat",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quam",{"_index":843,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamobcaecati",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamrecusandae",{"_index":973,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quas",{"_index":892,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quasi",{"_index":880,"title":{},"body":{"components/DashboardComponent.html":{}}}],["query",{"_index":39,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryref",{"_index":49,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["qui",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quia",{"_index":844,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdam",{"_index":872,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdamperferendis",{"_index":997,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quidem",{"_index":847,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quireprehenderit",{"_index":1026,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quis",{"_index":791,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquam",{"_index":814,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquamnihil",{"_index":1018,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisvelit",{"_index":952,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quo",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quod",{"_index":897,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quos",{"_index":896,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ratione",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":89,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["readonly",{"_index":650,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/UploadFileComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["recusandae",{"_index":878,"title":{},"body":{"components/DashboardComponent.html":{}}}],["redirecturl",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":497,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["registeronchange",{"_index":110,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registeronchange(onchange",{"_index":132,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched",{"_index":111,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched(ontouched",{"_index":134,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerwhenstable:30000",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reiciendis",{"_index":797,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reiciendisnostrum",{"_index":990,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rem",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{}}}],["removeavatar",{"_index":292,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["removeavatar(dto",{"_index":294,"title":{},"body":{"injectables/AccountService.html":{}}}],["removeavatardto",{"_index":295,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["removefile",{"_index":655,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["repellat",{"_index":835,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repellendus",{"_index":922,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit,fugit",{"_index":1005,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repudiandae",{"_index":907,"title":{},"body":{"components/DashboardComponent.html":{}}}],["req",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":549,"title":{},"body":{"components/AuthPassComponent.html":{},"components/MeComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["rerum",{"_index":840,"title":{},"body":{"components/DashboardComponent.html":{}}}],["res",{"_index":197,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["res.data",{"_index":1715,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["res.url",{"_index":707,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["results",{"_index":32,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":317,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":130,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":26,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":59,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/PwaService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["root'},{'name",{"_index":219,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["route",{"_index":446,"title":{"interfaces/Route.html":{}},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route.title",{"_index":1185,"title":{},"body":{"components/NavComponent.html":{}}}],["router",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth/sign",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1159,"title":{},"body":{"components/NavComponent.html":{}}}],["routerlinkactive",{"_index":1160,"title":{},"body":{"components/NavComponent.html":{}}}],["routermodule",{"_index":1096,"title":{},"body":{"components/HeaderComponent.html":{},"components/NotFoundComponent.html":{},"components/UploadListItemComponent.html":{}}}],["routeroutlet",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["ru",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":174,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1069,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["saepe",{"_index":780,"title":{},"body":{"components/DashboardComponent.html":{}}}],["saepetotam",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{}}}],["safety",{"_index":1378,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sanitizer",{"_index":1822,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["sapiente",{"_index":825,"title":{},"body":{"components/DashboardComponent.html":{}}}],["save",{"_index":1376,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["scheme",{"_index":1454,"title":{},"body":{"components/SignInComponent.html":{}}}],["scroll",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["scrolled",{"_index":1389,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["scrollnearend",{"_index":282,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["scrollnearenddirective",{"_index":281,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["scrollservice",{"_index":397,"title":{"injectables/ScrollService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrollstate",{"_index":1417,"title":{},"body":{"injectables/ScrollService.html":{},"miscellaneous/typealiases.html":{}}}],["scrolltobottom",{"_index":1407,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sed",{"_index":821,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sedminima",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["selectedfile",{"_index":1622,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectedfile.ext",{"_index":1626,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectextension",{"_index":1779,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["selector",{"_index":81,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["sentry",{"_index":176,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["sentry.createerrorhandler",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.traceclass",{"_index":180,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["sentry.tracemethod",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["sentry.traceservice",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry/angular",{"_index":177,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["sentry/cli",{"_index":2097,"title":{},"body":{"dependencies.html":{}}}],["sentrydsn",{"_index":1051,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["sequi",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sequirepellat",{"_index":1007,"title":{},"body":{"components/DashboardComponent.html":{}}}],["serializepermissions",{"_index":2085,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializepermissions(permissions",{"_index":2166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["serializerole",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializerole(role",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["serializesex",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["serializesex(sex",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["service",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["services",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["set",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["set('access",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set(data",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["set(errors).foreach((error",{"_index":555,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["setdisabledstate",{"_index":112,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["setdisabledstate(disabled",{"_index":136,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["sex",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sexicons",{"_index":1276,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sexicons[0",{"_index":1305,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexicons[sex",{"_index":1304,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexpipe",{"_index":1220,"title":{"pipes/SexPipe.html":{}},"body":{"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"coverage.html":{}}}],["show",{"_index":1823,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["show(actions",{"_index":1832,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["showchangeavatardialog",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{}}}],["showconfirmform",{"_index":1475,"title":{},"body":{"components/SignUpComponent.html":{}}}],["showdialog",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showerror",{"_index":656,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showerror(err",{"_index":666,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showpreview",{"_index":1780,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showprompt",{"_index":1658,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["showprompt(label",{"_index":1667,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["showref",{"_index":1192,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["shrinks",{"_index":1395,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sign",{"_index":260,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["signal",{"_index":144,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["signal(false",{"_index":675,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signal(initialaccount",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{}}}],["signal(initialauthenticateduser",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["signal(null",{"_index":1617,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signal(true",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signin",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["signin(dto",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin.ngafterviewinit",{"_index":1429,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngondestroy",{"_index":1431,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngoninit",{"_index":1433,"title":{},"body":{"components/SignInComponent.html":{}}}],["signincomponent",{"_index":259,"title":{"components/SignInComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["signindto",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["signinvk",{"_index":471,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{}}}],["signinvk(dto",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["signup(dto",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.ngondestroy",{"_index":1479,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup.ngoninit",{"_index":1481,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signupcomponent",{"_index":262,"title":{"components/SignUpComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["signupdto",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["similique",{"_index":923,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sint",{"_index":786,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sit",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitaliquam",{"_index":1010,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitcumque",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitincidunt",{"_index":1034,"title":{},"body":{"components/DashboardComponent.html":{}}}],["size",{"_index":328,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["skeleton",{"_index":1312,"title":{},"body":{"components/ProfileComponent.html":{}}}],["soluta",{"_index":796,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutadeleniti",{"_index":1032,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutaquo",{"_index":1003,"title":{},"body":{"components/DashboardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["sourcesignal",{"_index":2160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spaceofelementandpage",{"_index":1404,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["spomen",{"_index":82,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"index.html":{}}}],["src/.../account.dtos.ts",{"_index":2180,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.gql.ts",{"_index":2174,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.interface.ts",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../accounts",{"_index":2175,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api.enum.ts",{"_index":2123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":2152,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.dtos.ts",{"_index":2176,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auth.guard.ts",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticated",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete",{"_index":2177,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../enter",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.development.ts",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.staging.ts",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.ts",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../funcs.ts",{"_index":2153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../graphql.provider.ts",{"_index":2151,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../http.interceptor.ts",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../in",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2179,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../nav.component.ts",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":2124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../profile.component.ts",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":2125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../scroll.service.ts",{"_index":2181,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sentry.ts",{"_index":2154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../serialize.ts",{"_index":2155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sex.interface.ts",{"_index":2182,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../update",{"_index":2183,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../upload",{"_index":2184,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../upload.dtos.ts",{"_index":2185,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../uploads.gql.ts",{"_index":2186,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:127",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:131",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:136",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:72",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:74",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:77",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:96",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2027,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.component.ts",{"_index":476,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":486,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:23",{"_index":484,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:24",{"_index":485,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:27",{"_index":483,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/callback/auth",{"_index":440,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["src/app/auth/pass/auth",{"_index":499,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["src/app/auth/sign",{"_index":1421,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/chats/chats.component.ts",{"_index":709,"title":{},"body":{"components/ChatsComponent.html":{},"coverage.html":{}}}],["src/app/common/animations/enter",{"_index":2037,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/animations/in",{"_index":2039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/account",{"_index":67,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/confirm",{"_index":747,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"coverage.html":{}}}],["src/app/common/components/extension",{"_index":1060,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts",{"_index":1094,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts:27",{"_index":1103,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:28",{"_index":1104,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:30",{"_index":1105,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/me/me.component.ts",{"_index":1121,"title":{},"body":{"components/MeComponent.html":{},"coverage.html":{}}}],["src/app/common/components/me/me.component.ts:23",{"_index":1136,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:24",{"_index":1134,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:25",{"_index":1133,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:26",{"_index":1132,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:27",{"_index":1137,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:29",{"_index":1129,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:31",{"_index":1130,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:37",{"_index":1131,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/menu/menu.component.ts",{"_index":1151,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/common/components/menu/menu.component.ts:17",{"_index":1156,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts",{"_index":1157,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/nav/nav.component.ts:54",{"_index":1170,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:55",{"_index":1167,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:57",{"_index":1165,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:59",{"_index":1169,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:61",{"_index":1166,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/not",{"_index":1186,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/common/components/oops/oops.component.ts",{"_index":1198,"title":{},"body":{"components/OopsComponent.html":{},"coverage.html":{}}}],["src/app/common/components/permission",{"_index":1202,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/directives/scroll",{"_index":1349,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["src/app/core/graphql/graphql.provider.ts",{"_index":2053,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/index.ts",{"_index":2188,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/models/getaccount.model.ts",{"_index":1091,"title":{},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["src/app/core/graphql/mutations/delete",{"_index":1036,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/mutations/update",{"_index":1530,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/account.gql.ts",{"_index":37,"title":{},"body":{"injectables/AccountGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/account.gql.ts:20",{"_index":48,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["src/app/core/graphql/queries/accounts",{"_index":323,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/upload",{"_index":1568,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts",{"_index":1924,"title":{},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts:63",{"_index":1926,"title":{},"body":{"injectables/UploadsGQL.html":{}}}],["src/app/core/guards/auth",{"_index":2056,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":2059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/http.interceptor.ts",{"_index":2061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/pipes/iframe",{"_index":1110,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts",{"_index":1418,"title":{},"body":{"pipes/SexPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts:10",{"_index":1420,"title":{},"body":{"pipes/SexPipe.html":{}}}],["src/app/core/services/account.service.ts",{"_index":289,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts:18",{"_index":303,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:20",{"_index":300,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:33",{"_index":296,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:101",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:105",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:109",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:120",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:34",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:36",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:38",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:42",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:43",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:45",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:49",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:50",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:52",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:73",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:77",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:97",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/config.service.ts",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/config.service.ts:11",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:12",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:14",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:15",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:16",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:33",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:38",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:42",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/pwa.service.ts",{"_index":1320,"title":{},"body":{"injectables/PwaService.html":{},"coverage.html":{}}}],["src/app/core/services/pwa.service.ts:13",{"_index":1324,"title":{},"body":{"injectables/PwaService.html":{}}}],["src/app/core/services/pwa.service.ts:14",{"_index":1327,"title":{},"body":{"injectables/PwaService.html":{}}}],["src/app/core/services/pwa.service.ts:15",{"_index":1325,"title":{},"body":{"injectables/PwaService.html":{}}}],["src/app/core/services/pwa.service.ts:17",{"_index":1323,"title":{},"body":{"injectables/PwaService.html":{}}}],["src/app/core/services/scroll.service.ts",{"_index":1408,"title":{},"body":{"injectables/ScrollService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/scroll.service.ts:14",{"_index":1412,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:19",{"_index":1416,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:25",{"_index":1411,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/upload.service.ts",{"_index":1893,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/core/services/upload.service.ts:21",{"_index":1902,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:23",{"_index":1901,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:47",{"_index":1896,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/events/events.component.ts",{"_index":1056,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/memories/memories.component.ts",{"_index":1147,"title":{},"body":{"components/MemoriesComponent.html":{},"coverage.html":{}}}],["src/app/profile/change",{"_index":641,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/profile/profile.component.ts:100",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:113",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:162",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:188",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:192",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:196",{"_index":1267,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:70",{"_index":1262,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:71",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:72",{"_index":1261,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:73",{"_index":1265,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:74",{"_index":1264,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:75",{"_index":1266,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:76",{"_index":1269,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:77",{"_index":1260,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:79",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:81",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:82",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:83",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:84",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:86",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:90",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:94",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/timelines/timelines.component.ts",{"_index":1526,"title":{},"body":{"components/TimelinesComponent.html":{},"coverage.html":{}}}],["src/app/uploads/upload",{"_index":1540,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["src/app/uploads/uploads.component.ts",{"_index":2074,"title":{},"body":{"coverage.html":{}}}],["src/envs/env.development.ts",{"_index":2076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.staging.ts",{"_index":2077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.ts",{"_index":2078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/dtos/account.dtos.ts",{"_index":2189,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/auth.dtos.ts",{"_index":2187,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/upload.dtos.ts",{"_index":2191,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/enums/api.enum.ts",{"_index":2126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/permission.enum.ts",{"_index":2143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/role.enum.ts",{"_index":2148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/interfaces/account.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/authenticated",{"_index":638,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/env.interface.ts",{"_index":1045,"title":{},"body":{"interfaces/Env.html":{},"coverage.html":{}}}],["src/types/interfaces/error.interface.ts",{"_index":336,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["src/types/interfaces/route.interface.ts",{"_index":1348,"title":{},"body":{"interfaces/Route.html":{},"coverage.html":{}}}],["src/types/interfaces/sex.interface.ts",{"_index":2190,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/interfaces/ui.interface.ts",{"_index":1565,"title":{},"body":{"interfaces/UploadActionsParams.html":{},"coverage.html":{}}}],["src/types/interfaces/upload.interface.ts",{"_index":1087,"title":{},"body":{"interfaces/FileParams.html":{},"coverage.html":{}}}],["src/types/models/account.model.ts",{"_index":284,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"coverage.html":{}}}],["src/types/models/auth.model.ts",{"_index":495,"title":{},"body":{"interfaces/AuthModel.html":{},"coverage.html":{}}}],["src/types/models/upload.model.ts",{"_index":1806,"title":{},"body":{"interfaces/UploadModel.html":{},"coverage.html":{}}}],["src/utils/funcs.ts",{"_index":2080,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/sentry.ts",{"_index":2082,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/serialize.ts",{"_index":2084,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/validation.ts",{"_index":1932,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/utils/validation.ts:4",{"_index":1936,"title":{},"body":{"classes/Validation.html":{}}}],["staging",{"_index":1054,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":84,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["standard",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1401,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["started",{"_index":1950,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["state",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["statements",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1933,"title":{},"body":{"classes/Validation.html":{}}}],["status",{"_index":202,"title":{},"body":{"components/AccountInputComponent.html":{},"interfaces/ApiError.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GraphqlError.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":1458,"title":{},"body":{"components/SignInComponent.html":{}}}],["styleurl",{"_index":94,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["sub.unsubscribe",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subs",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe",{"_index":192,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["subscribe((res",{"_index":1744,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["subscription",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["success",{"_index":1301,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["sunt",{"_index":807,"title":{},"body":{"components/DashboardComponent.html":{}}}],["surname",{"_index":1487,"title":{},"body":{"components/SignUpComponent.html":{}}}],["suscipit",{"_index":898,"title":{},"body":{"components/DashboardComponent.html":{}}}],["switch",{"_index":547,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/PwaService.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["switchmap",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["switchmap((res",{"_index":694,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["swupdate",{"_index":1328,"title":{},"body":{"injectables/PwaService.html":{}}}],["system",{"_index":1796,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["t",{"_index":2164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":2087,"title":{},"body":{"coverage.html":{},"dependencies.html":{}}}],["tablebars",{"_index":2103,"title":{},"body":{"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2086,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":165,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["takelast",{"_index":682,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takelast(1",{"_index":705,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takeuntildestroyed",{"_index":167,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["takeuntildestroyed(this.destroyref",{"_index":190,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["targetaccountid",{"_index":652,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["template",{"_index":64,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["templateref",{"_index":1835,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["templateurl",{"_index":92,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tempora",{"_index":882,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tempore",{"_index":827,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibus",{"_index":927,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibuslaudantium",{"_index":1011,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tenetur",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.$$accountfilter",{"_index":188,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$$isme.pipe(takeuntildestroyed(this.destroyref)).subscribe",{"_index":1283,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$accounts().map((val",{"_index":148,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accounts.set(res.data.accounts",{"_index":198,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter",{"_index":184,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter.set(val.trim",{"_index":206,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$editable",{"_index":1670,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$edited",{"_index":1671,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$edited.set(true",{"_index":1711,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$extensions.set(data.uploadextensions",{"_index":1085,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.$isloading.asobservable",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isloading.next(true",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isme",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isme.set(params['username",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isnotfoundpage.set",{"_index":738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$loading",{"_index":1311,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$loading.set(false",{"_index":1285,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.$loading.set(loading",{"_index":1288,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$loading.set(true",{"_index":1746,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$menuisopen",{"_index":745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(!this.$menuisopen",{"_index":744,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(false",{"_index":746,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$profile",{"_index":1280,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().avatar",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().birthday",{"_index":1316,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().full_name",{"_index":1314,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().id",{"_index":1310,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().sex",{"_index":1319,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().username",{"_index":1315,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().vk_avatar",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set",{"_index":1289,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set(this.auth.$user",{"_index":1284,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.update((profile",{"_index":1302,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query",{"_index":1287,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query.set(params['username",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$upload",{"_index":1673,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.ext",{"_index":1769,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.file_name",{"_index":1761,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.id",{"_index":1751,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.owner",{"_index":1770,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.owner!.username",{"_index":1734,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.permissions",{"_index":1766,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.permissions.filter",{"_index":1764,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.permissions.includes",{"_index":1762,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()![name",{"_index":1759,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload.set(upload",{"_index":1716,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$user().avatar",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().id",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().roles.includes(role.administrator",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().vk_avatar",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set(initialauthenticateduser",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._actions().delete",{"_index":1562,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["this._actions().open",{"_index":1561,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["this._actions().save",{"_index":1563,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["this.account",{"_index":690,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.accountgql",{"_index":1286,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.accountinfogql.watch",{"_index":183,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery",{"_index":182,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery!.refetch",{"_index":193,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery.valuechanges",{"_index":194,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.alerts",{"_index":200,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.alerts.open",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["this.alerts.open(err",{"_index":708,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.auth",{"_index":470,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.$$isloading",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isauth",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.auth.$isloading.next(false",{"_index":427,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isloading.next(true",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$user().id",{"_index":1107,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.auth.$user().username",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.$user.update((user",{"_index":1303,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.clear",{"_index":1144,"title":{},"body":{"components/MeComponent.html":{}}}],["this.auth.init().subscribe",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.set(data",{"_index":473,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.set(user",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.signout().subscribe",{"_index":1143,"title":{},"body":{"components/MeComponent.html":{}}}],["this.authenticatedroutes",{"_index":1183,"title":{},"body":{"components/NavComponent.html":{}}}],["this.avataralreadyexists",{"_index":686,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.callbackurl",{"_index":492,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.close.emit",{"_index":1141,"title":{},"body":{"components/MeComponent.html":{}}}],["this.config.$isrefusedpage",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$isrefusedpage.set(true",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$menuisopen",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.config.$menuisopen.set(false",{"_index":1182,"title":{},"body":{"components/NavComponent.html":{}}}],["this.config.closemenu",{"_index":1140,"title":{},"body":{"components/MeComponent.html":{}}}],["this.confirmform",{"_index":1501,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.reset",{"_index":1507,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.setvalue",{"_index":1525,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.value!.trim",{"_index":1506,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmmessage",{"_index":761,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["this.context.completewith(res",{"_index":706,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.context.completewith(true",{"_index":703,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["this.context.data.confirmmessage",{"_index":762,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["this.control.setvalue(null",{"_index":688,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value",{"_index":704,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value!.name",{"_index":1631,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.currentstep",{"_index":1627,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.deleteupload",{"_index":1745,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.deleteuploadbyidgql",{"_index":1750,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.dialogs",{"_index":1142,"title":{},"body":{"components/MeComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.dialogs.open",{"_index":1306,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.disabled",{"_index":209,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(url",{"_index":1120,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["this.el.nativeelement.scrollheight",{"_index":1387,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.ext",{"_index":1882,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.fb.group",{"_index":532,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.fileform.controls['compress'].value",{"_index":1635,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].disable",{"_index":1621,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].setvalue",{"_index":1625,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].value",{"_index":1633,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].setvalue(selectedfile.name",{"_index":1624,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].valid",{"_index":1628,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value",{"_index":1632,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value!.trim().length",{"_index":1629,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['private'].value",{"_index":1636,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls[\\'ext\\'].value",{"_index":1641,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.form",{"_index":531,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls",{"_index":545,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls.birthday.touched",{"_index":1509,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.birthday.value!.toutcnativedate().toisostring",{"_index":1510,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.errors",{"_index":1504,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.touched",{"_index":1512,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.valid",{"_index":1513,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim",{"_index":1515,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim().length",{"_index":1514,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.login.errors",{"_index":1461,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.login.value!.trim",{"_index":1464,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.name.errors",{"_index":1502,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.touched",{"_index":1516,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.valid",{"_index":1517,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim",{"_index":1519,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim().length",{"_index":1518,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.errors",{"_index":1462,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.pass.reset",{"_index":1508,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.value!.trim",{"_index":1466,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.surname.errors",{"_index":1503,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.touched",{"_index":1520,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.valid",{"_index":1521,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim",{"_index":1523,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim().length",{"_index":1522,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls[control",{"_index":540,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls].errors",{"_index":543,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.valid",{"_index":537,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.getupdatedfields",{"_index":1736,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.handleclose.emit",{"_index":1889,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.handleuploadresult(res",{"_index":698,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.http.delete",{"_index":320,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.get(`${env.apiurl}${api.auth_me",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":318,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_refresh",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_in",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_out",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_up",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.upload",{"_index":1914,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.injector",{"_index":1308,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/PwaService.html":{}}}],["this.isadmin",{"_index":1674,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.iseditable",{"_index":1864,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.isloading",{"_index":1801,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.isloading.asobservable",{"_index":455,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(false",{"_index":1467,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(true",{"_index":558,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.set(false",{"_index":702,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.isloading.set(true",{"_index":689,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.ismobile",{"_index":1886,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.isopen",{"_index":1878,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.me().pipe",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.me().pipe(map((val",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.name",{"_index":1888,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.onchange",{"_index":207,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.ondelete.emit(this.$upload()!.id",{"_index":1752,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.ontouched",{"_index":208,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.onupdate.emit",{"_index":1749,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.pdfviewers",{"_index":1884,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.placeholder",{"_index":210,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.previews",{"_index":1890,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.previewsub",{"_index":1880,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.previewsub.unsubscribe",{"_index":1881,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.pwa.update",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["this.refresh().pipe",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.route.params.pipe",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":468,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{}}}],["this.route.snapshot.queryparams['url",{"_index":493,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.events",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.router.navigate",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.router.navigate(['/404",{"_index":1299,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1145,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigate([`/${this.auth.$user().username",{"_index":1139,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigatebyurl(getcurrentpath(this.router",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl",{"_index":1885,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.scroll.next(true",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["this.serializerole(role",{"_index":1313,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.set(data",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.show(this.actions",{"_index":1879,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.showchangeavatardialog().subscribe((res",{"_index":1300,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.showconfirmform",{"_index":1505,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.showerror",{"_index":699,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.showprompt",{"_index":1743,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.showref",{"_index":1197,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.subs$.foreach((sub",{"_index":475,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push",{"_index":469,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open",{"_index":557,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open(error).subscribe",{"_index":556,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs.foreach((sub",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subs.push",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["this.targetaccountid",{"_index":684,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.title",{"_index":1196,"title":{},"body":{"components/NotFoundComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.title.settitle(profile!.full_name",{"_index":1281,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.token.next(payload.token",{"_index":530,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.updates.versionupdates.subscribe((e",{"_index":1332,"title":{},"body":{"injectables/PwaService.html":{}}}],["this.updateupload(data",{"_index":1742,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.updateuploadbyidgql",{"_index":1747,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.upload",{"_index":1634,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.upload()!.created_at",{"_index":1803,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.ext",{"_index":1802,"title":{},"body":{"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.upload()!.file_name}.${this.upload()!.ext",{"_index":1861,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload()!.id",{"_index":1840,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload()!.name",{"_index":1850,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload()!.owner",{"_index":1787,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.avatar",{"_index":1788,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.avatar!.url",{"_index":1789,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.first_name",{"_index":1793,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.last_name",{"_index":1794,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.username",{"_index":1795,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.vk_avatar",{"_index":1790,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.url",{"_index":1866,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload.getfileparams(this.control.value",{"_index":1623,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadavatar",{"_index":697,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadavatar().subscribe",{"_index":701,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadbyidgql",{"_index":1712,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploaded.set(res",{"_index":1638,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadextensionsgql",{"_index":1081,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.uploadid",{"_index":1713,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['isprivate'].setvalue",{"_index":1721,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['issystem'].disable",{"_index":1706,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['issystem'].setvalue(upload.is_system",{"_index":1720,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['name'].setvalue(upload.name",{"_index":1717,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['originalname'].setvalue",{"_index":1718,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owner'].setvalue",{"_index":1723,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owner'].value",{"_index":1733,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owneravatar'].setvalue",{"_index":1728,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[\\'owner\\'].value",{"_index":1771,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[control].dirty",{"_index":1755,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[control].value",{"_index":1756,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.events",{"_index":1707,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.url",{"_index":1877,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.user.id",{"_index":1637,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.userid",{"_index":1677,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.vkidonetap.render",{"_index":1451,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap",{"_index":1450,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap.nativeelement",{"_index":1453,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.window",{"_index":1379,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.document.documentelement.scrollheight",{"_index":1383,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.innerheight",{"_index":1398,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.scrolly",{"_index":1393,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["threshold",{"_index":1354,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["throw",{"_index":700,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["throwerror",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["timelines",{"_index":1178,"title":{},"body":{"components/NavComponent.html":{},"components/TimelinesComponent.html":{},"miscellaneous/variables.html":{}}}],["timelines'},{'name",{"_index":265,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["timelines.component.html",{"_index":1527,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelines.component.scss",{"_index":1528,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelinescomponent",{"_index":264,"title":{"components/TimelinesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["tinkoff/ng",{"_index":680,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["title",{"_index":1171,"title":{},"body":{"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1639,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["togglemenustatus",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{}}}],["token",{"_index":505,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["toobservable",{"_index":168,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{}}}],["toobservable(this.$accountsfilter",{"_index":141,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["toobservable(this.$isauth",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["toobservable(this.$profile).pipe",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{}}}],["toobservable(this.$state).pipe",{"_index":1413,"title":{},"body":{"injectables/ScrollService.html":{}}}],["top",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totam",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{}}}],["totamperferendis",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{}}}],["trace",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1184,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["transform",{"_index":1113,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(url",{"_index":1114,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["transform(value",{"_index":1419,"title":{},"body":{"pipes/SexPipe.html":{}}}],["transition(':enter",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(50",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":66,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["trigger('enterleave",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout200",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout500",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid200",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid500",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":78,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2117,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":1897,"title":{},"body":{"injectables/UploadService.html":{}}}],["tui_is_mobile",{"_index":1874,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tui_language",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tui_prompt",{"_index":1703,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["tui_sanitizer",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tuialertmodule",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["tuialertoptions",{"_index":758,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["tuialertservice",{"_index":164,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuiavatarmodule",{"_index":1097,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuibuttonmodule",{"_index":1774,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuichipmodule",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuidatalistwrappermodule",{"_index":88,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuiday",{"_index":1498,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiday(2000",{"_index":1489,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuidialog",{"_index":755,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{}}}],["tuidialogcontext",{"_index":658,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tuidialogmodule",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["tuidialogservice",{"_index":1138,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuifilelike",{"_index":678,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["tuihintmodule",{"_index":646,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuihosteddropdownmodule",{"_index":1099,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuiiconairplaylarge",{"_index":1173,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconcalendarlarge",{"_index":1175,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconchartlinelarge",{"_index":1179,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconmessagecirclelarge",{"_index":1180,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiinputdatemodule",{"_index":1471,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiinputfilesmodule",{"_index":644,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["tuiinputinlinemodule",{"_index":1591,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuiinputtagmodule",{"_index":91,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuilineclampmodule",{"_index":1098,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuilinkmodule",{"_index":1593,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuiloadermodule",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuipdfviewermodule",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["tuipdfvieweroptions",{"_index":1872,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tuipdfviewerservice",{"_index":1873,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tuipreviewactionmodule",{"_index":1544,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["tuipreviewdialogservice",{"_index":1871,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tuipreviewmodule",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tuirootmodule",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiskeletonmodule",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuisteppermodule",{"_index":1590,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuisvgmodule",{"_index":645,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tuitabsmodule",{"_index":477,"title":{},"body":{"components/AuthComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":90,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuitogglemodule",{"_index":1592,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["type",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2172,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":542,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["ui",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["ui/addon",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["ui/cdk",{"_index":759,"title":{},"body":{"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":166,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["ui/experimental",{"_index":1270,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["ui/icons",{"_index":2105,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":171,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":2106,"title":{},"body":{"dependencies.html":{}}}],["ui/styles",{"_index":2107,"title":{},"body":{"dependencies.html":{}}}],["ullam",{"_index":884,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ullamsuscipit",{"_index":987,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unde",{"_index":779,"title":{},"body":{"components/DashboardComponent.html":{}}}],["undefined",{"_index":1511,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["unknown",{"_index":313,"title":{},"body":{"injectables/AccountService.html":{},"injectables/PwaService.html":{},"injectables/UploadService.html":{}}}],["untracked",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["untracked(this.auth.$user",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["up",{"_index":1470,"title":{},"body":{"components/SignUpComponent.html":{},"miscellaneous/enumerations.html":{}}}],["up'},{'name",{"_index":263,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["up.component",{"_index":491,"title":{},"body":{"components/AuthComponent.html":{}}}],["up.component.html",{"_index":1472,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":1473,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":1469,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:111",{"_index":1483,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:141",{"_index":1478,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:237",{"_index":1480,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:41",{"_index":1484,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:42",{"_index":1485,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:43",{"_index":1495,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:45",{"_index":1477,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:47",{"_index":1497,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:49",{"_index":1493,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:50",{"_index":1494,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:52",{"_index":1496,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:54",{"_index":1492,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:70",{"_index":1486,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:74",{"_index":1476,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:79",{"_index":1482,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":490,"title":{},"body":{"components/AuthComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["update",{"_index":1322,"title":{},"body":{"injectables/PwaService.html":{},"changelog.html":{}}}],["updated_at",{"_index":286,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["updatedfields",{"_index":1735,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updatedfields.foreach((val",{"_index":1739,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updatedfields.length",{"_index":1737,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updates",{"_index":1321,"title":{},"body":{"injectables/PwaService.html":{}}}],["updateupload",{"_index":1534,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{}}}],["updateupload(data",{"_index":1539,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["updateuploadbyid($data",{"_index":1537,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["updateuploadbyidgql",{"_index":1529,"title":{"injectables/UpdateUploadByIdGQL.html":{}},"body":{"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["updateuploadbyidquery",{"_index":1531,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateuploadbyidresponse",{"_index":1533,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["updateuploadbyidvariables",{"_index":1536,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["upload",{"_index":267,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["upload!.owner",{"_index":1675,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["upload!.owner!.avatar!.url",{"_index":1731,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload!.owner!.id",{"_index":1676,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["upload!.owner!.vk_avatar",{"_index":1732,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload($id",{"_index":1569,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload(where",{"_index":1570,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload.file_name",{"_index":1719,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner",{"_index":1724,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.avatar",{"_index":1729,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.avatar.url",{"_index":1730,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.first_name",{"_index":1725,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.last_name",{"_index":1726,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.username",{"_index":1727,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.permissions.includes(permission.owneronly",{"_index":1722,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadactions",{"_index":1560,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["uploadactionscomponent",{"_index":266,"title":{"components/UploadActionsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadactionsparams",{"_index":1559,"title":{"interfaces/UploadActionsParams.html":{}},"body":{"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["uploadavatar",{"_index":293,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["uploadavatar(dto",{"_index":298,"title":{},"body":{"injectables/AccountService.html":{}}}],["uploadavatardto",{"_index":299,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidgql",{"_index":1567,"title":{"injectables/UploadByIdGQL.html":{}},"body":{"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["uploadbyidqueryref",{"_index":1577,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidresponse",{"_index":1575,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidvariables",{"_index":1576,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploaded",{"_index":1598,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["uploadextensions",{"_index":1585,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions($size",{"_index":1579,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions(page",{"_index":1581,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensionsgql",{"_index":1063,"title":{"injectables/UploadExtensionsGQL.html":{}},"body":{"components/ExtensionInputComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{}}}],["uploadextensionsqueryref",{"_index":1587,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsresponse",{"_index":1584,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsvariables",{"_index":1586,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadfile",{"_index":1600,"title":{},"body":{"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["uploadfile(dto",{"_index":1899,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfilecomponent",{"_index":269,"title":{"components/UploadFileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadfiledto",{"_index":1900,"title":{},"body":{"injectables/UploadService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadid",{"_index":1650,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadinfo",{"_index":1705,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadinfocomponent",{"_index":271,"title":{"components/UploadInfoComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadinfoform",{"_index":1651,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadlistitem",{"_index":1800,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["uploadlistitemcomponent",{"_index":273,"title":{"components/UploadListItemComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadmodel",{"_index":287,"title":{"interfaces/UploadModel.html":{}},"body":{"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploadpreview",{"_index":1875,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["uploadpreviewcomponent",{"_index":276,"title":{"components/UploadPreviewComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploads",{"_index":279,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadsGQL.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["uploadscomponent",{"_index":278,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadservice",{"_index":1062,"title":{"injectables/UploadService.html":{}},"body":{"components/ExtensionInputComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsgql",{"_index":1923,"title":{"injectables/UploadsGQL.html":{}},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploadsquery",{"_index":1925,"title":{},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsqueryref",{"_index":1929,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsresponse",{"_index":1927,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsvariables",{"_index":1928,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadupdateinput",{"_index":1538,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":46,"title":{},"body":{"injectables/AccountGQL.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/NavComponent.html":{},"interfaces/Route.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["url.pipe.ts",{"_index":1111,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:11",{"_index":1115,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["useclass",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":79,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["usefactory",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadFileComponent.html":{}}}],["user.interface.ts",{"_index":639,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":1652,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["username",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["username.gql.ts",{"_index":324,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["username.gql.ts:24",{"_index":332,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["username}!`).subscribe",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ut",{"_index":906,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utconsequuntur",{"_index":1002,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["v${version",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["val",{"_index":129,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/UploadInfoComponent.html":{}}}],["val![name",{"_index":1760,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["val.isend",{"_index":1414,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.posy",{"_index":1415,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.trim",{"_index":205,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.trim().length",{"_index":203,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.username",{"_index":149,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val[object.keys(val)[0",{"_index":1741,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["validation",{"_index":527,"title":{"classes/Validation.html":{}},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validation.match('pass",{"_index":536,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["validatorfn",{"_index":1938,"title":{},"body":{"classes/Validation.html":{}}}],["validators",{"_index":526,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.email",{"_index":1500,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators.maxlength(30",{"_index":535,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(2",{"_index":1499,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.minlength(4",{"_index":1449,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(8",{"_index":534,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.required",{"_index":533,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/PwaService.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuechanges.pipe(takeuntildestroyed(this.destroyref",{"_index":1084,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{}}}],["valuechanges.subscribe",{"_index":1714,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["var",{"_index":215,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/ConfirmAlertComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["variable",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2192,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velit",{"_index":793,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velmagnam",{"_index":1017,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veniam",{"_index":808,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veritatis",{"_index":809,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vero",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{}}}],["version",{"_index":1958,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["version_detected",{"_index":1334,"title":{},"body":{"injectables/PwaService.html":{}}}],["version_installation_failed",{"_index":1346,"title":{},"body":{"injectables/PwaService.html":{}}}],["version_ready",{"_index":1337,"title":{},"body":{"injectables/PwaService.html":{}}}],["viewchild",{"_index":1448,"title":{},"body":{"components/SignInComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["viewchild('actions",{"_index":1836,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["viewchild('preview",{"_index":1854,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["viewchild('vkidsdkonetap",{"_index":1446,"title":{},"body":{"components/SignInComponent.html":{}}}],["visible",{"_index":1402,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["vitae",{"_index":877,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vk",{"_index":2139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vk_avatar",{"_index":19,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["vk_id",{"_index":20,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"miscellaneous/variables.html":{}}}],["vk_id_exchange_token",{"_index":2138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vkid",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["vkid.config.set",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["vkid.languages.rus",{"_index":1457,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.onetap",{"_index":1444,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.scheme.dark",{"_index":1455,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid/sdk",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{},"dependencies.html":{}}}],["vkidonetap",{"_index":1425,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkidsdkonetap",{"_index":1426,"title":{},"body":{"components/SignInComponent.html":{}}}],["void",{"_index":121,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmAlertComponent.html":{},"interfaces/ConfirmAlertOptions.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/functions.html":{}}}],["voluptas",{"_index":806,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptas,eligendi",{"_index":992,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptate",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatem",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptaterepellat",{"_index":963,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptates",{"_index":802,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatesitaque",{"_index":981,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatibus",{"_index":800,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatum",{"_index":823,"title":{},"body":{"components/DashboardComponent.html":{}}}],["watch",{"_index":1082,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["webp",{"_index":1847,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["whether",{"_index":1406,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["whole",{"_index":1381,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window",{"_index":1352,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window.location.reload",{"_index":1146,"title":{},"body":{"components/MeComponent.html":{}}}],["window:scroll",{"_index":1356,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent",{"_index":1353,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent(event",{"_index":1371,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["withcredentials",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlatestfrom(auth.$$isloading",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withviewtransitions",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["worker",{"_index":1330,"title":{},"body":{"injectables/PwaService.html":{},"changelog.html":{},"dependencies.html":{}}}],["worker.js",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workers",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":713,"title":{},"body":{"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/MemoriesComponent.html":{},"components/TimelinesComponent.html":{}}}],["works!lorem",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{}}}],["writablesignal",{"_index":143,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["writevalue",{"_index":113,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["x",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":1390,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["yes",{"_index":1768,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["yyyy",{"_index":1804,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["zone.js",{"_index":2119,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/account.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:         Sex | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sex | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sex } from '@interfaces'\nimport { Role } from '@enums'\n\nexport const initialAccount: Account = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n\nexport interface Account {\n  id: string | null\n  vk_id: string | null\n  username: string | null\n  email: string | null\n  roles: Role[]\n  avatar: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  full_name: string | null\n  birthday: Date | null\n  sex: Sex | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountGQL.html":{"url":"injectables/AccountGQL.html","title":"injectable - AccountGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/account.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/account.gql.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountModel } from '@models'\n\nexport type AccountResponse = {\n  account: AccountModel\n}\n\nexport type AccountVariables = {\n  username: string\n}\n\nexport type AccountQueryRef = QueryRef\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountGQL extends Query {\n  document = gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountInputComponent.html":{"url":"components/AccountInputComponent.html","title":"component - AccountInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/account-input/account-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: AccountInputComponent,\n}\n                                AccountsInfoByUsernameGQL\n                \n            \n\n\n            \n                selector\n                spomen-account-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            TuiDataListWrapperModule\n                            ReactiveFormsModule\n                            TuiTextfieldControllerModule\n                            TuiInputTagModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$accountFilter\n                            \n                            \n                                $accounts\n                            \n                            \n                                $accountsFilter\n                            \n                            \n                                $accountsList\n                            \n                            \n                                    Private\n                                accountInfoGQL\n                            \n                            \n                                    Private\n                                accountInfoQuery\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Аккаунт'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:67\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleChange\n                        \n                    \n                \n            \n            \n                \nhandleChange(val: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$accountFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$accountsFilter)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountsInfoByUsernameGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsInfoByUsernameQueryRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  computed,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Signal,\n  signal,\n  WritableSignal,\n} from '@angular/core'\n\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\n\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { debounceTime, distinctUntilChanged, Observable } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  AccountsInfoByUsernameGQL,\n  AccountsInfoByUsernameQueryRef,\n} from '@graphql'\nimport { AccountShortModel } from '@models'\n\n@Component({\n  selector: 'spomen-account-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    TuiDataListWrapperModule,\n    ReactiveFormsModule,\n    TuiTextfieldControllerModule,\n    TuiInputTagModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: AccountInputComponent,\n    },\n    AccountsInfoByUsernameGQL,\n  ],\n  templateUrl: './account-input.component.html',\n  styleUrl: './account-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'AccountInput' })\nexport class AccountInputComponent implements OnInit, ControlValueAccessor {\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  private accountInfoGQL = inject(AccountsInfoByUsernameGQL)\n\n  private accountInfoQuery: AccountsInfoByUsernameQueryRef | null = null\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() placeholder: string = 'Аккаунт'\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  $accounts: WritableSignal = signal([])\n\n  $accountsList: Signal = computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n\n  $accountsFilter: WritableSignal = signal('')\n  $$accountFilter: Observable = toObservable(this.$accountsFilter)\n\n  ngOnInit() {\n    this.accountInfoQuery = this.accountInfoGQL.watch(\n      {\n        username: this.$accountsFilter(),\n      },\n      { fetchPolicy: 'cache-and-network' }\n    )\n\n    this.$$accountFilter\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe(() => {\n        this.accountInfoQuery!.refetch({\n          username: this.$accountsFilter(),\n        })\n      })\n\n    this.accountInfoQuery.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.$accounts.set(res.data.accounts)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список аккаунтов', { status: 'error' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  handleChange(val: string) {\n    if (val.trim().length > 0 && val.trim() !== this.$accountsFilter()) {\n      this.$accountsFilter.set(val.trim())\n    }\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountModel.html":{"url":"interfaces/AccountModel.html","title":"interface - AccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         UploadModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:         Sex | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sex | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\nimport { Sex } from '@interfaces'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: Sex | null\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/account.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для работы с аккаунтами\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeAvatar\n                            \n                            \n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar(dto: RemoveAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RemoveAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \nuploadAvatar(dto: UploadAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\n\nimport { RemoveAvatarDto, UploadAvatarDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для работы с аккаунтами\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadAvatar(dto: UploadAvatarDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n\n    if (dto.id) body.append('id', dto.id)\n\n    return this.http.post(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}`,\n      body\n    )\n  }\n\n  removeAvatar(dto: RemoveAvatarDto) {\n    return this.http.delete(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}${dto.id ? `?id=${dto.id}` : ''}`\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountShortModel.html":{"url":"interfaces/AccountShortModel.html","title":"interface - AccountShortModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountShortModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\nimport { Sex } from '@interfaces'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: Sex | null\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsInfoByUsernameGQL.html":{"url":"injectables/AccountsInfoByUsernameGQL.html","title":"injectable - AccountsInfoByUsernameGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountsInfoByUsernameGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/accounts-info-by-username.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountShortModel } from '@models'\n\nexport type AccountsInfoByUsernameResponse = {\n  accounts: AccountShortModel[]\n}\n\nexport type AccountsInfoByUsernameVariables = {\n  username: string\n}\n\nexport type AccountsInfoByUsernameQueryRef = QueryRef\n\n@Injectable()\nexport class AccountsInfoByUsernameGQL extends Query {\n  document = gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ScrollNearEndDirective\n                \n            \n\n\n            \n                selector\n                spomen-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterOutlet\n                            TuiRootModule\n                            TuiDialogModule\n                            TuiAlertModule\n                            TuiPreviewModule\n                            TuiPdfViewerModule\n                            TuiLoaderModule\n                                HeaderComponent\n                                NavComponent\n                                OopsComponent\n                                MenuComponent\n                                ScrollNearEndDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                    Private\n                                pwa\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scroll\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                            \n                                    \n                                ngAfterViewInit\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:77\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nearEnd\n                        \n                    \n                \n            \n            \n                \nnearEnd(posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnAfterViewInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pwa\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PwaService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScrollService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiRootModule,\n  TuiDialogModule,\n  TuiAlertModule,\n  TuiAlertService,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n  effect,\n  inject,\n  untracked,\n  AfterViewInit,\n} from '@angular/core'\n\nimport { TuiPreviewModule } from '@taiga-ui/addon-preview'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Router, RouterOutlet } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\nimport { Subscription } from 'rxjs'\nimport * as VKID from '@vkid/sdk'\n\nimport { env } from '@env'\n\nimport {\n  AuthService,\n  ConfigService,\n  PwaService,\n  ScrollService,\n} from '@services'\nimport { inOutAnimation200, inOutAnimation500 } from '@animations'\nimport { ScrollNearEndDirective } from '@directives'\nimport { TuiPdfViewerModule } from '@taiga-ui/kit'\nimport { getCurrentPath } from '@utils'\n\nimport { HeaderComponent } from '@components/header'\nimport { OopsComponent } from '@components/oops'\nimport { MenuComponent } from '@components/menu'\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    TuiRootModule,\n    TuiDialogModule,\n    TuiAlertModule,\n    TuiPreviewModule,\n    TuiPdfViewerModule,\n    TuiLoaderModule,\n    HeaderComponent,\n    NavComponent,\n    OopsComponent,\n    MenuComponent,\n    ScrollNearEndDirective,\n  ],\n  animations: [inOutAnimation200, inOutAnimation500],\n  providers: [ScrollNearEndDirective],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\n@Sentry.TraceClass({ name: 'App' })\nexport class AppComponent implements OnInit, AfterViewInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private scroll = inject(ScrollService)\n  private pwa = inject(PwaService)\n  private router = inject(Router)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  private subs: Subscription[] = []\n\n  constructor() {\n    effect(() => {\n      if (this.auth.$isAuth()) {\n        const { first_name, username } = untracked(this.auth.$user)\n\n        this.subs.push(\n          this.alerts.open(`Привет, ${first_name || username}!`).subscribe()\n        )\n\n        if (getCurrentPath(this.router).includes('/auth')) {\n          this.router.navigate(['/'])\n        }\n      }\n    }, {})\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnInit' })\n  ngOnInit(): void {\n    VKID.Config.set({\n      app: env.appId,\n      redirectUrl: env.redirectUrl,\n      state: 'dj29fnsadjsd82f249k293c139j1kd3',\n    })\n\n    this.auth.$isLoading.next(true)\n\n    this.subs.push(\n      this.auth.init().subscribe({\n        next: (user) => {\n          this.auth.set(user)\n          this.auth.$isLoading.next(false)\n        },\n        error: (err: HttpErrorResponse) => {\n          if (err.status === 0) {\n            this.config.$isRefusedPage.set(true)\n            this.auth.$isLoading.next(false)\n            return\n          }\n\n          this.auth.$isLoading.next(false)\n\n          this.router.navigateByUrl(getCurrentPath(this.router))\n        },\n      })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnAfterViewInit' })\n  ngAfterViewInit() {\n    this.pwa.update()\n  }\n\n  nearEnd(posY: number) {\n    this.scroll.next(true, posY)\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n  @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {\n    \n  } @else if (!this.config.$isRefusedPage()) {\n    @if (this.auth.$isAuth()) {\n      \n        \n        \n          \n        \n      \n    } @else {\n      \n    }\n\n    @if (this.config.$menuIsOpen()) {\n      \n    }\n  }\n\n  @if (this.config.$isRefusedPage()) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {      } @else if (!this.config.$isRefusedPage()) {    @if (this.auth.$isAuth()) {                                                  } @else {          }    @if (this.config.$menuIsOpen()) {          }  }  @if (this.config.$isRefusedPage()) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthCallbackComponent.html":{"url":"components/AuthCallbackComponent.html","title":"component - AuthCallbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthCallbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/callback/auth-callback.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-callback\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiLoaderModule\n                                AuthPassComponent\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-callback.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-callback.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { TuiLoaderModule } from '@taiga-ui/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthPassComponent } from '@app/auth/pass/auth-pass.component'\n\nimport { getQueryPayload } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-auth-callback',\n  standalone: true,\n  imports: [CommonModule, TuiLoaderModule, AuthPassComponent, TuiLoaderModule],\n  templateUrl: './auth-callback.component.html',\n  styleUrl: './auth-callback.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthCallback' })\nexport class AuthCallbackComponent implements OnInit, OnDestroy {\n  private route = inject(ActivatedRoute)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(true)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.subs$.push(\n      this.auth\n        .signInVK({\n          ...payload,\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n            this.router.navigate(['/'])\n          },\n          error: (err) => {\n            this.router.navigate(['/'])\n            console.log(err)\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        @if (isLoading$$ | async) {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (isLoading$$ | async) {  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthCallbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiTabsModule\n                                SignInComponent\n                                SignUpComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemIndex\n                            \n                            \n                                callbackUrl\n                            \n                            \n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Auth.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/auth.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        callbackUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { TuiTabsModule } from '@taiga-ui/kit'\nimport * as Sentry from '@sentry/angular'\n\nimport { enterLeaveAnimation } from '@animations'\n\nimport { SignInComponent } from './sign-in/sign-in.component'\nimport { SignUpComponent } from './sign-up/sign-up.component'\n\n@Component({\n  selector: 'spomen-auth',\n  standalone: true,\n  imports: [TuiTabsModule, SignInComponent, SignUpComponent],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n  animations: [enterLeaveAnimation],\n})\n@Sentry.TraceClass({ name: 'Auth' })\nexport class AuthComponent implements OnInit {\n  route = inject(ActivatedRoute)\n\n  activeItemIndex: number = 0\n  callbackUrl: string | null = null\n\n  @Sentry.TraceMethod({ name: 'Auth.ngOnInit' })\n  ngOnInit(): void {\n    this.callbackUrl = this.route.snapshot.queryParams['url'] ?? null\n  }\n}\n\n    \n\n    \n        \n  Вход\n  Регистрация\n\n\n  @if (activeItemIndex === 0) {\n    \n  }\n  @if (activeItemIndex === 1) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Вход  Регистрация  @if (activeItemIndex === 0) {      }  @if (activeItemIndex === 1) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthModel.html":{"url":"interfaces/AuthModel.html","title":"interface - AuthModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/auth.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AccountModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from './account.model'\n\nexport interface AuthModel extends AccountModel {\n  access_token: string\n  refresh_token: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthPassComponent.html":{"url":"components/AuthPassComponent.html","title":"component - AuthPassComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthPassComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pass/auth-pass.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-pass\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-pass.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-pass.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pass/auth-pass.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { getQueryPayload, Validation } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\n\n@Component({\n  selector: 'spomen-auth-pass',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './auth-pass.component.html',\n  styleUrl: './auth-pass.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthPass' })\nexport class AuthPassComponent implements OnInit, OnDestroy {\n  private token: BehaviorSubject = new BehaviorSubject('')\n  private route = inject(ActivatedRoute)\n  private alerts = inject(TuiAlertService)\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    confirmPass: FormControl\n  }> = new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.token.next(payload.token)\n\n    this.form = this.fb.group(\n      {\n        pass: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(30),\n          ],\n        ],\n        confirmPass: ['', [Validators.required]],\n      },\n      {\n        validators: [Validation.match('pass', 'confirmPass')],\n      }\n    )\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      Object.keys(this.form.controls).forEach((control) => {\n        if (\n          this.form.controls[control as keyof typeof this.form.controls].errors\n        ) {\n          Object.keys(\n            this.form.controls[control as keyof typeof this.form.controls]\n              .errors!\n          ).forEach((error) => {\n            switch (error) {\n              case 'required': {\n                errors.push('Пароль обязателен')\n                break\n              }\n\n              case 'minlength': {\n                errors.push('Пароль должен быть не менее 8 символов')\n                break\n              }\n\n              case 'match': {\n                errors.push('Пароли должны быть одинаковы')\n                break\n              }\n\n              default: {\n                errors.push('Проверьте правильность полей')\n              }\n            }\n          })\n        }\n      })\n\n      new Set(errors).forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.subs$.push(this.alerts.open('Запрос на сервер...').subscribe())\n    this.isLoading.next(true)\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  Придумайте пароль\n  \n  \n  \n    \n      Продолжить\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Придумайте пароль                Продолжить      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthPassComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isAuth\n                            \n                            \n                                $$isLoading\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isAdmin\n                            \n                            \n                                $isAuth\n                            \n                            \n                                $isLoading\n                            \n                            \n                                $user\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                init\n                            \n                            \n                                me\n                            \n                            \n                                refresh\n                            \n                            \n                                set\n                            \n                            \n                                signIn\n                            \n                            \n                                signInVK\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(data: AuthModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AuthModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(dto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInVK\n                        \n                    \n                \n            \n            \n                \nsignInVK(dto: AuthCallbackDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            AuthCallbackDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(dto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$isAuth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.$isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() => !!this.$user().id)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAuthenticatedUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Signal,\n  WritableSignal,\n  computed,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  BehaviorSubject,\n  Observable,\n  catchError,\n  map,\n  switchMap,\n  throwError,\n} from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { toObservable } from '@angular/core/rxjs-interop'\n\nimport { AuthenticatedUser, initialAuthenticatedUser } from '@interfaces'\nimport { AuthCallbackDto, SignUpDto, SignInDto } from '@dtos'\nimport { AuthModel } from '@models'\n\nimport { API, Role } from '@enums'\n\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private http: HttpClient = inject(HttpClient)\n\n  $user: WritableSignal = signal(initialAuthenticatedUser)\n\n  $avatar: Signal = computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n\n  $isAuth: Signal = computed(() => !!this.$user().id)\n  $$isAuth: Observable = toObservable(this.$isAuth)\n\n  $isAdmin: Signal = computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n\n  $isLoading: BehaviorSubject = new BehaviorSubject(false)\n  $$isLoading: Observable = this.$isLoading.asObservable()\n\n  set(data: AuthModel) {\n    this.$user.set({\n      id: data.id,\n      username: data.username,\n      birthday: data.birthday,\n      sex: data.sex,\n      token: data.access_token,\n      roles: data.roles.sort((a, b) => a.localeCompare(b)),\n      vk_id: data.vk_id || null,\n      avatar: data.avatar ? data.avatar.url : null,\n      vk_avatar: data.vk_avatar || null,\n      email: data.email || null,\n      first_name: data.first_name || null,\n      last_name: data.last_name || null,\n      full_name:\n        data.first_name && data.last_name\n          ? `${data.first_name.trim()} ${data.last_name.trim()}`\n          : null,\n    })\n  }\n\n  clear() {\n    this.$user.set(initialAuthenticatedUser)\n  }\n\n  init(): Observable {\n    this.$isLoading.next(true)\n\n    return this.me().pipe(\n      map((data) => {\n        this.set(data)\n        return data\n      }),\n      catchError((err: HttpErrorResponse) => {\n        if (err.status === 401) {\n          return this.refresh().pipe(\n            switchMap(() => this.me().pipe(map((val) => val)))\n          )\n        }\n\n        return throwError(() => err)\n      })\n    )\n  }\n\n  signIn(dto: SignInDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_IN}`, dto)\n  }\n\n  signUp(dto: SignUpDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_UP}`, dto)\n  }\n\n  signOut(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_OUT}`, {})\n  }\n\n  signInVK(dto: AuthCallbackDto): Observable {\n    return this.http.post(\n      `${env.apiUrl}${API.VK_ID_EXCHANGE_TOKEN}`,\n      dto\n    )\n  }\n\n  me(): Observable {\n    return this.http.get(`${env.apiUrl}${API.AUTH_ME}`)\n  }\n\n  refresh(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_REFRESH}`, {})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticatedUser.html":{"url":"interfaces/AuthenticatedUser.html","title":"interface - AuthenticatedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticatedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/authenticated-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Account\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from './account.interface'\n\nexport const initialAuthenticatedUser: AuthenticatedUser = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n\nexport interface AuthenticatedUser extends Account {\n  token: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeAvatarComponent.html":{"url":"components/ChangeAvatarComponent.html","title":"component - ChangeAvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangeAvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/change-avatar/change-avatar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-change-avatar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiSvgModule\n                            TuiHintModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-avatar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./change-avatar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                account\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                avatarAlreadyExists\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                targetAccountId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    Private\n                                handleUploadResult\n                            \n                            \n                                removeAvatar\n                            \n                            \n                                removeFile\n                            \n                            \n                                    Private\n                                showError\n                            \n                            \n                                    Private\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(context: TuiDialogContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    TuiDialogContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleUploadResult\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUploadResult(res: UploadModel | Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            UploadModel | Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(err: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarAlreadyExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        targetAccountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Inject,\n  WritableSignal,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogContext,\n  TuiHintModule,\n  TuiLoaderModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { TuiFileLike, TuiInputFilesModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus'\nimport { catchError, of, switchMap, takeLast } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AccountService } from '@services'\n\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-change-avatar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiSvgModule,\n    TuiHintModule,\n  ],\n  templateUrl: './change-avatar.component.html',\n  styleUrl: './change-avatar.component.scss',\n})\n@Sentry.TraceClass({ name: 'ChangeAvatar' })\nexport class ChangeAvatarComponent {\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private account = inject(AccountService)\n\n  constructor(\n    @Inject(POLYMORPHEUS_CONTEXT)\n    private readonly context: TuiDialogContext\n  ) {\n    this.targetAccountId = context.data.accountId\n    this.avatarAlreadyExists = context.data.avatarAlreadyExists\n  }\n\n  readonly control = new FormControl(null)\n\n  isLoading: WritableSignal = signal(false)\n\n  private targetAccountId: string\n  avatarAlreadyExists: boolean\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  changeAvatar() {\n    this.isLoading.set(true)\n\n    if (this.avatarAlreadyExists) {\n      this.account\n        .removeAvatar({\n          id: this.targetAccountId,\n        })\n        .pipe(\n          takeUntilDestroyed(this.destroyRef),\n          catchError((res) => {\n            return of(new Error(res.error))\n          }),\n          switchMap((res) =>\n            res instanceof Error ? of(res) : this.uploadAvatar()\n          )\n        )\n        .subscribe({\n          next: (res) => this.handleUploadResult(res),\n          error: (err) => {\n            this.showError('Возникла проблема. Попробуйте позже')\n            throw err\n          },\n        })\n    } else {\n      this.uploadAvatar().subscribe({\n        next: (res) => this.handleUploadResult(res as UploadModel),\n        error: (err) => {\n          this.showError('Возникла проблема. Попробуйте позже')\n          throw err\n        },\n      })\n    }\n  }\n\n  removeAvatar() {\n    this.isLoading.set(true)\n\n    this.account\n      .removeAvatar({\n        id: this.targetAccountId,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (data) => {\n          this.isLoading.set(false)\n          this.context.completeWith(true)\n        },\n        error: (err) => {\n          this.showError('Возникла проблема. Попробуйте позже')\n        },\n      })\n  }\n\n  private uploadAvatar() {\n    return this.account\n      .uploadAvatar({\n        file: this.control.value!,\n        id: this.targetAccountId,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef), takeLast(1))\n  }\n\n  private handleUploadResult(res: UploadModel | Error) {\n    if (res instanceof Error) {\n      this.showError('Возникла проблема. Попробуйте позже')\n      throw res\n    }\n\n    this.isLoading.set(false)\n\n    this.context.completeWith(res ? res.url : null)\n  }\n\n  private showError(err: string) {\n    this.isLoading.set(false)\n\n    this.alerts.open(err, { status: 'error' }).subscribe()\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      Обновить аватар\n    \n\n    @if (avatarAlreadyExists) {\n      \n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Обновить аватар        @if (avatarAlreadyExists) {                        }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangeAvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatsComponent.html":{"url":"components/ChatsComponent.html","title":"component - ChatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chats/chats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-chats\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./chats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-chats',\n  standalone: true,\n  imports: [],\n  templateUrl: './chats.component.html',\n  styleUrl: './chats.component.scss',\n})\n@Sentry.TraceClass({ name: 'Chats' })\nexport class ChatsComponent {}\n\n    \n\n    \n        chats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'chats works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $isNotFoundPage\n                            \n                            \n                                $isRefusedPage\n                            \n                            \n                                $menuIsOpen\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                    Async\n                                loadConfig\n                            \n                            \n                                toggleMenuStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/config.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenuStatus\n                        \n                    \n                \n            \n            \n                \ntoggleMenuStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $isNotFoundPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isRefusedPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $menuIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, WritableSignal, inject, signal } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { filter, firstValueFrom, map } from 'rxjs'\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private router = inject(Router)\n  private http = inject(HttpClient)\n\n  $isNotFoundPage: WritableSignal = signal(false)\n  $isRefusedPage: WritableSignal = signal(false)\n  $menuIsOpen: WritableSignal = signal(false)\n\n  constructor() {\n    this.router.events\n      .pipe(\n        filter((val) => val instanceof NavigationEnd),\n        map((a: any) => {\n          if (a.url && a.urlAfterRedirects) {\n            this.$isNotFoundPage.set(\n              a.url.includes('/404') || a.urlAfterRedirects.includes('/404')\n            )\n          }\n        })\n      )\n      .subscribe()\n  }\n\n  async loadConfig(): Promise {\n    const config = await firstValueFrom(this.http.get('/assets/config.json'))\n    Object.assign(env, config)\n  }\n\n  toggleMenuStatus() {\n    this.$menuIsOpen.set(!this.$menuIsOpen())\n  }\n\n  closeMenu() {\n    if (this.$menuIsOpen()) {\n      this.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmAlertComponent.html":{"url":"components/ConfirmAlertComponent.html","title":"component - ConfirmAlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmAlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/confirm-alert/confirm-alert.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-confirm-alert\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./confirm-alert.component.html\n            \n\n\n\n            \n                styleUrl\n                ./confirm-alert.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                complete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(context: TuiDialog | boolean>)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/components/confirm-alert/confirm-alert.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        TuiDialog | boolean>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        complete\n                        \n                    \n                \n            \n            \n                \ncomplete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/confirm-alert/confirm-alert.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/confirm-alert/confirm-alert.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus'\nimport { Component, Inject } from '@angular/core'\nimport { TuiAlertOptions } from '@taiga-ui/core'\nimport { TuiDialog } from '@taiga-ui/cdk'\n\ninterface ConfirmAlertOptions {\n  message: string\n  confirmMessage: string\n}\n\n@Component({\n  selector: 'spomen-confirm-alert',\n  standalone: true,\n  templateUrl: './confirm-alert.component.html',\n  styleUrl: './confirm-alert.component.scss',\n})\nexport class ConfirmAlertComponent {\n  confirmMessage: string\n\n  constructor(\n    @Inject(POLYMORPHEUS_CONTEXT)\n    private readonly context: TuiDialog,\n      boolean\n    >\n  ) {\n    this.confirmMessage = this.context.data.confirmMessage\n  }\n\n  complete(): void {\n    this.context.completeWith(true)\n  }\n}\n\n    \n\n    \n        \n  {{ this.confirmMessage }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ this.confirmMessage }}'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmAlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmAlertOptions.html":{"url":"interfaces/ConfirmAlertOptions.html","title":"interface - ConfirmAlertOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfirmAlertOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/components/confirm-alert/confirm-alert.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmMessage\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus'\nimport { Component, Inject } from '@angular/core'\nimport { TuiAlertOptions } from '@taiga-ui/core'\nimport { TuiDialog } from '@taiga-ui/cdk'\n\ninterface ConfirmAlertOptions {\n  message: string\n  confirmMessage: string\n}\n\n@Component({\n  selector: 'spomen-confirm-alert',\n  standalone: true,\n  templateUrl: './confirm-alert.component.html',\n  styleUrl: './confirm-alert.component.scss',\n})\nexport class ConfirmAlertComponent {\n  confirmMessage: string\n\n  constructor(\n    @Inject(POLYMORPHEUS_CONTEXT)\n    private readonly context: TuiDialog,\n      boolean\n    >\n  ) {\n    this.confirmMessage = this.context.data.confirmMessage\n  }\n\n  complete(): void {\n    this.context.completeWith(true)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-dashboard',\n  standalone: true,\n  imports: [],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\n@Sentry.TraceClass({ name: 'Dashboard' })\nexport class DashboardComponent {}\n\n    \n\n    \n        dashboard works!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,\nratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequatur\nmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!\nSoluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atque\neaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quis\nvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sed\nminima voluptatum adipisci sapiente officiis natus tempore itaque, nihil\npossimus nemo deserunt atque provident et in eius repellat facere magni culpa\nconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, aut\nquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisi\nvero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quam\nobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enim\ndeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepe\ntotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, odit\naspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totam\nperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptate\nrepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiis\nlaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,\nimpedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!\nAspernatur, dolor inventore quae doloremque accusantium quos odit nostrum\nbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantium\nquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentium\nnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animi\ncommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,\nnemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat amet\nimpedit iure modi rem unde sit officia! Voluptate veritatis optio quam\nrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihil\nconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,\noptio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illum\nobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctio\naliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sit\ncumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,\nest nemo ex recusandae, accusamus nostrum dolorum at, totam qui esse\nperspiciatis labore autem minima! Error veniam soluta corporis ad voluptates\nitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihil\ndicta quos consequuntur similique doloremque provident voluptate at iste itaque\nbeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facere\nquae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestias\net consectetur cum iusto modi, sit reprehenderit dicta temporibus deleniti\nquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullam\nsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architecto\nnesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiat\nfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendis\nnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditate\nquasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,\neligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odio\nat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernatur\nquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventore\nillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiis\npariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdam\nperferendis ratione cum, minus molestiae reprehenderit autem architecto deserunt\naut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,\nmolestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,\nvoluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditate\nreiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus ut\nconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe soluta\nquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatis\nlibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,\nfugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecati\nnostrum, laudantium maiores repudiandae aspernatur perferendis libero sequi\nrepellat corporis expedita temporibus explicabo quae placeat odit molestiae\ndolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisi\neaque impedit officia consequatur deserunt incidunt, inventore corrupti sit\naliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibus\nlaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquid\npraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitia\naliquam nihil similique voluptate iure tenetur at velit nulla officia corporis\ndicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequuntur\ncommodi numquam, totam corporis recusandae maiores tempore aperiam distinctio\nvoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro vel\nmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquam\nnihil laudantium quibusdam, nulla, possimus asperiores quas delectus\nconsequuntur dolores alias, odit amet odio? Perferendis tenetur deleniti\npariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsa\nneque est odit, vel voluptates repellendus quod suscipit minima, accusamus\nreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborum\ncupiditate officiis sint unde nihil! Rerum enim laudantium esse possimus\naliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odio\nmaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam qui\nreprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquam\nearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnis\nrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iusto\narchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribus\nut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaque\nlaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque soluta\ndeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illum\ndeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sit\nincidunt, aperiam quia omnis! Sequi, aliquam eligendi!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,ratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequaturmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!Soluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atqueeaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quisvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sedminima voluptatum adipisci sapiente officiis natus tempore itaque, nihilpossimus nemo deserunt atque provident et in eius repellat facere magni culpaconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, autquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisivero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quamobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enimdeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepetotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, oditaspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totamperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptaterepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiislaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,impedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!Aspernatur, dolor inventore quae doloremque accusantium quos odit nostrumbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantiumquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentiumnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animicommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,nemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat ametimpedit iure modi rem unde sit officia! Voluptate veritatis optio quamrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihilconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,optio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illumobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctioaliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sitcumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,est nemo ex recusandae, accusamus nostrum dolorum at, totam qui esseperspiciatis labore autem minima! Error veniam soluta corporis ad voluptatesitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihildicta quos consequuntur similique doloremque provident voluptate at iste itaquebeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facerequae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestiaset consectetur cum iusto modi, sit reprehenderit dicta temporibus delenitiquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullamsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architectonesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiatfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendisnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditatequasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,eligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odioat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernaturquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventoreillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiispariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdamperferendis ratione cum, minus molestiae reprehenderit autem architecto deseruntaut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,molestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,voluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditatereiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus utconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe solutaquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatislibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,fugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecatinostrum, laudantium maiores repudiandae aspernatur perferendis libero sequirepellat corporis expedita temporibus explicabo quae placeat odit molestiaedolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisieaque impedit officia consequatur deserunt incidunt, inventore corrupti sitaliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibuslaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquidpraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitiaaliquam nihil similique voluptate iure tenetur at velit nulla officia corporisdicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequunturcommodi numquam, totam corporis recusandae maiores tempore aperiam distinctiovoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro velmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquamnihil laudantium quibusdam, nulla, possimus asperiores quas delectusconsequuntur dolores alias, odit amet odio? Perferendis tenetur delenitipariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsaneque est odit, vel voluptates repellendus quod suscipit minima, accusamusreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborumcupiditate officiis sint unde nihil! Rerum enim laudantium esse possimusaliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odiomaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam quireprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquamearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnisrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iustoarchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribusut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaquelaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque solutadeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illumdeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sitincidunt, aperiam quia omnis! Sequi, aliquam eligendi!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUploadByIdGQL.html":{"url":"injectables/DeleteUploadByIdGQL.html","title":"injectable - DeleteUploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Mutation\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DeleteUploadByIdQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/mutations/delete-upload-by-id.gql.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Mutation } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nexport type DeleteUploadByIdResponse = {\n  id: string\n}\n\nexport type DeleteUploadByIdVariables = {\n  id: string\n}\n\nexport const DeleteUploadByIdQuery = gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n\n@Injectable()\nexport class DeleteUploadByIdGQL extends Mutation {\n  document = DeleteUploadByIdQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Env.html":{"url":"interfaces/Env.html","title":"interface - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Env\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/env.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiUrl\n                                        \n                                \n                                \n                                        \n                                            appId\n                                        \n                                \n                                \n                                        \n                                            appVersion\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            origin\n                                        \n                                \n                                \n                                        \n                                            redirectUrl\n                                        \n                                \n                                \n                                        \n                                            sentryDsn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        origin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sentryDsn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sentryDsn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Env {\n  environment: 'local' | 'dev' | 'staging' | 'production'\n  appId: number\n  redirectUrl: string\n  apiUrl: string\n  origin: string\n  sentryDsn: string\n  appVersion: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-events\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n            \n                styleUrl\n                ./events.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n@Component({\n  selector: 'spomen-events',\n  standalone: true,\n  imports: [],\n  templateUrl: './events.component.html',\n  styleUrl: './events.component.scss',\n})\n@Sentry.TraceClass({ name: 'Events' })\nexport class EventsComponent {}\n\n    \n\n    \n        events works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'events works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtensionInputComponent.html":{"url":"components/ExtensionInputComponent.html","title":"component - ExtensionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtensionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/extension-input/extension-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: ExtensionInputComponent,\n}\n                                UploadService\n                                UploadExtensionsGQL\n                \n            \n\n\n            \n                selector\n                spomen-extension-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiDataListWrapperModule\n                            TuiTextfieldControllerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./extension-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./extension-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Private\n                                uploadExtensionsGQL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                $extensions\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Тип'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        $extensions\n                    \n                \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:67\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadExtensionsGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadExtensionsGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Output,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadExtensionsGQL } from '@graphql'\nimport { UploadService } from '@services'\n\n@Component({\n  selector: 'spomen-extension-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiDataListWrapperModule,\n    TuiTextfieldControllerModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: ExtensionInputComponent,\n    },\n    UploadService,\n    UploadExtensionsGQL,\n  ],\n  templateUrl: './extension-input.component.html',\n  styleUrl: './extension-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'ExtensionInput' })\nexport class ExtensionInputComponent implements OnInit, ControlValueAccessor {\n  private uploadExtensionsGQL = inject(UploadExtensionsGQL)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Тип'\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  @Output() $extensions: WritableSignal = signal([])\n\n  ngOnInit() {\n    this.uploadExtensionsGQL\n      .watch({\n        size: 20,\n        page: 1,\n      })\n      .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: ({ data }) => {\n          this.$extensions.set(data.uploadExtensions)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список расширений', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExtensionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileParams.html":{"url":"interfaces/FileParams.html","title":"interface - FileParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/upload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileParams {\n  name: string\n  ext: string\n  mime?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAccountModel.html":{"url":"interfaces/GetAccountModel.html","title":"interface - GetAccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/models/getAccount.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '@enums'\n\nexport interface GetAccountModel {\n  account: {\n    id: string\n    username: string\n    email: string | null\n    roles: Role[]\n    avatar: {\n      url: string\n    } | null\n    vk_id: string | null\n    vk_avatar: string | null\n    first_name: string | null\n    last_name: string | null\n    birthday: Date | null\n    sex: '0' | '1' | '2' | null\n    created_at: Date\n    updated_at: Date\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphqlError.html":{"url":"interfaces/GraphqlError.html","title":"interface - GraphqlError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphqlError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiHostedDropdownModule\n                                MeComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                isOpenProfileDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpenProfileDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiHostedDropdownModule, TuiSvgModule } from '@taiga-ui/core'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { Component, inject } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\n\nimport { MeComponent } from '@components/me'\n\n@Component({\n  selector: 'spomen-header',\n  standalone: true,\n  imports: [\n    RouterModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiHostedDropdownModule,\n    MeComponent,\n  ],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\n@Sentry.TraceClass({ name: 'Header' })\nexport class HeaderComponent {\n  auth = inject(AuthService)\n  config = inject(ConfigService)\n\n  isOpenProfileDropdown = false\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n    \n  \n  \n    \n      \n    \n  \n  \n    @if (this.auth.$user().id) {\n      \n        \n\n        \n        \n      \n    } @else {\n      Войти\n    }\n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      @if (this.auth.$user().id) {                                        } @else {      Войти    }          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IFrameUrlPipe.html":{"url":"pipes/IFrameUrlPipe.html","title":"pipe - IFrameUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IFrameUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/iframe-url.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        iframeUrl\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(url: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/iframe-url.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DomSanitizer } from '@angular/platform-browser'\nimport { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'iframeUrl',\n  standalone: true,\n})\nexport class IFrameUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  transform(url: string | null): any {\n    return url ? this.domSanitizer.bypassSecurityTrustResourceUrl(url) : null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeComponent.html":{"url":"components/MeComponent.html","title":"component - MeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/me/me.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-me\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./me.component.html\n            \n\n\n\n            \n                styleUrl\n                ./me.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                destroyRef\n                            \n                            \n                                dialogs\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMe\n                            \n                            \n                                handleSignOut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/me/me.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMe\n                        \n                    \n                \n            \n            \n                \nhandleMe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  EventEmitter,\n  Output,\n  inject,\n} from '@angular/core'\n\nimport { TuiDialogService, TuiSvgModule } from '@taiga-ui/core'\nimport { AuthService, ConfigService } from '@services'\nimport * as Sentry from '@sentry/angular'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'spomen-me',\n  standalone: true,\n  imports: [TuiSvgModule],\n  templateUrl: './me.component.html',\n  styleUrl: './me.component.scss',\n})\n@Sentry.TraceClass({ name: 'Me' })\nexport class MeComponent {\n  dialogs = inject(TuiDialogService)\n  destroyRef = inject(DestroyRef)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n  router = inject(Router)\n\n  @Output() close = new EventEmitter()\n\n  handleMe() {\n    this.router.navigate([`/${this.auth.$user().username}`])\n    this.config.closeMenu()\n    this.close.emit()\n  }\n\n  handleSignOut() {\n    this.dialogs\n      .open('Выйти из воспоминаний?', {\n        size: 's',\n        required: true,\n      })\n      .subscribe({\n        error: () => {},\n        complete: () =>\n          this.auth.signOut().subscribe({\n            next: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n            },\n            error: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n              window.location.reload()\n            },\n          }),\n      })\n  }\n}\n\n    \n\n    \n        \n  Профиль\n  \n\n\n  Выйти\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Профиль    Выйти  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemoriesComponent.html":{"url":"components/MemoriesComponent.html","title":"component - MemoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/memories/memories.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-memories\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./memories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./memories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-memories',\n  standalone: true,\n  imports: [],\n  templateUrl: './memories.component.html',\n  styleUrl: './memories.component.scss',\n})\n@Sentry.TraceClass({ name: 'Memories' })\nexport class MemoriesComponent {}\n\n    \n\n    \n        memories works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'memories works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/menu/menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : env.appVersion\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/menu/menu.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { env } from '@env'\n\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-menu',\n  standalone: true,\n  imports: [NavComponent],\n  templateUrl: './menu.component.html',\n  styleUrl: './menu.component.scss',\n})\n@Sentry.TraceClass({ name: 'Menu' })\nexport class MenuComponent {\n  appVersion = env.appVersion\n}\n\n    \n\n    \n        \n  \n  {{appVersion}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{appVersion}}'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/nav/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-nav\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterLink\n                                RouterLinkActive\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n            \n                styleUrl\n                ./nav.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                authenticatedRoutes\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fixed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fixed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/nav/nav.component.ts:57\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/nav/nav.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticatedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : protectedRoutes\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { RouterLink, RouterLinkActive } from '@angular/router'\nimport { Component, Input, inject } from '@angular/core'\nimport { TuiSvgModule } from '@taiga-ui/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\nimport { Route } from '@interfaces'\n\nconst protectedRoutes: Route[] = [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n\n@Component({\n  selector: 'spomen-nav',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive, TuiSvgModule],\n  templateUrl: './nav.component.html',\n  styleUrl: './nav.component.scss',\n})\n@Sentry.TraceClass({ name: 'Nav' })\nexport class NavComponent {\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  @Input() fixed: boolean = false\n\n  authenticatedRoutes = protectedRoutes\n\n  closeMenu() {\n    if (this.config.$menuIsOpen()) {\n      this.config.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n    \n        \n  @if (this.auth.$isAuth()) {\n    @for (route of this.authenticatedRoutes; track route) {\n      \n        \n        {{ route.title }}\n      \n    }\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (this.auth.$isAuth()) {    @for (route of this.authenticatedRoutes; track route) {                      {{ route.title }}          }  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showRef\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showRef\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Такой страницы не существует'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { RouterModule } from '@angular/router'\nimport { Component, Input } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-not-found',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss',\n})\n@Sentry.TraceClass({ name: 'NotFound' })\nexport class NotFoundComponent {\n  @Input() title: string = 'Такой страницы не существует'\n  @Input() showRef: boolean = true\n}\n\n    \n\n    \n        {{ this.title }}\n\n@if (this.showRef) {\n  На главную\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ this.title }}@if (this.showRef) {  На главную}'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OopsComponent.html":{"url":"components/OopsComponent.html","title":"component - OopsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OopsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/oops/oops.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-oops\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./oops.component.html\n            \n\n\n\n            \n                styleUrl\n                ./oops.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-oops',\n  standalone: true,\n  imports: [],\n  templateUrl: './oops.component.html',\n  styleUrl: './oops.component.scss',\n})\n@Sentry.TraceClass({ name: 'Oops' })\nexport class OopsComponent {}\n\n    \n\n    \n        \n  \n    У нас технические работы\n    Попробуйте вернуться позже\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      У нас технические работы    Попробуйте вернуться позже          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'OopsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermissionInputComponent.html":{"url":"components/PermissionInputComponent.html","title":"component - PermissionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PermissionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/permission-input/permission-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: PermissionInputComponent,\n}\n                \n            \n\n\n            \n                selector\n                spomen-permission-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiTextfieldControllerModule\n                            TuiDataListWrapperModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./permission-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./permission-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                permissions\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissions\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Права доступа'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { Component, Input } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-permission-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiTextfieldControllerModule,\n    TuiDataListWrapperModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: PermissionInputComponent,\n    },\n  ],\n  templateUrl: './permission-input.component.html',\n  styleUrl: './permission-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'PermissionInput' })\nexport class PermissionInputComponent implements ControlValueAccessor {\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Права доступа'\n  @Input() permissions: string[] = [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'PermissionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                spomen-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiAvatarModule\n                            TuiSkeletonModule\n                            TuiDialogModule\n                            TuiChipModule\n                            TuiLineClampModule\n                            TuiSvgModule\n                            TuiHintModule\n                                SexPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isMe\n                            \n                            \n                                $$roles\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isMe\n                            \n                            \n                                $loading\n                            \n                            \n                                $profile\n                            \n                            \n                                $query\n                            \n                            \n                                    Private\n                                accountGQL\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                showChangeAvatarDialog\n                            \n                            \n                                    Private\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                serializeRole\n                            \n                            \n                                serializeSex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:100\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Profile.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeSex\n                        \n                    \n                \n            \n            \n                \nserializeSex(sex: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sex\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAccount)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showChangeAvatarDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Title)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Injector,\n  OnInit,\n  Signal,\n  WritableSignal,\n  computed,\n  effect,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiDialogService,\n  TuiHintModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiChipModule, TuiSkeletonModule } from '@taiga-ui/experimental'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus'\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ApolloError } from '@apollo/client/errors'\nimport { Title } from '@angular/platform-browser'\nimport * as Sentry from '@sentry/angular'\nimport { Observable, map } from 'rxjs'\n\nimport { isNotFound, serializeRole } from '@utils'\nimport { AuthService } from '@services'\nimport { AccountGQL } from '@graphql'\nimport { SexPipe } from '@pipes'\n\nimport { Account, Sex, initialAccount } from '@interfaces'\n\nimport { Role } from '@enums'\n\nimport { ChangeAvatarComponent } from './change-avatar/change-avatar.component'\n\nconst sexIcons = {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n\n@Component({\n  selector: 'spomen-profile',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TuiAvatarModule,\n    TuiSkeletonModule,\n    TuiDialogModule,\n    TuiChipModule,\n    TuiLineClampModule,\n    TuiSvgModule,\n    TuiHintModule,\n    SexPipe,\n  ],\n  providers: [DatePipe],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.scss',\n})\n@Sentry.TraceClass({ name: 'Profile' })\nexport class ProfileComponent implements OnInit {\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private route = inject(ActivatedRoute)\n  private injector = inject(Injector)\n  private router = inject(Router)\n  private title = inject(Title)\n  auth = inject(AuthService)\n\n  private accountGQL = inject(AccountGQL)\n\n  $profile: WritableSignal = signal(initialAccount)\n  $loading: WritableSignal = signal(true)\n  $isMe: WritableSignal = signal(false)\n  $query: WritableSignal = signal('')\n\n  $avatar: Signal = computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n\n  $$roles: Observable = toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n\n  $$isMe: Observable = this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n\n  constructor() {\n    effect(() => {\n      if (this.$profile()) {\n        const profile = this.$profile()\n\n        this.title.setTitle(profile!.full_name || profile!.username || '')\n      }\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'Profile.ngOnInit' })\n  ngOnInit(): void {\n    this.$$isMe.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n      next: (isMe) => {\n        if (isMe) {\n          this.$profile.set(this.auth.$user())\n          this.$loading.set(false)\n\n          return\n        }\n\n        this.accountGQL\n          .watch(\n            { username: this.$query() },\n            { fetchPolicy: 'cache-and-network' }\n          )\n          .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe({\n            next: ({ data, loading }) => {\n              const { account } = data\n\n              this.$loading.set(loading)\n\n              this.$profile.set({\n                ...account,\n                birthday: account.birthday || null,\n                avatar: account.avatar ? account.avatar.url : null,\n                vk_avatar: account.vk_avatar || null,\n                full_name:\n                  account.first_name && account.last_name\n                    ? `${account.first_name.trim()} ${account.last_name.trim()}`\n                    : null,\n              })\n            },\n            error: (err: ApolloError) => {\n              if (isNotFound(err.message)) {\n                this.router.navigate(['/404'])\n                return\n              }\n\n              this.alerts\n                .open('Сервер временно недоступен', { status: 'error' })\n                .pipe(takeUntilDestroyed(this.destroyRef))\n                .subscribe()\n            },\n          })\n      },\n    })\n  }\n\n  changeAvatar() {\n    this.showChangeAvatarDialog().subscribe((res: string | boolean | null) => {\n      if (res) {\n        this.alerts\n          .open(\n            `Аватар успешно ${typeof res === 'string' ? 'изменён' : 'удалён'}`,\n            { status: 'success' }\n          )\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe()\n\n        this.$profile.update((profile) => ({\n          ...profile,\n          avatar: typeof res === 'string' ? res : null,\n        }))\n\n        if (this.$isMe()) {\n          this.auth.$user.update((user) => ({\n            ...user,\n            avatar: typeof res === 'string' ? res : null,\n          }))\n        }\n      }\n    })\n  }\n\n  serializeRole(role: Role) {\n    return serializeRole(role)\n  }\n\n  serializeSex(sex: Sex | null): string {\n    return sex ? sexIcons[sex] : sexIcons[0]\n  }\n\n  private showChangeAvatarDialog = () =>\n    this.dialogs.open(\n      new PolymorpheusComponent(ChangeAvatarComponent, this.injector),\n      {\n        size: 's',\n        data: {\n          accountId: this.$profile().id,\n          avatarAlreadyExists: !!this.$profile().avatar,\n        },\n      }\n    )\n}\n\n    \n\n    \n        \n  \n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    \n  }\n  \n    @if (this.$loading()) {\n      @for (skeleton of [1, 2]; track skeleton) {\n        \n      }\n    } @else {\n      {{ this.serializeRole(role) }}\n    }\n  \n\n\n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    {{\n      this.$profile().full_name || this.$profile().username || ''\n    }}\n  }\n  \n    \n      \n      {{\n        this.$profile().birthday\n          ? (this.$profile().birthday | date: 'd MMMM')\n          : 'Не указан'\n      }}\n    \n    \n      \n      {{ this.$profile().sex | sex }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (this.$loading()) {    skeleton  } @else {      }      @if (this.$loading()) {      @for (skeleton of [1, 2]; track skeleton) {              }    } @else {      {{ this.serializeRole(role) }}    }    @if (this.$loading()) {    skeleton  } @else {    {{      this.$profile().full_name || this.$profile().username || \\'\\'    }}  }                  {{        this.$profile().birthday          ? (this.$profile().birthday | date: \\'d MMMM\\')          : \\'Не указан\\'      }}                    {{ this.$profile().sex | sex }}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PwaService.html":{"url":"injectables/PwaService.html","title":"injectable - PwaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PwaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/pwa.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/pwa.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/pwa.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/pwa.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(SwUpdate)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/pwa.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus'\nimport { inject, Injectable, Injector } from '@angular/core'\nimport { SwUpdate } from '@angular/service-worker'\nimport { TuiAlertService } from '@taiga-ui/core'\nimport { map } from 'rxjs'\n\nimport { ConfirmAlertComponent } from '@components/confirm-alert'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PwaService {\n  private alerts = inject(TuiAlertService)\n  private updates = inject(SwUpdate)\n  private injector = inject(Injector)\n\n  update() {\n    return this.updates.versionUpdates.subscribe((e) => {\n      switch (e.type) {\n        case 'VERSION_DETECTED': {\n          console.log(`Загрузка новой версии приложения: ${e.version.hash}`)\n          break\n        }\n        case 'VERSION_READY': {\n          console.log(`Текущая версия приложения: ${e.currentVersion.hash}`)\n          console.log(`Приложение обновлено до версии: ${e.latestVersion.hash}`)\n\n          this.alerts\n            .open(\n              new PolymorpheusComponent(ConfirmAlertComponent, this.injector),\n              {\n                label: 'Приложение обновлено',\n                status: 'info',\n                data: {\n                  confirmMessage: 'Перезагрузить',\n                },\n                autoClose: (item) => false,\n              }\n            )\n            .pipe(\n              map((res: unknown) => {\n                if (res) {\n                  document.location.reload()\n                }\n              })\n            )\n            .subscribe()\n\n          break\n        }\n        case 'VERSION_INSTALLATION_FAILED': {\n          console.log(`Ошибка установки версии '${e.version.hash}': ${e.error}`)\n\n          this.alerts\n            .open(`Версия ${e.version.hash} не установлена`, {\n              status: 'error',\n            })\n            .subscribe()\n        }\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Route.html":{"url":"interfaces/Route.html","title":"interface - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/route.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exact\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customIcon:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exact\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exact:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Route {\n  url: string\n  icon: string\n  title: string\n  customIcon?: boolean\n  exact?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScrollNearEndDirective.html":{"url":"directives/ScrollNearEndDirective.html","title":"directive - ScrollNearEndDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ScrollNearEndDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/directives/scroll-near-end.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [scrollNearEnd]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                windowScrollEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                threshold\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        threshold\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:21\n                            \n                        \n                \n                    \n                        threshold in PX when to emit before page end scroll\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nearEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:16\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n\n\n            \n                \n                    Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        windowScrollEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    windowScrollEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                    \n                        \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core'\n\n@Directive({\n  selector: '[scrollNearEnd]',\n  standalone: true,\n})\nexport class ScrollNearEndDirective implements OnInit {\n  @Output() nearEnd: EventEmitter = new EventEmitter()\n\n  /**\n   * threshold in PX when to emit before page end scroll\n   */\n  @Input() threshold = 20\n\n  private window!: Window\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit(): void {\n    // save window object for type safety\n    this.window = window\n  }\n\n  @HostListener('window:scroll', ['$event.target'])\n  windowScrollEvent(event: KeyboardEvent) {\n    // height of whole window page\n    const heightOfWholePage = this.window.document.documentElement.scrollHeight\n\n    // how big in pixels the element is\n    const heightOfElement = this.el.nativeElement.scrollHeight\n\n    // currently scrolled Y position\n    const currentScrolledY = this.window.scrollY\n\n    // height of opened window - shrinks if console is opened\n    const innerHeight = this.window.innerHeight\n\n    /**\n     * the area between the start of the page and when this element is visible\n     * in the parent component\n     */\n    const spaceOfElementAndPage = heightOfWholePage - heightOfElement\n\n    // calculated whether we are near the end\n    const scrollToBottom =\n      heightOfElement - innerHeight - currentScrolledY + spaceOfElementAndPage\n\n    // if the user is near end\n    if (scrollToBottom \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScrollService.html":{"url":"injectables/ScrollService.html","title":"injectable - ScrollService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScrollService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/scroll.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $state\n                            \n                            \n                                isEnd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(status: boolean, posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/scroll.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal({\n    posY: 0,\n    isEnd: false,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, WritableSignal } from '@angular/core'\nimport { toObservable } from '@angular/core/rxjs-interop'\nimport { debounceTime, filter, Observable } from 'rxjs'\n\ntype ScrollState = {\n  posY: number\n  isEnd: boolean\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScrollService {\n  private $state: WritableSignal = signal({\n    posY: 0,\n    isEnd: false,\n  })\n\n  isEnd: Observable = toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SexPipe.html":{"url":"pipes/SexPipe.html","title":"pipe - SexPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SexPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/sex.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sex\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/sex.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core'\n\nimport { Sex } from '@interfaces'\n\n@Pipe({\n  name: 'sex',\n  standalone: true,\n})\nexport class SexPipe implements PipeTransform {\n  transform(value: Sex | null): string {\n    switch (value) {\n      case 1: {\n        return 'Женский'\n      }\n      case 2: {\n        return 'Мужской'\n      }\n      default: {\n        return 'Не указан'\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-in/sign-in.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-in\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                vkIdOneTap\n                            \n                            \n                                    \n                                VkIdSdkOneTap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngAfterViewInit\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-in/sign-in.component.ts:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngAfterViewInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        vkIdOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new VKID.OneTap()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        VkIdSdkOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('VkIdSdkOneTap')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\nimport * as VKID from '@vkid/sdk'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  inject,\n} from '@angular/core'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-in',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './sign-in.component.html',\n  styleUrl: './sign-in.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignIn' })\nexport class SignInComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('VkIdSdkOneTap') VkIdSdkOneTap!: ElementRef\n\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private vkIdOneTap = new VKID.OneTap()\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    pass: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngAfterViewInit' })\n  ngAfterViewInit(): void {\n    if (this.VkIdSdkOneTap) {\n      this.vkIdOneTap.render({\n        container: this.VkIdSdkOneTap.nativeElement,\n        scheme: VKID.Scheme.DARK,\n        lang: VKID.Languages.RUS,\n        styles: {\n          borderRadius: 50,\n        },\n      })\n    }\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signIn({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err) => {\n            this.isLoading.next(false)\n\n            if (err.status === 401 || err.status === 400) {\n              this.subs$.push(this.alerts.open(`Вход не выполнен`).subscribe())\n              return\n            }\n\n            this.subs$.push(\n              this.alerts.open(`Приложение временно недоступно`).subscribe()\n            )\n          },\n          complete: () => this.isLoading.next(false),\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Войти\n      \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Войти          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-up/sign-up.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-up\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                            TuiInputDateModule\n                            TuiDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                confirmForm\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                showConfirmForm\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPass\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-up/sign-up.component.ts:45\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPass\n                        \n                    \n                \n            \n            \n                \nconfirmPass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:237\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport { Component, Input, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { TuiInputDateModule } from '@taiga-ui/kit'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport { TuiDay } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-up',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiLoaderModule,\n    TuiInputDateModule,\n    TuiDialogModule,\n  ],\n  templateUrl: './sign-up.component.html',\n  styleUrl: './sign-up.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignUp' })\nexport class SignUpComponent implements OnInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  showConfirmForm = false\n\n  form: FormGroup\n    pass: FormControl\n    name: FormControl\n    surname: FormControl\n    email: FormControl\n    birthday: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n\n  confirmForm: FormGroup\n  }> = new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(30),\n        ],\n      ],\n      name: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      surname: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      email: [\n        '',\n        [Validators.email, Validators.minLength(4), Validators.maxLength(30)],\n      ],\n      birthday: [new TuiDay(2000, 4, 27)],\n    })\n\n    this.confirmForm = this.fb.group({\n      confirmPass: ['', [Validators.required]],\n    })\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      if (this.form.controls.name.errors || this.form.controls.surname.errors) {\n        errors.push('Введите корректные имя и фамилию')\n      }\n\n      if (this.form.controls.email.errors) {\n        errors.push('Введите корректную почту')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.showConfirmForm = true\n  }\n\n  confirmPass() {\n    if (\n      this.form.controls.pass.value!.trim() !==\n      this.confirmForm.controls.confirmPass.value!.trim()\n    ) {\n      this.subs$.push(this.alerts.open('Некорректный пароль').subscribe())\n      this.confirmForm.controls.confirmPass.reset()\n      this.form.controls.pass.reset()\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signUp({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n          birthday: this.form.controls.birthday.touched\n            ? this.form.controls.birthday.value!.toUtcNativeDate().toISOString()\n            : undefined,\n          email:\n            this.form.controls.email.touched &&\n            this.form.controls.email.valid &&\n            this.form.controls.email.value!.trim().length > 0\n              ? this.form.controls.email.value!.trim()\n              : undefined,\n          first_name:\n            this.form.controls.name.touched &&\n            this.form.controls.name.valid &&\n            this.form.controls.name.value!.trim().length > 2\n              ? this.form.controls.name.value!.trim()\n              : undefined,\n          last_name:\n            this.form.controls.surname.touched &&\n            this.form.controls.surname.valid &&\n            this.form.controls.surname.value!.trim().length > 2\n              ? this.form.controls.surname.value!.trim()\n              : undefined,\n        })\n        .subscribe({\n          next: (data) => {\n            this.isLoading.next(false)\n\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err: HttpErrorResponse) => {\n            this.confirmForm.controls.confirmPass.reset()\n            this.form.controls.pass.reset()\n\n            if (err.status === 409) {\n              if (this.form.controls.email.value!.trim().length === 0) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данный логин уже зарегистрирован')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              } else if (\n                this.form.controls.email.touched &&\n                this.form.controls.email.valid\n              ) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данная почта уже зарегистрирована')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              }\n            }\n\n            this.subs$.push(\n              this.alerts\n                .open('Сервер временно недоступен', { status: 'error' })\n                .subscribe()\n            )\n\n            this.isLoading.next(false)\n            return\n          },\n          complete: () => {\n            this.confirmForm.controls.confirmPass.setValue('')\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n      Дата рождения\n      \n    \n  \n  \n    \n      Продолжить\n    \n\n\n\n  \n    \n\n    \n      ОК\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Дата рождения                        Продолжить                    ОК      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinesComponent.html":{"url":"components/TimelinesComponent.html","title":"component - TimelinesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelinesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timelines/timelines.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-timelines\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./timelines.component.html\n            \n\n\n\n            \n                styleUrl\n                ./timelines.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-timelines',\n  standalone: true,\n  imports: [],\n  templateUrl: './timelines.component.html',\n  styleUrl: './timelines.component.scss',\n})\n@Sentry.TraceClass({ name: 'Timelines' })\nexport class TimelinesComponent {}\n\n    \n\n    \n        timelines works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'timelines works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUploadByIdGQL.html":{"url":"injectables/UpdateUploadByIdGQL.html","title":"injectable - UpdateUploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Mutation\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UpdateUploadByIdQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/mutations/update-upload-by-id.gql.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Mutation } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Permission } from '@enums'\n\nexport type UpdateUploadByIdResponse = {\n  updateUpload: {\n    id: string\n    url: string\n    name: string\n    file_name: string\n    permissions: Permission[]\n  }\n}\n\nexport type UpdateUploadByIdVariables = {\n  data: {\n    name?: string\n    file_name?: string\n    permissions?: Permission[]\n  }\n  id: string\n}\n\nexport const UpdateUploadByIdQuery = gql`\n  mutation updateUploadById($data: UploadUpdateInput!, $id: String!) {\n    updateUpload(data: $data, where: { id: $id }) {\n      id\n      url\n      name\n      file_name\n      permissions\n    }\n  }\n`\n\n@Injectable()\nexport class UpdateUploadByIdGQL extends Mutation {\n  document = UpdateUploadByIdQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadActionsComponent.html":{"url":"components/UploadActionsComponent.html","title":"component - UploadActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-actions/upload-actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-upload-actions\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiSvgModule\n                            TuiPreviewActionModule\n                            TuiHintModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-actions.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-actions.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _actions\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                            \n                                handleSave\n                            \n                            \n                                preview\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                            \n                                handleSave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        handleDelete\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleOpen\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleSave\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _actions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required({ alias: 'actions' })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDelete\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleOpen\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSave\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input void } | null>(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiPreviewActionModule } from '@taiga-ui/addon-preview'\nimport { TuiHintModule, TuiSvgModule } from '@taiga-ui/core'\nimport { Component, input, output } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadActionsParams } from '@interfaces'\n\n@Component({\n  selector: 'spomen-upload-actions',\n  standalone: true,\n  imports: [TuiSvgModule, TuiPreviewActionModule, TuiHintModule],\n  templateUrl: './upload-actions.component.html',\n  styleUrl: './upload-actions.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadActions' })\nexport class UploadActionsComponent {\n  _actions = input.required({ alias: 'actions' })\n  url = input.required()\n\n  preview = input void } | null>(null)\n\n  handleOpen = output()\n  handleSave = output()\n  handleDelete = output()\n}\n\n    \n\n    \n        @if (this._actions().open) {\n  \n    \n  \n}\n\n@if (this._actions().delete) {\n  \n    \n  \n}\n\n@if (this._actions().save) {\n  \n    \n  \n}\n\n\n  \n\n\n@if(this.preview()) {\n  \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (this._actions().open) {        }@if (this._actions().delete) {        }@if (this._actions().save) {        }  @if(this.preview()) {        }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadActionsParams.html":{"url":"interfaces/UploadActionsParams.html","title":"interface - UploadActionsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadActionsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/ui.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            delete\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            save\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        save\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        save:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UploadActionsParams {\n  open?: boolean\n  save?: boolean\n  delete?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadByIdGQL.html":{"url":"injectables/UploadByIdGQL.html","title":"injectable - UploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-by-id.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { UploadModel } from '@models'\n\nexport type UploadByIdResponse = {\n  upload: UploadModel\n}\n\nexport type UploadByIdVariables = {\n  id?: string\n}\n\nexport type UploadByIdQueryRef = QueryRef\n\n@Injectable()\nexport class UploadByIdGQL extends Query {\n  document = gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadExtensionsGQL.html":{"url":"injectables/UploadExtensionsGQL.html","title":"injectable - UploadExtensionsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadExtensionsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-extensions.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-extensions.gql.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\n\nexport type UploadExtensionsResponse = {\n  uploadExtensions: string[]\n}\n\nexport type UploadExtensionsVariables = Pagination & {}\n\nexport type UploadExtensionsQueryRef = QueryRef\n\n@Injectable()\nexport class UploadExtensionsGQL extends Query {\n  document = gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadFileComponent.html":{"url":"components/UploadFileComponent.html","title":"component - UploadFileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadFileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-file/upload-file.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadService\n                \n            \n\n\n            \n                selector\n                spomen-upload-file\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiStepperModule\n                            TuiInputInlineModule\n                            TuiToggleModule\n                            TuiChipModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiLinkModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-file.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-file.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                currentStep\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Readonly\n                                fileForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                upload\n                            \n                            \n                                uploaded\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextStep\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFile\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nextStep\n                        \n                    \n                \n            \n            \n                \nnextStep()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UploadService\n\n                    \n                \n                \n                    \n                        Default value : inject(UploadService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService).$user()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiFileLike,\n  TuiInputFilesModule,\n  TuiInputInlineModule,\n  TuiLineClampModule,\n  TuiStepperModule,\n  TuiToggleModule,\n} from '@taiga-ui/kit'\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  OnInit,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport {\n  TuiAlertService,\n  TuiLoaderModule,\n  TuiSvgModule,\n  TuiLinkModule,\n} from '@taiga-ui/core'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, UploadService } from '@services'\nimport { AuthenticatedUser } from '@interfaces'\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-upload-file',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiStepperModule,\n    TuiInputInlineModule,\n    TuiToggleModule,\n    TuiChipModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiLinkModule,\n  ],\n  providers: [UploadService],\n  templateUrl: './upload-file.component.html',\n  styleUrl: './upload-file.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadFile' })\nexport class UploadFileComponent implements OnInit {\n  private user: AuthenticatedUser = inject(AuthService).$user()\n  private upload: UploadService = inject(UploadService)\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  isLoading: WritableSignal = signal(false)\n  uploaded: WritableSignal = signal(null)\n\n  readonly control = new FormControl(null)\n\n  readonly fileForm = new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n\n  currentStep: number = 1\n\n  ngOnInit() {\n    this.fileForm.controls['ext'].disable()\n  }\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  nextStep() {\n    if (!this.control.value) {\n      return\n    }\n\n    const selectedFile = this.upload.getFileParams(this.control.value)\n\n    this.fileForm.controls['name'].setValue(selectedFile.name)\n    this.fileForm.controls['ext'].setValue('.' + selectedFile.ext)\n\n    this.currentStep++\n  }\n\n  uploadFile() {\n    if (\n      !this.fileForm.controls['name'].valid ||\n      this.fileForm.controls['name'].value!.trim().length === 0\n    ) {\n      this.alerts\n        .open('Название файла не может быть меньше 2 символов')\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe()\n\n      return\n    }\n\n    const isCustomName =\n      this.control.value!.name !==\n      this.fileForm.controls['name'].value! +\n        '' +\n        this.fileForm.controls['ext'].value!\n\n    this.isLoading.set(true)\n\n    this.upload\n      .uploadFile({\n        file: this.control.value!,\n        compress: this.fileForm.controls['compress'].value!,\n        private: this.fileForm.controls['private'].value!,\n        path: this.user.id!,\n        name: isCustomName ? this.fileForm.controls['name'].value! : undefined,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.isLoading.set(false)\n\n          this.uploaded.set(res)\n\n          this.alerts\n            .open('Файл успешно загружен', {\n              status: 'success',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.currentStep++\n        },\n        error: () => {\n          this.isLoading.set(false)\n\n          this.alerts\n            .open('Ошибка загрузки файла', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          // TODO: Обработка превышенного лимита файлов\n        },\n      })\n  }\n}\n\n    \n\n    \n        \n  \n    @switch (this.currentStep) {\n      @case (1) {\n        \n      }\n\n      @case (2) {\n        \n          \n            \n            \n            {{ this.fileForm.controls['ext'].value }}\n          \n          \n            \n              \n                Сжать\n                \n              \n              \n                Личный\n                \n              \n            \n            \n              \n                Загрузить\n              \n            \n          \n        \n      }\n\n      @case (3) {\n            \n              \n              Файл успешно загружен\n            \n            \n              Название\n              \n              Файл\n              \n              Ссылка\n              \n              \n              \n            \n      }\n      @default {\n        \n      }\n    }\n  \n\n\n\n  \n    \n      \n    \n    \n      \n    \n    @if (this.control.value) {\n      Далее\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @switch (this.currentStep) {      @case (1) {              }      @case (2) {                                                      {{ this.fileForm.controls[\\'ext\\'].value }}                                                              Сжать                                                            Личный                                                                                    Загрузить                                                  }      @case (3) {                                        Файл успешно загружен                                      Название                            Файл                            Ссылка                                                            }      @default {              }    }                                    @if (this.control.value) {      Далее    }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadFileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadInfoComponent.html":{"url":"components/UploadInfoComponent.html","title":"component - UploadInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-info/upload-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadByIdGQL\n                                DeleteUploadByIdGQL\n                                UpdateUploadByIdGQL\n                \n            \n\n\n            \n                selector\n                spomen-upload-info\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputInlineModule\n                            TuiChipModule\n                            TuiLineClampModule\n                            TuiToggleModule\n                            TuiAvatarModule\n                            TuiLoaderModule\n                                UploadActionsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-info.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-info.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $actions\n                            \n                            \n                                $editable\n                            \n                            \n                                $edited\n                            \n                            \n                                $loading\n                            \n                            \n                                $upload\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                deleteUploadByIdGQL\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                isAdmin\n                            \n                            \n                                onDelete\n                            \n                            \n                                onUpdate\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                updateUploadByIdGQL\n                            \n                            \n                                    Private\n                                uploadByIdGQL\n                            \n                            \n                                uploadId\n                            \n                            \n                                uploadInfoForm\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickOwner\n                            \n                            \n                                    Private\n                                deleteUpload\n                            \n                            \n                                    Private\n                                getUpdatedFields\n                            \n                            \n                                handleDeleteUpload\n                            \n                            \n                                handleSaveUpload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                showPrompt\n                            \n                            \n                                    Private\n                                updateUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                uploadId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        uploadId\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-info/upload-info.component.ts:95\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-info/upload-info.component.ts:98\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickOwner\n                        \n                    \n                \n            \n            \n                \nclickOwner()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:245\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUpdatedFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUpdatedFields()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:273\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDeleteUpload\n                        \n                    \n                \n            \n            \n                \nhandleDeleteUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSaveUpload\n                        \n                    \n                \n            \n            \n                \nhandleSaveUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showPrompt\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPrompt(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:335\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUpload(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $actions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    open: false,\n    save: this.$editable() && this.$edited(),\n    delete: this.$editable(),\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $editable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const upload = this.$upload()\n\n    return this.$upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $edited\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteUploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DeleteUploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$isAdmin()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateUploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UpdateUploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadId\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n    isPrivate: new FormControl(false),\n    isSystem: new FormControl(false),\n    owner: new FormControl(null),\n    ownerAvatar: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$user().id!\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  OnInit,\n  WritableSignal,\n  inject,\n  signal,\n  computed,\n  input,\n  output,\n} from '@angular/core'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  ControlEvent,\n} from '@angular/forms'\n\nimport {\n  TUI_PROMPT,\n  TuiAvatarModule,\n  TuiInputInlineModule,\n  TuiLineClampModule,\n  TuiToggleModule,\n} from '@taiga-ui/kit'\n\nimport {\n  TuiAlertService,\n  TuiDialogService,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\nimport { Router } from '@angular/router'\nimport { filter, map } from 'rxjs'\n\nimport {\n  DeleteUploadByIdGQL,\n  UpdateUploadByIdGQL,\n  UploadByIdGQL,\n} from '@graphql'\nimport { UploadActionsParams } from '@interfaces'\nimport { AuthService } from '@services'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nimport { UploadActionsComponent } from '../upload-actions/upload-actions.component'\n\n@Component({\n  selector: 'spomen-upload-info',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputInlineModule,\n    TuiChipModule,\n    TuiLineClampModule,\n    TuiToggleModule,\n    TuiAvatarModule,\n    TuiLoaderModule,\n    UploadActionsComponent,\n  ],\n  providers: [UploadByIdGQL, DeleteUploadByIdGQL, UpdateUploadByIdGQL],\n  templateUrl: './upload-info.component.html',\n  styleUrl: './upload-info.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadInfo' })\nexport class UploadInfoComponent implements OnInit {\n  private uploadByIdGQL = inject(UploadByIdGQL)\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private router = inject(Router)\n\n  private deleteUploadByIdGQL = inject(DeleteUploadByIdGQL)\n  private updateUploadByIdGQL = inject(UpdateUploadByIdGQL)\n\n  userId = inject(AuthService).$user().id!\n  isAdmin = inject(AuthService).$isAdmin()\n\n  uploadInfoForm: FormGroup = new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n    isPrivate: new FormControl(false),\n    isSystem: new FormControl(false),\n    owner: new FormControl(null),\n    ownerAvatar: new FormControl(null),\n  })\n\n  uploadId = input.required()\n\n  onUpdate = output()\n  onDelete = output()\n\n  $upload: WritableSignal = signal(null)\n  $loading: WritableSignal = signal(true)\n  $edited: WritableSignal = signal(false)\n\n  $editable = computed(() => {\n    const upload = this.$upload()\n\n    return this.$upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n\n  $actions = computed(() => ({\n    open: false,\n    save: this.$editable() && this.$edited(),\n    delete: this.$editable(),\n  }))\n\n  ngOnInit(): void {\n    this.uploadInfoForm.controls['isSystem'].disable()\n\n    this.uploadInfoForm.events\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        filter((e: ControlEvent) => e.source.dirty),\n        map((e) => {\n          this.$edited.set(true)\n        })\n      )\n      .subscribe()\n\n    this.uploadByIdGQL\n      .watch({\n        id: this.uploadId()!,\n      })\n      .valueChanges.subscribe({\n        next: (res) => {\n          const { upload } = res.data\n\n          this.$upload.set(upload)\n\n          this.uploadInfoForm.controls['name'].setValue(upload.name)\n          this.uploadInfoForm.controls['originalName'].setValue(\n            upload.file_name\n          )\n          this.uploadInfoForm.controls['isSystem'].setValue(upload.is_system)\n          this.uploadInfoForm.controls['isPrivate'].setValue(\n            upload.permissions.includes(Permission.OwnerOnly)\n          )\n\n          this.uploadInfoForm.controls['owner'].setValue(\n            upload.owner\n              ? upload.owner.first_name && upload.owner.last_name\n                ? upload.owner.first_name + ' ' + upload.owner.last_name\n                : upload.owner.username\n              : null\n          )\n\n          this.uploadInfoForm.controls['ownerAvatar'].setValue(\n            upload.owner\n              ? upload.owner.avatar && upload.owner.avatar.url\n                ? upload!.owner!.avatar!.url\n                : upload!.owner!.vk_avatar\n              : null\n          )\n\n          this.$loading.set(false)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить информацию о загрузке', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n          this.$loading.set(false)\n        },\n      })\n  }\n\n  clickOwner() {\n    if (this.uploadInfoForm.controls['owner'].value) {\n      this.router.navigate(['/' + this.$upload()!.owner!.username])\n    }\n  }\n\n  handleSaveUpload() {\n    const updatedFields = this.getUpdatedFields()\n\n    if (updatedFields.length === 0) return\n\n    const data: { [key: string]: any } = {}\n\n    updatedFields.forEach((val) => {\n      data[Object.keys(val)[0] as string] = val[Object.keys(val)[0]]\n    })\n\n    this.updateUpload(data)\n  }\n\n  handleDeleteUpload() {\n    this.showPrompt('Удалить файл?').subscribe((res) => {\n      if (res) {\n        this.showPrompt('Вы уверены?').subscribe((res) => {\n          if (res) this.deleteUpload()\n        })\n      }\n    })\n  }\n\n  private updateUpload(data: { [key: string]: any }) {\n    this.$loading.set(true)\n\n    this.updateUploadByIdGQL\n      .mutate({\n        id: this.uploadId(),\n        data,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.onUpdate.emit({ data, id: this.uploadId() })\n\n          this.alerts\n            .open('Файл успешно изменён!', { status: 'success' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.$loading.set(false)\n        },\n        error: (err) => {\n          console.log(err)\n          this.alerts\n            .open('Изменить файл не удалось', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.$loading.set(false)\n        },\n      })\n  }\n\n  private deleteUpload() {\n    if (!this.$upload() || !this.$editable()) return\n\n    this.$loading.set(true)\n\n    this.deleteUploadByIdGQL\n      .mutate({\n        id: this.$upload()!.id,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: () => {\n          this.onDelete.emit(this.$upload()!.id)\n          this.$loading.set(false)\n        },\n        error: (err) => {\n          this.$loading.set(false)\n\n          this.alerts\n            .open('Удалить файл не удалось', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  private getUpdatedFields(): { [key: string]: any }[] {\n    return Object.keys(this.uploadInfoForm.controls)\n      .map((control) => {\n        return this.uploadInfoForm.controls[control].dirty\n          ? { [control]: this.uploadInfoForm.controls[control].value }\n          : null\n      })\n      .filter((val) => val)\n      .map((val: { [key: string]: any } | null) => {\n        const name = Object.keys(val!)[0]\n\n        let key\n        let value\n\n        switch (name) {\n          case 'name': {\n            key = 'name'\n            value =\n              this.$upload()![name] !== val![name]\n                ? { [key]: { set: val![name] } }\n                : null\n            break\n          }\n\n          case 'originalName': {\n            key = 'file_name'\n            value =\n              this.$upload()!.file_name !== val![name]\n                ? { [key]: { set: val![name] } }\n                : null\n            break\n          }\n\n          case 'isPrivate': {\n            const isPrivate = this.$upload()!.permissions.includes(\n              Permission.OwnerOnly\n            )\n            key = 'permissions'\n            value =\n              isPrivate !== val![name]\n                ? {\n                    [key]: {\n                      set: isPrivate\n                        ? this.$upload()!.permissions.filter(\n                            (p) => p !== Permission.OwnerOnly\n                          )\n                        : [\n                            ...this.$upload()!.permissions,\n                            Permission.OwnerOnly,\n                          ],\n                    },\n                  }\n                : null\n            break\n          }\n        }\n\n        return value\n      })\n      .filter((val) => val) as { [key: string]: any }[]\n  }\n\n  private showPrompt(label: string) {\n    return this.dialogs\n      .open(TUI_PROMPT, {\n        label,\n        size: 's',\n        data: {\n          yes: 'Да',\n          no: 'Нет',\n        },\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n  }\n}\n\n    \n\n    \n        @if (this.$upload()) {\n  \n    \n      \n        \n\n        \n          \n            Имя\n          \n          \n            \n          \n        \n        \n          \n            Тип\n          \n          \n            \n              {{ this.$upload()!.ext }}\n            \n          \n        \n        \n          \n            Ссылка\n          \n          \n            \n              \n            \n          \n        \n        \n          \n            Владелец\n          \n\n          @if (this.$upload()!.owner!) {\n            \n              \n              {{ this.uploadInfoForm.controls['owner'].value }}\n            \n          } @else {\n            Не найден\n          }\n        \n        @if (this.$editable()) {\n          \n            \n              Личный\n              \n            \n            \n              Системный\n              \n            \n          \n        }\n      \n      \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (this.$upload()) {                                                  Имя                                                                                Тип                                              {{ this.$upload()!.ext }}                                                            Ссылка                                                                                                          Владелец                    @if (this.$upload()!.owner!) {                                        {{ this.uploadInfoForm.controls[\\'owner\\'].value }}                      } @else {            Не найден          }                @if (this.$editable()) {                                    Личный                                                    Системный                                            }                  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadListItemComponent.html":{"url":"components/UploadListItemComponent.html","title":"component - UploadListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-list-item/upload-list-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                spomen-upload-list-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterModule\n                            TuiSkeletonModule\n                            TuiLineClampModule\n                            TuiPreviewModule\n                            TuiButtonModule\n                            TuiChipModule\n                            TuiHintModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-list-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-list-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alerts\n                            \n                            \n                                avatarUrl\n                            \n                            \n                                clickUpload\n                            \n                            \n                                index\n                            \n                            \n                                isLoading\n                            \n                            \n                                isPrivate\n                            \n                            \n                                owner\n                            \n                            \n                                router\n                            \n                            \n                                selectExtension\n                            \n                            \n                                showPreview\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isPrivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickUpload\n                            \n                            \n                                selectExtension\n                            \n                            \n                                showPreview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isPrivate\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickUpload\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectExtension\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPreview\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.avatar && this.upload()!.owner!.avatar!.url\n        ? this.upload()!.owner!.avatar!.url\n        : this.upload()!.owner!.vk_avatar\n      : null\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickUpload\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPrivate\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.first_name && this.upload()!.owner!.last_name\n        ? this.upload()!.owner!.first_name +\n          ' ' +\n          this.upload()!.owner!.last_name\n        : this.upload()!.owner!.username\n      : 'System'\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectExtension\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPreview\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\n\nimport { Component, computed, inject, input, output } from '@angular/core'\n\nimport { TuiAlertService, TuiHintModule, TuiSvgModule } from '@taiga-ui/core'\n\nimport {\n  TuiButtonModule,\n  TuiChipModule,\n  TuiSkeletonModule,\n} from '@taiga-ui/experimental'\n\nimport { TuiPreviewModule } from '@taiga-ui/addon-preview'\n\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { Router, RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-upload-list-item',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    TuiSkeletonModule,\n    TuiLineClampModule,\n    TuiPreviewModule,\n    TuiButtonModule,\n    TuiChipModule,\n    TuiHintModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n  ],\n  providers: [DatePipe],\n  templateUrl: './upload-list-item.component.html',\n  styleUrl: './upload-list-item.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadListItem' })\nexport class UploadListItemComponent {\n  alerts = inject(TuiAlertService)\n  router = inject(Router)\n\n  upload = input.required()\n  isPrivate = input.required()\n  isLoading = input.required()\n\n  showPreview = output()\n  clickUpload = output()\n  selectExtension = output()\n\n  avatarUrl = computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.avatar && this.upload()!.owner!.avatar!.url\n        ? this.upload()!.owner!.avatar!.url\n        : this.upload()!.owner!.vk_avatar\n      : null\n  )\n\n  owner = computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.first_name && this.upload()!.owner!.last_name\n        ? this.upload()!.owner!.first_name +\n          ' ' +\n          this.upload()!.owner!.last_name\n        : this.upload()!.owner!.username\n      : 'System'\n  )\n\n  index = 0\n}\n\n    \n\n    \n        @if (this.upload() && !this.isLoading()) {\n  \n    \n      \n    \n    \n      \n      \n        \n    \n    \n      \n      \n    \n    {{ this.upload()!.ext }}\n    \n    \n      \n\n      \n    \n    \n      {{\n        this.upload()!.created_at | date: 'd MMMM, YYYY г.'\n      }}\n    \n  \n} @else {\n  \n          \n          \n    \n    \n      \n    \n    loading\n    \n    \n      \n\n      \n    \n    01.01.2001\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (this.upload() && !this.isLoading()) {                                                                    {{ this.upload()!.ext }}                                  {{        this.upload()!.created_at | date: \\'d MMMM, YYYY г.\\'      }}      } @else {                                            loading                            01.01.2001  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadModel.html":{"url":"interfaces/UploadModel.html","title":"interface - UploadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/upload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            file_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_system\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            owner_id\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_system\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_system:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AccountModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         Permission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from '@models'\nimport { Permission } from '@enums'\n\nexport interface UploadModel {\n  id: string\n  bucket: string\n  name: string\n  ext: string\n  file_name: string\n  path: string\n  url: string\n  owner_id: string\n  owner?: AccountModel\n  permissions: Permission[]\n  is_system: boolean\n  created_at: Date\n  updated_at: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadPreviewComponent.html":{"url":"components/UploadPreviewComponent.html","title":"component - UploadPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-preview/upload-preview.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-upload-preview\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            IFrameUrlPipe\n                            PolymorpheusModule\n                            TuiPreviewModule\n                                UploadActionsComponent\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-preview.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-preview.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                actions\n                            \n                            \n                                destroyRef\n                            \n                            \n                                ext\n                            \n                            \n                                handleClose\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                            \n                                id\n                            \n                            \n                                index\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isEditable\n                            \n                            \n                                isLoading\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOpen\n                            \n                            \n                                isRotatable\n                            \n                            \n                                isZoomable\n                            \n                            \n                                name\n                            \n                            \n                                pdfViewers\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                preview\n                            \n                            \n                                previews\n                            \n                            \n                                    Private\n                                previewSub\n                            \n                            \n                                sanitizer\n                            \n                            \n                                title\n                            \n                            \n                                upload\n                            \n                            \n                                uploadActions\n                            \n                            \n                                url\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                handleClose\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    previewContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:107\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:61\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        handleClose\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleDelete\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleOpen\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:64\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(actions: PolymorpheusContent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-preview/upload-preview.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actions\n                                            \n                                                        PolymorpheusContent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('actions')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.ext : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleClose\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDelete\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleOpen\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.id : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$isAdmin()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const upload = this.upload()\n\n    return this.upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TUI_IS_MOBILE)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRotatable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isZoomable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.name : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pdfViewers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPdfViewerService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('preview')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previews\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPreviewDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previewSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sanitizer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload() ? `${this.upload()!.file_name}.${this.upload()!.ext}` : ''\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadActions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    open: true,\n    save: false,\n    delete: this.isEditable(),\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.url : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$user().id\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        previewContent\n                    \n                \n\n                \n                    \n                        getpreviewContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:105\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  computed,\n  DestroyRef,\n  effect,\n  inject,\n  input,\n  output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core'\nimport {\n  TuiPreviewDialogService,\n  TuiPreviewModule,\n} from '@taiga-ui/addon-preview'\nimport {\n  PolymorpheusContent,\n  PolymorpheusModule,\n} from '@tinkoff/ng-polymorpheus'\nimport { TuiPdfViewerOptions, TuiPdfViewerService } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiDialogContext, TuiSvgModule } from '@taiga-ui/core'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\nimport { Subscription } from 'rxjs'\n\nimport { AuthService } from '@services'\nimport { IFrameUrlPipe } from '@pipes'\nimport { UploadModel } from '@models'\n\nimport { UploadActionsComponent } from '../upload-actions/upload-actions.component'\n\n@Component({\n  selector: 'spomen-upload-preview',\n  standalone: true,\n  imports: [\n    IFrameUrlPipe,\n    PolymorpheusModule,\n    TuiPreviewModule,\n    UploadActionsComponent,\n    TuiSvgModule,\n  ],\n  templateUrl: './upload-preview.component.html',\n  styleUrl: './upload-preview.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadPreview' })\nexport class UploadPreviewComponent {\n  previews = inject(TuiPreviewDialogService)\n  pdfViewers = inject(TuiPdfViewerService)\n  sanitizer = inject(DomSanitizer)\n\n  destroyRef = inject(DestroyRef)\n  isMobile = inject(TUI_IS_MOBILE)\n\n  userId = inject(AuthService).$user().id\n  isAdmin = inject(AuthService).$isAdmin()\n\n  upload = input.required()\n  isLoading = input(false)\n  isOpen = input.required()\n\n  handleDelete = output()\n  handleOpen = output()\n  handleClose = output()\n\n  isRotatable = computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n  isZoomable = computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n  isEditable = computed(() => {\n    const upload = this.upload()\n\n    return this.upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n\n  id = computed(() => (this.upload() ? this.upload()!.id : ''))\n  title = computed(() =>\n    this.upload() ? `${this.upload()!.file_name}.${this.upload()!.ext}` : ''\n  )\n  ext = computed(() => (this.upload() ? this.upload()!.ext : ''))\n  name = computed(() => (this.upload() ? this.upload()!.name : ''))\n  url = computed(() => (this.upload() ? this.upload()!.url : ''))\n\n  uploadActions = computed(() => ({\n    open: true,\n    save: false,\n    delete: this.isEditable(),\n  }))\n\n  private previewSub: Subscription | null = null\n  index = 0\n\n  @ViewChild('preview')\n  readonly preview?: TemplateRef\n\n  @ViewChild('actions')\n  readonly actions?: TemplateRef\n\n  get previewContent(): PolymorpheusContent {\n    return this.url()\n  }\n\n  constructor() {\n    effect(() => {\n      if (this.isOpen()) {\n        this.show(this.actions)\n      } else if (this.previewSub) this.previewSub.unsubscribe()\n    })\n  }\n\n  show(actions: PolymorpheusContent) {\n    if (this.ext() === 'pdf') {\n      this.previewSub = this.pdfViewers\n        .open(\n          this.sanitizer.bypassSecurityTrustResourceUrl(\n            this.isMobile\n              ? `https://drive.google.com/viewerng/viewer?embedded=true&url=${this.url()}`\n              : this.url()\n          ),\n          {\n            label: this.name(),\n            actions,\n          }\n        )\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe({\n          complete: () => {\n            this.handleClose.emit()\n          },\n        })\n      return\n    }\n\n    this.previewSub = this.previews\n      .open(this.preview || '')\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        complete: () => {\n          this.handleClose.emit()\n        },\n      })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ this.title() }}\n    \n    \n\n    \n\n    @switch (this.ext()) {\n      @case ('webp') {\n        \n      }\n      @case ('mpga') {\n        \n      }\n      @default {\n        \n          \n          Просмотр не поддерживается\n        \n      }\n    }\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ this.title() }}                @switch (this.ext()) {      @case (\\'webp\\') {              }      @case (\\'mpga\\') {              }      @default {                            Просмотр не поддерживается              }    }    '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'ConfirmAlertComponent', 'selector': 'spomen-confirm-alert'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/upload.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для загрузки файлов\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFileParams\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFileParams\n                        \n                    \n                \n            \n            \n                \ngetFileParams(file: TuiFileLike)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Получение параметров файла\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        TuiFileLike\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Файл tui-kit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileParams\n\n                        \n                            \n                                Параметры файла\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(dto: UploadFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/upload.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { TuiFileLike } from '@taiga-ui/kit'\n\nimport { FileParams } from '@interfaces'\n\nimport { UploadFileDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API, Permission } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для загрузки файлов\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UploadService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadFile(dto: UploadFileDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n    body.append('path', dto.path)\n    body.append('compress', dto.compress.toString())\n    body.append('originalName', dto.file.name)\n\n    if (dto.name) {\n      body.append('name', dto.name)\n    }\n\n    if (dto.private) {\n      body.append('acl', Permission.OwnerOnly)\n    }\n\n    return this.http.post(`${env.apiUrl}${API.UPLOAD}`, body)\n  }\n\n  /**\n   * Получение параметров файла\n   * @param {TuiFileLike} file Файл tui-kit\n   * @return {FileParams} Параметры файла\n   */\n  getFileParams(file: TuiFileLike): FileParams {\n    const filename = file.name.split('.')\n    const ext = filename[filename.length - 1]\n\n    delete filename[filename.length - 1]\n\n    return {\n      name: filename.join('.').slice(0, filename.join('-').length - 1),\n      ext,\n      mime: file.type,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsGQL.html":{"url":"injectables/UploadsGQL.html","title":"injectable - UploadsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/uploads.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UploadsQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/uploads.gql.ts:63\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nexport type UploadsResponse = {\n  uploads: UploadModel[]\n}\n\nexport type UploadsVariables = Pagination & {\n  owner?: string[]\n  name?: string\n  ext?: string[]\n  permissions?: Permission[]\n}\n\nexport type UploadsQueryRef = QueryRef\n\nexport const UploadsQuery = gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n\n@Injectable()\nexport class UploadsGQL extends Query {\n  document = UploadsQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                        \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/validation.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                checkControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from '@angular/forms'\n\nexport class Validation {\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName)\n      const checkControl = controls.get(checkControlName)\n\n      if (checkControl?.errors && !checkControl.errors['matching']) {\n        return null\n      }\n\n      if (control?.value !== checkControl?.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true })\n        return { matching: true }\n      } else {\n        return null\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.1.0 (2024-08-08)\nFeatures\n\napp: Интеграция service worker (f0169b3)\napp: Интеграция service worker (d5e5421)\n\nBug Fixes\n\napp: Общие стили приложения (bbdd633)\napp: Отключение service workers (008b84c)\napp: Service worker (e95ed38)\napp: Service worker (45fe8c7)\napp: Service worker (b322198)\n\n0.0.7 (2024-08-04)\nFeatures\n\nmenu: Отображение версии приложения (bc42044)\n\n0.0.6 (2024-08-04)\nBug Fixes\n\nworkflow: Фикс генерации документации (2d9a901)\nworkflow: Фикс генерации документации (b2e3f4f)\n\n0.0.5 (2024-08-04)\nBug Fixes\n\nprofile: fixed #14 (b8f80ba)\nuploads: fixed #13 (1599df4)\nworkflow: Изменить сценарий релиза (e7319e4)\nworkflow: Изменить сценарий релиза (5ee44fb)\nworkflow: CI (40226bb)\n\n0.0.4 (2024-08-03)\nFeatures\n\nworkflow: Добавить скрипт релиза (3e56403)\n\nBug Fixes\n\nprofile,uploads: Исправить отображение UI (5712d8d)\nuploads: Исправить изменение загрузки (9d20609)\nworkflow: Изменить генерацию документации (dded140)\nworkflow: Изменить генерацию документации (a9ca01e)\nworkflow: Изменить генерацию документации (10415fc)\nworkflow: Изменить генерацию документацию (e50d064)\nworkflow: Изменить сценарии релиза и документации (4ff626a)\nworkflow: Изменить сценарий релиза (990cabe)\nworkflow: Изменить сценарий релиза (be41310)\n\n0.0.3 (2024-08-02)\nFeatures\n\napp: интегрировать хук husky с commitizen (75f0adf)\nupdate package version (9dc7642)\n\nBug Fixes\n\napp: настроить commitizen (d5e22c5)\napp: Настроить commitizen (7bb7ca5)\nworkflow: Запускать релиз при публикации тега (8e4ac0a)\nworkflow: Удалить линтер для коммитов (b8284fa)\n\n0.0.2 (2024-07-02)\ninit\n0.0.1 (2024-05-17)\ninit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            appInitializerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/callback/auth-callback.component.ts\n            \n            component\n            AuthCallbackComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/pass/auth-pass.component.ts\n            \n            component\n            AuthPassComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/sign-in/sign-in.component.ts\n            \n            component\n            SignInComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/auth/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/chats/chats.component.ts\n            \n            component\n            ChatsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/enter-leave.animation.ts\n            \n            variable\n            enterLeaveAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/account-input/account-input.component.ts\n            \n            component\n            AccountInputComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/common/components/confirm-alert/confirm-alert.component.ts\n            \n            component\n            ConfirmAlertComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/components/confirm-alert/confirm-alert.component.ts\n            \n            interface\n            ConfirmAlertOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/components/extension-input/extension-input.component.ts\n            \n            component\n            ExtensionInputComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/common/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/components/me/me.component.ts\n            \n            component\n            MeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/components/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            variable\n            protectedRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/components/oops/oops.component.ts\n            \n            component\n            OopsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/permission-input/permission-input.component.ts\n            \n            component\n            PermissionInputComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/common/directives/scroll-near-end.directive.ts\n            \n            directive\n            ScrollNearEndDirective\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            function\n            apolloOptionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            variable\n            graphqlProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/models/getAccount.model.ts\n            \n            interface\n            GetAccountModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            injectable\n            DeleteUploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            variable\n            DeleteUploadByIdQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n            \n            injectable\n            UpdateUploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n            \n            variable\n            UpdateUploadByIdQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/account.gql.ts\n            \n            injectable\n            AccountGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n            \n            injectable\n            AccountsInfoByUsernameGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-by-id.gql.ts\n            \n            injectable\n            UploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-extensions.gql.ts\n            \n            injectable\n            UploadExtensionsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            injectable\n            UploadsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            variable\n            UploadsQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth-callback.guard.ts\n            \n            variable\n            authCallbackGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/http.interceptor.ts\n            \n            variable\n            httpRequestInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/iframe-url.pipe.ts\n            \n            pipe\n            IFrameUrlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/sex.pipe.ts\n            \n            pipe\n            SexPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/pwa.service.ts\n            \n            injectable\n            PwaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/scroll.service.ts\n            \n            injectable\n            ScrollService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/memories/memories.component.ts\n            \n            component\n            MemoriesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/profile/change-avatar/change-avatar.component.ts\n            \n            component\n            ChangeAvatarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            variable\n            sexIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/timelines/timelines.component.ts\n            \n            component\n            TimelinesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-actions/upload-actions.component.ts\n            \n            component\n            UploadActionsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-file/upload-file.component.ts\n            \n            component\n            UploadFileComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-info/upload-info.component.ts\n            \n            component\n            UploadInfoComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-list-item/upload-list-item.component.ts\n            \n            component\n            UploadListItemComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-preview/upload-preview.component.ts\n            \n            component\n            UploadPreviewComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/uploads/uploads.component.ts\n            \n            component\n            UploadsComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                src/envs/env.development.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.staging.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            variable\n            initialAccount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            interface\n            AuthenticatedUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            variable\n            initialAuthenticatedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/env.interface.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            ApiError\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            GraphqlError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/interfaces/route.interface.ts\n            \n            interface\n            Route\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/interfaces/ui.interface.ts\n            \n            interface\n            UploadActionsParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/interfaces/upload.interface.ts\n            \n            interface\n            FileParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountShortModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/models/auth.model.ts\n            \n            interface\n            AuthModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/models/upload.model.ts\n            \n            interface\n            UploadModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            debouncedSignal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getCurrentPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getQueryPayload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            isNotFound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/sentry.ts\n            \n            function\n            initSentry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializePermissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializeRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/validation.ts\n            \n            class\n            Validation\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/cdk : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @angular/service-worker : ^18.0.0\n        \n            @apollo/client : ^3.0.0\n        \n            @sentry/angular : ^8.13.0\n        \n            @sentry/cli : ^2.32.1\n        \n            @taiga-ui/addon-charts : ^3.83.0\n        \n            @taiga-ui/addon-commerce : ^3.83.0\n        \n            @taiga-ui/addon-mobile : ^3.83.0\n        \n            @taiga-ui/addon-preview : ^3.83.0\n        \n            @taiga-ui/addon-table : ^3.83.0\n        \n            @taiga-ui/addon-tablebars : ^3.83.0\n        \n            @taiga-ui/cdk : ^3.83.0\n        \n            @taiga-ui/core : ^3.83.0\n        \n            @taiga-ui/experimental : ^3.84.0\n        \n            @taiga-ui/icons : ^3.83.0\n        \n            @taiga-ui/kit : ^3.83.0\n        \n            @taiga-ui/layout : ^3.83.0\n        \n            @taiga-ui/styles : ^3.83.0\n        \n            @tinkoff/ng-dompurify : 4.0.0\n        \n            @vkid/sdk : ^1.1.0\n        \n            apollo-angular : 7.0.2\n        \n            dompurify : 3.0.6\n        \n            graphql : ^16\n        \n            normalize.css : ^8.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.6.3\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API   (src/.../api.enum.ts)\n                        \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/enums/api.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        API\n                    \n                \n                        \n                            \n                                 AUTH_ME\n                            \n                        \n                        \n                            \n                                Value : /auth\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_IN\n                            \n                        \n                        \n                            \n                                Value : /auth/token\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_UP\n                            \n                        \n                        \n                            \n                                Value : /auth/sign-up\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_OUT\n                            \n                        \n                        \n                            \n                                Value : /auth/logout\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH_CLEAR\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh/clear\n                            \n                        \n                        \n                            \n                                 VK_ID_EXCHANGE_TOKEN\n                            \n                        \n                        \n                            \n                                Value : /vk-id/exchange-token\n                            \n                        \n                        \n                            \n                                 ACCOUNT_AVATAR\n                            \n                        \n                        \n                            \n                                Value : /account/avatar\n                            \n                        \n                        \n                            \n                                 UPLOAD\n                            \n                        \n                        \n                            \n                                Value : /upload\n                            \n                        \n            \n        \n\n    src/types/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 OwnerOnly\n                            \n                        \n                        \n                            \n                                Value : OwnerOnly\n                            \n                        \n                        \n                            \n                                 ChatOnly\n                            \n                        \n                        \n                            \n                                Value : ChatOnly\n                            \n                        \n                        \n                            \n                                 MemberOnly\n                            \n                        \n                        \n                            \n                                Value : MemberOnly\n                            \n                        \n            \n        \n\n    src/types/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 Administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apolloOptionsFactory   (src/.../graphql.provider.ts)\n                        \n                        \n                            appInitializerFactory   (src/.../app.config.ts)\n                        \n                        \n                            debouncedSignal   (src/.../funcs.ts)\n                        \n                        \n                            getCurrentPath   (src/.../funcs.ts)\n                        \n                        \n                            getQueryPayload   (src/.../funcs.ts)\n                        \n                        \n                            initSentry   (src/.../sentry.ts)\n                        \n                        \n                            isNotFound   (src/.../funcs.ts)\n                        \n                        \n                            serializePermissions   (src/.../serialize.ts)\n                        \n                        \n                            serializeRole   (src/.../serialize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apolloOptionsFactory\n                        \n                    \n                \n            \n            \n                \napolloOptionsFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ApolloClientOptions\n\n                        \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appInitializerFactory\n                        \n                    \n                \n            \n            \n                \nappInitializerFactory(config: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/funcs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debouncedSignal\n                        \n                    \n                \n            \n            \n                \ndebouncedSignal(sourceSignal: Signal, debounceTimeInMs: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                sourceSignal\n                                            \n                                                        Signal\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                debounceTimeInMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentPath\n                        \n                    \n                \n            \n            \n                \ngetCurrentPath(router: Router)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQueryPayload\n                        \n                    \n                \n            \n            \n                \ngetQueryPayload(params: Params)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotFound\n                        \n                    \n                \n            \n            \n                \nisNotFound(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/sentry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initSentry\n                        \n                    \n                \n            \n            \n                \ninitSentry()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    src/utils/serialize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serializePermissions\n                        \n                    \n                \n            \n            \n                \nserializePermissions(permissions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissions\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Permission[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nspomen-client\nПлатформа воспоминаний\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Platform of memories\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountQueryRef   (src/.../account.gql.ts)\n                        \n                        \n                            AccountResponse   (src/.../account.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameQueryRef   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameResponse   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameVariables   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountVariables   (src/.../account.gql.ts)\n                        \n                        \n                            AuthCallbackDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            DeleteUploadByIdResponse   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            DeleteUploadByIdVariables   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            PaginatedQuery   (src/.../index.ts)\n                        \n                        \n                            Pagination   (src/.../index.ts)\n                        \n                        \n                            RemoveAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            ScrollState   (src/.../scroll.service.ts)\n                        \n                        \n                            Sex   (src/.../sex.interface.ts)\n                        \n                        \n                            SignInDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            SignUpDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            UpdateUploadByIdResponse   (src/.../update-upload-by-id.gql.ts)\n                        \n                        \n                            UpdateUploadByIdVariables   (src/.../update-upload-by-id.gql.ts)\n                        \n                        \n                            UploadAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            UploadByIdQueryRef   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdResponse   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdVariables   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadExtensionsQueryRef   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsResponse   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsVariables   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadFileDto   (src/.../upload.dtos.ts)\n                        \n                        \n                            UploadsQueryRef   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsResponse   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsVariables   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/queries/account.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/auth.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    AuthCallbackDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignInDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignUpDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/index.ts\n    \n    \n        \n            \n                \n                    \n                    PaginatedQuery\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pagination\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/account.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    RemoveAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/services/scroll.service.ts\n    \n    \n        \n            \n                \n                    \n                    ScrollState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/interfaces/sex.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Sex\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\"\n\n                \n            \n        \n    \n    src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UpdateUploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateUploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadByIdQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-extensions.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/types/dtos/upload.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    UploadFileDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/uploads.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authCallbackGuard   (src/.../auth-callback.guard.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            DeleteUploadByIdQuery   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            enterLeaveAnimation   (src/.../enter-leave.animation.ts)\n                        \n                        \n                            env   (src/.../env.development.ts)\n                        \n                        \n                            env   (src/.../env.staging.ts)\n                        \n                        \n                            env   (src/.../env.ts)\n                        \n                        \n                            graphqlProvider   (src/.../graphql.provider.ts)\n                        \n                        \n                            httpRequestInterceptor   (src/.../http.interceptor.ts)\n                        \n                        \n                            initialAccount   (src/.../account.interface.ts)\n                        \n                        \n                            initialAuthenticatedUser   (src/.../authenticated-user.interface.ts)\n                        \n                        \n                            inOutAnimation200   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutAnimation500   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutGridAnimation200   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            inOutGridAnimation500   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            protectedRoutes   (src/.../nav.component.ts)\n                        \n                        \n                            sexIcons   (src/.../profile.component.ts)\n                        \n                        \n                            UpdateUploadByIdQuery   (src/.../update-upload-by-id.gql.ts)\n                        \n                        \n                            UploadsQuery   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes, withViewTransitions()),\n    importProvidersFrom(TuiRootModule),\n    provideHttpClient(withInterceptors([httpRequestInterceptor])),\n    {\n      provide: ErrorHandler,\n      useValue: Sentry.createErrorHandler({\n        showDialog: false,\n      }),\n    },\n    {\n      provide: Sentry.TraceService,\n      deps: [Router],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: appInitializerFactory,\n      deps: [ConfigService, Sentry.TraceService],\n      multi: true,\n    },\n    { provide: TUI_SANITIZER, useClass: NgDompurifySanitizer },\n    {\n      provide: TUI_LANGUAGE,\n      useValue: of(TUI_RUSSIAN_LANGUAGE),\n    },\n    { provide: LOCALE_ID, useValue: 'ru' },\n    graphqlProvider,\n    provideServiceWorker('ngsw-worker.js', {\n      // enabled: !isDevMode(),\n      enabled: false,\n      registrationStrategy: 'registerWhenStable:30000',\n    }),\n    PwaService,\n    ConfigService,\n    AuthService,\n    AccountService,\n    UploadService,\n    ScrollService,\n    AccountGQL,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth-callback.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authCallbackGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route) => {\n  const router = inject(Router)\n\n  const payload = getQueryPayload(route.queryParams)\n\n  return payload && payload.token\n    ? true\n    : router.createUrlTree(['/auth/sign-in'])\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const auth = inject(AuthService)\n  const router = inject(Router)\n\n  const currentPath = getCurrentPath(router)\n  const isAuthPage = currentPath.includes('/auth')\n\n  return auth.$$isAuth.pipe(\n    withLatestFrom(auth.$$isLoading),\n    filter(([_, loading]) => !loading),\n    map(([isAuth]) => {\n      if (\n        (currentPath.includes('/auth/callback') && isAuth) ||\n        (isAuthPage && !isAuth)\n      ) {\n        return true\n      }\n\n      if (isAuthPage && isAuth) {\n        return router.createUrlTree(['/'])\n      }\n\n      return isAuth\n        ? true\n        : router.createUrlTree(['/auth'], {\n            queryParams: { url: currentPath },\n          })\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeleteUploadByIdQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/enter-leave.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enterLeaveAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('enterLeave', [\n  transition(':enter', [\n    style({\n      transform: 'translateX(-50%)',\n      opacity: 0,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(0)',\n        opacity: 1,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      transform: 'translateX(0)',\n      opacity: 1,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(50%)',\n        opacity: 0,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/envs/env.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'local',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn:\n    'https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200',\n  appVersion: `v${version}` ?? 'latest',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.staging.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'staging',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n  appVersion: `v${version}` ?? 'latest',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'production',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n  appVersion: `v${version}` ?? 'latest',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        graphqlProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  Apollo,\n  {\n    provide: APOLLO_OPTIONS,\n    useFactory: apolloOptionsFactory,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/http.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpRequestInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  req = req.clone({\n    withCredentials: true,\n    headers: req.headers\n      .set('Access-Control-Allow-Origin', env.origin)\n      .set('Access-Control-Allow-Methods', 'GET,POST,PUT,DELETE,OPTIONS')\n      .set(\n        'Access-Control-Allow-Headers',\n        'Accept, Cache-Control, Pragma, Origin, Authorization, Content-Type, X-Requested-With, sentry-trace, baggage'\n      )\n      .set('Access-Control-Allow-Credentials', 'true'),\n  })\n\n  return next(req).pipe(\n    catchError((err: Error) => {\n      if (env.environment !== 'production') {\n        console.log(err)\n      }\n      return throwError(() => err)\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/account.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAccount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/authenticated-user.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAuthenticatedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out-grid.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/components/nav/nav.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        protectedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/profile/profile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sexIcons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UpdateUploadByIdQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  mutation updateUploadById($data: UploadUpdateInput!, $id: String!) {\n    updateUpload(data: $data, where: { id: $id }) {\n      id\n      url\n      name\n      file_name\n      permissions\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/queries/uploads.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UploadsQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
