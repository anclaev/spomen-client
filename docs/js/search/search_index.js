var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,0.927,1,0.695]],["body/interfaces/Account.html",[0,1.027,1,1.137,2,1.656,3,0.171,4,0.21,5,0.171,6,3.365,7,0.293,8,0.537,9,3.137,10,3.46,11,3.645,12,2.994,13,4.657,14,2.411,15,3.137,16,3.645,17,3.721,18,2.623,19,3.291,20,3.851,21,1.382,22,0.016,23,2.583,24,0.567,25,3.694,26,3.705,27,0.445,28,1.921,29,0.277,30,1.417,31,3.08,32,0.011,33,0.011]],["title/injectables/AccountGQL.html",[34,1.004,35,2.574]],["body/injectables/AccountGQL.html",[1,0.903,3,0.2,4,0.246,5,0.2,7,0.344,8,0.595,9,2.808,10,3.097,11,3.263,12,2.681,14,2.158,15,2.808,16,3.263,18,2.849,19,2.947,20,3.448,21,1.174,22,0.016,24,0.502,27,0.537,29,0.35,32,0.012,33,0.012,34,1.626,35,4.17,36,2.151,37,3.947,38,3.263,39,4.289,40,3.982,41,0.828,42,0.792,43,3.756,44,6.324,45,6.324,46,2.808,47,0.828,48,5.074,49,3.893,50,2.618,51,2.766,52,0.594,53,3.655,54,1.884,55,4.394,56,4.394,57,4.394,58,3.123,59,2.933,60,0.506]],["title/components/AccountInputComponent.html",[61,0.19,62,0.855]],["body/components/AccountInputComponent.html",[1,1.115,3,0.098,4,0.121,5,0.098,7,0.169,8,0.361,18,1.426,21,1.068,22,0.016,23,1.656,24,0.517,27,0.529,29,0.121,32,0.007,33,0.007,41,1.158,42,1.107,47,1.224,52,0.292,54,0.924,60,0.248,61,0.228,62,1.317,63,0.875,64,0.591,65,0.591,66,0.591,67,6.53,68,6.53,69,1.772,70,1.489,71,2.082,72,3.646,73,0.523,74,1.981,75,2.734,76,3.646,77,2.734,78,1.02,79,2.987,80,3.337,81,1.777,82,1.773,83,2.784,84,0.807,85,0.911,86,1.987,87,2.885,88,3.646,89,2.419,90,3.646,91,3.646,92,0.911,93,2.987,94,0.911,95,2.987,96,4.687,97,4.059,98,4.687,99,4.687,100,2.391,101,4.687,102,4.687,103,2.184,104,2.872,105,4.428,106,4.428,107,0.949,108,3.84,109,2.34,110,2.987,111,2.987,112,2.987,113,4.098,114,1.705,115,3.646,116,3.279,117,4.428,118,3.646,119,2.489,120,2.156,121,1.818,122,2.156,123,2.156,124,3.84,125,2.489,126,1.656,127,0.798,128,1.302,129,1.772,130,1.486,131,2.489,132,2.987,133,2.489,134,2.987,135,2.489,136,2.987,137,2.082,138,2.489,139,2.489,140,2.555,141,3.84,142,2.489,143,2.937,144,3.17,145,2.489,146,2.489,147,2.885,148,3.84,149,3.84,150,2.489,151,3.84,152,2.156,153,3.646,154,2.156,155,1.789,156,2.156,157,2.093,158,2.156,159,1.881,160,2.489,161,2.489,162,0.752,163,1.16,164,1.16,165,1.159,166,0.815,167,1.439,168,1.772,169,1.285,170,1.285,171,0.965,172,2.156,173,3.84,174,1.009,175,1.009,176,0.568,177,0.568,178,1.439,179,1.532,180,0.591,181,2.489,182,2.489,183,2.489,184,4.687,185,2.156,186,1.936,187,2.156,188,2.489,189,1.285,190,1.936,191,2.156,192,1.987,193,2.489,194,2.489,195,2.219,196,1.055,197,1.641,198,2.489,199,1.556,200,1.532,201,1.285,202,1.219,203,2.489,204,0.965,205,2.489,206,2.489,207,1.936,208,1.936,209,1.936,210,2.987,211,0.591,212,0.911,213,0.875,214,0.502,215,1.251,216,0.591,217,1.113,218,0.545,219,0.591,220,0.545,221,0.841,222,0.591,223,0.545,224,0.591,225,0.545,226,0.591,227,0.545,228,0.591,229,0.591,230,0.545,231,0.591,232,0.545,233,0.591,234,0.545,235,0.591,236,0.545,237,0.591,238,0.545,239,0.591,240,0.545,241,0.591,242,0.545,243,0.591,244,0.545,245,0.591,246,0.545,247,0.591,248,0.545,249,0.591,250,0.545,251,0.591,252,0.545,253,0.443,254,0.545,255,0.591,256,0.545,257,0.911,258,0.591,259,0.545,260,0.591,261,0.545,262,0.591,263,0.545,264,1.013,265,0.591,266,0.545,267,0.591,268,0.545,269,0.591,270,0.545,271,0.568,272,0.591,273,0.545,274,0.591,275,0.568,276,0.523,277,0.568,278,0.523,279,0.568,280,0.591]],["title/interfaces/AccountModel.html",[0,0.927,53,2.257]],["body/interfaces/AccountModel.html",[0,1.378,2,1.684,3,0.175,4,0.216,5,0.175,7,0.301,8,0.546,9,3.048,10,3.362,11,3.542,12,3.019,14,2.431,15,3.163,16,3.542,17,3.698,18,2.645,19,3.198,20,3.742,21,1.381,22,0.016,23,2.551,24,0.572,25,4.413,26,3.742,27,0.505,28,1.971,29,0.282,32,0.011,33,0.011,53,3.356,54,1.648,179,2.732,281,3.453,282,3.967,283,4.525,284,2.781]],["title/injectables/AccountService.html",[34,1.004,285,2.574]],["body/injectables/AccountService.html",[3,0.193,4,0.237,5,0.193,7,0.332,8,0.581,22,0.016,24,0.494,27,0.585,28,2.171,29,0.237,30,1.601,32,0.012,33,0.012,34,1.589,36,2.072,41,0.798,42,0.763,47,1.105,52,0.573,54,1.815,58,3.009,59,2.826,60,0.487,100,2.312,107,1.526,126,1.942,127,0.761,128,1.526,130,1.526,162,1.476,284,1.981,285,4.074,286,4.234,287,3.223,288,4.823,289,5.351,290,5.351,291,6.178,292,6.163,293,4.889,294,4.806,295,6.178,296,6.163,297,4.889,298,4.823,299,4.399,300,4.889,301,3.009,302,3.223,303,3.481,304,3.188,305,5.351,306,1.981,307,4.234,308,4.234,309,4.234,310,4.234,311,4.234,312,6.178,313,4.889,314,2.294,315,4.234,316,4.889,317,4.889,318,4.889,319,4.889]],["title/interfaces/AccountShortModel.html",[0,0.927,179,2.403]],["body/interfaces/AccountShortModel.html",[0,1.501,2,1.834,3,0.2,4,0.246,5,0.2,7,0.344,8,0.595,9,2.253,10,2.485,11,2.618,12,3.146,14,2.533,15,3.295,16,2.618,17,3.375,18,2.755,19,2.364,20,2.766,21,1.382,22,0.016,23,2.52,24,0.526,25,3.982,26,3.448,27,0.537,28,2.253,29,0.307,32,0.012,33,0.012,53,2.933,54,1.884,179,3.893,281,3.947,282,2.933,283,3.345,284,2.562]],["title/injectables/AccountsInfoByUsernameGQL.html",[34,1.004,80,2.779]],["body/injectables/AccountsInfoByUsernameGQL.html",[3,0.272,4,0.246,5,0.2,7,0.344,8,0.594,12,2.678,14,2.156,15,2.806,18,2.848,21,1.173,22,0.016,24,0.502,27,0.537,29,0.35,32,0.012,33,0.012,34,1.625,36,2.147,38,3.26,39,4.287,40,3.979,41,0.826,42,0.79,43,3.753,47,0.826,49,3.889,50,2.614,51,2.762,52,0.593,54,1.881,60,0.505,80,4.498,97,5.962,153,3.94,179,3.889,320,4.914,321,3.94,322,6.317,323,4.914,324,4.914,325,3.26,326,6.317,327,3.889,328,2.944,329,5.066,330,4.387,331,4.387]],["title/interfaces/ApiError.html",[0,0.927,332,2.779]],["body/interfaces/ApiError.html",[0,1.601,2,1.635,3,0.223,4,0.274,5,0.223,7,0.383,8,0.635,21,1.382,22,0.015,24,0.545,29,0.328,32,0.013,33,0.013,128,1.667,202,3.663,287,5.041,332,4.803,333,4.387,334,5.947,335,4.931,336,4.015,337,4.885,338,2.628]],["title/components/AppComponent.html",[61,0.19,218,0.855]],["body/components/AppComponent.html",[1,0.503,3,0.112,4,0.137,5,0.112,7,0.192,8,0.398,12,1.793,18,1.05,22,0.016,24,0.308,27,0.593,29,0.137,30,0.926,32,0.008,33,0.008,41,1.031,42,0.986,47,1.144,52,0.331,59,2.445,60,0.282,61,0.246,62,0.619,63,0.964,64,0.671,65,0.671,66,0.671,70,1.64,71,2.25,73,0.594,74,2.183,78,0.819,81,1.799,82,1.795,84,0.889,85,1.004,86,2.148,92,1.004,94,1.004,100,2.46,103,2.361,107,1.045,109,2.498,121,1.746,126,0.889,127,0.848,128,0.699,130,1.252,155,1.971,162,0.854,164,1.317,165,1.53,166,0.926,171,1.096,174,1.146,175,1.146,176,0.645,177,0.645,180,0.671,196,1.198,199,1.146,204,1.096,211,0.671,212,1.004,213,0.964,214,0.57,215,1.335,216,0.671,217,1.203,218,1.231,219,0.671,220,0.619,221,1.318,222,0.671,223,0.619,224,0.671,225,0.619,226,0.671,227,0.619,228,0.671,229,0.671,230,0.619,231,0.671,232,0.619,233,0.671,234,0.619,235,0.671,236,0.619,237,0.671,238,1.231,239,0.671,240,0.619,241,0.671,242,0.619,243,0.671,244,1.231,245,0.671,246,1.231,247,0.671,248,0.619,249,0.671,250,1.231,251,0.671,252,0.619,253,0.503,254,0.619,255,0.671,256,0.619,257,1.004,258,0.671,259,0.619,260,0.671,261,0.619,262,0.671,263,0.619,264,1.071,265,0.671,266,0.619,267,0.671,268,0.619,269,0.671,270,0.619,271,0.645,272,0.671,273,0.619,274,0.671,275,0.645,276,0.594,277,0.964,278,1.328,279,0.645,280,0.671,301,1.74,304,2.183,314,1.05,338,2.361,339,2.449,340,3.341,341,5.067,342,5.067,343,3.941,344,5.067,345,3.941,346,5.067,347,2.763,348,4.229,349,4.229,350,3.119,351,2.621,352,4.388,353,3.341,354,3.663,355,3.708,356,2.615,357,4.229,358,4.229,359,2.827,360,3.663,361,2.183,362,4.229,363,2.827,364,4.229,365,2.827,366,2.827,367,2.183,368,2.827,369,3.011,370,2.827,371,2.072,372,2.827,373,4.229,374,2.827,375,3.119,376,3.29,377,2.827,378,1.864,379,1.864,380,3.29,381,1.096,382,2.449,383,2.199,384,1.096,385,1.459,386,1.864,387,1.198,388,3.29,389,3.29,390,3.663,391,2.199,392,2.013,393,2.827,394,2.827,395,2.827,396,2.449,397,3.663,398,4.388,399,2.827,400,4.229,401,2.449,402,2.827,403,2.827,404,1.864,405,2.445,406,2.827,407,2.827,408,2.199,409,2.827,410,2.449,411,2.827,412,2.827,413,2.827,414,1.864,415,2.827,416,5.067,417,1.459,418,2.013,419,2.827,420,2.827,421,2.827,422,2.827,423,1.864,424,4.229,425,3.29,426,6.319,427,3.663]],["title/components/AuthCallbackComponent.html",[61,0.19,220,0.855]],["body/components/AuthCallbackComponent.html",[1,0.581,3,0.129,4,0.159,5,0.129,7,0.222,8,0.442,22,0.016,24,0.402,27,0.566,29,0.159,30,1.07,32,0.009,33,0.009,41,1.085,42,1.038,47,1.145,52,0.383,60,0.326,61,0.268,62,0.715,63,1.072,64,0.776,65,0.776,66,0.776,70,1.824,71,2.447,73,0.687,78,0.91,81,1.821,82,1.818,84,0.989,85,1.116,86,2.336,92,1.116,94,1.116,100,2.593,107,1.162,109,2.677,121,1.748,127,0.865,130,1.162,140,3.004,162,0.986,165,0.986,166,1.07,174,1.324,175,1.324,176,0.745,177,0.745,180,0.776,192,1.385,196,1.385,199,1.324,211,0.776,212,1.116,213,1.072,214,0.659,215,1.431,216,0.776,217,1.308,218,0.715,219,0.776,220,1.32,221,1.608,222,0.776,223,0.715,224,0.776,225,1.32,226,0.776,227,0.715,228,0.776,229,0.776,230,0.715,231,0.776,232,0.715,233,0.776,234,0.715,235,0.776,236,0.715,237,0.776,238,0.715,239,0.776,240,0.715,241,0.776,242,0.715,243,0.776,244,0.715,245,0.776,246,0.715,247,0.776,248,0.715,249,0.776,250,0.715,251,0.776,252,0.715,253,0.581,254,0.715,255,0.776,256,0.715,257,1.116,258,0.776,259,0.715,260,0.776,261,0.715,262,0.776,263,0.715,264,1.136,265,0.776,266,0.715,267,0.776,268,0.715,269,0.776,270,0.715,271,0.745,272,0.776,273,0.715,274,0.776,275,0.745,276,0.687,277,0.745,278,0.687,279,0.745,280,0.776,302,2.154,306,1.906,340,3.633,347,3.483,351,2.809,353,3.633,355,3.975,361,2.427,367,2.427,371,2.304,375,3.392,381,1.267,384,1.267,387,1.385,392,2.326,404,3.101,405,2.719,417,1.686,423,2.154,425,3.659,428,6.189,429,2.83,430,4.704,431,4.704,432,4.704,433,3.62,434,2.844,435,4.704,436,3.268,437,4.704,438,3.268,439,3.268,440,3.633,441,4.704,442,3.268,443,3.349,444,3.268,445,3.349,446,3.268,447,3.268,448,3.268,449,2.326,450,3.268,451,3.268,452,3.349,453,2.326,454,3.268,455,3.659,456,2.83,457,2.542,458,2.542,459,2.83,460,1.6,461,2.542,462,2.542,463,2.326]],["title/components/AuthComponent.html",[61,0.19,223,0.855]],["body/components/AuthComponent.html",[1,0.661,3,0.147,4,0.181,5,0.147,7,0.252,8,0.485,21,0.878,22,0.016,23,2.108,24,0.375,27,0.555,29,0.181,32,0.01,33,0.01,41,0.964,42,0.923,47,1.041,52,0.435,60,0.37,61,0.287,62,0.814,63,1.175,64,0.882,65,0.882,66,0.882,70,1.997,71,2.626,73,0.781,78,0.997,81,1.839,82,1.836,84,1.083,85,1.223,92,1.223,94,1.223,107,1.273,109,2.835,121,1.494,127,0.855,130,0.918,162,1.122,165,1.122,171,1.441,176,0.847,177,0.847,180,0.882,204,2.475,211,0.882,212,1.223,213,1.175,214,0.75,215,1.515,216,0.882,217,1.403,218,0.814,219,0.882,220,0.814,221,1.468,222,0.882,223,1.398,224,0.882,225,0.814,226,0.882,227,0.814,228,0.882,229,0.882,230,0.814,231,0.882,232,0.814,233,0.882,234,0.814,235,0.882,236,0.814,237,0.882,238,0.814,239,0.882,240,0.814,241,0.882,242,0.814,243,0.882,244,0.814,245,0.882,246,0.814,247,0.882,248,0.814,249,0.882,250,0.814,251,0.882,252,0.814,253,0.661,254,0.814,255,0.882,256,1.398,257,1.515,258,0.882,259,1.398,260,0.882,261,0.814,262,0.882,263,0.814,264,1.193,265,0.882,266,0.814,267,0.882,268,0.814,269,0.882,270,0.814,271,0.847,272,0.882,273,0.814,274,0.882,275,0.847,276,0.781,277,0.847,278,0.781,279,0.847,280,0.882,328,2.4,338,2.4,361,1.918,381,1.441,390,4.461,405,2.148,434,3.051,445,3.668,449,2.646,464,3.219,465,5.912,466,5.151,467,5.151,468,7.113,469,4.599,470,5.151,471,3.716,472,3.716,473,3.716,474,3.716,475,4.007,476,2.891,477,3.716,478,2.891,479,3.716,480,2.891,481,3.716]],["title/interfaces/AuthModel.html",[0,0.927,482,2.779]],["body/interfaces/AuthModel.html",[0,1.395,2,1.704,3,0.232,4,0.285,5,0.232,7,0.399,8,0.65,21,1.335,22,0.015,24,0.504,27,0.458,29,0.285,32,0.013,33,0.013,38,3.567,53,4.245,482,4.921,483,5.089,484,7.58,485,7.58,486,5.876]],["title/components/AuthPassComponent.html",[61,0.19,225,0.855]],["body/components/AuthPassComponent.html",[1,0.504,3,0.112,4,0.138,5,0.112,7,0.192,8,0.399,21,0.483,22,0.016,24,0.461,27,0.538,29,0.138,30,0.928,32,0.008,33,0.008,41,1.099,42,1.023,47,1.162,52,0.332,60,0.282,61,0.247,62,0.621,63,0.966,64,0.673,65,0.673,66,0.673,70,1.643,71,2.254,73,0.596,78,0.82,81,1.799,82,1.796,84,0.891,85,1.006,86,2.152,89,2.619,92,1.006,94,1.006,100,2.533,103,2.365,107,1.047,109,2.501,116,3.287,121,1.748,126,0.891,127,0.849,128,0.7,130,1.254,140,2.767,155,1.975,162,0.856,163,1.321,164,1.321,165,0.856,166,0.928,174,1.149,175,1.149,176,0.646,177,0.646,180,0.673,192,1.202,199,1.149,211,0.673,212,1.006,213,0.966,214,0.572,215,1.337,216,0.673,217,1.205,218,0.621,219,0.673,220,0.621,221,1.476,222,0.673,223,0.621,224,0.673,225,1.233,226,0.673,227,0.621,228,0.673,229,0.673,230,0.621,231,0.673,232,0.621,233,0.673,234,0.621,235,0.673,236,0.621,237,0.673,238,0.621,239,0.673,240,0.621,241,0.673,242,0.621,243,0.673,244,0.621,245,0.673,246,0.621,247,0.673,248,0.621,249,0.673,250,0.621,251,0.673,252,0.621,253,0.504,254,0.621,255,0.673,256,0.621,257,1.006,258,0.673,259,0.621,260,0.673,261,0.621,262,0.673,263,0.621,264,1.072,265,0.673,266,0.621,267,0.673,268,0.621,269,0.673,270,0.621,271,0.646,272,0.673,273,0.621,274,0.673,275,0.646,276,0.596,277,0.646,278,0.596,279,0.646,280,0.673,302,1.869,306,2.886,314,1.053,340,3.346,347,2.767,353,3.346,355,3.713,356,1.463,361,2.187,375,3.124,381,1.099,392,2.018,405,2.45,423,1.869,433,3.264,434,2.619,440,4.322,443,3.017,445,3.017,449,2.018,452,3.017,453,2.018,455,2.205,456,2.455,463,2.018,487,6.247,488,2.455,489,4.689,490,4.238,491,4.238,492,3.948,493,3.346,494,4.381,495,2.205,496,4.381,497,2.835,498,3.297,499,4.238,500,2.835,501,4.238,502,2.835,503,2.835,504,2.835,505,3.893,506,5.221,507,2.835,508,3.017,509,2.835,510,2.835,511,2.835,512,2.835,513,2.835,514,3.017,515,2.018,516,2.835,517,1.869,518,2.835,519,2.205,520,2.205,521,3.017,522,2.455,523,2.205,524,2.835,525,2.205,526,3.297,527,2.835,528,4.238,529,4.238,530,3.67,531,2.835,532,2.835,533,2.835,534,2.835,535,1.869,536,3.346,537,1.745,538,4.381,539,4.396,540,2.835,541,2.835,542,2.455,543,2.835,544,2.205,545,2.205,546,2.205]],["title/injectables/AuthService.html",[34,1.004,384,1.514]],["body/injectables/AuthService.html",[2,0.937,3,0.127,4,0.157,5,0.127,7,0.219,8,0.439,9,2.663,10,1.582,11,1.667,12,1.369,13,2.13,14,1.102,15,1.434,16,1.667,17,1.582,18,1.199,19,1.505,20,1.761,22,0.016,23,2.148,24,0.54,26,1.761,27,0.556,28,1.434,29,0.157,32,0.009,33,0.009,34,1.2,36,1.369,41,1.141,42,1.091,47,1.251,52,0.378,54,1.199,58,1.988,59,1.867,60,0.322,100,1.869,107,1.152,121,1.353,126,1.885,127,0.739,128,1.481,129,2.3,130,1.761,140,4.22,143,2.825,144,3.426,147,4.205,162,0.975,168,2.3,169,1.667,170,1.667,174,1.309,288,3.898,294,5.154,298,3.898,299,3.321,301,1.988,302,2.13,303,2.3,304,2.407,306,1.89,314,2.686,315,2.797,380,3.628,384,1.808,414,3.61,417,1.667,418,2.3,433,3.419,440,3.61,453,4.269,459,4.04,460,2.285,482,4.269,493,2.13,508,3.321,547,2.797,548,5.739,549,4.259,550,5.996,551,5.193,552,5.996,553,3.628,554,4.04,555,5.996,556,4.04,557,3.23,558,3.23,559,3.23,560,3.23,561,4.664,562,3.23,563,4.664,564,5.193,565,3.23,566,4.664,567,3.23,568,3.23,569,4.664,570,5.193,571,3.23,572,4.664,573,3.23,574,4.664,575,3.23,576,4.664,577,4.664,578,3.23,579,4.664,580,3.23,581,4.664,582,3.23,583,3.23,584,4.664,585,3.23,586,3.23,587,2.797,588,2.3,589,4.04,590,4.04,591,1.988,592,2.3,593,3.23,594,3.23,595,3.23,596,3.23,597,3.23,598,3.23,599,3.23,600,3.23,601,3.23,602,3.23,603,3.23,604,3.23,605,3.23,606,3.23,607,4.664,608,4.664,609,3.23,610,3.23,611,3.23,612,3.23,613,3.23,614,3.23,615,3.23,616,2.797,617,2.797,618,3.23,619,3.23,620,3.23,621,3.23,622,3.23,623,3.23,624,3.23,625,3.23]],["title/interfaces/AuthenticatedUser.html",[0,0.927,591,2.403]],["body/interfaces/AuthenticatedUser.html",[0,1.317,1,1.275,2,1.609,3,0.219,4,0.27,5,0.219,7,0.376,8,0.628,9,2.464,10,2.718,11,2.863,12,2.352,13,3.658,14,1.894,15,2.464,16,2.863,17,2.718,18,2.06,19,2.585,20,3.025,21,1.221,22,0.016,23,2.551,24,0.404,27,0.433,29,0.324,30,1.817,32,0.013,33,0.013,38,3.447,493,5.018,591,4.412,592,3.95,626,4.316,627,4.316,628,5.549]],["title/components/ChangeAvatarComponent.html",[61,0.19,227,0.855]],["body/components/ChangeAvatarComponent.html",[1,0.969,3,0.105,4,0.129,5,0.159,7,0.18,8,0.379,9,1.79,14,1.664,21,0.998,22,0.016,23,0.834,24,0.449,27,0.547,29,0.129,32,0.008,33,0.008,41,0.955,42,0.914,47,1.186,52,0.311,54,0.985,60,0.264,61,0.237,62,0.581,63,0.919,64,0.63,65,0.63,66,0.63,73,0.558,78,0.78,81,1.788,82,1.784,84,0.847,85,0.957,86,2.067,87,3.001,89,2.516,92,0.957,94,0.957,100,2.607,103,2.271,104,2.969,107,0.996,121,1.788,126,1.533,127,0.79,128,1.204,130,1.524,137,1.79,143,2.516,144,1.299,155,1.878,157,2.197,162,1.217,163,1.236,164,1.236,165,1.217,166,0.869,167,1.533,169,1.369,170,1.369,171,1.028,174,1.075,175,1.075,176,0.605,177,0.605,180,0.63,189,1.369,190,2.063,192,2.067,195,2.33,196,2.067,197,4.066,199,2.741,202,1.299,211,0.63,212,0.957,213,0.919,214,0.535,215,1.293,216,0.63,217,1.157,218,0.581,219,0.63,220,0.581,221,0.882,222,0.63,223,0.581,224,0.63,225,0.581,226,0.63,227,1.192,228,1.521,229,0.63,230,0.581,231,0.63,232,0.581,233,0.63,234,0.581,235,0.63,236,0.581,237,0.63,238,0.581,239,0.63,240,0.581,241,0.63,242,0.581,243,0.63,244,0.581,245,0.63,246,0.581,247,0.63,248,0.581,249,0.63,250,0.581,251,0.63,252,0.581,253,0.472,254,0.581,255,0.63,256,0.581,257,0.957,258,0.63,259,0.581,260,0.63,261,0.581,262,0.63,263,0.581,264,1.042,265,0.63,266,0.581,267,0.63,268,0.581,269,0.63,270,0.581,271,0.605,272,0.63,273,0.581,274,0.63,275,0.605,276,0.558,277,0.605,278,0.558,279,0.605,280,0.63,284,2.373,285,1.749,289,5.341,290,5.072,306,1.633,314,1.496,347,2.658,356,2.08,387,1.124,417,3.182,433,2.516,460,1.299,505,1.633,587,2.297,589,2.297,629,6.351,630,5.704,631,2.297,632,4.222,633,2.516,634,3.471,635,4.03,636,4.03,637,5.072,638,4.236,639,3.214,640,4.875,641,5.072,642,4.03,643,4.716,644,4.03,645,2.652,646,4.716,647,4.03,648,4.03,649,2.652,650,4.03,651,2.652,652,2.652,653,2.652,654,4.03,655,2.652,656,2.652,657,4.03,658,2.652,659,2.652,660,3.135,661,2.652,662,2.652,663,2.657,664,2.652,665,2.652,666,2.063,667,2.652,668,1.888,669,2.063,670,2.652,671,2.652,672,5.445,673,2.652,674,4.03,675,2.652,676,2.297,677,3.491,678,4.875,679,2.652,680,2.652,681,2.652,682,2.652,683,3.491,684,2.652,685,2.652,686,4.03,687,5.445,688,4.875,689,2.652,690,4.222,691,2.652,692,2.297,693,2.652,694,2.652,695,2.652,696,2.652]],["title/components/ChatsComponent.html",[61,0.19,230,0.855]],["body/components/ChatsComponent.html",[1,0.797,3,0.177,4,0.217,5,0.177,22,0.015,27,0.455,29,0.217,32,0.011,33,0.011,52,0.524,60,0.446,61,0.316,62,0.98,63,1.331,64,1.063,65,1.063,66,1.063,73,0.941,78,1.13,81,1.861,82,1.859,84,1.227,85,1.063,92,1.386,94,1.386,127,0.849,176,1.021,177,1.021,180,1.063,211,1.063,212,1.386,213,1.331,214,0.903,215,1.635,216,1.063,217,1.542,218,0.98,219,1.063,220,0.98,221,1.278,222,1.063,223,0.98,224,1.063,225,0.98,226,1.063,227,0.98,228,1.063,229,1.063,230,1.508,231,1.063,232,0.98,233,1.063,234,0.98,235,1.063,236,0.98,237,1.063,238,0.98,239,1.063,240,0.98,241,1.063,242,0.98,243,1.063,244,0.98,245,1.063,246,0.98,247,1.063,248,0.98,249,1.063,250,0.98,251,1.063,252,0.98,253,0.797,254,0.98,255,1.063,256,0.98,257,1.386,258,1.063,259,0.98,260,1.063,261,0.98,262,1.063,263,0.98,264,1.271,265,1.063,266,0.98,267,1.063,268,0.98,269,1.063,270,0.98,271,1.021,272,1.063,273,0.98,274,1.063,275,1.021,276,0.941,277,1.021,278,0.941,279,1.021,280,1.063,697,3.878,698,5.556,699,5.839,700,5.839,701,3.85]],["title/injectables/ConfigService.html",[34,1.004,385,2.015]],["body/injectables/ConfigService.html",[3,0.177,4,0.218,5,0.177,7,0.305,8,0.55,22,0.016,24,0.474,27,0.558,29,0.218,30,1.471,32,0.011,33,0.011,34,1.504,36,1.904,41,1.166,42,1.116,47,1.248,52,0.526,58,2.764,59,2.596,60,0.447,100,2.502,107,1.445,121,1.696,129,3.197,130,1.608,143,3.852,144,2.199,162,1.356,174,1.819,189,2.317,192,1.904,288,4.633,298,3.197,299,4.165,301,2.764,304,3.019,350,3.601,351,3.212,356,3.358,371,2.865,381,1.741,385,3.019,425,5.061,588,3.197,663,4.833,683,3.889,702,3.889,703,6.507,704,6.507,705,6.507,706,5.97,707,6.894,708,6.894,709,5.85,710,4.49,711,4.49,712,5.85,713,4.49,714,4.49,715,4.49,716,4.49,717,4.49,718,5.85,719,3.493,720,4.49,721,4.49,722,3.493,723,4.49,724,4.49,725,4.49,726,4.49,727,4.49,728,4.49,729,4.49,730,4.49,731,4.49,732,4.49,733,4.49,734,4.49]],["title/components/DashboardComponent.html",[61,0.19,232,0.855]],["body/components/DashboardComponent.html",[1,0.231,3,0.051,4,0.063,5,0.051,14,1.21,22,0.011,27,0.175,29,0.063,32,0.004,33,0.004,52,0.152,60,0.129,61,0.144,62,0.284,63,0.512,64,0.308,65,0.308,66,0.308,73,0.273,78,0.435,81,1.626,82,1.618,84,0.472,85,0.308,92,0.533,94,0.533,127,0.437,176,0.296,177,0.296,180,0.308,199,1.779,211,0.308,212,0.533,213,0.512,214,0.262,215,0.842,216,0.308,217,0.706,218,0.284,219,0.308,220,0.284,221,0.492,222,0.308,223,0.284,224,0.308,225,0.284,226,0.308,227,0.284,228,0.308,229,0.308,230,0.284,231,0.308,232,0.776,233,0.308,234,0.284,235,0.308,236,0.284,237,0.308,238,0.284,239,0.308,240,0.284,241,0.308,242,0.284,243,0.308,244,0.284,245,0.308,246,0.284,247,0.308,248,0.284,249,0.308,250,0.284,251,0.308,252,0.284,253,0.231,254,0.284,255,0.308,256,0.284,257,0.533,258,0.308,259,0.284,260,0.308,261,0.284,262,0.308,263,0.284,264,0.713,265,0.308,266,0.284,267,0.308,268,0.284,269,0.308,270,0.284,271,0.296,272,0.308,273,0.284,274,0.308,275,0.296,276,0.273,277,0.296,278,0.273,279,0.296,280,0.308,701,0.856,735,1.124,736,4.008,737,2.247,738,2.247,739,1.298,740,6.034,741,6.59,742,6.15,743,5.22,744,6.254,745,2.247,746,2.247,747,4.39,748,5.605,749,5.907,750,6.034,751,5.425,752,6.516,753,3.545,754,5.907,755,5.605,756,6.436,757,5.605,758,4.985,759,5.22,760,4.39,761,3.545,762,5.425,763,5.22,764,6.034,765,5.605,766,5.605,767,4.711,768,4.711,769,5.22,770,6.254,771,6.349,772,4.39,773,2.247,774,5.765,775,5.907,776,4.985,777,4.008,778,5.605,779,4.39,780,4.985,781,5.425,782,5.907,783,5.425,784,5.425,785,5.22,786,5.907,787,4.985,788,4.985,789,5.907,790,6.349,791,5.425,792,6.034,793,4.008,794,5.907,795,5.22,796,5.425,797,3.545,798,2.247,799,6.034,800,5.22,801,6.834,802,5.425,803,5.765,804,4.39,805,5.22,806,6.034,807,5.425,808,4.985,809,5.22,810,4.39,811,4.985,812,6.034,813,4.711,814,5.605,815,6.034,816,6.034,817,3.545,818,5.605,819,4.008,820,5.425,821,2.247,822,5.22,823,5.425,824,4.711,825,5.22,826,5.907,827,4.39,828,5.425,829,4.985,830,4.711,831,6.034,832,4.985,833,5.425,834,4.39,835,5.765,836,6.034,837,5.425,838,5.22,839,6.516,840,4.711,841,3.545,842,5.765,843,5.605,844,5.22,845,5.907,846,5.605,847,4.008,848,6.254,849,5.765,850,5.907,851,4.985,852,5.605,853,5.22,854,4.39,855,4.985,856,4.711,857,5.22,858,4.985,859,6.15,860,5.605,861,3.545,862,5.425,863,2.973,864,4.985,865,4.39,866,4.711,867,5.605,868,4.39,869,4.985,870,5.605,871,3.545,872,4.711,873,4.711,874,5.765,875,4.711,876,5.765,877,4.985,878,4.985,879,4.711,880,4.39,881,4.711,882,5.425,883,5.22,884,4.711,885,5.605,886,4.985,887,2.247,888,2.247,889,5.425,890,4.711,891,4.39,892,5.605,893,2.247,894,4.39,895,3.545,896,4.711,897,2.247,898,5.765,899,4.711,900,2.973,901,4.711,902,3.545,903,2.247,904,4.008,905,4.985,906,4.711,907,5.605,908,2.973,909,3.545,910,4.39,911,2.973,912,4.39,913,2.973,914,4.711,915,4.711,916,2.247,917,4.39,918,1.946,919,1.298,920,1.298,921,1.298,922,1.298,923,1.298,924,1.298,925,1.298,926,1.298,927,1.298,928,1.298,929,1.298,930,1.298,931,1.298,932,1.298,933,1.298,934,1.298,935,1.298,936,1.298,937,1.298,938,1.298,939,1.298,940,1.298,941,1.298,942,1.298,943,1.298,944,1.298,945,1.298,946,1.298,947,1.298,948,1.298,949,1.298,950,1.298,951,1.298,952,1.298,953,1.298,954,1.298,955,1.298,956,1.298,957,1.298,958,1.298,959,1.298,960,1.298,961,1.298,962,1.298,963,1.298,964,1.298,965,1.298,966,1.298,967,1.298,968,1.298,969,1.298,970,1.298,971,1.298,972,1.298,973,1.298,974,1.298,975,1.298,976,1.298,977,1.298,978,1.298,979,1.298,980,1.298,981,1.298,982,1.298,983,1.298,984,1.298,985,1.298,986,1.298,987,1.298,988,1.298,989,1.298,990,1.298,991,1.298,992,1.298,993,1.298,994,1.298,995,1.298,996,1.298,997,1.298,998,1.298,999,1.298,1000,1.298,1001,1.298,1002,1.298,1003,1.298,1004,1.298,1005,1.298,1006,1.298]],["title/injectables/DeleteUploadByIdGQL.html",[34,1.004,1007,2.779]],["body/injectables/DeleteUploadByIdGQL.html",[3,0.215,4,0.265,5,0.215,7,0.37,8,0.622,14,2.586,21,1.213,22,0.016,24,0.482,27,0.516,29,0.359,30,1.788,32,0.013,33,0.013,34,1.701,36,2.315,38,3.414,40,4.114,41,0.891,42,0.852,43,3.607,47,0.891,50,2.818,51,2.977,52,0.64,60,0.544,264,1.177,1007,4.71,1008,4.71,1009,3.361,1010,5.755,1011,5.536,1012,5.46,1013,4.729,1014,4.729,1015,4.729,1016,4.729]],["title/interfaces/Env.html",[0,0.927,304,2.015]],["body/interfaces/Env.html",[0,1.285,2,1.569,3,0.214,4,0.263,5,0.214,7,0.367,8,0.619,21,1.367,22,0.016,24,0.56,29,0.263,32,0.013,33,0.013,304,3.396,338,3.304,408,5.737,1017,4.687,1018,6.388,1019,6.388,1020,6.388,1021,6.388,1022,6.388,1023,6.141,1024,7.09,1025,6.141,1026,6.141]],["title/components/EventsComponent.html",[61,0.19,234,0.855]],["body/components/EventsComponent.html",[1,0.797,3,0.177,4,0.217,5,0.177,22,0.015,27,0.455,29,0.217,32,0.011,33,0.011,52,0.524,60,0.446,61,0.316,62,0.98,63,1.331,64,1.063,65,1.063,66,1.063,73,0.941,78,1.13,81,1.861,82,1.859,84,1.227,85,1.063,92,1.386,94,1.386,127,0.849,176,1.021,177,1.021,180,1.063,211,1.063,212,1.386,213,1.331,214,0.903,215,1.635,216,1.063,217,1.542,218,0.98,219,1.063,220,0.98,221,1.278,222,1.063,223,0.98,224,1.063,225,0.98,226,1.063,227,0.98,228,1.063,229,1.063,230,0.98,231,1.063,232,0.98,233,1.063,234,1.508,235,1.063,236,0.98,237,1.063,238,0.98,239,1.063,240,0.98,241,1.063,242,0.98,243,1.063,244,0.98,245,1.063,246,0.98,247,1.063,248,0.98,249,1.063,250,0.98,251,1.063,252,0.98,253,0.797,254,0.98,255,1.063,256,0.98,257,1.386,258,1.063,259,0.98,260,1.063,261,0.98,262,1.063,263,0.98,264,1.271,265,1.063,266,0.98,267,1.063,268,0.98,269,1.063,270,0.98,271,1.021,272,1.063,273,0.98,274,1.063,275,1.021,276,0.941,277,1.021,278,0.941,279,1.021,280,1.063,701,3.85,1027,3.878,1028,5.556,1029,5.839,1030,5.839]],["title/components/ExtensionInputComponent.html",[61,0.19,236,0.855]],["body/components/ExtensionInputComponent.html",[1,0.49,3,0.109,4,0.134,5,0.109,7,0.187,8,0.39,21,0.946,22,0.016,24,0.498,27,0.533,29,0.134,32,0.008,33,0.008,41,1.115,42,1.067,47,1.214,52,0.323,60,0.274,61,0.242,62,0.603,63,0.946,64,0.654,65,0.654,66,0.654,69,1.961,70,1.608,71,2.215,72,3.88,73,0.579,74,2.14,75,2.952,76,3.88,77,2.952,78,1.074,79,3.226,81,1.795,82,1.791,83,2.967,84,0.872,85,0.984,86,2.114,87,3.07,88,3.88,89,2.574,90,3.88,91,3.88,92,0.984,93,3.226,94,0.984,95,3.226,100,2.333,103,2.324,104,3.026,105,4.631,106,4.631,107,1.025,109,2.465,110,3.226,111,3.226,112,3.226,113,4.318,114,1.842,115,3.88,116,3.411,117,4.631,118,3.88,120,2.385,121,1.814,122,2.385,123,2.385,126,1.568,127,0.8,128,1.232,130,1.471,132,3.226,134,3.226,136,3.226,137,2.215,143,2.574,144,2.031,152,2.385,154,2.385,155,1.932,156,2.385,157,2.261,158,2.385,159,2.031,162,0.831,163,1.283,164,1.283,165,1.252,166,0.902,167,1.592,169,1.421,170,1.421,171,1.068,175,1.116,176,0.628,177,0.628,178,1.592,180,0.654,192,1.758,195,1.592,196,1.167,199,1.68,200,1.695,201,1.421,202,1.349,207,2.142,208,2.142,209,2.142,210,3.226,211,0.654,212,0.984,213,0.946,214,0.556,215,1.318,216,0.654,217,1.184,218,0.603,219,0.654,220,0.603,221,0.908,222,0.654,223,0.603,224,0.654,225,0.603,226,0.654,227,0.603,228,0.654,229,0.654,230,0.603,231,0.654,232,0.603,233,0.654,234,0.603,235,0.654,236,1.37,237,1.541,238,0.603,239,0.654,240,0.603,241,0.654,242,0.603,243,0.654,244,0.603,245,0.654,246,0.603,247,0.654,248,0.603,249,0.654,250,0.603,251,0.654,252,0.603,253,0.49,254,0.603,255,0.654,256,0.603,257,0.984,258,0.654,259,0.603,260,0.654,261,0.603,262,0.654,263,0.603,264,1.059,265,0.654,266,0.603,267,0.654,268,0.603,269,0.654,270,0.603,271,0.628,272,0.654,273,0.603,274,0.654,275,0.628,276,0.579,277,0.628,278,0.579,279,0.628,280,0.654,325,2.864,327,1.695,328,1.283,387,1.167,460,1.349,1031,6.486,1032,6.486,1033,3.07,1034,4.454,1035,2.397,1036,4.988,1037,2.754,1038,2.385,1039,3.592,1040,3.66,1041,3.592,1042,2.754,1043,2.754,1044,2.754,1045,2.754,1046,2.754,1047,2.385,1048,4.147,1049,2.385,1050,2.397,1051,2.754,1052,2.754,1053,2.142,1054,2.385,1055,2.385,1056,2.754]],["title/interfaces/FileParams.html",[0,0.927,1057,2.779]],["body/interfaces/FileParams.html",[0,1.39,2,1.698,3,0.231,4,0.284,5,0.231,7,0.397,8,0.649,21,1.364,22,0.015,24,0.534,29,0.284,32,0.013,33,0.013,127,0.933,128,1.704,1057,4.91,1058,5.07,1059,4.128,1060,6.557]],["title/interfaces/GetAccountModel.html",[0,0.927,1061,3.037]],["body/interfaces/GetAccountModel.html",[0,1.298,1,1.317,2,1.586,3,0.216,4,0.266,5,0.216,7,0.371,8,0.623,9,2.429,10,2.679,11,2.823,12,2.319,14,1.867,15,2.429,16,2.823,17,2.679,18,2.031,19,2.549,20,2.982,21,1.34,22,0.016,23,2.473,24,0.519,25,4.117,26,3.611,27,0.427,28,2.429,29,0.266,32,0.013,33,0.013,46,2.429,204,2.121,282,3.162,283,3.607,328,2.549,1061,5.151,1062,4.737,1063,5.151,1064,2.982]],["title/interfaces/GraphqlError.html",[0,0.927,336,2.779]],["body/interfaces/GraphqlError.html",[0,1.614,2,1.657,3,0.225,4,0.278,5,0.225,7,0.388,8,0.639,21,1.366,22,0.015,24,0.529,29,0.33,32,0.013,33,0.013,128,1.68,202,2.798,287,5.058,332,4.068,333,4.444,334,5.967,335,3.767,336,4.84,337,6.505,338,3.381]],["title/components/HeaderComponent.html",[61,0.19,238,0.855]],["body/components/HeaderComponent.html",[1,0.703,3,0.156,4,0.192,5,0.156,7,0.268,8,0.505,22,0.016,27,0.564,29,0.192,32,0.01,33,0.01,41,0.996,42,0.952,47,0.996,52,0.463,60,0.394,61,0.296,62,0.865,63,1.225,64,0.938,65,0.938,66,0.938,73,0.83,78,1.04,81,1.846,82,1.844,84,1.129,85,1.275,92,1.275,94,1.275,127,0.807,159,2.631,162,1.192,165,1.622,166,1.294,171,1.531,176,0.901,177,0.901,180,0.938,211,0.938,212,1.275,213,1.225,214,0.797,215,1.555,216,0.938,217,1.449,218,0.865,219,0.938,220,0.865,221,1.5,222,0.938,223,0.865,224,0.938,225,0.865,226,0.938,227,0.865,228,0.938,229,0.938,230,0.865,231,0.938,232,0.865,233,0.938,234,0.865,235,0.938,236,0.865,237,0.938,238,1.434,239,0.938,240,1.434,241,0.938,242,0.865,243,0.938,244,0.865,245,0.938,246,0.865,247,0.938,248,0.865,249,0.938,250,0.865,251,0.938,252,0.865,253,0.703,254,0.865,255,0.938,256,0.865,257,1.275,258,0.938,259,0.865,260,0.938,261,0.865,262,0.938,263,0.865,264,1.219,265,0.938,266,0.865,267,0.938,268,0.865,269,0.938,270,0.865,271,0.901,272,0.938,273,0.865,274,0.938,275,0.901,276,0.83,277,0.901,278,0.83,279,0.901,280,0.938,350,3.757,367,2.772,369,3.824,381,1.531,384,1.531,385,2.038,387,1.674,633,3.15,1065,3.421,1066,6.103,1067,4.747,1068,4.345,1069,4.024,1070,6.103,1071,5.371,1072,5.371,1073,6.103,1074,3.95,1075,3.95,1076,3.95,1077,3.95,1078,5.371]],["title/pipes/IFrameUrlPipe.html",[189,2.015,1079,2.779]],["body/pipes/IFrameUrlPipe.html",[3,0.219,4,0.269,5,0.219,21,1.22,22,0.016,23,2.337,24,0.404,27,0.521,29,0.269,32,0.013,33,0.013,46,2.963,47,0.904,52,0.649,60,0.552,70,2.147,73,1.164,78,1.292,84,1.403,107,1.368,126,1.741,127,0.883,128,1.368,130,1.368,189,3.443,314,2.057,517,3.652,1079,4.751,1080,3.652,1081,5.779,1082,4.797,1083,6.673,1084,4.308,1085,6.673,1086,5.539,1087,6.202,1088,3.943,1089,3.943,1090,5.779,1091,5.539]],["title/components/MeComponent.html",[61,0.19,240,0.855]],["body/components/MeComponent.html",[1,0.646,3,0.143,4,0.176,5,0.143,7,0.246,8,0.477,22,0.016,24,0.264,27,0.519,29,0.176,32,0.01,33,0.01,41,1.084,42,1.037,47,1.176,52,0.425,60,0.362,61,0.284,62,0.795,63,1.155,64,0.861,65,0.861,66,0.861,73,0.763,78,1.13,81,1.835,82,1.833,84,1.065,85,1.203,92,1.203,94,1.203,104,3.445,107,1.252,121,1.469,127,0.779,130,1.252,157,2.762,162,1.096,165,1.096,166,1.188,176,0.827,177,0.827,180,0.861,192,1.538,196,1.538,199,2.053,201,1.873,211,0.861,212,1.203,213,1.155,214,0.732,215,1.5,216,0.861,217,1.386,218,0.795,219,0.861,220,0.795,221,1.455,222,0.861,223,0.795,224,0.861,225,0.795,226,0.861,227,0.795,228,0.861,229,0.861,230,0.795,231,0.861,232,0.795,233,0.861,234,0.795,235,0.861,236,0.795,237,0.861,238,0.795,239,0.861,240,1.383,241,0.861,242,0.795,243,0.861,244,0.795,245,0.861,246,0.795,247,0.861,248,0.795,249,0.861,250,0.795,251,0.861,252,0.795,253,0.646,254,0.795,255,0.861,256,0.795,257,1.203,258,0.861,259,0.795,260,0.861,261,0.795,262,0.861,263,0.795,264,1.182,265,0.861,266,0.795,267,0.861,268,0.795,269,0.861,270,0.795,271,0.827,272,0.861,273,0.795,274,0.861,275,0.827,276,0.763,277,0.827,278,0.763,279,0.827,280,0.861,306,1.47,325,1.873,350,3.593,351,2.944,367,2.615,369,3.607,371,2.482,381,1.407,384,1.407,385,1.873,387,1.538,537,2.234,633,3.012,1035,2.929,1040,2.393,1050,2.929,1092,3.143,1093,5.067,1094,5.067,1095,4.541,1096,6.318,1097,6.318,1098,5.838,1099,5.056,1100,3.629,1101,3.629,1102,3.629,1103,3.629,1104,3.629,1105,3.629,1106,3.941,1107,3.629,1108,3.629,1109,2.823,1110,3.629,1111,3.629,1112,5.838,1113,3.143,1114,2.584,1115,3.629,1116,5.067,1117,5.067,1118,3.629]],["title/components/MemoriesComponent.html",[61,0.19,242,0.855]],["body/components/MemoriesComponent.html",[1,0.797,3,0.177,4,0.217,5,0.177,22,0.015,27,0.455,29,0.217,32,0.011,33,0.011,52,0.524,60,0.446,61,0.316,62,0.98,63,1.331,64,1.063,65,1.063,66,1.063,73,0.941,78,1.13,81,1.861,82,1.859,84,1.227,85,1.063,92,1.386,94,1.386,127,0.849,176,1.021,177,1.021,180,1.063,211,1.063,212,1.386,213,1.331,214,0.903,215,1.635,216,1.063,217,1.542,218,0.98,219,1.063,220,0.98,221,1.278,222,1.063,223,0.98,224,1.063,225,0.98,226,1.063,227,0.98,228,1.063,229,1.063,230,0.98,231,1.063,232,0.98,233,1.063,234,0.98,235,1.063,236,0.98,237,1.063,238,0.98,239,1.063,240,0.98,241,1.063,242,1.508,243,1.063,244,0.98,245,1.063,246,0.98,247,1.063,248,0.98,249,1.063,250,0.98,251,1.063,252,0.98,253,0.797,254,0.98,255,1.063,256,0.98,257,1.386,258,1.063,259,0.98,260,1.063,261,0.98,262,1.063,263,0.98,264,1.271,265,1.063,266,0.98,267,1.063,268,0.98,269,1.063,270,0.98,271,1.021,272,1.063,273,0.98,274,1.063,275,1.021,276,0.941,277,1.021,278,0.941,279,1.021,280,1.063,701,3.85,1119,3.878,1120,5.085,1121,5.839,1122,5.839]],["title/components/MenuComponent.html",[61,0.19,244,0.855]],["body/components/MenuComponent.html",[1,0.791,3,0.175,4,0.216,5,0.175,22,0.015,27,0.505,29,0.216,32,0.011,33,0.011,52,0.521,60,0.443,61,0.315,62,0.973,63,1.325,64,1.055,65,1.055,66,1.055,73,0.934,78,1.125,81,1.86,82,1.858,84,1.222,85,1.379,92,1.379,94,1.379,127,0.846,176,1.013,177,1.013,180,1.055,211,1.055,212,1.379,213,1.325,214,0.897,215,1.63,216,1.055,217,1.537,218,0.973,219,1.055,220,0.973,221,1.272,222,1.055,223,0.973,224,1.055,225,0.973,226,1.055,227,0.973,228,1.055,229,1.055,230,0.973,231,1.055,232,0.973,233,1.055,234,0.973,235,1.055,236,0.973,237,1.055,238,0.973,239,1.055,240,0.973,241,1.055,242,0.973,243,1.055,244,1.504,245,1.055,246,1.504,247,1.055,248,0.973,249,1.055,250,0.973,251,1.055,252,0.973,253,0.791,254,0.973,255,1.055,256,0.973,257,1.379,258,1.055,259,0.973,260,1.055,261,0.973,262,1.055,263,0.973,264,1.268,265,1.055,266,0.973,267,1.055,268,0.973,269,1.055,270,0.973,271,1.013,272,1.055,273,0.973,274,1.055,275,1.013,276,0.934,277,1.013,278,0.934,279,1.013,280,1.055,396,3.85,1123,3.85,1124,6.475,1125,5.811,1126,5.811]],["title/components/NavComponent.html",[61,0.19,246,0.855]],["body/components/NavComponent.html",[1,0.629,2,1.025,3,0.139,4,0.172,5,0.139,7,0.24,8,0.468,22,0.016,24,0.257,27,0.533,29,0.172,30,1.157,32,0.01,33,0.01,41,1.019,42,0.974,46,3.032,47,1.074,52,0.414,60,0.352,61,0.28,62,0.774,63,1.134,64,0.839,65,0.839,66,0.839,73,0.743,78,1.274,81,1.832,82,1.829,83,2.208,84,1.045,85,1.18,92,1.18,94,1.18,107,1.229,114,2.208,121,1.025,127,0.77,130,0.873,137,2.208,159,2.436,162,1.067,165,1.067,166,1.157,176,0.806,177,0.806,180,0.839,211,0.839,212,1.18,213,1.134,214,0.713,215,1.482,216,0.839,217,1.366,218,0.774,219,0.839,220,0.774,221,1.441,222,0.839,223,0.774,224,0.839,225,0.774,226,0.839,227,0.774,228,0.839,229,0.839,230,0.774,231,0.839,232,0.774,233,0.839,234,0.774,235,0.839,236,0.774,237,0.839,238,0.774,239,0.839,240,0.774,241,0.839,242,0.774,243,0.839,244,0.774,245,0.839,246,1.367,247,0.839,248,0.774,249,0.839,250,0.774,251,0.839,252,0.774,253,0.629,254,0.774,255,0.839,256,0.774,257,1.18,258,0.839,259,0.774,260,0.839,261,0.774,262,0.839,263,0.774,264,1.171,265,0.839,266,0.774,267,0.839,268,0.774,269,0.839,270,0.774,271,0.806,272,0.839,273,0.774,274,0.839,275,0.806,276,1.045,277,0.806,278,0.743,279,0.806,280,0.839,350,3.542,367,2.566,369,3.54,381,1.37,384,1.37,385,1.823,387,1.498,398,4.307,427,3.06,434,3.523,633,2.969,698,2.748,706,5.408,1028,2.748,1120,2.516,1127,2.748,1128,5.754,1129,5.754,1130,5.754,1131,4.973,1132,4.973,1133,5.754,1134,4.476,1135,3.533,1136,3.533,1137,3.533,1138,4.476,1139,3.533,1140,3.533,1141,4.202,1142,5.31,1143,3.06,1144,2.748,1145,3.06,1146,3.06,1147,3.868,1148,2.748,1149,3.06,1150,3.06,1151,3.06,1152,3.533,1153,4.973,1154,4.307,1155,4.973]],["title/components/NotFoundComponent.html",[61,0.19,248,0.855]],["body/components/NotFoundComponent.html",[1,0.727,3,0.161,4,0.198,5,0.161,7,0.277,21,0.937,22,0.016,24,0.4,27,0.484,29,0.198,32,0.011,33,0.011,41,0.897,42,0.858,47,0.897,52,0.479,60,0.407,61,0.302,62,0.895,63,1.253,64,0.97,65,0.97,66,0.97,73,0.859,78,1.286,81,1.85,82,1.848,83,2.758,84,1.155,85,1.304,92,1.304,94,1.304,114,2.441,127,0.818,137,2.441,176,0.932,177,0.932,180,0.97,211,0.97,212,1.304,213,1.253,214,0.824,215,1.576,216,0.97,217,1.474,218,0.895,219,0.97,220,0.895,221,1.203,222,0.97,223,0.895,224,0.97,225,0.895,226,0.97,227,0.895,228,0.97,229,0.97,230,0.895,231,0.97,232,0.895,233,0.97,234,0.895,235,0.97,236,0.895,237,0.97,238,0.895,239,0.97,240,0.895,241,0.97,242,0.895,243,0.97,244,0.895,245,0.97,246,0.895,247,0.97,248,1.454,249,0.97,250,0.895,251,0.97,252,0.895,253,0.727,254,0.895,255,0.97,256,0.895,257,1.304,258,0.97,259,0.895,260,0.97,261,0.895,262,0.97,263,0.895,264,1.233,265,0.97,266,0.895,267,0.97,268,0.895,269,0.97,270,0.895,271,0.932,272,0.97,273,0.895,274,0.97,275,0.932,276,0.859,277,0.932,278,0.859,279,0.932,280,0.97,381,1.584,1067,4.83,1141,3.822,1156,5.378,1157,5.378,1158,3.539,1159,5.496,1160,5.496,1161,5.496,1162,6.21,1163,4.086,1164,4.086,1165,4.086,1166,4.76,1167,5.496]],["title/components/OopsComponent.html",[61,0.19,250,0.855]],["body/components/OopsComponent.html",[1,0.783,3,0.174,4,0.214,5,0.174,22,0.016,27,0.45,29,0.214,32,0.011,33,0.011,52,0.515,60,0.439,61,0.313,62,0.964,63,1.316,64,1.045,65,1.045,66,1.045,73,0.925,78,1.118,81,1.859,82,1.857,84,1.214,85,1.045,92,1.37,94,1.37,127,0.843,176,1.003,177,1.003,180,1.045,211,1.045,212,1.37,213,1.316,214,0.888,215,1.624,216,1.045,217,1.529,218,0.964,219,1.045,220,0.964,221,1.264,222,1.045,223,0.964,224,1.045,225,0.964,226,1.045,227,0.964,228,1.045,229,1.045,230,0.964,231,1.045,232,0.964,233,1.045,234,0.964,235,1.045,236,0.964,237,1.045,238,0.964,239,1.045,240,0.964,241,1.045,242,0.964,243,1.045,244,0.964,245,1.045,246,0.964,247,1.045,248,0.964,249,1.045,250,1.498,251,1.045,252,0.964,253,0.783,254,0.964,255,1.045,256,0.964,257,1.37,258,1.045,259,0.964,260,1.045,261,0.964,262,1.045,263,0.964,264,1.264,265,1.045,266,0.964,267,1.045,268,0.964,269,1.045,270,0.964,271,1.003,272,1.045,273,0.964,274,1.045,275,1.003,276,0.925,277,1.003,278,0.925,279,1.003,280,1.045,1168,3.811,1169,6.443,1170,5.773,1171,5.773]],["title/components/PermissionInputComponent.html",[61,0.19,252,0.855]],["body/components/PermissionInputComponent.html",[1,0.544,3,0.121,4,0.148,5,0.121,7,0.207,8,0.422,21,1.108,22,0.016,24,0.512,27,0.507,29,0.148,32,0.009,33,0.009,41,1.096,42,1.048,47,1.195,52,0.358,60,0.305,61,0.258,62,0.669,63,1.022,64,0.726,65,0.726,66,0.726,69,2.176,70,1.737,72,4.127,73,0.643,74,2.313,75,3.191,76,4.127,77,3.191,78,1.131,79,3.486,81,1.811,82,1.808,83,3.121,84,0.942,85,1.064,86,2.249,87,3.266,88,4.127,89,2.738,90,4.127,91,4.127,92,1.064,93,3.486,94,1.064,95,3.486,105,4.838,106,4.838,107,1.107,110,3.486,111,3.486,112,3.486,113,4.545,114,1.99,115,4.127,116,3.544,117,4.838,118,4.127,121,1.804,126,1.668,127,0.828,128,1.311,130,1.444,132,3.486,134,3.486,136,3.486,137,2.356,159,2.195,163,1.424,165,1.353,166,1.001,171,1.185,175,1.239,176,0.697,177,0.697,180,0.726,207,2.378,208,2.378,209,2.378,210,3.486,211,0.726,212,1.064,213,1.022,214,0.617,215,1.387,216,0.726,217,1.259,218,0.669,219,0.726,220,0.669,221,0.981,222,0.726,223,0.669,224,0.726,225,0.669,226,0.726,227,0.669,228,0.726,229,0.726,230,0.669,231,0.726,232,0.669,233,0.726,234,0.669,235,0.726,236,0.669,237,0.726,238,0.669,239,0.726,240,0.669,241,0.726,242,0.669,243,0.726,244,0.669,245,0.726,246,0.669,247,0.726,248,0.669,249,0.726,250,0.669,251,0.726,252,1.423,253,1.195,254,0.669,255,0.726,256,0.669,257,1.064,258,0.726,259,0.669,260,0.726,261,0.669,262,0.726,263,0.669,264,1.107,265,0.726,266,0.669,267,0.726,268,0.669,269,0.726,270,0.669,271,0.697,272,0.726,273,0.669,274,0.726,275,0.697,276,0.643,277,0.697,278,0.643,279,0.697,280,0.726,325,2.738,1038,2.648,1039,3.881,1040,3.852,1041,3.881,1047,2.648,1049,2.648,1172,6.407,1173,6.407,1174,2.893,1175,3.057,1176,3.057,1177,3.057,1178,3.057,1179,3.057,1180,3.057,1181,3.057,1182,3.057,1183,3.057,1184,3.057]],["title/components/ProfileComponent.html",[61,0.19,254,0.855]],["body/components/ProfileComponent.html",[1,0.839,2,0.592,3,0.08,4,0.099,5,0.08,7,0.138,8,0.309,9,2.453,10,0.999,13,1.345,16,2.125,17,2.959,18,0.757,19,0.95,21,0.941,22,0.016,23,2.012,24,0.454,25,1.897,26,2.819,27,0.562,28,0.906,29,0.099,30,1.349,31,1.452,32,0.006,33,0.006,35,3.111,39,2.38,41,1.157,42,1.107,47,1.199,52,0.239,60,0.203,61,0.2,62,0.447,63,0.748,64,0.484,65,0.484,66,0.484,70,1.272,71,1.829,73,0.429,74,1.694,78,0.635,81,1.739,82,1.733,84,0.69,85,0.779,86,1.746,92,0.779,94,0.779,100,2.568,103,1.919,104,2.572,107,0.811,109,2.095,121,1.194,126,1.032,127,0.744,128,0.811,130,1.166,137,0.906,140,2.819,143,3.217,144,2.706,147,2.535,155,1.529,157,1.789,162,0.616,164,0.95,165,1.243,166,0.668,167,1.179,168,1.452,169,1.053,170,1.053,171,0.791,174,0.827,175,0.827,176,0.465,177,0.465,178,1.179,180,0.484,185,1.767,186,1.587,187,1.767,192,1.746,195,1.897,196,1.391,197,3.642,199,1.33,200,2.02,201,1.694,202,1.608,204,0.791,211,0.484,212,0.779,213,0.748,214,0.412,215,1.12,216,0.484,217,0.977,218,0.447,219,0.484,220,0.447,221,1.132,222,0.484,223,0.447,224,0.484,225,0.447,226,0.484,227,0.719,228,0.779,229,0.484,230,0.447,231,0.484,232,0.447,233,0.484,234,0.447,235,0.484,236,0.447,237,0.484,238,0.447,239,0.484,240,0.447,241,0.484,242,0.447,243,0.484,244,0.447,245,0.484,246,0.447,247,0.484,248,0.447,249,0.484,250,0.447,251,0.484,252,0.447,253,0.363,254,1.033,255,0.484,256,0.447,257,0.779,258,0.484,259,0.447,260,0.484,261,0.447,262,0.484,263,0.447,264,0.92,265,0.484,266,0.447,267,0.484,268,0.447,269,0.484,270,0.447,271,0.465,272,0.484,273,0.447,274,0.484,275,0.465,276,0.429,277,0.465,278,0.429,279,0.465,280,0.484,306,0.827,314,2.051,325,1.053,328,1.919,343,3.203,351,2.199,356,2.125,361,1.053,367,1.694,371,1.608,376,2.553,381,0.791,384,0.791,387,0.865,392,1.452,405,1.179,414,1.345,417,1.053,434,2.125,445,2.337,449,1.452,460,2.017,530,3.566,588,1.452,630,1.587,633,2.125,634,2.932,637,1.767,641,4.086,663,2.164,668,1.452,669,1.587,1040,1.345,1053,1.587,1055,1.767,1064,2.245,1068,2.932,1069,2.715,1080,1.345,1088,1.452,1089,1.452,1095,3.203,1106,2.553,1109,1.587,1141,2.904,1154,2.842,1185,1.587,1186,3.566,1187,5.231,1188,3.566,1189,2.932,1190,2.932,1191,3.282,1192,3.282,1193,6.04,1194,3.359,1195,4.718,1196,4.118,1197,3.203,1198,3.282,1199,2.04,1200,2.04,1201,3.282,1202,2.04,1203,3.566,1204,2.04,1205,3.282,1206,2.04,1207,3.282,1208,3.282,1209,3.282,1210,3.282,1211,3.282,1212,4.118,1213,2.04,1214,3.282,1215,3.282,1216,3.282,1217,2.04,1218,4.118,1219,3.282,1220,2.04,1221,2.04,1222,2.842,1223,2.04,1224,3.282,1225,2.04,1226,2.04,1227,3.282,1228,2.04,1229,2.04,1230,2.04,1231,2.04,1232,2.04,1233,3.282,1234,2.04,1235,2.04,1236,2.04,1237,2.04,1238,3.282,1239,2.04,1240,1.345,1241,2.04,1242,3.282,1243,2.04,1244,1.587,1245,2.04,1246,1.587,1247,1.767,1248,1.767,1249,1.767,1250,3.282,1251,2.04,1252,2.04,1253,2.04,1254,2.04,1255,1.767,1256,2.04,1257,2.04,1258,2.04,1259,2.04,1260,2.04,1261,2.04,1262,2.04,1263,2.04,1264,2.04,1265,2.04,1266,2.04,1267,2.04,1268,2.04,1269,2.04,1270,2.04,1271,1.587,1272,2.04,1273,2.04,1274,2.04,1275,2.04,1276,2.04,1277,2.04,1278,2.04,1279,2.04,1280,2.04,1281,5.524,1282,6.04,1283,3.282,1284,3.282,1285,3.282,1286,4.718,1287,2.842,1288,2.842,1289,3.282]],["title/interfaces/Route.html",[0,0.927,434,2.015]],["body/interfaces/Route.html",[0,1.339,2,1.635,3,0.223,4,0.274,5,0.223,7,0.383,8,0.635,21,1.356,22,0.015,24,0.557,29,0.274,32,0.013,33,0.013,46,3.321,128,1.848,137,3.446,434,3.481,1141,4.604,1142,5.817,1144,5.817,1147,5.817,1290,4.885]],["title/directives/ScrollNearEndDirective.html",[214,0.788,278,0.821]],["body/directives/ScrollNearEndDirective.html",[3,0.163,4,0.201,5,0.163,7,0.281,8,0.522,22,0.016,24,0.522,27,0.323,29,0.201,30,2.347,32,0.011,33,0.011,41,0.675,42,0.646,47,1.194,52,0.485,60,0.413,61,0.201,70,2.15,71,2.776,73,0.87,78,1.073,81,1.264,83,2.462,84,1.166,100,2.134,107,1.37,109,2.965,114,2.462,121,1.813,126,1.743,127,0.683,128,1.37,130,1.37,213,1.264,214,1.119,277,0.944,278,1.166,279,1.264,306,1.678,327,4.11,338,1.929,352,4.802,354,5.414,356,2.137,361,2.137,414,2.73,517,2.73,1035,3.205,1050,3.205,1054,4.802,1099,5.783,1291,6.441,1292,6.591,1293,3.586,1294,7.532,1295,5.545,1296,6.962,1297,5.545,1298,5.545,1299,4.141,1300,5.783,1301,5.545,1302,5.545,1303,4.141,1304,5.545,1305,5.545,1306,5.545,1307,6.677,1308,4.141,1309,4.141,1310,6.252,1311,5.545,1312,4.141,1313,5.545,1314,6.252,1315,5.545,1316,4.141,1317,4.141,1318,2.948,1319,3.586,1320,4.141,1321,4.141,1322,5.545,1323,4.141,1324,5.545,1325,4.141,1326,4.141,1327,4.141,1328,6.252,1329,4.141,1330,4.141,1331,4.141,1332,4.141,1333,3.586,1334,5.545,1335,4.141,1336,5.545,1337,4.141,1338,4.141,1339,5.545,1340,4.141,1341,4.141,1342,4.141,1343,4.141,1344,4.141,1345,4.141,1346,5.545,1347,4.141,1348,4.141,1349,5.545]],["title/injectables/ScrollService.html",[34,1.004,386,2.574]],["body/injectables/ScrollService.html",[3,0.2,4,0.246,5,0.2,7,0.344,8,0.594,22,0.016,24,0.525,27,0.537,29,0.246,32,0.012,33,0.012,34,1.625,36,2.147,41,1.031,42,0.986,47,1.123,52,0.593,58,3.118,59,2.928,60,0.505,100,2.35,107,1.561,121,1.469,126,1.593,127,0.624,128,1.252,130,1.252,137,3.057,140,3.753,143,3.553,144,3.372,159,3.094,168,3.607,169,2.614,170,2.614,172,4.387,174,2.052,191,5.471,196,2.678,202,2.481,204,2.449,338,3.208,360,6.424,386,4.165,410,5.962,719,3.94,722,5.607,1350,3.94,1351,7.563,1352,5.066,1353,5.066,1354,5.066,1355,6.317,1356,6.317,1357,6.317,1358,5.066,1359,4.387]],["title/pipes/SexPipe.html",[189,2.015,1190,2.779]],["body/pipes/SexPipe.html",[2,1.575,3,0.214,4,0.264,5,0.214,17,3.768,21,1.124,22,0.016,23,2.233,24,0.396,27,0.514,29,0.264,32,0.013,33,0.013,41,0.886,42,1.029,47,0.886,52,0.636,60,0.541,70,2.106,73,1.142,78,1.276,84,1.386,107,1.342,126,1.708,127,0.875,128,1.342,130,1.342,189,3.403,314,2.637,328,2.531,535,3.581,536,4.348,1064,2.961,1080,3.581,1084,4.225,1090,5.711,1190,4.695,1360,4.704,1361,6.594,1362,5.431]],["title/components/SignInComponent.html",[61,0.19,256,0.855]],["body/components/SignInComponent.html",[1,0.466,3,0.103,4,0.127,5,0.103,7,0.178,8,0.376,18,0.973,21,0.825,22,0.016,23,1.701,24,0.465,27,0.526,29,0.127,32,0.008,33,0.008,41,1.1,42,1.052,47,1.194,52,0.307,60,0.261,61,0.235,62,0.574,63,0.911,64,0.622,65,0.622,66,0.622,70,1.548,71,2.149,73,0.551,78,0.773,81,1.786,82,1.782,83,1.774,84,0.84,85,0.948,86,2.051,89,2.497,92,0.948,94,0.948,100,2.552,103,2.255,107,0.987,109,2.403,114,1.774,116,3.176,121,1.851,126,0.824,127,0.862,128,0.647,130,1.337,140,2.638,155,1.861,162,0.791,163,1.221,164,1.221,165,0.791,166,0.858,174,1.062,175,1.062,176,0.597,177,0.597,180,0.622,192,2.051,196,1.111,199,1.062,211,0.622,212,0.948,213,0.911,214,0.529,215,1.285,216,0.622,217,1.149,218,0.574,219,0.622,220,0.574,221,1.276,222,0.622,223,0.574,224,0.622,225,0.574,226,0.622,227,0.574,228,0.622,229,0.622,230,0.574,231,0.622,232,0.574,233,0.622,234,0.574,235,0.622,236,0.574,237,0.622,238,0.574,239,0.622,240,0.574,241,0.622,242,0.574,243,0.622,244,0.574,245,0.622,246,0.574,247,0.622,248,0.574,249,0.622,250,0.574,251,0.622,252,0.574,253,0.466,254,0.574,255,0.622,256,1.185,257,1.562,258,0.622,259,0.574,260,0.622,261,0.574,262,0.622,263,0.574,264,1.036,265,0.622,266,0.574,267,0.622,268,0.574,269,0.622,270,0.574,271,0.597,272,0.622,273,0.574,274,0.622,275,0.597,276,0.551,277,0.597,278,0.551,279,0.597,280,0.622,306,2.786,314,1.483,340,3.191,347,2.638,351,2.522,353,3.191,355,3.568,356,1.352,361,2.793,367,2.061,371,1.956,375,2.979,381,1.016,382,2.27,383,2.038,384,1.016,387,1.111,401,2.27,404,1.728,405,2.797,417,1.352,418,2.843,423,1.728,433,3.168,440,3.191,443,2.843,457,3.107,458,2.038,460,1.284,461,2.038,463,1.866,469,3.764,476,5.737,480,3.107,489,4.21,492,3.764,494,4.21,495,2.038,496,4.21,498,3.107,505,3.778,508,2.843,514,1.866,517,1.728,519,2.038,520,2.038,521,2.843,523,3.107,525,2.038,526,2.038,538,3.107,544,2.038,545,2.038,546,2.038,554,3.459,617,2.27,1114,1.866,1300,4.191,1363,5.737,1364,2.27,1365,4.839,1366,3.994,1367,3.994,1368,4.839,1369,4.839,1370,5.412,1371,2.621,1372,2.621,1373,3.994,1374,2.621,1375,3.994,1376,2.621,1377,3.994,1378,2.621,1379,2.621,1380,2.621,1381,2.621,1382,4.191,1383,2.621,1384,2.621,1385,2.621,1386,2.621,1387,2.621,1388,3.994,1389,2.621,1390,3.994,1391,2.621,1392,2.27,1393,3.459,1394,2.621,1395,2.621,1396,2.621,1397,2.621,1398,2.621,1399,2.621,1400,2.621,1401,2.621,1402,2.621,1403,2.621,1404,2.038,1405,2.27,1406,2.27,1407,2.27,1408,2.27,1409,2.27,1410,2.27,1411,3.459,1412,2.621]],["title/components/SignUpComponent.html",[61,0.19,259,0.855]],["body/components/SignUpComponent.html",[1,0.404,3,0.09,4,0.11,5,0.09,7,0.154,8,0.336,10,2.671,11,2.814,12,0.963,15,1.009,18,0.843,21,0.753,22,0.016,23,1.576,24,0.441,27,0.526,29,0.11,32,0.007,33,0.007,41,1.078,42,1.031,47,1.16,52,0.266,60,0.226,61,0.215,62,0.497,63,0.815,64,0.539,65,0.539,66,0.539,70,1.386,71,1.963,73,0.477,78,0.856,81,1.76,82,1.755,83,1.588,84,0.752,85,0.849,86,1.874,89,2.281,92,0.849,94,0.849,100,2.428,103,2.06,107,0.883,109,2.227,114,1.588,116,3.521,121,1.679,126,0.714,127,0.856,128,0.561,130,1.239,140,2.41,155,1.666,159,1.751,162,0.686,163,1.058,164,1.058,165,1.335,166,0.744,171,0.881,174,0.92,175,0.92,176,0.518,177,0.518,180,0.539,192,2.311,196,0.963,199,1.448,200,2.721,201,2.281,202,1.112,204,1.386,211,0.539,212,0.849,213,0.815,214,0.458,215,1.19,216,0.539,217,1.049,218,0.497,219,0.539,220,0.497,221,1.194,222,0.539,223,0.497,224,0.539,225,0.497,226,0.539,227,0.497,228,0.539,229,0.539,230,0.497,231,0.539,232,0.497,233,0.539,234,0.497,235,0.539,236,0.497,237,0.539,238,0.497,239,0.539,240,0.497,241,0.539,242,0.497,243,0.539,244,0.497,245,0.539,246,0.497,247,0.539,248,0.497,249,0.539,250,0.497,251,0.539,252,0.497,253,0.404,254,0.497,255,0.539,256,0.497,257,1.49,258,0.539,259,1.098,260,0.539,261,0.497,262,0.539,263,0.497,264,0.97,265,0.539,266,0.497,267,0.539,268,0.497,269,0.539,270,0.497,271,0.518,272,0.539,273,0.497,274,0.539,275,0.518,276,0.477,277,0.518,278,0.477,279,0.518,280,0.539,301,1.398,306,3.013,314,2.025,340,2.915,343,3.439,347,2.41,351,2.336,353,2.915,355,3.306,356,1.172,361,1.845,367,1.845,371,1.751,375,2.721,380,2.781,381,0.881,384,0.881,387,0.963,404,1.498,405,2.066,417,1.172,418,1.617,423,1.498,433,2.988,440,2.915,443,2.545,457,3.9,458,1.767,460,1.112,461,1.767,463,1.617,469,3.439,478,5.586,480,2.781,489,3.9,492,3.439,494,3.9,495,1.767,496,3.9,498,2.781,505,4.492,506,5.247,508,2.545,514,1.617,517,1.498,519,1.767,520,2.781,521,3.147,522,1.967,523,4.241,525,1.767,526,1.767,538,3.9,544,1.767,545,1.767,546,1.767,556,3.096,1064,1.949,1114,1.617,1363,5.586,1382,3.829,1393,3.096,1405,1.967,1406,1.967,1407,1.967,1408,1.967,1409,1.967,1410,3.096,1411,4.342,1413,1.967,1414,3.096,1415,4.421,1416,3.575,1417,3.575,1418,4.421,1419,4.421,1420,2.271,1421,2.271,1422,2.271,1423,3.575,1424,2.271,1425,3.575,1426,2.271,1427,2.271,1428,2.271,1429,2.271,1430,2.271,1431,5.014,1432,3.575,1433,4.421,1434,4.421,1435,4.421,1436,2.271,1437,2.271,1438,2.271,1439,2.271,1440,2.271,1441,2.271,1442,2.271,1443,1.767,1444,3.096,1445,2.271,1446,2.271,1447,2.271,1448,2.271,1449,2.271,1450,2.271,1451,2.271,1452,3.575,1453,3.575,1454,2.271,1455,2.271,1456,4.342,1457,3.575,1458,3.575,1459,3.575,1460,2.271,1461,2.271,1462,2.271,1463,2.271,1464,2.271,1465,2.271,1466,2.271,1467,2.271,1468,2.271,1469,2.271,1470,2.271]],["title/components/TimelinesComponent.html",[61,0.19,261,0.855]],["body/components/TimelinesComponent.html",[1,0.797,3,0.177,4,0.217,5,0.177,22,0.015,27,0.455,29,0.217,32,0.011,33,0.011,52,0.524,60,0.446,61,0.316,62,0.98,63,1.331,64,1.063,65,1.063,66,1.063,73,0.941,78,1.13,81,1.861,82,1.859,84,1.227,85,1.063,92,1.386,94,1.386,127,0.849,176,1.021,177,1.021,180,1.063,211,1.063,212,1.386,213,1.331,214,0.903,215,1.635,216,1.063,217,1.542,218,0.98,219,1.063,220,0.98,221,1.278,222,1.063,223,0.98,224,1.063,225,0.98,226,1.063,227,0.98,228,1.063,229,1.063,230,0.98,231,1.063,232,0.98,233,1.063,234,0.98,235,1.063,236,0.98,237,1.063,238,0.98,239,1.063,240,0.98,241,1.063,242,0.98,243,1.063,244,0.98,245,1.063,246,0.98,247,1.063,248,0.98,249,1.063,250,0.98,251,1.063,252,0.98,253,0.797,254,0.98,255,1.063,256,0.98,257,1.386,258,1.063,259,0.98,260,1.063,261,1.508,262,1.063,263,0.98,264,1.271,265,1.063,266,0.98,267,1.063,268,0.98,269,1.063,270,0.98,271,1.021,272,1.063,273,0.98,274,1.063,275,1.021,276,0.941,277,1.021,278,0.941,279,1.021,280,1.063,701,3.85,1148,5.556,1471,3.878,1472,5.839,1473,5.839]],["title/injectables/UpdateUploadByIdGQL.html",[34,1.004,1474,2.779]],["body/injectables/UpdateUploadByIdGQL.html",[3,0.204,4,0.251,5,0.204,7,0.35,8,0.602,14,2.594,21,1.327,22,0.016,24,0.466,27,0.542,28,2.295,29,0.353,30,1.692,32,0.012,33,0.012,34,1.645,36,2.191,38,3.301,40,4.015,41,0.843,42,0.806,43,3.487,46,2.84,47,0.843,50,2.667,51,2.817,52,0.605,60,0.515,127,0.856,253,1.236,264,1.138,460,3.133,1009,3.181,1010,5.646,1174,3.787,1474,4.554,1475,4.554,1476,5.403,1477,5.167,1478,4.475,1479,4.475,1480,4.276,1481,4.475,1482,4.475,1483,4.475,1484,4.02]],["title/components/UploadActionsComponent.html",[61,0.19,263,0.855]],["body/components/UploadActionsComponent.html",[1,0.643,2,1.049,3,0.143,4,0.176,5,0.143,7,0.245,8,0.475,22,0.016,27,0.518,29,0.176,32,0.01,33,0.01,41,0.825,42,0.789,46,2.948,47,1.209,52,0.424,60,0.36,61,0.283,62,0.792,63,1.152,64,0.858,65,0.858,66,0.858,73,0.76,78,1.128,81,1.835,82,1.832,83,2.588,84,1.062,85,1.2,92,1.2,94,1.2,114,2.245,121,1.466,127,0.777,165,1.526,166,1.184,176,0.825,177,0.825,180,0.858,211,0.858,212,1.2,213,1.152,214,0.73,215,1.497,216,0.858,217,1.383,218,0.792,219,0.858,220,0.792,221,1.107,222,0.858,223,0.792,224,0.858,225,0.792,226,0.858,227,0.792,228,0.858,229,0.858,230,0.792,231,0.858,232,0.792,233,0.858,234,0.792,235,0.858,236,0.792,237,0.858,238,0.792,239,0.858,240,0.792,241,0.858,242,0.792,243,0.858,244,0.792,245,0.858,246,0.792,247,0.858,248,0.792,249,0.858,250,0.792,251,0.858,252,0.792,253,0.643,254,0.792,255,0.858,256,0.792,257,1.2,258,0.858,259,0.792,260,0.858,261,0.792,262,0.858,263,1.381,264,1.333,265,0.858,266,0.792,267,0.858,268,0.792,269,0.858,270,0.792,271,0.825,272,0.858,273,0.792,274,0.858,275,0.825,276,0.76,277,0.825,278,0.76,279,0.825,280,0.858,378,2.384,379,4.159,537,2.226,633,3.007,634,4.148,918,4.377,1035,2.921,1050,3.646,1485,4.611,1486,5.334,1487,3.132,1488,4.907,1489,5.827,1490,5.054,1491,5.054,1492,5.827,1493,5.749,1494,5.749,1495,6.638,1496,5.054,1497,5.054,1498,5.054,1499,5.054,1500,4.148,1501,3.616,1502,5.054,1503,3.616,1504,2.384,1505,3.132,1506,5.054,1507,5.054,1508,5.054,1509,5.054]],["title/interfaces/UploadActionsParams.html",[0,0.927,1504,2.574]],["body/interfaces/UploadActionsParams.html",[0,1.379,2,1.685,3,0.229,4,0.282,5,0.229,7,0.394,8,0.646,22,0.015,24,0.533,29,0.282,32,0.013,33,0.013,128,1.93,137,3.551,201,3.897,1318,5.377,1504,4.527,1510,5.032,1511,5.377]],["title/injectables/UploadByIdGQL.html",[34,1.004,1512,2.779]],["body/injectables/UploadByIdGQL.html",[3,0.194,4,0.238,5,0.194,7,0.333,8,0.582,9,2.749,12,2.624,14,2.654,15,2.749,18,2.299,19,2.885,21,1.156,22,0.016,24,0.494,27,0.529,29,0.346,32,0.012,33,0.012,34,1.592,36,2.079,38,3.195,39,4.246,40,3.921,41,0.8,42,0.765,43,3.698,46,3.332,47,0.8,49,3.811,50,2.531,51,2.674,52,0.574,54,1.821,60,0.489,127,0.763,264,0.873,282,3.578,283,4.082,284,2.508,335,4.082,1009,3.019,1059,3.375,1174,3.375,1480,3.811,1512,4.407,1513,4.407,1514,6.191,1515,6.191,1516,5.361,1517,5.361,1518,3.811,1519,4.905,1520,4.248,1521,4.248,1522,4.248]],["title/injectables/UploadExtensionsGQL.html",[34,1.004,1034,2.779]],["body/injectables/UploadExtensionsGQL.html",[3,0.211,4,0.259,5,0.211,7,0.362,8,0.614,21,0.91,22,0.016,24,0.514,27,0.55,29,0.357,32,0.013,33,0.013,34,1.678,36,2.263,38,3.367,39,4.352,40,4.073,41,0.871,42,0.833,43,3.842,47,0.871,49,4.016,50,2.754,51,2.91,52,0.625,60,0.532,178,3.085,325,3.788,327,4.519,1034,4.645,1513,4.645,1523,4.152,1524,6.525,1525,5.71,1526,6.525,1527,5.337,1528,5.075,1529,4.623,1530,5.337,1531,4.623,1532,4.623]],["title/components/UploadFileComponent.html",[61,0.19,266,0.855]],["body/components/UploadFileComponent.html",[1,0.447,2,0.729,3,0.099,4,0.122,5,0.209,7,0.171,8,0.364,22,0.016,24,0.417,27,0.54,29,0.122,30,1.267,32,0.007,33,0.007,41,1.129,42,1.039,47,1.16,52,0.294,54,0.933,60,0.25,61,0.229,62,0.55,63,0.882,64,0.597,65,0.597,66,0.597,70,1.5,71,2.094,73,0.528,74,1.996,78,0.749,81,1.779,82,1.775,84,0.813,85,0.918,86,1.999,87,2.903,89,2.434,92,0.918,94,0.918,100,2.478,103,2.197,104,2.887,107,0.956,109,2.352,116,2.571,121,1.658,127,0.775,130,1.308,143,2.95,144,1.231,155,1.803,157,2.109,162,0.759,163,1.171,164,1.171,165,1.424,166,0.823,167,1.453,169,1.297,170,1.297,171,0.975,175,1.019,176,0.573,177,0.573,180,0.597,192,2.245,195,3.061,196,1.066,197,1.657,199,1.567,200,2.903,201,2.434,202,1.895,204,0.975,211,0.597,212,0.918,213,0.882,214,0.507,215,1.257,216,0.597,217,1.119,218,0.55,219,0.597,220,0.55,221,0.847,222,0.597,223,0.55,224,0.597,225,0.55,226,0.597,227,0.55,228,0.597,229,0.597,230,0.55,231,0.597,232,0.55,233,0.597,234,0.55,235,0.597,236,0.55,237,0.597,238,0.55,239,0.597,240,0.55,241,0.597,242,0.55,243,0.597,244,0.55,245,0.597,246,0.55,247,0.597,248,0.55,249,0.597,250,0.55,251,0.597,252,0.55,253,0.447,254,0.55,255,0.597,256,0.55,257,0.918,258,0.597,259,0.55,260,0.597,261,0.55,262,0.597,263,0.55,264,1.279,265,0.597,266,1.16,267,0.597,268,0.55,269,0.597,270,0.55,271,0.573,272,0.597,273,0.55,274,0.597,275,0.573,276,0.528,277,0.573,278,0.528,279,0.573,280,0.597,284,1.019,306,2.845,314,1.436,328,2.468,335,1.657,338,1.803,347,2.571,384,0.975,387,1.066,414,3.109,433,2.434,505,1.547,514,3.357,521,2.754,535,2.551,536,3.981,591,2.903,632,4.084,633,2.434,638,4.697,639,3.109,643,4.586,660,3.009,663,2.551,666,1.955,676,2.177,677,2.177,690,3.35,692,4.586,1033,3.519,1059,2.109,1064,2.571,1069,3.109,1189,3.357,1240,1.657,1271,1.955,1444,3.35,1456,2.177,1485,4.426,1533,6.227,1534,2.177,1535,4.716,1536,4.084,1537,4.084,1538,4.716,1539,3.869,1540,3.869,1541,4.716,1542,4.716,1543,4.716,1544,5.296,1545,5.229,1546,2.514,1547,2.514,1548,2.514,1549,2.514,1550,2.514,1551,2.514,1552,2.514,1553,2.514,1554,3.869,1555,3.869,1556,4.716,1557,4.586,1558,2.514,1559,2.514,1560,3.869,1561,2.514,1562,3.35,1563,2.514,1564,3.869,1565,2.514,1566,2.514,1567,2.514,1568,2.514,1569,2.514,1570,2.514,1571,2.514,1572,5.296,1573,2.514,1574,2.514,1575,3.869,1576,2.514,1577,3.869,1578,3.869,1579,1.955,1580,2.514,1581,2.514,1582,2.514,1583,2.514,1584,2.514,1585,3.869,1586,2.514]],["title/components/UploadInfoComponent.html",[61,0.19,268,0.855]],["body/components/UploadInfoComponent.html",[1,0.307,2,0.501,3,0.145,4,0.084,5,0.068,7,0.117,8,0.27,14,1.458,21,1.001,22,0.016,23,1.701,24,0.428,27,0.527,28,0.767,29,0.084,30,1.772,32,0.006,33,0.006,41,1.103,42,1.106,47,1.203,52,0.202,54,0.642,60,0.172,61,0.178,62,0.378,63,0.653,64,0.41,65,0.41,66,0.41,70,1.111,71,1.63,73,0.363,74,1.479,78,0.711,81,1.701,82,1.695,83,0.767,84,0.602,85,0.68,86,1.556,87,2.26,89,1.895,92,0.68,94,0.68,100,2.564,103,1.711,104,2.329,107,0.708,109,1.897,114,1.273,116,2.583,121,1.569,126,0.901,127,0.783,128,0.708,129,2.04,130,1.399,143,2.792,144,0.846,147,2.916,155,1.335,157,1.562,159,2.502,162,0.522,163,0.805,164,0.805,165,1.108,166,0.566,167,0.999,169,0.892,170,0.892,171,0.67,174,0.7,175,0.7,176,0.394,177,0.394,178,0.999,180,0.41,189,0.892,190,1.344,192,2.294,195,3.127,196,1.556,197,2.817,199,2.07,200,2.63,201,2.636,202,2.093,204,0.67,211,0.41,212,0.68,213,0.653,214,0.349,215,1.014,216,0.41,217,0.871,218,0.378,219,0.41,220,0.378,221,0.627,222,0.41,223,0.378,224,0.41,225,0.378,226,0.41,227,0.378,228,0.41,229,0.41,230,0.378,231,0.41,232,0.378,233,0.41,234,0.378,235,0.41,236,0.378,237,0.41,238,0.378,239,0.41,240,0.378,241,0.41,242,0.378,243,0.41,244,0.378,245,0.41,246,0.378,247,0.41,248,0.378,249,0.41,250,0.378,251,0.41,252,0.378,253,0.51,254,0.378,255,0.41,256,0.378,257,0.68,258,0.41,259,0.378,260,0.41,261,0.378,262,0.41,263,0.935,264,1.229,265,0.41,266,0.378,267,0.41,268,0.935,269,0.41,270,0.378,271,0.394,272,0.41,273,0.378,274,0.41,275,0.394,276,0.363,277,0.394,278,0.363,279,0.394,280,0.41,284,0.7,306,2.666,314,2.102,325,0.892,347,2.002,351,1.991,371,1.404,381,0.67,384,0.67,387,0.732,404,1.139,417,1.479,460,2.32,462,1.344,505,2.916,535,1.139,536,2.421,537,1.064,539,3.18,549,2.856,553,2.856,588,1.23,639,1.139,660,3.323,663,1.889,719,1.344,722,2.229,1007,3.637,1035,1.656,1040,1.139,1050,2.469,1053,1.344,1063,2.856,1068,2.614,1069,2.421,1095,2.856,1106,2.229,1109,1.344,1113,1.496,1174,0.942,1189,2.614,1194,2.614,1222,2.482,1240,1.139,1255,4.424,1271,1.344,1318,2.04,1474,3.637,1479,2.482,1480,1.064,1484,2.229,1485,4.559,1486,1.23,1488,2.856,1500,1.23,1504,1.139,1511,2.04,1512,3.637,1518,1.764,1536,3.18,1537,3.18,1557,3.7,1562,2.482,1587,6.414,1588,1.496,1589,2.866,1590,2.866,1591,3.672,1592,3.672,1593,4.737,1594,3.672,1595,4.737,1596,3.672,1597,3.18,1598,4.272,1599,4.272,1600,4.272,1601,4.272,1602,4.272,1603,2.866,1604,2.866,1605,2.866,1606,1.728,1607,1.728,1608,1.728,1609,1.728,1610,1.728,1611,1.728,1612,2.866,1613,1.728,1614,2.482,1615,1.728,1616,5.41,1617,2.866,1618,1.728,1619,5.41,1620,2.482,1621,2.482,1622,2.482,1623,2.482,1624,1.728,1625,1.728,1626,1.728,1627,1.728,1628,1.728,1629,2.866,1630,1.728,1631,1.728,1632,1.728,1633,2.482,1634,1.728,1635,1.728,1636,1.728,1637,2.866,1638,1.728,1639,2.866,1640,1.728,1641,3.672,1642,4.424,1643,2.866,1644,2.866,1645,1.728,1646,2.482,1647,1.728,1648,2.866,1649,1.728,1650,1.496,1651,1.728,1652,1.728,1653,1.728,1654,1.728,1655,1.728,1656,1.728,1657,1.728,1658,1.728,1659,3.672,1660,1.728,1661,1.728,1662,1.728,1663,1.728,1664,1.728,1665,1.728,1666,1.728,1667,1.728,1668,1.728,1669,1.728,1670,2.866,1671,2.866,1672,2.866,1673,1.728,1674,1.728,1675,1.728,1676,1.728,1677,1.728,1678,1.728,1679,2.866,1680,1.728,1681,1.728,1682,1.728,1683,1.728,1684,6.35,1685,1.728,1686,1.728,1687,1.728,1688,1.728,1689,2.866,1690,2.866,1691,1.728,1692,2.866,1693,1.728,1694,2.866,1695,1.728,1696,1.728,1697,1.728,1698,1.728,1699,1.728,1700,1.728,1701,1.728,1702,1.728,1703,1.728,1704,1.728,1705,1.728,1706,4.737,1707,1.728,1708,1.728,1709,3.18,1710,1.728,1711,2.866,1712,1.728,1713,1.728,1714,1.728,1715,2.866,1716,2.866,1717,1.728]],["title/components/UploadListItemComponent.html",[61,0.19,270,0.855]],["body/components/UploadListItemComponent.html",[1,0.506,3,0.112,4,0.138,5,0.112,7,0.383,8,0.4,22,0.016,23,1.336,24,0.207,25,2.456,27,0.538,29,0.138,32,0.008,33,0.008,41,1.033,42,0.988,47,1.22,52,0.333,54,1.057,60,0.284,61,0.247,62,0.623,63,0.969,64,0.675,65,0.675,66,0.675,73,0.598,74,2.193,78,1.092,81,1.8,82,1.796,83,1.264,84,0.893,85,1.009,86,2.156,92,1.009,94,1.009,103,2.37,114,1.887,127,0.695,147,3.716,155,1.98,162,0.859,164,1.326,165,1.703,166,0.932,171,1.103,175,1.153,176,0.649,177,0.649,180,0.675,204,1.648,211,0.675,212,1.009,213,0.969,214,0.574,215,1.339,216,0.675,217,1.207,218,0.623,219,0.675,220,0.623,221,0.931,222,0.675,223,0.623,224,0.675,225,0.623,226,0.675,227,0.623,228,0.675,229,0.675,230,0.623,231,0.675,232,0.623,233,0.675,234,0.623,235,0.675,236,0.623,237,0.675,238,0.623,239,0.675,240,0.623,241,0.675,242,0.623,243,0.675,244,0.623,245,0.675,246,0.623,247,0.675,248,0.623,249,0.675,250,0.623,251,0.675,252,0.623,253,0.506,254,0.623,255,0.675,256,0.623,257,1.009,258,0.675,259,0.623,260,0.675,261,0.623,262,0.675,263,0.623,264,1.31,265,0.675,266,0.623,267,0.675,268,0.623,269,0.675,270,1.235,271,1.826,272,0.675,273,0.623,274,0.675,275,0.649,276,0.598,277,0.649,278,0.598,279,0.649,280,0.675,284,1.153,338,1.326,345,3.957,351,2.629,371,2.082,378,1.876,379,1.876,381,1.103,433,3.116,537,2.616,633,2.625,634,3.621,1035,2.456,1050,3.261,1067,3.957,1068,3.621,1069,3.354,1186,4.405,1188,4.405,1189,3.621,1194,3.026,1240,1.876,1287,3.681,1288,3.681,1485,4.634,1500,4.017,1518,3.131,1579,3.306,1642,5.229,1718,6.52,1719,2.464,1720,4.25,1721,5.087,1722,4.25,1723,4.25,1724,5.087,1725,6.038,1726,6.038,1727,6.038,1728,4.25,1729,4.25,1730,4.25,1731,4.25,1732,4.25,1733,2.845,1734,5.642,1735,4.25,1736,5.642,1737,4.25,1738,2.845,1739,2.845,1740,5.642,1741,5.642,1742,4.25,1743,4.25,1744,2.845,1745,2.845,1746,2.845,1747,2.845,1748,4.25,1749,3.681,1750,4.25,1751,4.25,1752,4.25]],["title/interfaces/UploadModel.html",[0,0.927,284,1.582]],["body/interfaces/UploadModel.html",[0,1.168,2,1.427,3,0.194,4,0.239,5,0.194,7,0.334,8,0.584,14,2.434,21,1.389,22,0.016,24,0.58,25,4.34,27,0.484,28,2.185,29,0.239,32,0.012,33,0.012,46,3.168,53,4.123,54,1.827,127,0.879,128,1.533,137,3.017,253,1.269,282,4.123,283,4.703,284,2.513,335,4.703,1059,3.889,1174,3.889,1480,4.391,1516,6.178,1517,6.178,1518,4.391,1753,4.261,1754,7.133]],["title/components/UploadPreviewComponent.html",[61,0.19,273,0.855]],["body/components/UploadPreviewComponent.html",[1,0.369,3,0.082,4,0.101,5,0.082,7,0.323,8,0.313,14,1.42,22,0.016,23,1.497,24,0.38,27,0.537,29,0.101,30,1.088,32,0.006,33,0.006,41,1.209,42,1.143,46,1.848,47,1.256,52,0.243,54,0.769,60,0.206,61,0.202,62,0.454,63,0.758,64,0.492,65,0.492,66,0.492,73,0.435,78,1.009,81,1.742,82,1.737,83,0.92,84,0.698,85,0.789,92,0.789,94,0.789,100,1.42,104,2.595,107,0.821,114,1.476,121,0.601,126,0.651,127,0.749,128,1.288,130,0.512,147,4.45,157,1.812,159,3.277,162,0.625,165,1.437,166,0.678,167,1.197,169,1.069,170,1.069,171,0.803,174,0.839,176,0.472,177,0.472,180,0.492,192,1.408,195,1.921,201,2.147,204,1.288,211,0.492,212,0.789,213,0.758,214,0.418,215,1.13,216,0.492,217,0.987,218,0.454,219,0.492,220,0.454,221,0.728,222,0.492,223,0.454,224,0.492,225,0.454,226,0.492,227,0.454,228,0.492,229,0.492,230,0.454,231,0.492,232,0.454,233,0.492,234,0.454,235,0.492,236,0.454,237,0.492,238,0.454,239,0.492,240,0.454,241,0.492,242,0.454,243,0.492,244,0.454,245,0.492,246,0.454,247,0.492,248,0.454,249,0.492,250,0.454,251,0.492,252,0.454,253,0.369,254,0.454,255,0.492,256,0.454,257,0.789,258,0.492,259,0.454,260,0.492,261,0.454,262,0.492,263,1.042,264,1.266,265,0.492,266,0.454,267,0.492,268,0.454,269,0.492,270,0.454,271,0.472,272,0.492,273,1.042,274,0.492,275,0.472,276,0.435,277,0.472,278,0.435,279,0.472,280,0.492,284,0.839,314,1.767,338,0.965,345,3.236,356,2.147,361,1.715,375,2.561,376,2.584,378,1.366,379,3.668,384,0.803,387,0.878,433,2.689,535,2.191,536,3.139,537,1.275,549,3.236,633,2.147,638,4.327,646,1.794,668,1.475,669,1.611,1035,1.921,1050,2.752,1059,2.268,1079,2.962,1080,1.366,1087,1.794,1088,1.475,1089,1.475,1114,2.366,1141,2.561,1166,2.878,1318,2.366,1392,1.794,1443,1.611,1485,4.751,1486,1.475,1488,4.054,1493,4.513,1494,4.513,1500,2.962,1505,3.603,1511,2.366,1579,5.581,1597,3.603,1614,1.794,1620,2.878,1621,2.878,1622,2.878,1623,2.878,1633,2.878,1646,2.878,1650,1.794,1749,4.818,1755,6.684,1756,1.794,1757,4.16,1758,3.323,1759,3.323,1760,5.211,1761,4.16,1762,4.16,1763,5.211,1764,4.16,1765,4.16,1766,4.16,1767,4.16,1768,4.16,1769,4.16,1770,3.323,1771,3.323,1772,4.16,1773,2.071,1774,3.323,1775,3.323,1776,3.323,1777,3.323,1778,3.323,1779,3.323,1780,5.211,1781,2.071,1782,5.211,1783,3.323,1784,2.071,1785,2.071,1786,2.071,1787,3.323,1788,2.071,1789,2.071,1790,2.071,1791,2.071,1792,3.323,1793,2.071,1794,5.563,1795,2.071,1796,2.071,1797,3.323,1798,2.071,1799,3.323,1800,2.071,1801,3.323,1802,2.071,1803,3.323,1804,2.071,1805,2.071,1806,3.323,1807,2.071,1808,3.323,1809,2.071,1810,2.071,1811,3.323,1812,2.071,1813,3.323,1814,2.071,1815,2.071,1816,2.071,1817,2.071,1818,2.071,1819,2.071,1820,2.071,1821,2.071,1822,2.071,1823,2.071,1824,3.323,1825,2.071,1826,2.071,1827,4.16,1828,2.071,1829,4.16,1830,2.071,1831,2.071,1832,2.071,1833,2.071,1834,2.071,1835,2.071,1836,3.323,1837,2.071,1838,2.071,1839,3.323]],["title/injectables/UploadService.html",[34,1.004,1033,2.403]],["body/injectables/UploadService.html",[2,1.285,3,0.175,4,0.215,5,0.255,7,0.301,8,0.546,22,0.016,24,0.471,27,0.589,28,1.968,29,0.215,30,2.118,32,0.011,33,0.011,34,1.492,36,1.879,41,0.723,42,0.692,47,1.055,52,0.519,54,1.646,58,2.728,59,2.562,60,0.442,100,2.207,107,1.433,126,1.824,127,0.797,128,1.433,130,1.433,162,1.338,165,1.338,171,1.718,253,0.789,284,1.796,287,3.825,288,4.603,294,3.448,298,4.603,299,4.13,301,2.728,302,2.922,303,3.156,304,2.993,305,5.024,306,1.796,307,3.839,308,3.839,309,3.839,310,3.839,311,3.839,314,2.401,328,3.013,666,5.538,1033,3.57,1057,4.884,1059,3.162,1060,3.839,1511,3.156,1545,5.024,1709,3.839,1840,3.839,1841,5.801,1842,5.801,1843,4.432,1844,5.801,1845,5.801,1846,5.801,1847,5.941,1848,4.432,1849,4.432,1850,4.432,1851,4.432,1852,4.432,1853,4.432,1854,4.432,1855,4.432,1856,4.432,1857,5.801,1858,4.432,1859,4.432,1860,4.432,1861,4.432,1862,4.432,1863,4.432,1864,4.432,1865,5.801,1866,4.432,1867,4.432,1868,4.432,1869,4.432]],["title/injectables/UploadsGQL.html",[34,1.004,1870,3.037]],["body/injectables/UploadsGQL.html",[3,0.189,4,0.232,5,0.189,7,0.324,8,0.573,9,2.124,12,2.027,14,2.079,15,2.124,18,2.262,19,2.229,21,1.27,22,0.016,24,0.489,27,0.569,28,2.124,29,0.354,30,1.566,32,0.012,33,0.012,34,1.567,36,2.027,38,3.144,39,4.081,40,3.876,41,0.78,42,0.746,43,3.322,46,2.706,47,0.78,49,3.75,50,2.468,51,2.608,52,0.56,54,1.776,60,0.477,127,0.898,178,2.765,253,1.193,276,1.409,282,2.765,284,2.469,323,3.72,324,3.72,325,3.46,327,4.127,1059,3.975,1174,3.975,1480,2.944,1518,4.488,1525,4.739,1528,4.739,1870,4.739,1871,3.405,1872,5.215,1873,4.783,1874,4.142,1875,4.142,1876,4.142,1877,4.142]],["title/classes/Validation.html",[60,0.389,515,2.779]],["body/classes/Validation.html",[3,0.212,4,0.262,5,0.212,7,0.365,21,1.308,22,0.016,23,2.062,24,0.392,27,0.42,29,0.262,30,2.148,32,0.013,33,0.014,47,0.878,60,0.536,78,1.27,107,1.621,126,1.693,127,0.663,128,1.33,130,1.33,163,2.509,314,2.734,515,4.67,542,5.681,639,3.55,1878,5.384,1879,4.663,1880,7.074,1881,6.559,1882,7.074,1883,5.384,1884,5.384,1885,7.074,1886,6.559,1887,5.384,1888,5.384,1889,5.384,1890,5.384,1891,5.384,1892,5.384,1893,5.384,1894,5.384,1895,5.384]],["title/changelog.html",[1896,2.823,1897,2.823,1898,2.823]],["body/changelog.html",[5,0.193,22,0.016,32,0.012,33,0.012,276,1.3,397,5.871,551,5.356,1134,4.811,1187,4.241,1898,4.241,1899,4.897,1900,4.897,1901,4.897,1902,4.897,1903,4.897,1904,4.897,1905,5.356,1906,4.897,1907,4.897,1908,4.241,1909,7.343,1910,6.779,1911,4.897,1912,6.779,1913,6.779,1914,4.897,1915,4.897,1916,4.241,1917,4.897,1918,7.954,1919,4.897,1920,4.897,1921,4.897,1922,4.897,1923,4.897,1924,4.897,1925,6.184,1926,4.897,1927,4.897,1928,4.897,1929,4.897,1930,4.897,1931,4.897,1932,4.897,1933,4.897,1934,4.897,1935,4.897,1936,4.897,1937,4.897,1938,4.897,1939,6.184,1940,4.897,1941,6.779,1942,4.897,1943,4.897,1944,3.809,1945,4.897,1946,4.897,1947,4.897,1948,4.897,1949,4.897,1950,4.897,1951,4.897,1952,4.897,1953,4.897,1954,4.897]],["title/coverage.html",[1955,4.615]],["body/coverage.html",[0,1.739,1,0.517,3,0.115,5,0.115,6,3.357,22,0.016,24,0.212,31,2.068,32,0.008,33,0.008,34,1.864,35,1.915,37,2.259,53,1.679,60,0.289,61,0.382,62,0.636,67,2.515,68,2.515,69,3.666,80,2.068,179,1.788,189,2.227,204,3.181,214,0.586,218,0.636,220,0.636,223,0.636,225,0.636,227,0.636,230,0.636,232,0.636,234,0.636,236,0.636,238,0.636,240,0.636,242,0.636,244,0.636,246,0.636,248,0.636,250,0.636,252,0.636,254,0.636,256,0.636,259,0.636,261,0.636,263,0.636,264,1.014,266,0.636,268,0.636,270,0.636,271,0.984,273,0.636,275,0.662,278,0.611,281,3.357,284,1.177,285,1.915,286,2.515,304,2.941,306,1.177,320,2.259,321,2.259,332,2.068,333,3.357,336,2.068,339,2.515,384,1.126,385,1.499,386,1.915,388,2.259,389,2.259,391,2.259,428,2.515,429,2.515,434,1.499,452,2.068,464,2.515,475,2.259,476,2.259,478,2.259,482,2.068,483,2.515,487,2.515,488,2.515,515,2.068,547,2.515,591,1.788,592,2.068,626,3.357,627,3.357,629,2.515,630,2.259,631,2.515,697,2.515,702,2.515,735,2.515,1007,2.068,1008,3.072,1009,3.749,1011,2.259,1017,2.515,1027,2.515,1031,2.515,1032,2.515,1033,1.788,1034,2.068,1057,2.068,1058,2.515,1061,2.259,1062,2.515,1065,2.515,1079,2.068,1081,2.515,1082,2.515,1092,2.515,1119,2.515,1123,2.515,1127,3.357,1138,2.259,1156,2.515,1157,2.515,1158,2.515,1168,2.515,1172,2.515,1173,2.515,1185,3.357,1190,2.068,1197,2.259,1244,2.259,1246,2.259,1290,2.515,1291,2.515,1292,2.515,1293,2.515,1350,2.259,1360,2.515,1363,3.357,1364,2.515,1404,2.259,1413,2.515,1471,2.515,1474,2.068,1475,3.072,1476,2.259,1485,3.749,1486,2.068,1487,2.515,1504,1.915,1510,2.515,1512,2.068,1513,3.072,1523,2.259,1533,2.515,1534,2.515,1587,2.515,1588,2.515,1718,2.515,1719,2.515,1753,2.515,1755,2.515,1756,2.515,1840,2.515,1870,2.259,1871,3.072,1872,2.259,1879,2.515,1955,2.515,1956,2.904,1957,2.904,1958,2.904,1959,4.315,1960,3.357,1961,6.935,1962,2.259,1963,7.994,1964,7.667,1965,2.515,1966,5.149,1967,4.315,1968,2.904,1969,4.315,1970,2.515,1971,2.515,1972,4.936,1973,3.737,1974,3.737,1975,2.515,1976,2.515,1977,3.737,1978,2.904,1979,4.315,1980,6.09,1981,4.315,1982,4.315,1983,4.315,1984,2.515,1985,2.904,1986,3.357,1987,2.259,1988,2.515,1989,7.058,1990,2.515,1991,2.515,1992,2.515,1993,2.515,1994,2.515,1995,2.515,1996,2.515,1997,2.904,1998,2.904,1999,2.904,2000,2.904,2001,2.904,2002,2.904,2003,2.904,2004,5.149,2005,2.904,2006,2.904,2007,2.904,2008,2.904,2009,2.515,2010,2.515,2011,2.515,2012,2.904,2013,4.936,2014,2.515,2015,2.515,2016,2.515,2017,3.737,2018,2.515,2019,2.904,2020,2.515]],["title/dependencies.html",[1944,2.536,2021,4.067]],["body/dependencies.html",[22,0.016,32,0.012,33,0.012,50,2.606,51,2.753,52,0.591,163,2.353,165,2.41,166,1.654,171,1.957,174,2.046,175,2.046,177,1.151,178,2.918,378,4.983,379,3.329,381,1.957,383,3.927,668,3.595,1088,4.489,1089,4.489,1240,3.329,1443,3.927,2020,4.373,2021,4.373,2022,5.049,2023,7.816,2024,5.049,2025,5.049,2026,5.049,2027,5.049,2028,5.049,2029,5.049,2030,5.049,2031,5.049,2032,5.049,2033,7.952,2034,5.049,2035,5.049,2036,5.049,2037,5.049,2038,5.049,2039,5.049,2040,5.049,2041,6.304,2042,5.049,2043,5.049,2044,5.049,2045,5.049,2046,5.049,2047,5.049,2048,5.049,2049,5.049,2050,5.049,2051,5.049,2052,5.049,2053,5.049]],["title/miscellaneous/enumerations.html",[2054,1.777,2055,4.067]],["body/miscellaneous/enumerations.html",[7,0.372,22,0.016,26,3.618,32,0.013,33,0.013,42,1.265,221,1.202,253,1.181,264,1.181,303,4.725,493,3.619,1414,4.754,2054,2.993,2055,4.754,2056,5.489,2057,5.489,2058,5.489,2059,5.489,2060,5.489,2061,5.489,2062,5.489,2063,5.489,2064,5.489,2065,5.489,2066,5.489,2067,5.489,2068,5.489,2069,5.489,2070,5.489,2071,5.489,2072,5.489,2073,5.489,2074,5.489,2075,5.489,2076,5.489,2077,7.412,2078,6.637,2079,6.637,2080,6.637,2081,5.489,2082,6.637]],["title/miscellaneous/functions.html",[2054,1.777,2083,4.067]],["body/miscellaneous/functions.html",[7,0.341,21,1.225,22,0.016,23,1.58,24,0.55,26,3.74,32,0.012,33,0.012,41,0.82,42,0.784,121,1.457,126,2.408,127,0.944,128,1.892,130,1.913,137,2.231,144,3.36,204,1.948,253,0.894,334,3.908,338,2.929,350,3.093,351,3.196,385,3.243,391,4.889,452,4.475,1174,2.739,1197,4.889,1203,4.351,1244,4.889,1960,3.908,1962,4.889,1986,3.908,1987,5.335,2013,4.351,2014,5.443,2015,4.351,2016,5.94,2017,4.351,2018,5.443,2054,2.739,2083,4.351,2084,4.351,2085,4.351,2086,7.187,2087,5.024,2088,6.285,2089,5.024,2090,5.024,2091,5.024,2092,6.285,2093,5.024,2094,4.351,2095,5.024,2096,6.859,2097,5.024,2098,5.024,2099,5.024]],["title/index.html",[7,0.221,1896,2.823,1897,2.823]],["body/index.html",[22,0.015,32,0.014,33,0.014,82,1.441,2100,6.322]],["title/modules.html",[2101,4.615]],["body/modules.html",[22,0.014,32,0.014,33,0.014,2101,5.509]],["title/overview.html",[2102,4.615]],["body/overview.html",[2,1.8,22,0.014,32,0.014,33,0.014,36,2.632,60,0.619,63,1.415,214,1.252,328,3.325,1064,3.384,1080,4.093,1916,5.376,1984,5.376,2102,5.376,2103,6.208]],["title/properties.html",[8,0.442,1944,2.536]],["body/properties.html",[8,0.59,22,0.015,32,0.014,33,0.014,287,4.135,1120,4.465,1905,5.431,1908,5.431,2104,6.271]],["title/miscellaneous/typealiases.html",[2054,1.777,2105,4.696]],["body/miscellaneous/typealiases.html",[3,0.275,7,0.314,17,2.921,22,0.013,24,0.589,32,0.012,33,0.012,37,3.598,49,4.548,55,5.164,56,5.164,57,5.164,153,4.638,204,1.793,264,1.314,292,5.164,296,5.164,320,3.598,321,5.423,328,2.155,330,5.164,331,5.164,453,4.246,564,5.164,570,5.164,1008,3.293,1009,4.776,1013,5.164,1014,5.164,1063,6.272,1064,2.522,1350,3.598,1359,5.164,1475,3.293,1478,5.164,1481,5.164,1513,4.246,1520,5.164,1521,5.164,1522,5.164,1523,5.423,1528,4.638,1529,5.164,1531,5.164,1532,5.164,1847,5.164,1871,3.293,1874,5.164,1875,5.164,1876,5.164,2054,2.522,2106,4.625,2107,6.6,2108,6.6,2109,6.6,2110,5.164,2111,5.963,2112,5.963,2113,5.963,2114,4.625,2115,4.625,2116,5.164,2117,7.388,2118,4.625,2119,5.716,2120,4.625,2121,4.625,2122,4.625,2123,4.625,2124,4.625]],["title/miscellaneous/variables.html",[2054,1.777,2125,4.067]],["body/miscellaneous/variables.html",[1,0.361,6,1.576,7,0.137,9,1.82,10,1.599,11,1.685,12,1.738,13,2.152,14,2.228,15,1.82,16,1.685,17,1.599,18,1.745,19,1.91,20,1.78,21,0.878,22,0.016,23,2.321,24,0.485,30,1.804,31,2.324,32,0.006,33,0.006,35,1.336,39,1.171,41,1.183,42,1.132,43,2.235,46,2.836,50,1.046,74,1.046,75,4.124,77,1.443,78,1.236,107,0.501,127,0.635,159,0.993,176,0.462,186,1.576,196,0.859,199,0.821,204,3.133,221,0.444,253,0.361,264,0.836,276,0.862,282,1.171,285,1.336,304,3.21,314,2.151,323,1.576,324,1.576,325,2.115,327,2.523,328,3.041,351,1.91,367,1.046,371,1.599,384,0.786,385,1.685,386,1.336,388,2.539,389,2.539,408,3.189,417,1.046,434,1.685,455,2.539,460,0.993,462,1.576,475,2.539,493,1.336,548,4.071,553,1.576,590,1.755,591,1.247,592,2.324,616,1.755,626,1.576,627,2.539,639,3.398,698,1.576,1008,1.443,1009,2.893,1010,2.539,1011,2.539,1015,1.755,1016,1.755,1018,3.55,1019,3.55,1020,3.55,1021,4.463,1022,3.55,1023,1.755,1025,1.755,1026,2.827,1028,1.576,1033,1.247,1059,2.563,1064,1.105,1084,3.656,1120,1.443,1127,1.576,1134,4.687,1138,2.539,1141,3.39,1142,4.284,1143,1.755,1144,1.576,1145,1.755,1146,1.755,1147,2.539,1148,1.576,1149,1.755,1150,1.755,1151,1.755,1174,2.81,1185,1.576,1194,2.324,1246,2.539,1247,1.755,1248,1.755,1249,1.755,1319,1.755,1333,6.281,1404,1.576,1475,1.443,1476,2.539,1480,2.009,1482,1.755,1483,1.755,1484,1.576,1518,2.893,1525,2.539,1871,1.443,1872,2.539,1877,1.755,1960,1.576,1962,1.576,1965,2.827,1970,1.755,1971,2.827,1972,2.827,1973,3.55,1974,3.55,1975,2.827,1976,2.827,1977,3.55,1986,1.576,1987,1.576,1988,3.55,1990,1.755,1991,2.827,1992,2.827,1993,1.755,1994,2.827,1995,1.755,1996,2.827,2009,1.755,2010,1.755,2011,1.755,2054,1.105,2084,1.755,2085,1.755,2094,1.755,2110,1.755,2116,1.755,2119,1.755,2125,1.755,2126,2.026,2127,2.026,2128,2.026,2129,2.026,2130,2.026,2131,2.026,2132,2.026,2133,2.026,2134,2.026,2135,4.7,2136,2.026,2137,2.026,2138,2.026,2139,2.026,2140,2.026,2141,2.026,2142,2.026,2143,2.026,2144,2.026,2145,2.026,2146,2.026,2147,4.099,2148,2.026,2149,2.026,2150,3.265,2151,3.265,2152,2.026,2153,3.265,2154,2.026,2155,2.026,2156,2.026,2157,2.026,2158,2.026,2159,2.026,2160,2.026,2161,3.265,2162,2.026,2163,2.026,2164,2.026,2165,3.265,2166,4.099,2167,2.026,2168,2.026,2169,2.026,2170,2.026,2171,2.026,2172,2.026,2173,2.026,2174,2.026,2175,2.026,2176,2.026,2177,5.154,2178,7.252,2179,2.026,2180,7.252,2181,6.65,2182,7.252,2183,6.385,2184,5.508,2185,6.385,2186,3.265,2187,5.154,2188,2.026,2189,2.026,2190,2.026,2191,2.026,2192,3.265,2193,2.026,2194,2.026,2195,3.265,2196,2.026,2197,4.099,2198,4.7,2199,2.026,2200,2.026,2201,2.026,2202,2.026,2203,2.026,2204,2.026,2205,2.026,2206,2.026,2207,2.026,2208,2.026,2209,2.026,2210,2.026,2211,2.026,2212,2.026,2213,2.026,2214,7.014,2215,7.014,2216,7.014,2217,4.7,2218,2.026,2219,2.026,2220,2.026]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":204,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":1908,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.14.3",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1963,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1959,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1968,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1969,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1979,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1978,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1966,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1967,"title":{},"body":{"coverage.html":{}}}],["01.01.2001",{"_index":1752,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["02",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1910,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":328,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/AuthComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":2043,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["10415fc",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":1984,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["13",{"_index":1916,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["14",{"_index":1914,"title":{},"body":{"changelog.html":{}}}],["1599df4",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2046,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":2023,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1064,"title":{},"body":{"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.32.1",{"_index":2031,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1054,"title":{},"body":{"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["200ms",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1909,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1435,"title":{},"body":{"components/SignUpComponent.html":{}}}],["28",{"_index":2103,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1585,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["3.0.0",{"_index":2028,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":2045,"title":{},"body":{"dependencies.html":{}}}],["3.83.0",{"_index":2033,"title":{},"body":{"dependencies.html":{}}}],["3.84.0",{"_index":2037,"title":{},"body":{"dependencies.html":{}}}],["3e56403",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1434,"title":{},"body":{"components/SignUpComponent.html":{}}}],["4.0.0",{"_index":2042,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1412,"title":{},"body":{"components/SignInComponent.html":{}}}],["401",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["40226bb",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["409",{"_index":1469,"title":{},"body":{"components/SignUpComponent.html":{}}}],["4ff626a",{"_index":1935,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":326,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["50",{"_index":1404,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["500ms",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5712d8d",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["5ee44fb",{"_index":1920,"title":{},"body":{"changelog.html":{}}}],["7.0.2",{"_index":2044,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["75f0adf",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["7bb7ca5",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":541,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["8.0.1",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["8.13.0",{"_index":2029,"title":{},"body":{"dependencies.html":{}}}],["8e4ac0a",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["990cabe",{"_index":1936,"title":{},"body":{"changelog.html":{}}}],["9d20609",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["9dc7642",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["_actions",{"_index":1492,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["a,optio",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a.localecompare(b",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["a.url",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.url.includes('/404",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects.includes('/404",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a9ca01e",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":827,"title":{},"body":{"components/DashboardComponent.html":{}}}],["absolute",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":1886,"title":{},"body":{"classes/Validation.html":{}}}],["accept",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token",{"_index":484,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["accessors",{"_index":1771,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["account($username",{"_index":44,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account(where",{"_index":45,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account.avatar",{"_index":1261,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.avatar.url",{"_index":1262,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.birthday",{"_index":1260,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name",{"_index":1264,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name.trim",{"_index":1266,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.interface",{"_index":628,"title":{},"body":{"interfaces/AuthenticatedUser.html":{}}}],["account.last_name",{"_index":1265,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.last_name.trim",{"_index":1267,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.model",{"_index":486,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["account.vk_avatar",{"_index":1263,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account/avatar",{"_index":2075,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["account_avatar",{"_index":2074,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accountfilter",{"_index":96,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountgql",{"_index":35,"title":{"injectables/AccountGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountid",{"_index":1279,"title":{},"body":{"components/ProfileComponent.html":{}}}],["accountinfogql",{"_index":101,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinfoquery",{"_index":102,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinput",{"_index":181,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinputcomponent",{"_index":62,"title":{"components/AccountInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["accountmodel",{"_index":53,"title":{"interfaces/AccountModel.html":{}},"body":{"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/AuthModel.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["accountqueryref",{"_index":57,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountresponse",{"_index":55,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accounts",{"_index":97,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountservice",{"_index":285,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountsfilter",{"_index":98,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountshortmodel",{"_index":179,"title":{"interfaces/AccountShortModel.html":{}},"body":{"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusername($username",{"_index":322,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountsinfobyusernamegql",{"_index":80,"title":{"injectables/AccountsInfoByUsernameGQL.html":{}},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusernamequeryref",{"_index":153,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernameresponse",{"_index":330,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernamevariables",{"_index":331,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountslist",{"_index":99,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountvariables",{"_index":56,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accusamus",{"_index":785,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusamusreiciendis",{"_index":994,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantium",{"_index":840,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantiumquidem",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actions",{"_index":1488,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["actions'},{'name",{"_index":265,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["actions.component",{"_index":1650,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["actions.component.html",{"_index":1490,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.scss",{"_index":1491,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts",{"_index":1487,"title":{},"body":{"components/UploadActionsComponent.html":{},"coverage.html":{}}}],["actions.component.ts:17",{"_index":1501,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:18",{"_index":1496,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:20",{"_index":1503,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:22",{"_index":1498,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:23",{"_index":1499,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:24",{"_index":1497,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions/upload",{"_index":1486,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":449,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["activeitemindex",{"_index":468,"title":{},"body":{"components/AuthComponent.html":{}}}],["actual_component",{"_index":280,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["ad",{"_index":893,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisci",{"_index":796,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisicing",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{}}}],["administrator",{"_index":2082,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":1365,"title":{},"body":{"components/SignInComponent.html":{}}}],["alerts",{"_index":103,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["alias",{"_index":918,"title":{},"body":{"components/DashboardComponent.html":{},"components/UploadActionsComponent.html":{}}}],["aliases",{"_index":2106,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliquam",{"_index":843,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquam,nemo",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquamearum",{"_index":999,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid",{"_index":767,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid!soluta",{"_index":922,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquidpraesentium",{"_index":984,"title":{},"body":{"components/DashboardComponent.html":{}}}],["allow",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amet",{"_index":743,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ametimpedit",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{}}}],["angular",{"_index":51,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2022,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2024,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":175,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":301,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/SignUpComponent.html":{},"injectables/UploadService.html":{}}}],["angular/compiler",{"_index":2025,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":52,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":169,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["angular/forms",{"_index":163,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"classes/Validation.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1088,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animations",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["animi",{"_index":875,"title":{},"body":{"components/DashboardComponent.html":{}}}],["animicommodi",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aperiam",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{}}}],["api",{"_index":303,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["apierror",{"_index":332,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["apiurl",{"_index":1018,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":50,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["apollo/client",{"_index":2027,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/errors",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollo_options",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apolloclientoptions",{"_index":2089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apolloerror",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollooptionsfactory",{"_index":1987,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["app.component.html",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngondestroy",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngoninit",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/pass/auth",{"_index":450,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["app_initializer",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":218,"title":{"components/AppComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1965,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":1019,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory",{"_index":1962,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory(config",{"_index":2090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applicationconfig",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["architecto",{"_index":818,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architecto,molestias",{"_index":971,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architectonesciunt",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{}}}],["area",{"_index":1341,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["arguments",{"_index":1309,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["asperiores",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernatur",{"_index":846,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernaturquia",{"_index":966,"title":{},"body":{"components/DashboardComponent.html":{}}}],["assumenda",{"_index":916,"title":{},"body":{"components/DashboardComponent.html":{}}}],["async",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{}}}],["atque",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{}}}],["atqueeaque",{"_index":923,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aut",{"_index":791,"title":{},"body":{"components/DashboardComponent.html":{}}}],["autem",{"_index":835,"title":{},"body":{"components/DashboardComponent.html":{}}}],["auth",{"_index":221,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":224,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["auth.$$isauth.pipe",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.component.html",{"_index":466,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":467,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.ngoninit",{"_index":470,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth/logout",{"_index":2066,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh",{"_index":2068,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh/clear",{"_index":2070,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/sign",{"_index":2064,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/token",{"_index":2062,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_me",{"_index":2060,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh",{"_index":2067,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh_clear",{"_index":2069,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_in",{"_index":2061,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_out",{"_index":2065,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_up",{"_index":2063,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authcallback",{"_index":454,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngondestroy",{"_index":435,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngoninit",{"_index":437,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallbackcomponent",{"_index":220,"title":{"components/AuthCallbackComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["authcallbackdto",{"_index":453,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["authcallbackguard",{"_index":1992,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcomponent",{"_index":223,"title":{"components/AuthComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["authenticatedroutes",{"_index":1133,"title":{},"body":{"components/NavComponent.html":{}}}],["authenticateduser",{"_index":591,"title":{"interfaces/AuthenticatedUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/UploadFileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":1994,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodel",{"_index":482,"title":{"interfaces/AuthModel.html":{}},"body":{"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authorization",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authpass",{"_index":516,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngondestroy",{"_index":499,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngoninit",{"_index":501,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpasscomponent",{"_index":225,"title":{"components/AuthPassComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":384,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autquia",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["avatar",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["avatar'},{'name",{"_index":229,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["avatar.component",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{}}}],["avatar.component.html",{"_index":635,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.scss",{"_index":636,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts",{"_index":631,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["avatar.component.ts:111",{"_index":652,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:130",{"_index":656,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:139",{"_index":651,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:150",{"_index":655,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:47",{"_index":658,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:48",{"_index":662,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:49",{"_index":647,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:65",{"_index":661,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:67",{"_index":664,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:69",{"_index":665,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:70",{"_index":659,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:72",{"_index":653,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:76",{"_index":649,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar/change",{"_index":630,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["avataralreadyexists",{"_index":637,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["avatarurl",{"_index":1724,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["await",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["b",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["b8284fa",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["b8f80ba",{"_index":1915,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["be41310",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["beatae",{"_index":788,"title":{},"body":{"components/DashboardComponent.html":{}}}],["before",{"_index":1306,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["behaviorsubject",{"_index":440,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(false",{"_index":508,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(true",{"_index":441,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["between",{"_index":1342,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["big",{"_index":1326,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["birthday",{"_index":10,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["blanditiis",{"_index":847,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blanditiislaudantium",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blob",{"_index":311,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body",{"_index":305,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('acl",{"_index":1860,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('compress",{"_index":1853,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('file",{"_index":308,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('id",{"_index":313,"title":{},"body":{"injectables/AccountService.html":{}}}],["body.append('name",{"_index":1858,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('originalname",{"_index":1855,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('path",{"_index":1851,"title":{},"body":{"injectables/UploadService.html":{}}}],["boolean",{"_index":137,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"injectables/ScrollService.html":{},"interfaces/UploadActionsParams.html":{},"interfaces/UploadModel.html":{},"miscellaneous/functions.html":{}}}],["borderradius",{"_index":1403,"title":{},"body":{"components/SignInComponent.html":{}}}],["bottom",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":539,"title":{},"body":{"components/AuthPassComponent.html":{},"components/UploadInfoComponent.html":{}}}],["browser",{"_index":1089,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["bucket",{"_index":1516,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["bug",{"_index":1912,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":186,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["calculated",{"_index":1347,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["callback",{"_index":430,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback'},{'name",{"_index":222,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["callback.component.html",{"_index":431,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.scss",{"_index":432,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts",{"_index":429,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["callback.component.ts:23",{"_index":446,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:24",{"_index":439,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:25",{"_index":447,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:27",{"_index":448,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:29",{"_index":442,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:30",{"_index":444,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:33",{"_index":438,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:57",{"_index":436,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.guard.ts",{"_index":1991,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["callbackurl",{"_index":469,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["canactivatefn",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":536,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["catcherror",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["catcherror((err",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["catcherror((res",{"_index":679,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["change",{"_index":228,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["changeavatar",{"_index":641,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["changeavatarcomponent",{"_index":227,"title":{"components/ChangeAvatarComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["changelog",{"_index":1898,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["charts",{"_index":2032,"title":{},"body":{"dependencies.html":{}}}],["chatonly",{"_index":2079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chats",{"_index":698,"title":{},"body":{"components/ChatsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["chats'},{'name",{"_index":231,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["chats.component.html",{"_index":699,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chats.component.scss",{"_index":700,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chatscomponent",{"_index":230,"title":{"components/ChatsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["checkcontrol",{"_index":1889,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors['matching",{"_index":1892,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.errors",{"_index":1891,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.value",{"_index":1894,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":1882,"title":{},"body":{"classes/Validation.html":{}}}],["ci",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":60,"title":{"classes/Validation.html":{}},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1878,"title":{},"body":{"classes/Validation.html":{}}}],["clear",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["clickowner",{"_index":1598,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["clickupload",{"_index":1725,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["client",{"_index":2100,"title":{},"body":{"index.html":{}}}],["close",{"_index":1098,"title":{},"body":{"components/MeComponent.html":{}}}],["closemenu",{"_index":706,"title":{},"body":{"injectables/ConfigService.html":{},"components/NavComponent.html":{}}}],["code",{"_index":337,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{}}}],["commerce",{"_index":2034,"title":{},"body":{"dependencies.html":{}}}],["commit",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["commitizen",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["commodi",{"_index":787,"title":{},"body":{"components/DashboardComponent.html":{}}}],["commonmodule",{"_index":86,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["complete",{"_index":1114,"title":{},"body":{"components/MeComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["component",{"_index":61,"title":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":216,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["components",{"_index":63,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"overview.html":{}}}],["components/header",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["components/me",{"_index":1077,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/menu",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["components/nav",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["components/oops",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["compress",{"_index":1556,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["computed",{"_index":147,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["config",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"miscellaneous/functions.html":{}}}],["configservice",{"_index":385,"title":{"injectables/ConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["confirmform",{"_index":1418,"title":{},"body":{"components/SignUpComponent.html":{}}}],["confirmpass",{"_index":506,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["consectetur",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequatur",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequaturmollitia",{"_index":921,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequuntur",{"_index":766,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequunturcommodi",{"_index":987,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console",{"_index":1338,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["console.log(err",{"_index":462,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["constructor(context",{"_index":645,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["constructor(el",{"_index":1299,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["constructor(fb",{"_index":495,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(private",{"_index":517,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/IFrameUrlPipe.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["container",{"_index":1396,"title":{},"body":{"components/SignInComponent.html":{}}}],["contains",{"_index":324,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":648,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["context.data.accountid",{"_index":673,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["context.data.avataralreadyexists",{"_index":675,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["control",{"_index":639,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["control?.value",{"_index":1893,"title":{},"body":{"classes/Validation.html":{}}}],["controlevent",{"_index":1648,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["controlname",{"_index":1884,"title":{},"body":{"classes/Validation.html":{}}}],["controls",{"_index":1887,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":1890,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":1895,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":1888,"title":{},"body":{"classes/Validation.html":{}}}],["controlvalueaccessor",{"_index":72,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["corporis",{"_index":885,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corporisdicta",{"_index":986,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corrupti",{"_index":880,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coverage",{"_index":1955,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":282,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["credentials",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["culpa",{"_index":809,"title":{},"body":{"components/DashboardComponent.html":{}}}],["culpaconsectetur",{"_index":927,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cum",{"_index":898,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cumque",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditate",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatequasi",{"_index":963,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatereiciendis",{"_index":973,"title":{},"body":{"components/DashboardComponent.html":{}}}],["currently",{"_index":1330,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentpath",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth/callback",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentscrolledy",{"_index":1334,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentstep",{"_index":1541,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["customicon",{"_index":1147,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":1287,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["d5e22c5",{"_index":1946,"title":{},"body":{"changelog.html":{}}}],["dashboard",{"_index":736,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":233,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["dashboard.component.html",{"_index":737,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":738,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":232,"title":{"components/DashboardComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["data",{"_index":460,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["data.access_token",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar.url",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.birthday",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.email",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name.trim",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name.trim",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.roles.sort((a",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.sex",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.username",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_avatar",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_id",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["data[object.keys(val)[0",{"_index":1686,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["date",{"_index":25,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{}}}],["datepipe",{"_index":1186,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["dded140",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["debitis",{"_index":888,"title":{},"body":{"components/DashboardComponent.html":{}}}],["debouncedsignal",{"_index":2014,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["debouncedsignal(sourcesignal",{"_index":2091,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debouncetime",{"_index":172,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{}}}],["debouncetime(1000",{"_index":191,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{}}}],["debouncetimeinms",{"_index":2092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":47,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["delectus",{"_index":824,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delectusconsequuntur",{"_index":991,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deleniti",{"_index":831,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitipariatur",{"_index":992,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitiquaerat",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delete",{"_index":1511,"title":{},"body":{"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{}}}],["deleteupload",{"_index":1599,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["deleteupload(where",{"_index":1016,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyid($id",{"_index":1015,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidgql",{"_index":1007,"title":{"injectables/DeleteUploadByIdGQL.html":{}},"body":{"injectables/DeleteUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["deleteuploadbyidquery",{"_index":1011,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidresponse",{"_index":1013,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["deleteuploadbyidvariables",{"_index":1014,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":2021,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":287,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadService.html":{},"properties.html":{}}}],["deserunt",{"_index":803,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deseruntaut",{"_index":970,"title":{},"body":{"components/DashboardComponent.html":{}}}],["destroyref",{"_index":104,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["dev",{"_index":1024,"title":{},"body":{"interfaces/Env.html":{}}}],["dialogs",{"_index":1095,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["dicta",{"_index":876,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dignissimos",{"_index":903,"title":{},"body":{"components/DashboardComponent.html":{}}}],["directive",{"_index":214,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":277,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["disabled",{"_index":105,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["distinctio",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctioaliquid",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctiovoluptates",{"_index":988,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctuntilchanged",{"_index":173,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["dj29fnsadjsd82f249k293c139j1kd3",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["document",{"_index":40,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["documentation",{"_index":1956,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":1902,"title":{},"body":{"changelog.html":{}}}],["dolor",{"_index":741,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolore",{"_index":887,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorem",{"_index":910,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloremque",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolores",{"_index":896,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus!aspernatur",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribusut",{"_index":1002,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorum",{"_index":820,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dom",{"_index":65,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["dompurify",{"_index":2041,"title":{},"body":{"dependencies.html":{}}}],["domsanitizer",{"_index":1087,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadPreviewComponent.html":{}}}],["dto",{"_index":294,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["dto.compress.tostring",{"_index":1854,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.file",{"_index":309,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["dto.file.name",{"_index":1856,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.id",{"_index":312,"title":{},"body":{"injectables/AccountService.html":{}}}],["dto.name",{"_index":1857,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.path",{"_index":1852,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.private",{"_index":1859,"title":{},"body":{"injectables/UploadService.html":{}}}],["dtos",{"_index":302,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["ducimus",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dynamic",{"_index":2026,"title":{},"body":{"dependencies.html":{}}}],["e.source.dirty",{"_index":1655,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["e50d064",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["e7319e4",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["ea",{"_index":909,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eaque",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{}}}],["earum",{"_index":881,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ease",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editable",{"_index":1591,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["edited",{"_index":1592,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["effect",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["eius",{"_index":806,"title":{},"body":{"components/DashboardComponent.html":{}}}],["el",{"_index":1302,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["element",{"_index":213,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["elementref",{"_index":1300,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{}}}],["eligendi",{"_index":873,"title":{},"body":{"components/DashboardComponent.html":{}}}],["elit",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{}}}],["email",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["emit",{"_index":1305,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end",{"_index":1307,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts",{"_index":1293,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["end.directive.ts:16",{"_index":1308,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:21",{"_index":1303,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:23",{"_index":1301,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:27",{"_index":1312,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:33",{"_index":1311,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["enim",{"_index":830,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enimdeleniti",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enterleaveanimation",{"_index":475,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2055,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":28,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}}}],["env",{"_index":304,"title":{"interfaces/Env.html":{}},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/Env.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.apiurl}${api.account_avatar",{"_index":316,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.account_avatar}${dto.id",{"_index":318,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.vk_id_exchange_token",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["env.appid",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["env.environment",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.origin",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.redirecturl",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["environment",{"_index":1020,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["eos",{"_index":839,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eos,impedit",{"_index":937,"title":{},"body":{"components/DashboardComponent.html":{}}}],["err",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["err.status",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["error",{"_index":199,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["error(res.error",{"_index":681,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["errorhandler",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":526,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.foreach((error",{"_index":1407,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.push",{"_index":538,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["esse",{"_index":892,"title":{},"body":{"components/DashboardComponent.html":{}}}],["esseperspiciatis",{"_index":952,"title":{},"body":{"components/DashboardComponent.html":{}}}],["est",{"_index":884,"title":{},"body":{"components/DashboardComponent.html":{}}}],["et",{"_index":805,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eum",{"_index":889,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eveniet",{"_index":912,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event",{"_index":1316,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["event.target",{"_index":1310,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["eventcoalescing",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1099,"title":{},"body":{"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["events",{"_index":1028,"title":{},"body":{"components/EventsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["events'},{'name",{"_index":235,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["events.component.html",{"_index":1029,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.scss",{"_index":1030,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":234,"title":{"components/EventsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["ex",{"_index":837,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exact",{"_index":1144,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["excepturi",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exercitationem",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{}}}],["expedita",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{}}}],["explicabo",{"_index":823,"title":{},"body":{"components/DashboardComponent.html":{}}}],["export",{"_index":29,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["ext",{"_index":1059,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":38,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["extension",{"_index":237,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["extensioninput",{"_index":1051,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensioninputcomponent",{"_index":236,"title":{"components/ExtensionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["extensions",{"_index":1036,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensions.gql.ts",{"_index":1523,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["extensions.gql.ts:22",{"_index":1527,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["facere",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facerequae",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facilis",{"_index":904,"title":{},"body":{"components/DashboardComponent.html":{}}}],["false",{"_index":159,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":498,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["features",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["fetchpolicy",{"_index":185,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{}}}],["file'},{'name",{"_index":267,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["file.component.html",{"_index":1539,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.scss",{"_index":1540,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts",{"_index":1534,"title":{},"body":{"components/UploadFileComponent.html":{},"coverage.html":{}}}],["file.component.ts:104",{"_index":1549,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:62",{"_index":1565,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:63",{"_index":1561,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:64",{"_index":1553,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:65",{"_index":1550,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:67",{"_index":1559,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:68",{"_index":1563,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:70",{"_index":1551,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:72",{"_index":1558,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:81",{"_index":1552,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:83",{"_index":1547,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:87",{"_index":1548,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:91",{"_index":1546,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.name.split",{"_index":1864,"title":{},"body":{"injectables/UploadService.html":{}}}],["file.type",{"_index":1869,"title":{},"body":{"injectables/UploadService.html":{}}}],["file/upload",{"_index":1533,"title":{},"body":{"components/UploadFileComponent.html":{},"coverage.html":{}}}],["file_name",{"_index":1480,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["fileform",{"_index":1542,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["filename",{"_index":1863,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join",{"_index":1867,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join('.').slice(0",{"_index":1866,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename[filename.length",{"_index":1865,"title":{},"body":{"injectables/UploadService.html":{}}}],["fileparams",{"_index":1057,"title":{"interfaces/FileParams.html":{}},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["filter",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"components/UploadInfoComponent.html":{}}}],["filter(([_",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter((e",{"_index":1654,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["filter((val",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"components/UploadInfoComponent.html":{}}}],["filters",{"_index":323,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["first_name",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{}}}],["firstvaluefrom(this.http.get('/assets/config.json",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fixed",{"_index":1134,"title":{},"body":{"components/NavComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["fixes",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["float",{"_index":1525,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["foreach((error",{"_index":534,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["form",{"_index":492,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formbuilder",{"_index":496,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontrol",{"_index":505,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrol('.png",{"_index":1555,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol('file",{"_index":1554,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol(false",{"_index":1557,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrol(new",{"_index":1432,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formcontrol(null",{"_index":660,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrolname",{"_index":115,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["formdata",{"_index":307,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["formgroup",{"_index":116,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formsmodule",{"_index":87,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["found",{"_index":1159,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":249,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["found.component.html",{"_index":1160,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1161,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1158,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:14",{"_index":1164,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:15",{"_index":1163,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1157,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["fuga",{"_index":905,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat",{"_index":784,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat,est",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiatfacilis",{"_index":961,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugit",{"_index":906,"title":{},"body":{"components/DashboardComponent.html":{}}}],["full_name",{"_index":13,"title":{},"body":{"interfaces/Account.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":1961,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2083,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get,post,put,delete,options",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getaccountmodel",{"_index":1061,"title":{"interfaces/GetAccountModel.html":{}},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["getcurrentpath",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcurrentpath(router",{"_index":2094,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getcurrentpath(this.router).includes('/auth",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["getfileparams",{"_index":1841,"title":{},"body":{"injectables/UploadService.html":{}}}],["getfileparams(file",{"_index":1842,"title":{},"body":{"injectables/UploadService.html":{}}}],["getpreviewcontent",{"_index":1816,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["getquerypayload",{"_index":452,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getquerypayload(params",{"_index":2095,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getquerypayload(route.queryparams",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1896,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["getupdatedfields",{"_index":1600,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["gql",{"_index":43,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["graphql",{"_index":178,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["graphqlerror",{"_index":336,"title":{"interfaces/GraphqlError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["graphqlprovider",{"_index":1988,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["grid.animation.ts",{"_index":1974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guidelines",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["handlechange",{"_index":108,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handlechange(val",{"_index":124,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handleclose",{"_index":1760,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["handledelete",{"_index":1493,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["handledeleteupload",{"_index":1601,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["handleme",{"_index":1096,"title":{},"body":{"components/MeComponent.html":{}}}],["handleopen",{"_index":1494,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["handlesave",{"_index":1495,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["handlesaveupload",{"_index":1602,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["handlesignout",{"_index":1097,"title":{},"body":{"components/MeComponent.html":{}}}],["handleuploadresult",{"_index":642,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["handleuploadresult(res",{"_index":650,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["harum",{"_index":810,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hasevery",{"_index":1877,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1066,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":239,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["header.component.html",{"_index":1071,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1072,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":238,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1322,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofelement",{"_index":1328,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofwholepage",{"_index":1324,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hic",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hostlistener",{"_index":1317,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlistener('window:scroll",{"_index":1315,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlisteners",{"_index":1297,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["html",{"_index":212,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["http",{"_index":288,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httpclient",{"_index":298,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httperrorresponse",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["httpheaders",{"_index":1850,"title":{},"body":{"injectables/UploadService.html":{}}}],["httpinterceptorfn",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequestinterceptor",{"_index":1996,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://drive.google.com/viewerng/viewer?embedded=true&url=${this.url",{"_index":1834,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["husky",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":1142,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/GetAccountModel.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts",{"_index":1009,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts:24",{"_index":1519,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["id.gql.ts:25",{"_index":1012,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{}}}],["id.gql.ts:42",{"_index":1477,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{}}}],["id/exchange",{"_index":2073,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id=${dto.id",{"_index":319,"title":{},"body":{"injectables/AccountService.html":{}}}],["identifier",{"_index":1957,"title":{},"body":{"coverage.html":{}}}],["if(this.preview",{"_index":1509,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["iframeurl",{"_index":1083,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["iframeurlpipe",{"_index":1079,"title":{"pipes/IFrameUrlPipe.html":{}},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["illo",{"_index":813,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illum",{"_index":877,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumdeserunt",{"_index":1005,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumobcaecati",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{}}}],["images/cake.svg",{"_index":1146,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/files.svg",{"_index":1151,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/man.svg",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/tor.svg",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/woman.svg",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["impedit",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":70,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["import",{"_index":27,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["importprovidersfrom(tuirootmodule",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":85,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["in'},{'name",{"_index":258,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["in.component",{"_index":477,"title":{},"body":{"components/AuthComponent.html":{}}}],["in.component.html",{"_index":1366,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":1367,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts",{"_index":1364,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:151",{"_index":1376,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:38",{"_index":1391,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:40",{"_index":1380,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:41",{"_index":1381,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:42",{"_index":1386,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:44",{"_index":1372,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:46",{"_index":1389,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:47",{"_index":1387,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:49",{"_index":1384,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:50",{"_index":1385,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:52",{"_index":1383,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:58",{"_index":1371,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:63",{"_index":1378,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:85",{"_index":1374,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:98",{"_index":1379,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":476,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["incidunt",{"_index":883,"title":{},"body":{"components/DashboardComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["info'},{'name",{"_index":269,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["info.component.html",{"_index":1589,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.scss",{"_index":1590,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts",{"_index":1588,"title":{},"body":{"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:100",{"_index":1627,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:101",{"_index":1626,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:102",{"_index":1625,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:104",{"_index":1624,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:113",{"_index":1618,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:119",{"_index":1611,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:181",{"_index":1606,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:187",{"_index":1610,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:201",{"_index":1609,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:211",{"_index":1615,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:245",{"_index":1607,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:273",{"_index":1608,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:335",{"_index":1613,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:74",{"_index":1640,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:75",{"_index":1632,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:76",{"_index":1628,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:77",{"_index":1631,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:78",{"_index":1636,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:80",{"_index":1630,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:81",{"_index":1638,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:83",{"_index":1647,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:84",{"_index":1634,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:86",{"_index":1645,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:95",{"_index":1604,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:97",{"_index":1635,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:98",{"_index":1605,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info/upload",{"_index":1587,"title":{},"body":{"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["init",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["initialaccount",{"_index":31,"title":{},"body":{"interfaces/Account.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialauthenticateduser",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initsentry",{"_index":2016,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":162,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{}}}],["inject(accountgql",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(accountservice",{"_index":657,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["inject(accountsinfobyusernamegql",{"_index":151,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["inject(activatedroute",{"_index":445,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["inject(authservice",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice).$isadmin",{"_index":1633,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inject(authservice).$user",{"_index":1564,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["inject(authservice).$user().id",{"_index":1646,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inject(configservice",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{}}}],["inject(deleteuploadbyidgql",{"_index":1629,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(destroyref",{"_index":157,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inject(domsanitizer",{"_index":1806,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(httpclient",{"_index":299,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["inject(injector",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(polymorpheus_context",{"_index":671,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["inject(router",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(scrollservice",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(title",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(tui_is_mobile",{"_index":1792,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(tuialertservice",{"_index":155,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["inject(tuidialogservice",{"_index":1106,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["inject(tuipdfviewerservice",{"_index":1799,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(tuipreviewdialogservice",{"_index":1803,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(updateuploadbyidgql",{"_index":1637,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(uploadbyidgql",{"_index":1639,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(uploadextensionsgql",{"_index":1048,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["inject(uploadservice",{"_index":1560,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["injectable",{"_index":34,"title":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":36,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"overview.html":{}}}],["injector",{"_index":1195,"title":{},"body":{"components/ProfileComponent.html":{}}}],["innerheight",{"_index":1339,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["inoutanimation200",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutanimation500",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation200",{"_index":1975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation500",{"_index":1976,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":83,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["input'},{'name",{"_index":217,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["input(false",{"_index":1823,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["input.component.html",{"_index":93,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.scss",{"_index":95,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts",{"_index":69,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:101",{"_index":1044,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:119",{"_index":125,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:125",{"_index":139,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:127",{"_index":133,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:131",{"_index":135,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:135",{"_index":138,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:37",{"_index":1176,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:38",{"_index":1175,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:39",{"_index":1180,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:40",{"_index":1179,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:41",{"_index":1178,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:48",{"_index":1177,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:50",{"_index":1183,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:52",{"_index":1049,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:53",{"_index":1046,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:54",{"_index":1047,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:56",{"_index":1038,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:57",{"_index":1037,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:58",{"_index":158,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:59",{"_index":156,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:60",{"_index":1181,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:61",{"_index":152,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:63",{"_index":154,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:64",{"_index":1182,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:65",{"_index":120,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:66",{"_index":119,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:67",{"_index":123,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:69",{"_index":122,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:71",{"_index":161,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:73",{"_index":160,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:75",{"_index":145,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:77",{"_index":150,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:81",{"_index":146,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:82",{"_index":142,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:84",{"_index":131,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:91",{"_index":1045,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:93",{"_index":1042,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:97",{"_index":1043,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.required",{"_index":1500,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["input/account",{"_index":68,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["input/extension",{"_index":1032,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["input/permission",{"_index":1173,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":114,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["instanceof",{"_index":683,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadActionsParams.html":{},"interfaces/UploadModel.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadActionsParams.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["interop",{"_index":170,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inventore",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inventoreillo",{"_index":967,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsa",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsam",{"_index":841,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsaneque",{"_index":993,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsum",{"_index":740,"title":{},"body":{"components/DashboardComponent.html":{}}}],["is_system",{"_index":1517,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["isadmin",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["isauth",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["isauthpage",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscustomname",{"_index":1575,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["iseditable",{"_index":1761,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["isend",{"_index":1351,"title":{},"body":{"injectables/ScrollService.html":{}}}],["isloading",{"_index":433,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["isme",{"_index":1193,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ismobile",{"_index":1762,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["isnotfound",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotfound(err.message",{"_index":1268,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isnotfound(message",{"_index":2098,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotfoundpage",{"_index":703,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isopen",{"_index":1763,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["isopenprofiledropdown",{"_index":1073,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isprivate",{"_index":1642,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["isrefusedpage",{"_index":704,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isrotatable",{"_index":1764,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["issystem",{"_index":1643,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["iste",{"_index":817,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iszoomable",{"_index":1765,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["itaque",{"_index":800,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquebeatae",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquelaudantium",{"_index":1003,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item",{"_index":1720,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item'},{'name",{"_index":272,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["item.component.html",{"_index":1722,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.scss",{"_index":1723,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts",{"_index":1719,"title":{},"body":{"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:42",{"_index":1733,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:43",{"_index":1745,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:45",{"_index":1746,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:46",{"_index":1729,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:47",{"_index":1728,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:49",{"_index":1732,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:50",{"_index":1730,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:51",{"_index":1731,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:53",{"_index":1738,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:61",{"_index":1744,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:71",{"_index":1739,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item/upload",{"_index":1718,"title":{},"body":{"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["iure",{"_index":792,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iusto",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iustoarchitecto",{"_index":1001,"title":{},"body":{"components/DashboardComponent.html":{}}}],["key",{"_index":1684,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["keyboardevent",{"_index":1314,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["keyof",{"_index":529,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["kit",{"_index":1845,"title":{},"body":{"injectables/UploadService.html":{}}}],["l",{"_index":1041,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["label",{"_index":1614,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["labore",{"_index":832,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laboriosam",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborum",{"_index":908,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborumcupiditate",{"_index":995,"title":{},"body":{"components/DashboardComponent.html":{}}}],["lang",{"_index":1400,"title":{},"body":{"components/SignInComponent.html":{}}}],["last_name",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["laudantium",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["leave.animation.ts",{"_index":1971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":211,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["length",{"_index":1868,"title":{},"body":{"injectables/UploadService.html":{}}}],["libero",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list",{"_index":271,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["literal",{"_index":1063,"title":{},"body":{"interfaces/GetAccountModel.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfig",{"_index":707,"title":{},"body":{"injectables/ConfigService.html":{}}}],["loading",{"_index":1194,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1023,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["locale_id",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1382,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["lorem",{"_index":739,"title":{},"body":{"components/DashboardComponent.html":{}}}],["m",{"_index":1039,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["magnam",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{}}}],["magni",{"_index":808,"title":{},"body":{"components/DashboardComponent.html":{}}}],["maiores",{"_index":907,"title":{},"body":{"components/DashboardComponent.html":{}}}],["map",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["map(([isauth",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map((a",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["map((control",{"_index":1700,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["map((data",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((e",{"_index":1656,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["map((params",{"_index":1208,"title":{},"body":{"components/ProfileComponent.html":{}}}],["map((profile",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{}}}],["map((val",{"_index":1703,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["match",{"_index":542,"title":{},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":1881,"title":{},"body":{"classes/Validation.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxime",{"_index":811,"title":{},"body":{"components/DashboardComponent.html":{}}}],["me'},{'name",{"_index":241,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["me.component.html",{"_index":1093,"title":{},"body":{"components/MeComponent.html":{}}}],["me.component.scss",{"_index":1094,"title":{},"body":{"components/MeComponent.html":{}}}],["mecomponent",{"_index":240,"title":{"components/MeComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["memberonly",{"_index":2080,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["memories",{"_index":1120,"title":{},"body":{"components/MemoriesComponent.html":{},"components/NavComponent.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["memories'},{'name",{"_index":243,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["memories.component.html",{"_index":1121,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memories.component.scss",{"_index":1122,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memoriescomponent",{"_index":242,"title":{"components/MemoriesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["menu",{"_index":1124,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'name",{"_index":245,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["menu.component.html",{"_index":1125,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1126,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":244,"title":{"components/MenuComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["menuisopen",{"_index":705,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":334,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":73,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["methods",{"_index":107,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["mime",{"_index":1060,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{}}}],["minima",{"_index":794,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minlength",{"_index":540,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["minus",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minus,ratione",{"_index":920,"title":{},"body":{"components/DashboardComponent.html":{}}}],["miscellaneous",{"_index":2054,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":1288,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["mobile",{"_index":2035,"title":{},"body":{"dependencies.html":{}}}],["models",{"_index":54,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}}}],["modi",{"_index":842,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modules",{"_index":2101,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["molestiae",{"_index":890,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaedolores",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestias",{"_index":897,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaset",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitia",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitiaaliquam",{"_index":985,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mpga",{"_index":1839,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["multi",{"_index":77,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["mutate",{"_index":1694,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["mutation",{"_index":1010,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["nam",{"_index":891,"title":{},"body":{"components/DashboardComponent.html":{}}}],["name",{"_index":127,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["natus",{"_index":798,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nav",{"_index":1128,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":247,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["nav.component.html",{"_index":1131,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":1132,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":246,"title":{"components/NavComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["navigationend",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["near",{"_index":1292,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["nearend",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["nearend(posy",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["necessitatibus",{"_index":872,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nemo",{"_index":789,"title":{},"body":{"components/DashboardComponent.html":{}}}],["neque",{"_index":913,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nesciunt",{"_index":782,"title":{},"body":{"components/DashboardComponent.html":{}}}],["network",{"_index":187,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["new",{"_index":306,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["next",{"_index":196,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(status",{"_index":1352,"title":{},"body":{"injectables/ScrollService.html":{}}}],["nextstep",{"_index":1544,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["ng_value_accessor",{"_index":76,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ngafterviewinit",{"_index":1370,"title":{},"body":{"components/SignInComponent.html":{}}}],["ngdompurifysanitizer",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngondestroy",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ngoninit",{"_index":109,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["nihil",{"_index":801,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilconsectetur",{"_index":946,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihildicta",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilpossimus",{"_index":926,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisi",{"_index":821,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisieaque",{"_index":981,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisivero",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nobis",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{}}}],["non",{"_index":886,"title":{},"body":{"components/DashboardComponent.html":{}}}],["normalize.css",{"_index":2047,"title":{},"body":{"dependencies.html":{}}}],["nostrum",{"_index":754,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nostrumbeatae",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{}}}],["notable",{"_index":1899,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":1165,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["notfoundcomponent",{"_index":248,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["null",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["null>(null",{"_index":1502,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["nulla",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{}}}],["number",{"_index":338,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Env.html":{},"interfaces/GraphqlError.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/functions.html":{}}}],["numquam",{"_index":902,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecati",{"_index":814,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecatinostrum",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{}}}],["object",{"_index":1319,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["object.assign(env",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys",{"_index":532,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["object.keys(this.form.controls).foreach((control",{"_index":527,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["object.keys(this.uploadinfoform.controls",{"_index":1699,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["object.keys(val!)[0",{"_index":1704,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["observable",{"_index":140,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["odio",{"_index":874,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odioat",{"_index":965,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odiomaiores",{"_index":997,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odit",{"_index":845,"title":{},"body":{"components/DashboardComponent.html":{}}}],["oditaspernatur",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{}}}],["of(new",{"_index":680,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(res",{"_index":684,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(tui_russian_language",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officia",{"_index":882,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiis",{"_index":790,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiispariatur",{"_index":968,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnis",{"_index":915,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnisrepudiandae",{"_index":1000,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onchange",{"_index":117,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ondelete",{"_index":1593,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["ondestroy",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["oninit",{"_index":71,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["onsubmit",{"_index":494,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ontouched",{"_index":106,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["onupdate",{"_index":1594,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["oops",{"_index":1169,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops'},{'name",{"_index":251,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["oops.component.html",{"_index":1170,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops.component.scss",{"_index":1171,"title":{},"body":{"components/OopsComponent.html":{}}}],["oopscomponent",{"_index":250,"title":{"components/OopsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["opacity",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":201,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["open(this.preview",{"_index":1838,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["open(tui_prompt",{"_index":1713,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["opened",{"_index":1336,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["optio",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{}}}],["optional",{"_index":128,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":1021,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["originalname",{"_index":1641,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["out",{"_index":1973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out.animation.ts",{"_index":1977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":1050,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["outputs",{"_index":1035,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["overview",{"_index":2102,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1518,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["owner_id",{"_index":1754,"title":{},"body":{"interfaces/UploadModel.html":{}}}],["owneravatar",{"_index":1644,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["owneronly",{"_index":2078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["p",{"_index":1711,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["package",{"_index":1944,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["page",{"_index":327,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["paginatedquery",{"_index":2111,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pagination",{"_index":1528,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":1862,"title":{},"body":{"injectables/UploadService.html":{}}}],["parameters",{"_index":126,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parent",{"_index":1345,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["pariatur",{"_index":783,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pass",{"_index":489,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["pass'},{'name",{"_index":226,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["pass.component",{"_index":451,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["pass.component.html",{"_index":490,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.scss",{"_index":491,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts",{"_index":488,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["pass.component.ts:120",{"_index":500,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:28",{"_index":513,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:29",{"_index":511,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:30",{"_index":504,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:31",{"_index":512,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:33",{"_index":509,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:34",{"_index":510,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:36",{"_index":507,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:42",{"_index":497,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:47",{"_index":502,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:72",{"_index":503,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["password",{"_index":1409,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":335,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{}}}],["payload",{"_index":455,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"miscellaneous/variables.html":{}}}],["payload.token",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pdf",{"_index":1830,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["pdfviewers",{"_index":1766,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["perferendis",{"_index":848,"title":{},"body":{"components/DashboardComponent.html":{}}}],["permission",{"_index":253,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permission.owneronly",{"_index":1709,"title":{},"body":{"components/UploadInfoComponent.html":{},"injectables/UploadService.html":{}}}],["permissioninput",{"_index":1184,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["permissioninputcomponent",{"_index":252,"title":{"components/PermissionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["permissions",{"_index":1174,"title":{},"body":{"components/PermissionInputComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["perspiciatis",{"_index":829,"title":{},"body":{"components/DashboardComponent.html":{}}}],["perspiciatislibero",{"_index":976,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pipe",{"_index":189,"title":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["pipe(takeuntildestroyed(this.destroyref",{"_index":195,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["pipes",{"_index":1080,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadPreviewComponent.html":{},"overview.html":{}}}],["pipetransform",{"_index":1090,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}}}],["pixels",{"_index":1327,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["placeat",{"_index":911,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeat,voluptatum",{"_index":972,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeholder",{"_index":118,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["platform",{"_index":2104,"title":{},"body":{"properties.html":{}}}],["polymorpheus",{"_index":669,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["polymorpheus_context",{"_index":667,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["polymorpheuscomponent",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{}}}],["polymorpheuscomponent(changeavatarcomponent",{"_index":1277,"title":{},"body":{"components/ProfileComponent.html":{}}}],["polymorpheuscontent",{"_index":1780,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["polymorpheusmodule",{"_index":1757,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["porro",{"_index":917,"title":{},"body":{"components/DashboardComponent.html":{}}}],["position",{"_index":1333,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["possimus",{"_index":802,"title":{},"body":{"components/DashboardComponent.html":{}}}],["possimusaliquam",{"_index":996,"title":{},"body":{"components/DashboardComponent.html":{}}}],["posy",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["praesentium",{"_index":871,"title":{},"body":{"components/DashboardComponent.html":{}}}],["praesentiumnecessitatibus",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pragma",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preview",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["preview'},{'name",{"_index":274,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["preview.component.html",{"_index":1758,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.scss",{"_index":1759,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts",{"_index":1756,"title":{},"body":{"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:100",{"_index":1802,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:103",{"_index":1784,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:105",{"_index":1817,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:107",{"_index":1773,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:117",{"_index":1781,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:49",{"_index":1804,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:50",{"_index":1800,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:51",{"_index":1807,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:53",{"_index":1785,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:54",{"_index":1793,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:56",{"_index":1815,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:57",{"_index":1790,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:59",{"_index":1810,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:60",{"_index":1774,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:61",{"_index":1775,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:63",{"_index":1777,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:64",{"_index":1778,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:65",{"_index":1776,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:67",{"_index":1795,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:70",{"_index":1796,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:73",{"_index":1791,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:82",{"_index":1788,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:83",{"_index":1809,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:86",{"_index":1786,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:87",{"_index":1798,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:88",{"_index":1814,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:90",{"_index":1812,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:96",{"_index":1805,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:97",{"_index":1789,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview/upload",{"_index":1755,"title":{},"body":{"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["previewcontent",{"_index":1772,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["previews",{"_index":1767,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["previewsub",{"_index":1768,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["private",{"_index":100,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{}}}],["production",{"_index":1026,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1187,"title":{},"body":{"components/ProfileComponent.html":{},"changelog.html":{}}}],["profile!.username",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":255,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["profile,uploads",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["profile.component.html",{"_index":1191,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1192,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.ngoninit",{"_index":1201,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.roles",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":254,"title":{"components/ProfileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["project",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":712,"title":{},"body":{"injectables/ConfigService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"properties.html":{}}}],["protectedroutes",{"_index":1138,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":75,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":58,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["providehttpclient(withinterceptors([httprequestinterceptor",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provident",{"_index":804,"title":{},"body":{"components/DashboardComponent.html":{}}}],["providerouter(routes",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":74,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":2077,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["px",{"_index":1304,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["quae",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quaerat",{"_index":900,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quam",{"_index":815,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamobcaecati",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamrecusandae",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quas",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quasi",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{}}}],["query",{"_index":39,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryref",{"_index":49,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["qui",{"_index":826,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quia",{"_index":816,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdam",{"_index":844,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdamperferendis",{"_index":969,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quidem",{"_index":819,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quireprehenderit",{"_index":998,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quis",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquam",{"_index":786,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquamnihil",{"_index":990,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisvelit",{"_index":924,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quo",{"_index":838,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quod",{"_index":869,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quos",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ratione",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":89,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["readonly",{"_index":638,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["recusandae",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{}}}],["redirecturl",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":485,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["registeronchange",{"_index":110,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registeronchange(onchange",{"_index":132,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched",{"_index":111,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched(ontouched",{"_index":134,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["reiciendis",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reiciendisnostrum",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rem",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{}}}],["removeavatar",{"_index":289,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["removeavatar(dto",{"_index":291,"title":{},"body":{"injectables/AccountService.html":{}}}],["removeavatardto",{"_index":292,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["removefile",{"_index":643,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["repellat",{"_index":807,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repellendus",{"_index":894,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit",{"_index":833,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit,fugit",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repudiandae",{"_index":879,"title":{},"body":{"components/DashboardComponent.html":{}}}],["req",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":537,"title":{},"body":{"components/AuthPassComponent.html":{},"components/MeComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["rerum",{"_index":812,"title":{},"body":{"components/DashboardComponent.html":{}}}],["res",{"_index":197,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["res.data",{"_index":1661,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["res.url",{"_index":695,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["results",{"_index":32,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":314,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":130,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":26,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":59,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["root'},{'name",{"_index":219,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["route",{"_index":434,"title":{"interfaces/Route.html":{}},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route.title",{"_index":1155,"title":{},"body":{"components/NavComponent.html":{}}}],["router",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth/sign",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1129,"title":{},"body":{"components/NavComponent.html":{}}}],["routerlinkactive",{"_index":1130,"title":{},"body":{"components/NavComponent.html":{}}}],["routermodule",{"_index":1067,"title":{},"body":{"components/HeaderComponent.html":{},"components/NotFoundComponent.html":{},"components/UploadListItemComponent.html":{}}}],["routeroutlet",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["ru",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":174,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1040,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["saepe",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{}}}],["saepetotam",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{}}}],["safety",{"_index":1320,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sanitizer",{"_index":1769,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["sapiente",{"_index":797,"title":{},"body":{"components/DashboardComponent.html":{}}}],["save",{"_index":1318,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["scheme",{"_index":1398,"title":{},"body":{"components/SignInComponent.html":{}}}],["scroll",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["scrolled",{"_index":1331,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["scrollnearend",{"_index":279,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["scrollnearenddirective",{"_index":278,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["scrollservice",{"_index":386,"title":{"injectables/ScrollService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrollstate",{"_index":1359,"title":{},"body":{"injectables/ScrollService.html":{},"miscellaneous/typealiases.html":{}}}],["scrolltobottom",{"_index":1349,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sed",{"_index":793,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sedminima",{"_index":925,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["selectedfile",{"_index":1567,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectedfile.ext",{"_index":1571,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectextension",{"_index":1726,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["selector",{"_index":81,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["sentry",{"_index":176,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["sentry.createerrorhandler",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.traceclass",{"_index":180,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["sentry.tracemethod",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["sentry.traceservice",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry/angular",{"_index":177,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["sentry/cli",{"_index":2030,"title":{},"body":{"dependencies.html":{}}}],["sentrydsn",{"_index":1022,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["sequi",{"_index":914,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sequirepellat",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{}}}],["serializepermissions",{"_index":2018,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializepermissions(permissions",{"_index":2099,"title":{},"body":{"miscellaneous/functions.html":{}}}],["serializerole",{"_index":1197,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializerole(role",{"_index":1203,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["serializesex",{"_index":1198,"title":{},"body":{"components/ProfileComponent.html":{}}}],["serializesex(sex",{"_index":1205,"title":{},"body":{"components/ProfileComponent.html":{}}}],["services",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["set",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["set('access",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set(data",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["set(errors).foreach((error",{"_index":543,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["setdisabledstate",{"_index":112,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["setdisabledstate(disabled",{"_index":136,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["sex",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sexicons",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sexicons[0",{"_index":1275,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexicons[sex",{"_index":1274,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexpipe",{"_index":1190,"title":{"pipes/SexPipe.html":{}},"body":{"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"coverage.html":{}}}],["show",{"_index":1770,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["show(actions",{"_index":1779,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["showchangeavatardialog",{"_index":1196,"title":{},"body":{"components/ProfileComponent.html":{}}}],["showconfirmform",{"_index":1419,"title":{},"body":{"components/SignUpComponent.html":{}}}],["showdialog",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showerror",{"_index":644,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showerror(err",{"_index":654,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showpreview",{"_index":1727,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showprompt",{"_index":1603,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["showprompt(label",{"_index":1612,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["showref",{"_index":1162,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["shrinks",{"_index":1337,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sign",{"_index":257,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["signal",{"_index":144,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["signal(false",{"_index":663,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signal(initialaccount",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{}}}],["signal(initialauthenticateduser",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["signal(null",{"_index":1562,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signal(true",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signin",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["signin(dto",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin.ngafterviewinit",{"_index":1373,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngondestroy",{"_index":1375,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngoninit",{"_index":1377,"title":{},"body":{"components/SignInComponent.html":{}}}],["signincomponent",{"_index":256,"title":{"components/SignInComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["signindto",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["signinvk",{"_index":459,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{}}}],["signinvk(dto",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["signup(dto",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.ngondestroy",{"_index":1423,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup.ngoninit",{"_index":1425,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signupcomponent",{"_index":259,"title":{"components/SignUpComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["signupdto",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["similique",{"_index":895,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sint",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sit",{"_index":742,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitaliquam",{"_index":982,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitcumque",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitincidunt",{"_index":1006,"title":{},"body":{"components/DashboardComponent.html":{}}}],["size",{"_index":325,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["skeleton",{"_index":1282,"title":{},"body":{"components/ProfileComponent.html":{}}}],["soluta",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutadeleniti",{"_index":1004,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutaquo",{"_index":975,"title":{},"body":{"components/DashboardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["sourcesignal",{"_index":2093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spaceofelementandpage",{"_index":1346,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["spomen",{"_index":82,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"index.html":{}}}],["src/.../account.dtos.ts",{"_index":2113,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.gql.ts",{"_index":2107,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.interface.ts",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../accounts",{"_index":2108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api.enum.ts",{"_index":2056,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":2085,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.dtos.ts",{"_index":2109,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auth.guard.ts",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticated",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete",{"_index":2110,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../enter",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.development.ts",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.staging.ts",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.ts",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../funcs.ts",{"_index":2086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../graphql.provider.ts",{"_index":2084,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../http.interceptor.ts",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../in",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2112,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../nav.component.ts",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":2057,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../profile.component.ts",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":2058,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../scroll.service.ts",{"_index":2114,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sentry.ts",{"_index":2087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../serialize.ts",{"_index":2088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sex.interface.ts",{"_index":2115,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../update",{"_index":2116,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../upload",{"_index":2117,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../upload.dtos.ts",{"_index":2118,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../uploads.gql.ts",{"_index":2119,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:119",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:124",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:89",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1960,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.component.ts",{"_index":464,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":474,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:23",{"_index":472,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:24",{"_index":473,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:27",{"_index":471,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/callback/auth",{"_index":428,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["src/app/auth/pass/auth",{"_index":487,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["src/app/auth/sign",{"_index":1363,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/chats/chats.component.ts",{"_index":697,"title":{},"body":{"components/ChatsComponent.html":{},"coverage.html":{}}}],["src/app/common/animations/enter",{"_index":1970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/animations/in",{"_index":1972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/account",{"_index":67,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/extension",{"_index":1031,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts",{"_index":1065,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts:27",{"_index":1074,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:28",{"_index":1075,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:30",{"_index":1076,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/me/me.component.ts",{"_index":1092,"title":{},"body":{"components/MeComponent.html":{},"coverage.html":{}}}],["src/app/common/components/me/me.component.ts:23",{"_index":1107,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:24",{"_index":1105,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:25",{"_index":1104,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:26",{"_index":1103,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:27",{"_index":1108,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:29",{"_index":1100,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:31",{"_index":1101,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:37",{"_index":1102,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/menu/menu.component.ts",{"_index":1123,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/common/components/nav/nav.component.ts",{"_index":1127,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/nav/nav.component.ts:54",{"_index":1140,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:55",{"_index":1137,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:57",{"_index":1135,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:59",{"_index":1139,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:61",{"_index":1136,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/not",{"_index":1156,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/common/components/oops/oops.component.ts",{"_index":1168,"title":{},"body":{"components/OopsComponent.html":{},"coverage.html":{}}}],["src/app/common/components/permission",{"_index":1172,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/directives/scroll",{"_index":1291,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["src/app/core/graphql/graphql.provider.ts",{"_index":1986,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/index.ts",{"_index":2121,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/models/getaccount.model.ts",{"_index":1062,"title":{},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["src/app/core/graphql/mutations/delete",{"_index":1008,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/mutations/update",{"_index":1475,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/account.gql.ts",{"_index":37,"title":{},"body":{"injectables/AccountGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/account.gql.ts:20",{"_index":48,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["src/app/core/graphql/queries/accounts",{"_index":320,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/upload",{"_index":1513,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts",{"_index":1871,"title":{},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts:63",{"_index":1873,"title":{},"body":{"injectables/UploadsGQL.html":{}}}],["src/app/core/guards/auth",{"_index":1990,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/http.interceptor.ts",{"_index":1995,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/pipes/iframe",{"_index":1081,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts",{"_index":1360,"title":{},"body":{"pipes/SexPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts:10",{"_index":1362,"title":{},"body":{"pipes/SexPipe.html":{}}}],["src/app/core/services/account.service.ts",{"_index":286,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts:18",{"_index":300,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:20",{"_index":297,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:33",{"_index":293,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:101",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:105",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:109",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:120",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:34",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:36",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:38",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:42",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:43",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:45",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:49",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:50",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:52",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:73",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:77",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:97",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/config.service.ts",{"_index":702,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/config.service.ts:11",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:12",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:14",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:15",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:16",{"_index":709,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:33",{"_index":711,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:38",{"_index":713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:42",{"_index":710,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/scroll.service.ts",{"_index":1350,"title":{},"body":{"injectables/ScrollService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/scroll.service.ts:14",{"_index":1354,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:19",{"_index":1358,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:25",{"_index":1353,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/upload.service.ts",{"_index":1840,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/core/services/upload.service.ts:21",{"_index":1849,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:23",{"_index":1848,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:47",{"_index":1843,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":735,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/events/events.component.ts",{"_index":1027,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/memories/memories.component.ts",{"_index":1119,"title":{},"body":{"components/MemoriesComponent.html":{},"coverage.html":{}}}],["src/app/profile/change",{"_index":629,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1185,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/profile/profile.component.ts:100",{"_index":1199,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:113",{"_index":1202,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:162",{"_index":1200,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:188",{"_index":1204,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:192",{"_index":1206,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:196",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:70",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:71",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:72",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:73",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:74",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:75",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:76",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:77",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:79",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:81",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:82",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:83",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:84",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:86",{"_index":1220,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:90",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:94",{"_index":1213,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/timelines/timelines.component.ts",{"_index":1471,"title":{},"body":{"components/TimelinesComponent.html":{},"coverage.html":{}}}],["src/app/uploads/upload",{"_index":1485,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["src/app/uploads/uploads.component.ts",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["src/envs/env.development.ts",{"_index":2009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.staging.ts",{"_index":2010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.ts",{"_index":2011,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/dtos/account.dtos.ts",{"_index":2122,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/auth.dtos.ts",{"_index":2120,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/upload.dtos.ts",{"_index":2124,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/enums/api.enum.ts",{"_index":2059,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/permission.enum.ts",{"_index":2076,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/role.enum.ts",{"_index":2081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/interfaces/account.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/authenticated",{"_index":626,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/env.interface.ts",{"_index":1017,"title":{},"body":{"interfaces/Env.html":{},"coverage.html":{}}}],["src/types/interfaces/error.interface.ts",{"_index":333,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["src/types/interfaces/route.interface.ts",{"_index":1290,"title":{},"body":{"interfaces/Route.html":{},"coverage.html":{}}}],["src/types/interfaces/sex.interface.ts",{"_index":2123,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/interfaces/ui.interface.ts",{"_index":1510,"title":{},"body":{"interfaces/UploadActionsParams.html":{},"coverage.html":{}}}],["src/types/interfaces/upload.interface.ts",{"_index":1058,"title":{},"body":{"interfaces/FileParams.html":{},"coverage.html":{}}}],["src/types/models/account.model.ts",{"_index":281,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"coverage.html":{}}}],["src/types/models/auth.model.ts",{"_index":483,"title":{},"body":{"interfaces/AuthModel.html":{},"coverage.html":{}}}],["src/types/models/upload.model.ts",{"_index":1753,"title":{},"body":{"interfaces/UploadModel.html":{},"coverage.html":{}}}],["src/utils/funcs.ts",{"_index":2013,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/sentry.ts",{"_index":2015,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/serialize.ts",{"_index":2017,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/validation.ts",{"_index":1879,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/utils/validation.ts:4",{"_index":1883,"title":{},"body":{"classes/Validation.html":{}}}],["staging",{"_index":1025,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":84,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["standard",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1343,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["started",{"_index":1897,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["state",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["statements",{"_index":1958,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1880,"title":{},"body":{"classes/Validation.html":{}}}],["status",{"_index":202,"title":{},"body":{"components/AccountInputComponent.html":{},"interfaces/ApiError.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GraphqlError.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":1402,"title":{},"body":{"components/SignInComponent.html":{}}}],["styleurl",{"_index":94,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["sub.unsubscribe",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subs",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe",{"_index":192,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["subscribe((res",{"_index":1690,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["subscription",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["success",{"_index":1271,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["sunt",{"_index":779,"title":{},"body":{"components/DashboardComponent.html":{}}}],["surname",{"_index":1431,"title":{},"body":{"components/SignUpComponent.html":{}}}],["suscipit",{"_index":870,"title":{},"body":{"components/DashboardComponent.html":{}}}],["switch",{"_index":535,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["switchmap",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["switchmap((res",{"_index":682,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["system",{"_index":1743,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["t",{"_index":2097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":2020,"title":{},"body":{"coverage.html":{},"dependencies.html":{}}}],["tablebars",{"_index":2036,"title":{},"body":{"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":165,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["takelast",{"_index":670,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takelast(1",{"_index":693,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takeuntildestroyed",{"_index":167,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["takeuntildestroyed(this.destroyref",{"_index":190,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["targetaccountid",{"_index":640,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["template",{"_index":64,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["templateref",{"_index":1782,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["templateurl",{"_index":92,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tempora",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tempore",{"_index":799,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibus",{"_index":899,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibuslaudantium",{"_index":983,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tenetur",{"_index":828,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.$$accountfilter",{"_index":188,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$$isme.pipe(takeuntildestroyed(this.destroyref)).subscribe",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$accounts().map((val",{"_index":148,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accounts.set(res.data.accounts",{"_index":198,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter",{"_index":184,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter.set(val.trim",{"_index":206,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$editable",{"_index":1616,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$edited",{"_index":1617,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$edited.set(true",{"_index":1657,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$extensions.set(data.uploadextensions",{"_index":1056,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.$isloading.asobservable",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isloading.next(true",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isme",{"_index":1212,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isme.set(params['username",{"_index":1210,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isnotfoundpage.set",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$loading",{"_index":1281,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$loading.set(false",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.$loading.set(loading",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$loading.set(true",{"_index":1692,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$menuisopen",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(!this.$menuisopen",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(false",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$profile",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().avatar",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().birthday",{"_index":1286,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().full_name",{"_index":1284,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().id",{"_index":1280,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().sex",{"_index":1289,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().username",{"_index":1285,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().vk_avatar",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set(this.auth.$user",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.update((profile",{"_index":1272,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query.set(params['username",{"_index":1209,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$upload",{"_index":1619,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.ext",{"_index":1715,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.file_name",{"_index":1707,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.id",{"_index":1697,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.owner",{"_index":1716,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.owner!.username",{"_index":1680,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.permissions",{"_index":1712,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.permissions.filter",{"_index":1710,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.permissions.includes",{"_index":1708,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()![name",{"_index":1705,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload.set(upload",{"_index":1662,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$user().avatar",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().id",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().roles.includes(role.administrator",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().vk_avatar",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set(initialauthenticateduser",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._actions().delete",{"_index":1507,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["this._actions().open",{"_index":1506,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["this._actions().save",{"_index":1508,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["this.account",{"_index":678,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.accountgql",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.accountinfogql.watch",{"_index":183,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery",{"_index":182,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery!.refetch",{"_index":193,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery.valuechanges",{"_index":194,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.alerts",{"_index":200,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.alerts.open",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["this.alerts.open(err",{"_index":696,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.auth",{"_index":458,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.$$isloading",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isauth",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.auth.$isloading.next(false",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isloading.next(true",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$user().id",{"_index":1078,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.auth.$user().username",{"_index":1211,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.$user.update((user",{"_index":1273,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.clear",{"_index":1116,"title":{},"body":{"components/MeComponent.html":{}}}],["this.auth.init().subscribe",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.set(data",{"_index":461,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.set(user",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.signout().subscribe",{"_index":1115,"title":{},"body":{"components/MeComponent.html":{}}}],["this.authenticatedroutes",{"_index":1153,"title":{},"body":{"components/NavComponent.html":{}}}],["this.avataralreadyexists",{"_index":674,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.callbackurl",{"_index":480,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.close.emit",{"_index":1112,"title":{},"body":{"components/MeComponent.html":{}}}],["this.config.$isrefusedpage",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$isrefusedpage.set(true",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$menuisopen",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.config.$menuisopen.set(false",{"_index":1152,"title":{},"body":{"components/NavComponent.html":{}}}],["this.config.closemenu",{"_index":1111,"title":{},"body":{"components/MeComponent.html":{}}}],["this.confirmform",{"_index":1446,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.reset",{"_index":1452,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.setvalue",{"_index":1470,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.value!.trim",{"_index":1451,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.context.completewith(res",{"_index":694,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.context.completewith(true",{"_index":691,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.control.setvalue(null",{"_index":676,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value",{"_index":692,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value!.name",{"_index":1576,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.currentstep",{"_index":1572,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.deleteupload",{"_index":1691,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.deleteuploadbyidgql",{"_index":1696,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.dialogs",{"_index":1113,"title":{},"body":{"components/MeComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.dialogs.open",{"_index":1276,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.disabled",{"_index":209,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(url",{"_index":1091,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["this.el.nativeelement.scrollheight",{"_index":1329,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.ext",{"_index":1829,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.fb.group",{"_index":520,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.fileform.controls['compress'].value",{"_index":1580,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].disable",{"_index":1566,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].setvalue",{"_index":1570,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].value",{"_index":1578,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].setvalue(selectedfile.name",{"_index":1569,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].valid",{"_index":1573,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value",{"_index":1577,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value!.trim().length",{"_index":1574,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['private'].value",{"_index":1581,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls[\\'ext\\'].value",{"_index":1586,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.form",{"_index":519,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls",{"_index":533,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls.birthday.touched",{"_index":1454,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.birthday.value!.toutcnativedate().toisostring",{"_index":1455,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.errors",{"_index":1449,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.touched",{"_index":1457,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.valid",{"_index":1458,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim",{"_index":1460,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim().length",{"_index":1459,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.login.errors",{"_index":1405,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.login.value!.trim",{"_index":1408,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.name.errors",{"_index":1447,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.touched",{"_index":1461,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.valid",{"_index":1462,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim",{"_index":1464,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim().length",{"_index":1463,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.errors",{"_index":1406,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.pass.reset",{"_index":1453,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.value!.trim",{"_index":1410,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.surname.errors",{"_index":1448,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.touched",{"_index":1465,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.valid",{"_index":1466,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim",{"_index":1468,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim().length",{"_index":1467,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls[control",{"_index":528,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls].errors",{"_index":531,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.valid",{"_index":525,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.getupdatedfields",{"_index":1682,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.handleclose.emit",{"_index":1836,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.handleuploadresult(res",{"_index":686,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.http.delete",{"_index":317,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.get(`${env.apiurl}${api.auth_me",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":315,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_refresh",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_in",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_out",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_up",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.upload",{"_index":1861,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.injector",{"_index":1278,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.isadmin",{"_index":1620,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.iseditable",{"_index":1811,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.isloading",{"_index":1748,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.isloading.asobservable",{"_index":443,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(false",{"_index":1411,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(true",{"_index":546,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.set(false",{"_index":690,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.isloading.set(true",{"_index":677,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.ismobile",{"_index":1833,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.isopen",{"_index":1825,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.me().pipe",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.me().pipe(map((val",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.name",{"_index":1835,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.onchange",{"_index":207,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.ondelete.emit(this.$upload()!.id",{"_index":1698,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.ontouched",{"_index":208,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.onupdate.emit",{"_index":1695,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.pdfviewers",{"_index":1831,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.placeholder",{"_index":210,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.previews",{"_index":1837,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.previewsub",{"_index":1827,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.previewsub.unsubscribe",{"_index":1828,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.refresh().pipe",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.route.params.pipe",{"_index":1207,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":456,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{}}}],["this.route.snapshot.queryparams['url",{"_index":481,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.events",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.router.navigate",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.router.navigate(['/404",{"_index":1269,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1117,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigate([`/${this.auth.$user().username",{"_index":1110,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigatebyurl(getcurrentpath(this.router",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl",{"_index":1832,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.scroll.next(true",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["this.serializerole(role",{"_index":1283,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.set(data",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.show(this.actions",{"_index":1826,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.showchangeavatardialog().subscribe((res",{"_index":1270,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.showconfirmform",{"_index":1450,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.showerror",{"_index":687,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.showprompt",{"_index":1689,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.showref",{"_index":1167,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.subs$.foreach((sub",{"_index":463,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push",{"_index":457,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open",{"_index":545,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open(error).subscribe",{"_index":544,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs.foreach((sub",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subs.push",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["this.targetaccountid",{"_index":672,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.title",{"_index":1166,"title":{},"body":{"components/NotFoundComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.title.settitle(profile!.full_name",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.token.next(payload.token",{"_index":518,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.updateupload(data",{"_index":1688,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.updateuploadbyidgql",{"_index":1693,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.upload",{"_index":1579,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.upload()!.created_at",{"_index":1750,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.ext",{"_index":1749,"title":{},"body":{"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.upload()!.file_name}.${this.upload()!.ext",{"_index":1808,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload()!.id",{"_index":1787,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload()!.name",{"_index":1797,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload()!.owner",{"_index":1734,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.avatar",{"_index":1735,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.avatar!.url",{"_index":1736,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.first_name",{"_index":1740,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.last_name",{"_index":1741,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.username",{"_index":1742,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.vk_avatar",{"_index":1737,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.url",{"_index":1813,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload.getfileparams(this.control.value",{"_index":1568,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadavatar",{"_index":685,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadavatar().subscribe",{"_index":689,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadbyidgql",{"_index":1658,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploaded.set(res",{"_index":1583,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadextensionsgql",{"_index":1052,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.uploadid",{"_index":1659,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['isprivate'].setvalue",{"_index":1667,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['issystem'].disable",{"_index":1652,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['issystem'].setvalue(upload.is_system",{"_index":1666,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['name'].setvalue(upload.name",{"_index":1663,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['originalname'].setvalue",{"_index":1664,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owner'].setvalue",{"_index":1669,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owner'].value",{"_index":1679,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owneravatar'].setvalue",{"_index":1674,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[\\'owner\\'].value",{"_index":1717,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[control].dirty",{"_index":1701,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[control].value",{"_index":1702,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.events",{"_index":1653,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.url",{"_index":1824,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.user.id",{"_index":1582,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.userid",{"_index":1623,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.vkidonetap.render",{"_index":1395,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap",{"_index":1394,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap.nativeelement",{"_index":1397,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.window",{"_index":1321,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.document.documentelement.scrollheight",{"_index":1325,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.innerheight",{"_index":1340,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.scrolly",{"_index":1335,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["threshold",{"_index":1296,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["throw",{"_index":688,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["throwerror",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["timelines",{"_index":1148,"title":{},"body":{"components/NavComponent.html":{},"components/TimelinesComponent.html":{},"miscellaneous/variables.html":{}}}],["timelines'},{'name",{"_index":262,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["timelines.component.html",{"_index":1472,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelines.component.scss",{"_index":1473,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelinescomponent",{"_index":261,"title":{"components/TimelinesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["tinkoff/ng",{"_index":668,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["title",{"_index":1141,"title":{},"body":{"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1584,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["togglemenustatus",{"_index":708,"title":{},"body":{"injectables/ConfigService.html":{}}}],["token",{"_index":493,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["toobservable",{"_index":168,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{}}}],["toobservable(this.$accountsfilter",{"_index":141,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["toobservable(this.$isauth",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["toobservable(this.$profile).pipe",{"_index":1214,"title":{},"body":{"components/ProfileComponent.html":{}}}],["toobservable(this.$state).pipe",{"_index":1355,"title":{},"body":{"injectables/ScrollService.html":{}}}],["top",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totam",{"_index":836,"title":{},"body":{"components/DashboardComponent.html":{}}}],["totamperferendis",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{}}}],["trace",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1154,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["transform",{"_index":1084,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(url",{"_index":1085,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["transform(value",{"_index":1361,"title":{},"body":{"pipes/SexPipe.html":{}}}],["transition(':enter",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(50",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":66,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["trigger('enterleave",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout200",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout500",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid200",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid500",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":78,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":1844,"title":{},"body":{"injectables/UploadService.html":{}}}],["tui_is_mobile",{"_index":1821,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tui_language",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tui_prompt",{"_index":1649,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["tui_sanitizer",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tuialertmodule",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["tuialertservice",{"_index":164,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuiavatarmodule",{"_index":1068,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuibuttonmodule",{"_index":1721,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuichipmodule",{"_index":1189,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuidatalistwrappermodule",{"_index":88,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuiday",{"_index":1442,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiday(2000",{"_index":1433,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuidialogcontext",{"_index":646,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tuidialogmodule",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["tuidialogservice",{"_index":1109,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuifilelike",{"_index":666,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["tuihintmodule",{"_index":634,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuihosteddropdownmodule",{"_index":1070,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuiiconairplaylarge",{"_index":1143,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconcalendarlarge",{"_index":1145,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconchartlinelarge",{"_index":1149,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconmessagecirclelarge",{"_index":1150,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiinputdatemodule",{"_index":1415,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiinputfilesmodule",{"_index":632,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["tuiinputinlinemodule",{"_index":1536,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuiinputtagmodule",{"_index":91,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuilineclampmodule",{"_index":1069,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuilinkmodule",{"_index":1538,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuiloadermodule",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuipdfviewermodule",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["tuipdfvieweroptions",{"_index":1819,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tuipdfviewerservice",{"_index":1820,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tuipreviewactionmodule",{"_index":1489,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["tuipreviewdialogservice",{"_index":1818,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tuipreviewmodule",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tuirootmodule",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiskeletonmodule",{"_index":1188,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuisteppermodule",{"_index":1535,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuisvgmodule",{"_index":633,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tuitabsmodule",{"_index":465,"title":{},"body":{"components/AuthComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":90,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuitogglemodule",{"_index":1537,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["type",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2105,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":530,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["ui",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["ui/addon",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["ui/cdk",{"_index":1443,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":166,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["ui/experimental",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["ui/icons",{"_index":2038,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":171,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":2039,"title":{},"body":{"dependencies.html":{}}}],["ui/styles",{"_index":2040,"title":{},"body":{"dependencies.html":{}}}],["ullam",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ullamsuscipit",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unde",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{}}}],["undefined",{"_index":1456,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["unknown",{"_index":310,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["untracked",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["untracked(this.auth.$user",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["up",{"_index":1414,"title":{},"body":{"components/SignUpComponent.html":{},"miscellaneous/enumerations.html":{}}}],["up'},{'name",{"_index":260,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["up.component",{"_index":479,"title":{},"body":{"components/AuthComponent.html":{}}}],["up.component.html",{"_index":1416,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":1417,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":1413,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:111",{"_index":1427,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:141",{"_index":1422,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:237",{"_index":1424,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:41",{"_index":1428,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:42",{"_index":1429,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:43",{"_index":1439,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:45",{"_index":1421,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:47",{"_index":1441,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:49",{"_index":1437,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:50",{"_index":1438,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:52",{"_index":1440,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:54",{"_index":1436,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:70",{"_index":1430,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:74",{"_index":1420,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:79",{"_index":1426,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":478,"title":{},"body":{"components/AuthComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["update",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":283,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["updatedfields",{"_index":1681,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updatedfields.foreach((val",{"_index":1685,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updatedfields.length",{"_index":1683,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updateupload",{"_index":1479,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{}}}],["updateupload(data",{"_index":1484,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["updateuploadbyid($data",{"_index":1482,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["updateuploadbyidgql",{"_index":1474,"title":{"injectables/UpdateUploadByIdGQL.html":{}},"body":{"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["updateuploadbyidquery",{"_index":1476,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateuploadbyidresponse",{"_index":1478,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["updateuploadbyidvariables",{"_index":1481,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["upload",{"_index":264,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["upload!.owner",{"_index":1621,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["upload!.owner!.avatar!.url",{"_index":1677,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload!.owner!.id",{"_index":1622,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["upload!.owner!.vk_avatar",{"_index":1678,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload($id",{"_index":1514,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload(where",{"_index":1515,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload.file_name",{"_index":1665,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner",{"_index":1670,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.avatar",{"_index":1675,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.avatar.url",{"_index":1676,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.first_name",{"_index":1671,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.last_name",{"_index":1672,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.username",{"_index":1673,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.permissions.includes(permission.owneronly",{"_index":1668,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadactions",{"_index":1505,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["uploadactionscomponent",{"_index":263,"title":{"components/UploadActionsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadactionsparams",{"_index":1504,"title":{"interfaces/UploadActionsParams.html":{}},"body":{"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["uploadavatar",{"_index":290,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["uploadavatar(dto",{"_index":295,"title":{},"body":{"injectables/AccountService.html":{}}}],["uploadavatardto",{"_index":296,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidgql",{"_index":1512,"title":{"injectables/UploadByIdGQL.html":{}},"body":{"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["uploadbyidqueryref",{"_index":1522,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidresponse",{"_index":1520,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidvariables",{"_index":1521,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploaded",{"_index":1543,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["uploadextensions",{"_index":1530,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions($size",{"_index":1524,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions(page",{"_index":1526,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensionsgql",{"_index":1034,"title":{"injectables/UploadExtensionsGQL.html":{}},"body":{"components/ExtensionInputComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{}}}],["uploadextensionsqueryref",{"_index":1532,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsresponse",{"_index":1529,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsvariables",{"_index":1531,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadfile",{"_index":1545,"title":{},"body":{"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["uploadfile(dto",{"_index":1846,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfilecomponent",{"_index":266,"title":{"components/UploadFileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadfiledto",{"_index":1847,"title":{},"body":{"injectables/UploadService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadid",{"_index":1595,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadinfo",{"_index":1651,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadinfocomponent",{"_index":268,"title":{"components/UploadInfoComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadinfoform",{"_index":1596,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadlistitem",{"_index":1747,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["uploadlistitemcomponent",{"_index":270,"title":{"components/UploadListItemComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadmodel",{"_index":284,"title":{"interfaces/UploadModel.html":{}},"body":{"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploadpreview",{"_index":1822,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["uploadpreviewcomponent",{"_index":273,"title":{"components/UploadPreviewComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploads",{"_index":276,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadsGQL.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["uploadscomponent",{"_index":275,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadservice",{"_index":1033,"title":{"injectables/UploadService.html":{}},"body":{"components/ExtensionInputComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsgql",{"_index":1870,"title":{"injectables/UploadsGQL.html":{}},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploadsquery",{"_index":1872,"title":{},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsqueryref",{"_index":1876,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsresponse",{"_index":1874,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsvariables",{"_index":1875,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadupdateinput",{"_index":1483,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":46,"title":{},"body":{"injectables/AccountGQL.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/NavComponent.html":{},"interfaces/Route.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["url.pipe.ts",{"_index":1082,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:11",{"_index":1086,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["useclass",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":79,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["usefactory",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadFileComponent.html":{}}}],["user.interface.ts",{"_index":627,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":1597,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["username",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["username.gql.ts",{"_index":321,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["username.gql.ts:24",{"_index":329,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["username}!`).subscribe",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ut",{"_index":878,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utconsequuntur",{"_index":974,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["val",{"_index":129,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/UploadInfoComponent.html":{}}}],["val![name",{"_index":1706,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["val.isend",{"_index":1356,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.posy",{"_index":1357,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.trim",{"_index":205,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.trim().length",{"_index":203,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.username",{"_index":149,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val[object.keys(val)[0",{"_index":1687,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["validation",{"_index":515,"title":{"classes/Validation.html":{}},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validation.match('pass",{"_index":524,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["validatorfn",{"_index":1885,"title":{},"body":{"classes/Validation.html":{}}}],["validators",{"_index":514,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.email",{"_index":1445,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators.maxlength(30",{"_index":523,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(2",{"_index":1444,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.minlength(4",{"_index":1393,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(8",{"_index":522,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.required",{"_index":521,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuechanges.pipe(takeuntildestroyed(this.destroyref",{"_index":1055,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{}}}],["valuechanges.subscribe",{"_index":1660,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["var",{"_index":215,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["variable",{"_index":1964,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2125,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":901,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velit",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velmagnam",{"_index":989,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veniam",{"_index":780,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veritatis",{"_index":781,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vero",{"_index":822,"title":{},"body":{"components/DashboardComponent.html":{}}}],["version",{"_index":1905,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["viewchild",{"_index":1392,"title":{},"body":{"components/SignInComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["viewchild('actions",{"_index":1783,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["viewchild('preview",{"_index":1801,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["viewchild('vkidsdkonetap",{"_index":1390,"title":{},"body":{"components/SignInComponent.html":{}}}],["visible",{"_index":1344,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["vitae",{"_index":849,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vk",{"_index":2072,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vk_avatar",{"_index":19,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["vk_id",{"_index":20,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"miscellaneous/variables.html":{}}}],["vk_id_exchange_token",{"_index":2071,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vkid",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["vkid.config.set",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["vkid.languages.rus",{"_index":1401,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.onetap",{"_index":1388,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.scheme.dark",{"_index":1399,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid/sdk",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{},"dependencies.html":{}}}],["vkidonetap",{"_index":1368,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkidsdkonetap",{"_index":1369,"title":{},"body":{"components/SignInComponent.html":{}}}],["void",{"_index":121,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/functions.html":{}}}],["voluptas",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptas,eligendi",{"_index":964,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptate",{"_index":825,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatem",{"_index":834,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptaterepellat",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptates",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatesitaque",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatibus",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatum",{"_index":795,"title":{},"body":{"components/DashboardComponent.html":{}}}],["watch",{"_index":1053,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["webp",{"_index":1794,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["whether",{"_index":1348,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["whole",{"_index":1323,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window",{"_index":1294,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window.location.reload",{"_index":1118,"title":{},"body":{"components/MeComponent.html":{}}}],["window:scroll",{"_index":1298,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent",{"_index":1295,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent(event",{"_index":1313,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["withcredentials",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlatestfrom(auth.$$isloading",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withviewtransitions",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflow",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":701,"title":{},"body":{"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/MemoriesComponent.html":{},"components/TimelinesComponent.html":{}}}],["works!lorem",{"_index":919,"title":{},"body":{"components/DashboardComponent.html":{}}}],["writablesignal",{"_index":143,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["writevalue",{"_index":113,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["x",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":1332,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["yes",{"_index":1714,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["yyyy",{"_index":1751,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["zone.js",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/account.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:         Sex | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sex | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sex } from '@interfaces'\nimport { Role } from '@enums'\n\nexport const initialAccount: Account = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n\nexport interface Account {\n  id: string | null\n  vk_id: string | null\n  username: string | null\n  email: string | null\n  roles: Role[]\n  avatar: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  full_name: string | null\n  birthday: Date | null\n  sex: Sex | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountGQL.html":{"url":"injectables/AccountGQL.html","title":"injectable - AccountGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/account.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/account.gql.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountModel } from '@models'\n\nexport type AccountResponse = {\n  account: AccountModel\n}\n\nexport type AccountVariables = {\n  username: string\n}\n\nexport type AccountQueryRef = QueryRef\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountGQL extends Query {\n  document = gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountInputComponent.html":{"url":"components/AccountInputComponent.html","title":"component - AccountInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/account-input/account-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: AccountInputComponent,\n}\n                                AccountsInfoByUsernameGQL\n                \n            \n\n\n            \n                selector\n                spomen-account-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            TuiDataListWrapperModule\n                            ReactiveFormsModule\n                            TuiTextfieldControllerModule\n                            TuiInputTagModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$accountFilter\n                            \n                            \n                                $accounts\n                            \n                            \n                                $accountsFilter\n                            \n                            \n                                $accountsList\n                            \n                            \n                                    Private\n                                accountInfoGQL\n                            \n                            \n                                    Private\n                                accountInfoQuery\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Аккаунт'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:67\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleChange\n                        \n                    \n                \n            \n            \n                \nhandleChange(val: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$accountFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$accountsFilter)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountsInfoByUsernameGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsInfoByUsernameQueryRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  computed,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Signal,\n  signal,\n  WritableSignal,\n} from '@angular/core'\n\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\n\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { debounceTime, distinctUntilChanged, Observable } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  AccountsInfoByUsernameGQL,\n  AccountsInfoByUsernameQueryRef,\n} from '@graphql'\nimport { AccountShortModel } from '@models'\n\n@Component({\n  selector: 'spomen-account-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    TuiDataListWrapperModule,\n    ReactiveFormsModule,\n    TuiTextfieldControllerModule,\n    TuiInputTagModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: AccountInputComponent,\n    },\n    AccountsInfoByUsernameGQL,\n  ],\n  templateUrl: './account-input.component.html',\n  styleUrl: './account-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'AccountInput' })\nexport class AccountInputComponent implements OnInit, ControlValueAccessor {\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  private accountInfoGQL = inject(AccountsInfoByUsernameGQL)\n\n  private accountInfoQuery: AccountsInfoByUsernameQueryRef | null = null\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() placeholder: string = 'Аккаунт'\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  $accounts: WritableSignal = signal([])\n\n  $accountsList: Signal = computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n\n  $accountsFilter: WritableSignal = signal('')\n  $$accountFilter: Observable = toObservable(this.$accountsFilter)\n\n  ngOnInit() {\n    this.accountInfoQuery = this.accountInfoGQL.watch(\n      {\n        username: this.$accountsFilter(),\n      },\n      { fetchPolicy: 'cache-and-network' }\n    )\n\n    this.$$accountFilter\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe(() => {\n        this.accountInfoQuery!.refetch({\n          username: this.$accountsFilter(),\n        })\n      })\n\n    this.accountInfoQuery.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.$accounts.set(res.data.accounts)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список аккаунтов', { status: 'error' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  handleChange(val: string) {\n    if (val.trim().length > 0 && val.trim() !== this.$accountsFilter()) {\n      this.$accountsFilter.set(val.trim())\n    }\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountModel.html":{"url":"interfaces/AccountModel.html","title":"interface - AccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         UploadModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:         Sex | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sex | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\nimport { Sex } from '@interfaces'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: Sex | null\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/account.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для работы с аккаунтами\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeAvatar\n                            \n                            \n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar(dto: RemoveAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RemoveAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \nuploadAvatar(dto: UploadAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\n\nimport { RemoveAvatarDto, UploadAvatarDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для работы с аккаунтами\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadAvatar(dto: UploadAvatarDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n\n    if (dto.id) body.append('id', dto.id)\n\n    return this.http.post(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}`,\n      body\n    )\n  }\n\n  removeAvatar(dto: RemoveAvatarDto) {\n    return this.http.delete(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}${dto.id ? `?id=${dto.id}` : ''}`\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountShortModel.html":{"url":"interfaces/AccountShortModel.html","title":"interface - AccountShortModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountShortModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\nimport { Sex } from '@interfaces'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: Sex | null\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsInfoByUsernameGQL.html":{"url":"injectables/AccountsInfoByUsernameGQL.html","title":"injectable - AccountsInfoByUsernameGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountsInfoByUsernameGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/accounts-info-by-username.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountShortModel } from '@models'\n\nexport type AccountsInfoByUsernameResponse = {\n  accounts: AccountShortModel[]\n}\n\nexport type AccountsInfoByUsernameVariables = {\n  username: string\n}\n\nexport type AccountsInfoByUsernameQueryRef = QueryRef\n\n@Injectable()\nexport class AccountsInfoByUsernameGQL extends Query {\n  document = gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ScrollNearEndDirective\n                \n            \n\n\n            \n                selector\n                spomen-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterOutlet\n                            TuiRootModule\n                            TuiDialogModule\n                            TuiAlertModule\n                            TuiPreviewModule\n                            TuiPdfViewerModule\n                            TuiLoaderModule\n                                HeaderComponent\n                                NavComponent\n                                OopsComponent\n                                MenuComponent\n                                ScrollNearEndDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scroll\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:70\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nearEnd\n                        \n                    \n                \n            \n            \n                \nnearEnd(posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScrollService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiRootModule,\n  TuiDialogModule,\n  TuiAlertModule,\n  TuiAlertService,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n  effect,\n  inject,\n  untracked,\n} from '@angular/core'\n\nimport { TuiPreviewModule } from '@taiga-ui/addon-preview'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Router, RouterOutlet } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\nimport { Subscription } from 'rxjs'\nimport * as VKID from '@vkid/sdk'\n\nimport { env } from '@env'\n\nimport { AuthService, ConfigService, ScrollService } from '@services'\nimport { inOutAnimation200, inOutAnimation500 } from '@animations'\nimport { ScrollNearEndDirective } from '@directives'\nimport { TuiPdfViewerModule } from '@taiga-ui/kit'\nimport { getCurrentPath } from '@utils'\n\nimport { HeaderComponent } from '@components/header'\nimport { OopsComponent } from '@components/oops'\nimport { MenuComponent } from '@components/menu'\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    TuiRootModule,\n    TuiDialogModule,\n    TuiAlertModule,\n    TuiPreviewModule,\n    TuiPdfViewerModule,\n    TuiLoaderModule,\n    HeaderComponent,\n    NavComponent,\n    OopsComponent,\n    MenuComponent,\n    ScrollNearEndDirective,\n  ],\n  animations: [inOutAnimation200, inOutAnimation500],\n  providers: [ScrollNearEndDirective],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\n@Sentry.TraceClass({ name: 'App' })\nexport class AppComponent implements OnInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private scroll = inject(ScrollService)\n  private router = inject(Router)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  private subs: Subscription[] = []\n\n  constructor() {\n    effect(() => {\n      if (this.auth.$isAuth()) {\n        const { first_name, username } = untracked(this.auth.$user)\n\n        this.subs.push(\n          this.alerts.open(`Привет, ${first_name || username}!`).subscribe()\n        )\n\n        if (getCurrentPath(this.router).includes('/auth')) {\n          this.router.navigate(['/'])\n        }\n      }\n    }, {})\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnInit' })\n  ngOnInit(): void {\n    VKID.Config.set({\n      app: env.appId,\n      redirectUrl: env.redirectUrl,\n      state: 'dj29fnsadjsd82f249k293c139j1kd3',\n    })\n\n    this.auth.$isLoading.next(true)\n\n    this.subs.push(\n      this.auth.init().subscribe({\n        next: (user) => {\n          this.auth.set(user)\n          this.auth.$isLoading.next(false)\n        },\n        error: (err: HttpErrorResponse) => {\n          if (err.status === 0) {\n            this.config.$isRefusedPage.set(true)\n            this.auth.$isLoading.next(false)\n            return\n          }\n\n          this.auth.$isLoading.next(false)\n\n          this.router.navigateByUrl(getCurrentPath(this.router))\n        },\n      })\n    )\n  }\n\n  nearEnd(posY: number) {\n    this.scroll.next(true, posY)\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n  @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {\n    \n  } @else if (!this.config.$isRefusedPage()) {\n    @if (this.auth.$isAuth()) {\n      \n        \n        \n          \n        \n      \n    } @else {\n      \n    }\n\n    @if (this.config.$menuIsOpen()) {\n      \n    }\n  }\n\n  @if (this.config.$isRefusedPage()) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {      } @else if (!this.config.$isRefusedPage()) {    @if (this.auth.$isAuth()) {                                                  } @else {          }    @if (this.config.$menuIsOpen()) {          }  }  @if (this.config.$isRefusedPage()) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthCallbackComponent.html":{"url":"components/AuthCallbackComponent.html","title":"component - AuthCallbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthCallbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/callback/auth-callback.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-callback\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiLoaderModule\n                                AuthPassComponent\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-callback.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-callback.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { TuiLoaderModule } from '@taiga-ui/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthPassComponent } from '@app/auth/pass/auth-pass.component'\n\nimport { getQueryPayload } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-auth-callback',\n  standalone: true,\n  imports: [CommonModule, TuiLoaderModule, AuthPassComponent, TuiLoaderModule],\n  templateUrl: './auth-callback.component.html',\n  styleUrl: './auth-callback.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthCallback' })\nexport class AuthCallbackComponent implements OnInit, OnDestroy {\n  private route = inject(ActivatedRoute)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(true)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.subs$.push(\n      this.auth\n        .signInVK({\n          ...payload,\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n            this.router.navigate(['/'])\n          },\n          error: (err) => {\n            this.router.navigate(['/'])\n            console.log(err)\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        @if (isLoading$$ | async) {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (isLoading$$ | async) {  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthCallbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiTabsModule\n                                SignInComponent\n                                SignUpComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemIndex\n                            \n                            \n                                callbackUrl\n                            \n                            \n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Auth.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/auth.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        callbackUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { TuiTabsModule } from '@taiga-ui/kit'\nimport * as Sentry from '@sentry/angular'\n\nimport { enterLeaveAnimation } from '@animations'\n\nimport { SignInComponent } from './sign-in/sign-in.component'\nimport { SignUpComponent } from './sign-up/sign-up.component'\n\n@Component({\n  selector: 'spomen-auth',\n  standalone: true,\n  imports: [TuiTabsModule, SignInComponent, SignUpComponent],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n  animations: [enterLeaveAnimation],\n})\n@Sentry.TraceClass({ name: 'Auth' })\nexport class AuthComponent implements OnInit {\n  route = inject(ActivatedRoute)\n\n  activeItemIndex: number = 0\n  callbackUrl: string | null = null\n\n  @Sentry.TraceMethod({ name: 'Auth.ngOnInit' })\n  ngOnInit(): void {\n    this.callbackUrl = this.route.snapshot.queryParams['url'] ?? null\n  }\n}\n\n    \n\n    \n        \n  Вход\n  Регистрация\n\n\n  @if (activeItemIndex === 0) {\n    \n  }\n  @if (activeItemIndex === 1) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Вход  Регистрация  @if (activeItemIndex === 0) {      }  @if (activeItemIndex === 1) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthModel.html":{"url":"interfaces/AuthModel.html","title":"interface - AuthModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/auth.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AccountModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from './account.model'\n\nexport interface AuthModel extends AccountModel {\n  access_token: string\n  refresh_token: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthPassComponent.html":{"url":"components/AuthPassComponent.html","title":"component - AuthPassComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthPassComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pass/auth-pass.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-pass\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-pass.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-pass.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pass/auth-pass.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { getQueryPayload, Validation } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\n\n@Component({\n  selector: 'spomen-auth-pass',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './auth-pass.component.html',\n  styleUrl: './auth-pass.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthPass' })\nexport class AuthPassComponent implements OnInit, OnDestroy {\n  private token: BehaviorSubject = new BehaviorSubject('')\n  private route = inject(ActivatedRoute)\n  private alerts = inject(TuiAlertService)\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    confirmPass: FormControl\n  }> = new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.token.next(payload.token)\n\n    this.form = this.fb.group(\n      {\n        pass: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(30),\n          ],\n        ],\n        confirmPass: ['', [Validators.required]],\n      },\n      {\n        validators: [Validation.match('pass', 'confirmPass')],\n      }\n    )\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      Object.keys(this.form.controls).forEach((control) => {\n        if (\n          this.form.controls[control as keyof typeof this.form.controls].errors\n        ) {\n          Object.keys(\n            this.form.controls[control as keyof typeof this.form.controls]\n              .errors!\n          ).forEach((error) => {\n            switch (error) {\n              case 'required': {\n                errors.push('Пароль обязателен')\n                break\n              }\n\n              case 'minlength': {\n                errors.push('Пароль должен быть не менее 8 символов')\n                break\n              }\n\n              case 'match': {\n                errors.push('Пароли должны быть одинаковы')\n                break\n              }\n\n              default: {\n                errors.push('Проверьте правильность полей')\n              }\n            }\n          })\n        }\n      })\n\n      new Set(errors).forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.subs$.push(this.alerts.open('Запрос на сервер...').subscribe())\n    this.isLoading.next(true)\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  Придумайте пароль\n  \n  \n  \n    \n      Продолжить\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Придумайте пароль                Продолжить      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthPassComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isAuth\n                            \n                            \n                                $$isLoading\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isAdmin\n                            \n                            \n                                $isAuth\n                            \n                            \n                                $isLoading\n                            \n                            \n                                $user\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                init\n                            \n                            \n                                me\n                            \n                            \n                                refresh\n                            \n                            \n                                set\n                            \n                            \n                                signIn\n                            \n                            \n                                signInVK\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(data: AuthModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AuthModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(dto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInVK\n                        \n                    \n                \n            \n            \n                \nsignInVK(dto: AuthCallbackDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            AuthCallbackDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(dto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$isAuth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.$isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() => !!this.$user().id)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAuthenticatedUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Signal,\n  WritableSignal,\n  computed,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  BehaviorSubject,\n  Observable,\n  catchError,\n  map,\n  switchMap,\n  throwError,\n} from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { toObservable } from '@angular/core/rxjs-interop'\n\nimport { AuthenticatedUser, initialAuthenticatedUser } from '@interfaces'\nimport { AuthCallbackDto, SignUpDto, SignInDto } from '@dtos'\nimport { AuthModel } from '@models'\n\nimport { API, Role } from '@enums'\n\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private http: HttpClient = inject(HttpClient)\n\n  $user: WritableSignal = signal(initialAuthenticatedUser)\n\n  $avatar: Signal = computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n\n  $isAuth: Signal = computed(() => !!this.$user().id)\n  $$isAuth: Observable = toObservable(this.$isAuth)\n\n  $isAdmin: Signal = computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n\n  $isLoading: BehaviorSubject = new BehaviorSubject(false)\n  $$isLoading: Observable = this.$isLoading.asObservable()\n\n  set(data: AuthModel) {\n    this.$user.set({\n      id: data.id,\n      username: data.username,\n      birthday: data.birthday,\n      sex: data.sex,\n      token: data.access_token,\n      roles: data.roles.sort((a, b) => a.localeCompare(b)),\n      vk_id: data.vk_id || null,\n      avatar: data.avatar ? data.avatar.url : null,\n      vk_avatar: data.vk_avatar || null,\n      email: data.email || null,\n      first_name: data.first_name || null,\n      last_name: data.last_name || null,\n      full_name:\n        data.first_name && data.last_name\n          ? `${data.first_name.trim()} ${data.last_name.trim()}`\n          : null,\n    })\n  }\n\n  clear() {\n    this.$user.set(initialAuthenticatedUser)\n  }\n\n  init(): Observable {\n    this.$isLoading.next(true)\n\n    return this.me().pipe(\n      map((data) => {\n        this.set(data)\n        return data\n      }),\n      catchError((err: HttpErrorResponse) => {\n        if (err.status === 401) {\n          return this.refresh().pipe(\n            switchMap(() => this.me().pipe(map((val) => val)))\n          )\n        }\n\n        return throwError(() => err)\n      })\n    )\n  }\n\n  signIn(dto: SignInDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_IN}`, dto)\n  }\n\n  signUp(dto: SignUpDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_UP}`, dto)\n  }\n\n  signOut(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_OUT}`, {})\n  }\n\n  signInVK(dto: AuthCallbackDto): Observable {\n    return this.http.post(\n      `${env.apiUrl}${API.VK_ID_EXCHANGE_TOKEN}`,\n      dto\n    )\n  }\n\n  me(): Observable {\n    return this.http.get(`${env.apiUrl}${API.AUTH_ME}`)\n  }\n\n  refresh(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_REFRESH}`, {})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticatedUser.html":{"url":"interfaces/AuthenticatedUser.html","title":"interface - AuthenticatedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticatedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/authenticated-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Account\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from './account.interface'\n\nexport const initialAuthenticatedUser: AuthenticatedUser = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n\nexport interface AuthenticatedUser extends Account {\n  token: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeAvatarComponent.html":{"url":"components/ChangeAvatarComponent.html","title":"component - ChangeAvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangeAvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/change-avatar/change-avatar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-change-avatar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiSvgModule\n                            TuiHintModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-avatar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./change-avatar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                account\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                avatarAlreadyExists\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                targetAccountId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    Private\n                                handleUploadResult\n                            \n                            \n                                removeAvatar\n                            \n                            \n                                removeFile\n                            \n                            \n                                    Private\n                                showError\n                            \n                            \n                                    Private\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(context: TuiDialogContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    TuiDialogContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleUploadResult\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUploadResult(res: UploadModel | Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            UploadModel | Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(err: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarAlreadyExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        targetAccountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Inject,\n  WritableSignal,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogContext,\n  TuiHintModule,\n  TuiLoaderModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { TuiFileLike, TuiInputFilesModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus'\nimport { catchError, of, switchMap, takeLast } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AccountService } from '@services'\n\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-change-avatar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiSvgModule,\n    TuiHintModule,\n  ],\n  templateUrl: './change-avatar.component.html',\n  styleUrl: './change-avatar.component.scss',\n})\n@Sentry.TraceClass({ name: 'ChangeAvatar' })\nexport class ChangeAvatarComponent {\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private account = inject(AccountService)\n\n  constructor(\n    @Inject(POLYMORPHEUS_CONTEXT)\n    private readonly context: TuiDialogContext\n  ) {\n    this.targetAccountId = context.data.accountId\n    this.avatarAlreadyExists = context.data.avatarAlreadyExists\n  }\n\n  readonly control = new FormControl(null)\n\n  isLoading: WritableSignal = signal(false)\n\n  private targetAccountId: string\n  avatarAlreadyExists: boolean\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  changeAvatar() {\n    this.isLoading.set(true)\n\n    if (this.avatarAlreadyExists) {\n      this.account\n        .removeAvatar({\n          id: this.targetAccountId,\n        })\n        .pipe(\n          takeUntilDestroyed(this.destroyRef),\n          catchError((res) => {\n            return of(new Error(res.error))\n          }),\n          switchMap((res) =>\n            res instanceof Error ? of(res) : this.uploadAvatar()\n          )\n        )\n        .subscribe({\n          next: (res) => this.handleUploadResult(res),\n          error: (err) => {\n            this.showError('Возникла проблема. Попробуйте позже')\n            throw err\n          },\n        })\n    } else {\n      this.uploadAvatar().subscribe({\n        next: (res) => this.handleUploadResult(res as UploadModel),\n        error: (err) => {\n          this.showError('Возникла проблема. Попробуйте позже')\n          throw err\n        },\n      })\n    }\n  }\n\n  removeAvatar() {\n    this.isLoading.set(true)\n\n    this.account\n      .removeAvatar({\n        id: this.targetAccountId,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (data) => {\n          this.isLoading.set(false)\n          this.context.completeWith(true)\n        },\n        error: (err) => {\n          this.showError('Возникла проблема. Попробуйте позже')\n        },\n      })\n  }\n\n  private uploadAvatar() {\n    return this.account\n      .uploadAvatar({\n        file: this.control.value!,\n        id: this.targetAccountId,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef), takeLast(1))\n  }\n\n  private handleUploadResult(res: UploadModel | Error) {\n    if (res instanceof Error) {\n      this.showError('Возникла проблема. Попробуйте позже')\n      throw res\n    }\n\n    this.isLoading.set(false)\n\n    this.context.completeWith(res ? res.url : null)\n  }\n\n  private showError(err: string) {\n    this.isLoading.set(false)\n\n    this.alerts.open(err, { status: 'error' }).subscribe()\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      Обновить аватар\n    \n\n    @if (avatarAlreadyExists) {\n      \n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Обновить аватар        @if (avatarAlreadyExists) {                        }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangeAvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatsComponent.html":{"url":"components/ChatsComponent.html","title":"component - ChatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chats/chats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-chats\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./chats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-chats',\n  standalone: true,\n  imports: [],\n  templateUrl: './chats.component.html',\n  styleUrl: './chats.component.scss',\n})\n@Sentry.TraceClass({ name: 'Chats' })\nexport class ChatsComponent {}\n\n    \n\n    \n        chats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'chats works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $isNotFoundPage\n                            \n                            \n                                $isRefusedPage\n                            \n                            \n                                $menuIsOpen\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                    Async\n                                loadConfig\n                            \n                            \n                                toggleMenuStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/config.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenuStatus\n                        \n                    \n                \n            \n            \n                \ntoggleMenuStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $isNotFoundPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isRefusedPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $menuIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, WritableSignal, inject, signal } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { filter, firstValueFrom, map } from 'rxjs'\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private router = inject(Router)\n  private http = inject(HttpClient)\n\n  $isNotFoundPage: WritableSignal = signal(false)\n  $isRefusedPage: WritableSignal = signal(false)\n  $menuIsOpen: WritableSignal = signal(false)\n\n  constructor() {\n    this.router.events\n      .pipe(\n        filter((val) => val instanceof NavigationEnd),\n        map((a: any) => {\n          if (a.url && a.urlAfterRedirects) {\n            this.$isNotFoundPage.set(\n              a.url.includes('/404') || a.urlAfterRedirects.includes('/404')\n            )\n          }\n        })\n      )\n      .subscribe()\n  }\n\n  async loadConfig(): Promise {\n    const config = await firstValueFrom(this.http.get('/assets/config.json'))\n    Object.assign(env, config)\n  }\n\n  toggleMenuStatus() {\n    this.$menuIsOpen.set(!this.$menuIsOpen())\n  }\n\n  closeMenu() {\n    if (this.$menuIsOpen()) {\n      this.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-dashboard',\n  standalone: true,\n  imports: [],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\n@Sentry.TraceClass({ name: 'Dashboard' })\nexport class DashboardComponent {}\n\n    \n\n    \n        dashboard works!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,\nratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequatur\nmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!\nSoluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atque\neaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quis\nvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sed\nminima voluptatum adipisci sapiente officiis natus tempore itaque, nihil\npossimus nemo deserunt atque provident et in eius repellat facere magni culpa\nconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, aut\nquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisi\nvero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quam\nobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enim\ndeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepe\ntotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, odit\naspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totam\nperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptate\nrepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiis\nlaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,\nimpedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!\nAspernatur, dolor inventore quae doloremque accusantium quos odit nostrum\nbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantium\nquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentium\nnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animi\ncommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,\nnemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat amet\nimpedit iure modi rem unde sit officia! Voluptate veritatis optio quam\nrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihil\nconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,\noptio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illum\nobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctio\naliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sit\ncumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,\nest nemo ex recusandae, accusamus nostrum dolorum at, totam qui esse\nperspiciatis labore autem minima! Error veniam soluta corporis ad voluptates\nitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihil\ndicta quos consequuntur similique doloremque provident voluptate at iste itaque\nbeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facere\nquae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestias\net consectetur cum iusto modi, sit reprehenderit dicta temporibus deleniti\nquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullam\nsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architecto\nnesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiat\nfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendis\nnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditate\nquasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,\neligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odio\nat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernatur\nquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventore\nillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiis\npariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdam\nperferendis ratione cum, minus molestiae reprehenderit autem architecto deserunt\naut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,\nmolestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,\nvoluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditate\nreiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus ut\nconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe soluta\nquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatis\nlibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,\nfugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecati\nnostrum, laudantium maiores repudiandae aspernatur perferendis libero sequi\nrepellat corporis expedita temporibus explicabo quae placeat odit molestiae\ndolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisi\neaque impedit officia consequatur deserunt incidunt, inventore corrupti sit\naliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibus\nlaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquid\npraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitia\naliquam nihil similique voluptate iure tenetur at velit nulla officia corporis\ndicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequuntur\ncommodi numquam, totam corporis recusandae maiores tempore aperiam distinctio\nvoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro vel\nmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquam\nnihil laudantium quibusdam, nulla, possimus asperiores quas delectus\nconsequuntur dolores alias, odit amet odio? Perferendis tenetur deleniti\npariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsa\nneque est odit, vel voluptates repellendus quod suscipit minima, accusamus\nreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborum\ncupiditate officiis sint unde nihil! Rerum enim laudantium esse possimus\naliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odio\nmaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam qui\nreprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquam\nearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnis\nrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iusto\narchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribus\nut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaque\nlaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque soluta\ndeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illum\ndeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sit\nincidunt, aperiam quia omnis! Sequi, aliquam eligendi!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,ratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequaturmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!Soluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atqueeaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quisvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sedminima voluptatum adipisci sapiente officiis natus tempore itaque, nihilpossimus nemo deserunt atque provident et in eius repellat facere magni culpaconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, autquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisivero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quamobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enimdeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepetotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, oditaspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totamperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptaterepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiislaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,impedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!Aspernatur, dolor inventore quae doloremque accusantium quos odit nostrumbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantiumquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentiumnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animicommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,nemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat ametimpedit iure modi rem unde sit officia! Voluptate veritatis optio quamrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihilconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,optio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illumobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctioaliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sitcumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,est nemo ex recusandae, accusamus nostrum dolorum at, totam qui esseperspiciatis labore autem minima! Error veniam soluta corporis ad voluptatesitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihildicta quos consequuntur similique doloremque provident voluptate at iste itaquebeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facerequae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestiaset consectetur cum iusto modi, sit reprehenderit dicta temporibus delenitiquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullamsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architectonesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiatfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendisnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditatequasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,eligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odioat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernaturquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventoreillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiispariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdamperferendis ratione cum, minus molestiae reprehenderit autem architecto deseruntaut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,molestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,voluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditatereiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus utconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe solutaquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatislibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,fugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecatinostrum, laudantium maiores repudiandae aspernatur perferendis libero sequirepellat corporis expedita temporibus explicabo quae placeat odit molestiaedolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisieaque impedit officia consequatur deserunt incidunt, inventore corrupti sitaliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibuslaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquidpraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitiaaliquam nihil similique voluptate iure tenetur at velit nulla officia corporisdicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequunturcommodi numquam, totam corporis recusandae maiores tempore aperiam distinctiovoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro velmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquamnihil laudantium quibusdam, nulla, possimus asperiores quas delectusconsequuntur dolores alias, odit amet odio? Perferendis tenetur delenitipariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsaneque est odit, vel voluptates repellendus quod suscipit minima, accusamusreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborumcupiditate officiis sint unde nihil! Rerum enim laudantium esse possimusaliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odiomaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam quireprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquamearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnisrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iustoarchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribusut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaquelaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque solutadeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illumdeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sitincidunt, aperiam quia omnis! Sequi, aliquam eligendi!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUploadByIdGQL.html":{"url":"injectables/DeleteUploadByIdGQL.html","title":"injectable - DeleteUploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Mutation\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DeleteUploadByIdQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/mutations/delete-upload-by-id.gql.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Mutation } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nexport type DeleteUploadByIdResponse = {\n  id: string\n}\n\nexport type DeleteUploadByIdVariables = {\n  id: string\n}\n\nexport const DeleteUploadByIdQuery = gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n\n@Injectable()\nexport class DeleteUploadByIdGQL extends Mutation {\n  document = DeleteUploadByIdQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Env.html":{"url":"interfaces/Env.html","title":"interface - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Env\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/env.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiUrl\n                                        \n                                \n                                \n                                        \n                                            appId\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            origin\n                                        \n                                \n                                \n                                        \n                                            redirectUrl\n                                        \n                                \n                                \n                                        \n                                            sentryDsn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        origin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sentryDsn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sentryDsn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Env {\n  environment: 'local' | 'dev' | 'staging' | 'production'\n  appId: number\n  redirectUrl: string\n  apiUrl: string\n  origin: string\n  sentryDsn: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-events\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n            \n                styleUrl\n                ./events.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n@Component({\n  selector: 'spomen-events',\n  standalone: true,\n  imports: [],\n  templateUrl: './events.component.html',\n  styleUrl: './events.component.scss',\n})\n@Sentry.TraceClass({ name: 'Events' })\nexport class EventsComponent {}\n\n    \n\n    \n        events works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'events works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtensionInputComponent.html":{"url":"components/ExtensionInputComponent.html","title":"component - ExtensionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtensionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/extension-input/extension-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: ExtensionInputComponent,\n}\n                                UploadService\n                                UploadExtensionsGQL\n                \n            \n\n\n            \n                selector\n                spomen-extension-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiDataListWrapperModule\n                            TuiTextfieldControllerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./extension-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./extension-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Private\n                                uploadExtensionsGQL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                $extensions\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Тип'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        $extensions\n                    \n                \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:67\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadExtensionsGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadExtensionsGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Output,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadExtensionsGQL } from '@graphql'\nimport { UploadService } from '@services'\n\n@Component({\n  selector: 'spomen-extension-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiDataListWrapperModule,\n    TuiTextfieldControllerModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: ExtensionInputComponent,\n    },\n    UploadService,\n    UploadExtensionsGQL,\n  ],\n  templateUrl: './extension-input.component.html',\n  styleUrl: './extension-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'ExtensionInput' })\nexport class ExtensionInputComponent implements OnInit, ControlValueAccessor {\n  private uploadExtensionsGQL = inject(UploadExtensionsGQL)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Тип'\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  @Output() $extensions: WritableSignal = signal([])\n\n  ngOnInit() {\n    this.uploadExtensionsGQL\n      .watch({\n        size: 20,\n        page: 1,\n      })\n      .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: ({ data }) => {\n          this.$extensions.set(data.uploadExtensions)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список расширений', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExtensionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileParams.html":{"url":"interfaces/FileParams.html","title":"interface - FileParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/upload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileParams {\n  name: string\n  ext: string\n  mime?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAccountModel.html":{"url":"interfaces/GetAccountModel.html","title":"interface - GetAccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/models/getAccount.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '@enums'\n\nexport interface GetAccountModel {\n  account: {\n    id: string\n    username: string\n    email: string | null\n    roles: Role[]\n    avatar: {\n      url: string\n    } | null\n    vk_id: string | null\n    vk_avatar: string | null\n    first_name: string | null\n    last_name: string | null\n    birthday: Date | null\n    sex: '0' | '1' | '2' | null\n    created_at: Date\n    updated_at: Date\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphqlError.html":{"url":"interfaces/GraphqlError.html","title":"interface - GraphqlError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphqlError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiHostedDropdownModule\n                                MeComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                isOpenProfileDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpenProfileDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiHostedDropdownModule, TuiSvgModule } from '@taiga-ui/core'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { Component, inject } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\n\nimport { MeComponent } from '@components/me'\n\n@Component({\n  selector: 'spomen-header',\n  standalone: true,\n  imports: [\n    RouterModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiHostedDropdownModule,\n    MeComponent,\n  ],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\n@Sentry.TraceClass({ name: 'Header' })\nexport class HeaderComponent {\n  auth = inject(AuthService)\n  config = inject(ConfigService)\n\n  isOpenProfileDropdown = false\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n    \n  \n  \n    \n      \n    \n  \n  \n    @if (this.auth.$user().id) {\n      \n        \n\n        \n        \n      \n    } @else {\n      Войти\n    }\n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      @if (this.auth.$user().id) {                                        } @else {      Войти    }          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IFrameUrlPipe.html":{"url":"pipes/IFrameUrlPipe.html","title":"pipe - IFrameUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IFrameUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/iframe-url.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        iframeUrl\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(url: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/iframe-url.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DomSanitizer } from '@angular/platform-browser'\nimport { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'iframeUrl',\n  standalone: true,\n})\nexport class IFrameUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  transform(url: string | null): any {\n    return url ? this.domSanitizer.bypassSecurityTrustResourceUrl(url) : null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeComponent.html":{"url":"components/MeComponent.html","title":"component - MeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/me/me.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-me\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./me.component.html\n            \n\n\n\n            \n                styleUrl\n                ./me.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                destroyRef\n                            \n                            \n                                dialogs\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMe\n                            \n                            \n                                handleSignOut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/me/me.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMe\n                        \n                    \n                \n            \n            \n                \nhandleMe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  EventEmitter,\n  Output,\n  inject,\n} from '@angular/core'\n\nimport { TuiDialogService, TuiSvgModule } from '@taiga-ui/core'\nimport { AuthService, ConfigService } from '@services'\nimport * as Sentry from '@sentry/angular'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'spomen-me',\n  standalone: true,\n  imports: [TuiSvgModule],\n  templateUrl: './me.component.html',\n  styleUrl: './me.component.scss',\n})\n@Sentry.TraceClass({ name: 'Me' })\nexport class MeComponent {\n  dialogs = inject(TuiDialogService)\n  destroyRef = inject(DestroyRef)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n  router = inject(Router)\n\n  @Output() close = new EventEmitter()\n\n  handleMe() {\n    this.router.navigate([`/${this.auth.$user().username}`])\n    this.config.closeMenu()\n    this.close.emit()\n  }\n\n  handleSignOut() {\n    this.dialogs\n      .open('Выйти из воспоминаний?', {\n        size: 's',\n        required: true,\n      })\n      .subscribe({\n        error: () => {},\n        complete: () =>\n          this.auth.signOut().subscribe({\n            next: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n            },\n            error: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n              window.location.reload()\n            },\n          }),\n      })\n  }\n}\n\n    \n\n    \n        \n  Профиль\n  \n\n\n  Выйти\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Профиль    Выйти  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemoriesComponent.html":{"url":"components/MemoriesComponent.html","title":"component - MemoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/memories/memories.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-memories\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./memories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./memories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-memories',\n  standalone: true,\n  imports: [],\n  templateUrl: './memories.component.html',\n  styleUrl: './memories.component.scss',\n})\n@Sentry.TraceClass({ name: 'Memories' })\nexport class MemoriesComponent {}\n\n    \n\n    \n        memories works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'memories works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/menu/menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-menu',\n  standalone: true,\n  imports: [NavComponent],\n  templateUrl: './menu.component.html',\n  styleUrl: './menu.component.scss',\n})\n@Sentry.TraceClass({ name: 'Menu' })\nexport class MenuComponent {}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/nav/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-nav\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterLink\n                                RouterLinkActive\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n            \n                styleUrl\n                ./nav.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                authenticatedRoutes\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fixed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fixed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/nav/nav.component.ts:57\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/nav/nav.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticatedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : protectedRoutes\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { RouterLink, RouterLinkActive } from '@angular/router'\nimport { Component, Input, inject } from '@angular/core'\nimport { TuiSvgModule } from '@taiga-ui/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\nimport { Route } from '@interfaces'\n\nconst protectedRoutes: Route[] = [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n\n@Component({\n  selector: 'spomen-nav',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive, TuiSvgModule],\n  templateUrl: './nav.component.html',\n  styleUrl: './nav.component.scss',\n})\n@Sentry.TraceClass({ name: 'Nav' })\nexport class NavComponent {\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  @Input() fixed: boolean = false\n\n  authenticatedRoutes = protectedRoutes\n\n  closeMenu() {\n    if (this.config.$menuIsOpen()) {\n      this.config.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n    \n        \n  @if (this.auth.$isAuth()) {\n    @for (route of this.authenticatedRoutes; track route) {\n      \n        \n        {{ route.title }}\n      \n    }\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (this.auth.$isAuth()) {    @for (route of this.authenticatedRoutes; track route) {                      {{ route.title }}          }  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showRef\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showRef\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Такой страницы не существует'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { RouterModule } from '@angular/router'\nimport { Component, Input } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-not-found',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss',\n})\n@Sentry.TraceClass({ name: 'NotFound' })\nexport class NotFoundComponent {\n  @Input() title: string = 'Такой страницы не существует'\n  @Input() showRef: boolean = true\n}\n\n    \n\n    \n        {{ this.title }}\n\n@if (this.showRef) {\n  На главную\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ this.title }}@if (this.showRef) {  На главную}'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OopsComponent.html":{"url":"components/OopsComponent.html","title":"component - OopsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OopsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/oops/oops.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-oops\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./oops.component.html\n            \n\n\n\n            \n                styleUrl\n                ./oops.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-oops',\n  standalone: true,\n  imports: [],\n  templateUrl: './oops.component.html',\n  styleUrl: './oops.component.scss',\n})\n@Sentry.TraceClass({ name: 'Oops' })\nexport class OopsComponent {}\n\n    \n\n    \n        \n  \n    У нас технические работы\n    Попробуйте вернуться позже\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      У нас технические работы    Попробуйте вернуться позже          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'OopsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermissionInputComponent.html":{"url":"components/PermissionInputComponent.html","title":"component - PermissionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PermissionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/permission-input/permission-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: PermissionInputComponent,\n}\n                \n            \n\n\n            \n                selector\n                spomen-permission-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiTextfieldControllerModule\n                            TuiDataListWrapperModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./permission-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./permission-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                permissions\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissions\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Права доступа'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { Component, Input } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-permission-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiTextfieldControllerModule,\n    TuiDataListWrapperModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: PermissionInputComponent,\n    },\n  ],\n  templateUrl: './permission-input.component.html',\n  styleUrl: './permission-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'PermissionInput' })\nexport class PermissionInputComponent implements ControlValueAccessor {\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Права доступа'\n  @Input() permissions: string[] = [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'PermissionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                spomen-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiAvatarModule\n                            TuiSkeletonModule\n                            TuiDialogModule\n                            TuiChipModule\n                            TuiLineClampModule\n                            TuiSvgModule\n                            TuiHintModule\n                                SexPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isMe\n                            \n                            \n                                $$roles\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isMe\n                            \n                            \n                                $loading\n                            \n                            \n                                $profile\n                            \n                            \n                                $query\n                            \n                            \n                                    Private\n                                accountGQL\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                showChangeAvatarDialog\n                            \n                            \n                                    Private\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                serializeRole\n                            \n                            \n                                serializeSex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:100\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Profile.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeSex\n                        \n                    \n                \n            \n            \n                \nserializeSex(sex: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sex\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAccount)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showChangeAvatarDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Title)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Injector,\n  OnInit,\n  Signal,\n  WritableSignal,\n  computed,\n  effect,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiDialogService,\n  TuiHintModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiChipModule, TuiSkeletonModule } from '@taiga-ui/experimental'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus'\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ApolloError } from '@apollo/client/errors'\nimport { Title } from '@angular/platform-browser'\nimport * as Sentry from '@sentry/angular'\nimport { Observable, map } from 'rxjs'\n\nimport { isNotFound, serializeRole } from '@utils'\nimport { AuthService } from '@services'\nimport { AccountGQL } from '@graphql'\nimport { SexPipe } from '@pipes'\n\nimport { Account, Sex, initialAccount } from '@interfaces'\n\nimport { Role } from '@enums'\n\nimport { ChangeAvatarComponent } from './change-avatar/change-avatar.component'\n\nconst sexIcons = {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n\n@Component({\n  selector: 'spomen-profile',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TuiAvatarModule,\n    TuiSkeletonModule,\n    TuiDialogModule,\n    TuiChipModule,\n    TuiLineClampModule,\n    TuiSvgModule,\n    TuiHintModule,\n    SexPipe,\n  ],\n  providers: [DatePipe],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.scss',\n})\n@Sentry.TraceClass({ name: 'Profile' })\nexport class ProfileComponent implements OnInit {\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private route = inject(ActivatedRoute)\n  private injector = inject(Injector)\n  private router = inject(Router)\n  private title = inject(Title)\n  auth = inject(AuthService)\n\n  private accountGQL = inject(AccountGQL)\n\n  $profile: WritableSignal = signal(initialAccount)\n  $loading: WritableSignal = signal(true)\n  $isMe: WritableSignal = signal(false)\n  $query: WritableSignal = signal('')\n\n  $avatar: Signal = computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n\n  $$roles: Observable = toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n\n  $$isMe: Observable = this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n\n  constructor() {\n    effect(() => {\n      if (this.$profile()) {\n        const profile = this.$profile()\n\n        this.title.setTitle(profile!.full_name || profile!.username || '')\n      }\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'Profile.ngOnInit' })\n  ngOnInit(): void {\n    this.$$isMe.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n      next: (isMe) => {\n        if (isMe) {\n          this.$profile.set(this.auth.$user())\n          this.$loading.set(false)\n\n          return\n        }\n\n        this.accountGQL\n          .watch(\n            { username: this.$query() },\n            { fetchPolicy: 'cache-and-network' }\n          )\n          .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe({\n            next: ({ data, loading }) => {\n              const { account } = data\n\n              this.$loading.set(loading)\n\n              this.$profile.set({\n                ...account,\n                birthday: account.birthday || null,\n                avatar: account.avatar ? account.avatar.url : null,\n                vk_avatar: account.vk_avatar || null,\n                full_name:\n                  account.first_name && account.last_name\n                    ? `${account.first_name.trim()} ${account.last_name.trim()}`\n                    : null,\n              })\n            },\n            error: (err: ApolloError) => {\n              if (isNotFound(err.message)) {\n                this.router.navigate(['/404'])\n                return\n              }\n\n              this.alerts\n                .open('Сервер временно недоступен', { status: 'error' })\n                .pipe(takeUntilDestroyed(this.destroyRef))\n                .subscribe()\n            },\n          })\n      },\n    })\n  }\n\n  changeAvatar() {\n    this.showChangeAvatarDialog().subscribe((res: string | boolean | null) => {\n      if (res) {\n        this.alerts\n          .open(\n            `Аватар успешно ${typeof res === 'string' ? 'изменён' : 'удалён'}`,\n            { status: 'success' }\n          )\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe()\n\n        this.$profile.update((profile) => ({\n          ...profile,\n          avatar: typeof res === 'string' ? res : null,\n        }))\n\n        if (this.$isMe()) {\n          this.auth.$user.update((user) => ({\n            ...user,\n            avatar: typeof res === 'string' ? res : null,\n          }))\n        }\n      }\n    })\n  }\n\n  serializeRole(role: Role) {\n    return serializeRole(role)\n  }\n\n  serializeSex(sex: Sex | null): string {\n    return sex ? sexIcons[sex] : sexIcons[0]\n  }\n\n  private showChangeAvatarDialog = () =>\n    this.dialogs.open(\n      new PolymorpheusComponent(ChangeAvatarComponent, this.injector),\n      {\n        size: 's',\n        data: {\n          accountId: this.$profile().id,\n          avatarAlreadyExists: !!this.$profile().avatar,\n        },\n      }\n    )\n}\n\n    \n\n    \n        \n  \n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    \n  }\n  \n    @if (this.$loading()) {\n      @for (skeleton of [1, 2]; track skeleton) {\n        \n      }\n    } @else {\n      {{ this.serializeRole(role) }}\n    }\n  \n\n\n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    {{\n      this.$profile().full_name || this.$profile().username || ''\n    }}\n  }\n  \n    \n      \n      {{\n        this.$profile().birthday\n          ? (this.$profile().birthday | date: 'd MMMM')\n          : 'Не указан'\n      }}\n    \n    \n      \n      {{ this.$profile().sex | sex }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (this.$loading()) {    skeleton  } @else {      }      @if (this.$loading()) {      @for (skeleton of [1, 2]; track skeleton) {              }    } @else {      {{ this.serializeRole(role) }}    }    @if (this.$loading()) {    skeleton  } @else {    {{      this.$profile().full_name || this.$profile().username || \\'\\'    }}  }                  {{        this.$profile().birthday          ? (this.$profile().birthday | date: \\'d MMMM\\')          : \\'Не указан\\'      }}                    {{ this.$profile().sex | sex }}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Route.html":{"url":"interfaces/Route.html","title":"interface - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/route.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exact\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customIcon:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exact\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exact:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Route {\n  url: string\n  icon: string\n  title: string\n  customIcon?: boolean\n  exact?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScrollNearEndDirective.html":{"url":"directives/ScrollNearEndDirective.html","title":"directive - ScrollNearEndDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ScrollNearEndDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/directives/scroll-near-end.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [scrollNearEnd]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                windowScrollEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                threshold\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        threshold\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:21\n                            \n                        \n                \n                    \n                        threshold in PX when to emit before page end scroll\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nearEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:16\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n\n\n            \n                \n                    Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        windowScrollEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    windowScrollEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                    \n                        \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core'\n\n@Directive({\n  selector: '[scrollNearEnd]',\n  standalone: true,\n})\nexport class ScrollNearEndDirective implements OnInit {\n  @Output() nearEnd: EventEmitter = new EventEmitter()\n\n  /**\n   * threshold in PX when to emit before page end scroll\n   */\n  @Input() threshold = 20\n\n  private window!: Window\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit(): void {\n    // save window object for type safety\n    this.window = window\n  }\n\n  @HostListener('window:scroll', ['$event.target'])\n  windowScrollEvent(event: KeyboardEvent) {\n    // height of whole window page\n    const heightOfWholePage = this.window.document.documentElement.scrollHeight\n\n    // how big in pixels the element is\n    const heightOfElement = this.el.nativeElement.scrollHeight\n\n    // currently scrolled Y position\n    const currentScrolledY = this.window.scrollY\n\n    // height of opened window - shrinks if console is opened\n    const innerHeight = this.window.innerHeight\n\n    /**\n     * the area between the start of the page and when this element is visible\n     * in the parent component\n     */\n    const spaceOfElementAndPage = heightOfWholePage - heightOfElement\n\n    // calculated whether we are near the end\n    const scrollToBottom =\n      heightOfElement - innerHeight - currentScrolledY + spaceOfElementAndPage\n\n    // if the user is near end\n    if (scrollToBottom \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScrollService.html":{"url":"injectables/ScrollService.html","title":"injectable - ScrollService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScrollService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/scroll.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $state\n                            \n                            \n                                isEnd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(status: boolean, posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/scroll.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal({\n    posY: 0,\n    isEnd: false,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, WritableSignal } from '@angular/core'\nimport { toObservable } from '@angular/core/rxjs-interop'\nimport { debounceTime, filter, Observable } from 'rxjs'\n\ntype ScrollState = {\n  posY: number\n  isEnd: boolean\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScrollService {\n  private $state: WritableSignal = signal({\n    posY: 0,\n    isEnd: false,\n  })\n\n  isEnd: Observable = toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SexPipe.html":{"url":"pipes/SexPipe.html","title":"pipe - SexPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SexPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/sex.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sex\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/sex.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core'\n\nimport { Sex } from '@interfaces'\n\n@Pipe({\n  name: 'sex',\n  standalone: true,\n})\nexport class SexPipe implements PipeTransform {\n  transform(value: Sex | null): string {\n    switch (value) {\n      case 1: {\n        return 'Женский'\n      }\n      case 2: {\n        return 'Мужской'\n      }\n      default: {\n        return 'Не указан'\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-in/sign-in.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-in\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                vkIdOneTap\n                            \n                            \n                                    \n                                VkIdSdkOneTap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngAfterViewInit\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-in/sign-in.component.ts:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngAfterViewInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        vkIdOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new VKID.OneTap()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        VkIdSdkOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('VkIdSdkOneTap')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\nimport * as VKID from '@vkid/sdk'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  inject,\n} from '@angular/core'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-in',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './sign-in.component.html',\n  styleUrl: './sign-in.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignIn' })\nexport class SignInComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('VkIdSdkOneTap') VkIdSdkOneTap!: ElementRef\n\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private vkIdOneTap = new VKID.OneTap()\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    pass: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngAfterViewInit' })\n  ngAfterViewInit(): void {\n    if (this.VkIdSdkOneTap) {\n      this.vkIdOneTap.render({\n        container: this.VkIdSdkOneTap.nativeElement,\n        scheme: VKID.Scheme.DARK,\n        lang: VKID.Languages.RUS,\n        styles: {\n          borderRadius: 50,\n        },\n      })\n    }\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signIn({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err) => {\n            this.isLoading.next(false)\n\n            if (err.status === 401 || err.status === 400) {\n              this.subs$.push(this.alerts.open(`Вход не выполнен`).subscribe())\n              return\n            }\n\n            this.subs$.push(\n              this.alerts.open(`Приложение временно недоступно`).subscribe()\n            )\n          },\n          complete: () => this.isLoading.next(false),\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Войти\n      \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Войти          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-up/sign-up.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-up\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                            TuiInputDateModule\n                            TuiDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                confirmForm\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                showConfirmForm\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPass\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-up/sign-up.component.ts:45\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPass\n                        \n                    \n                \n            \n            \n                \nconfirmPass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:237\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport { Component, Input, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { TuiInputDateModule } from '@taiga-ui/kit'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport { TuiDay } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-up',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiLoaderModule,\n    TuiInputDateModule,\n    TuiDialogModule,\n  ],\n  templateUrl: './sign-up.component.html',\n  styleUrl: './sign-up.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignUp' })\nexport class SignUpComponent implements OnInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  showConfirmForm = false\n\n  form: FormGroup\n    pass: FormControl\n    name: FormControl\n    surname: FormControl\n    email: FormControl\n    birthday: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n\n  confirmForm: FormGroup\n  }> = new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(30),\n        ],\n      ],\n      name: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      surname: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      email: [\n        '',\n        [Validators.email, Validators.minLength(4), Validators.maxLength(30)],\n      ],\n      birthday: [new TuiDay(2000, 4, 27)],\n    })\n\n    this.confirmForm = this.fb.group({\n      confirmPass: ['', [Validators.required]],\n    })\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      if (this.form.controls.name.errors || this.form.controls.surname.errors) {\n        errors.push('Введите корректные имя и фамилию')\n      }\n\n      if (this.form.controls.email.errors) {\n        errors.push('Введите корректную почту')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.showConfirmForm = true\n  }\n\n  confirmPass() {\n    if (\n      this.form.controls.pass.value!.trim() !==\n      this.confirmForm.controls.confirmPass.value!.trim()\n    ) {\n      this.subs$.push(this.alerts.open('Некорректный пароль').subscribe())\n      this.confirmForm.controls.confirmPass.reset()\n      this.form.controls.pass.reset()\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signUp({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n          birthday: this.form.controls.birthday.touched\n            ? this.form.controls.birthday.value!.toUtcNativeDate().toISOString()\n            : undefined,\n          email:\n            this.form.controls.email.touched &&\n            this.form.controls.email.valid &&\n            this.form.controls.email.value!.trim().length > 0\n              ? this.form.controls.email.value!.trim()\n              : undefined,\n          first_name:\n            this.form.controls.name.touched &&\n            this.form.controls.name.valid &&\n            this.form.controls.name.value!.trim().length > 2\n              ? this.form.controls.name.value!.trim()\n              : undefined,\n          last_name:\n            this.form.controls.surname.touched &&\n            this.form.controls.surname.valid &&\n            this.form.controls.surname.value!.trim().length > 2\n              ? this.form.controls.surname.value!.trim()\n              : undefined,\n        })\n        .subscribe({\n          next: (data) => {\n            this.isLoading.next(false)\n\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err: HttpErrorResponse) => {\n            this.confirmForm.controls.confirmPass.reset()\n            this.form.controls.pass.reset()\n\n            if (err.status === 409) {\n              if (this.form.controls.email.value!.trim().length === 0) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данный логин уже зарегистрирован')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              } else if (\n                this.form.controls.email.touched &&\n                this.form.controls.email.valid\n              ) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данная почта уже зарегистрирована')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              }\n            }\n\n            this.subs$.push(\n              this.alerts\n                .open('Сервер временно недоступен', { status: 'error' })\n                .subscribe()\n            )\n\n            this.isLoading.next(false)\n            return\n          },\n          complete: () => {\n            this.confirmForm.controls.confirmPass.setValue('')\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n      Дата рождения\n      \n    \n  \n  \n    \n      Продолжить\n    \n\n\n\n  \n    \n\n    \n      ОК\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Дата рождения                        Продолжить                    ОК      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinesComponent.html":{"url":"components/TimelinesComponent.html","title":"component - TimelinesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelinesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timelines/timelines.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-timelines\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./timelines.component.html\n            \n\n\n\n            \n                styleUrl\n                ./timelines.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-timelines',\n  standalone: true,\n  imports: [],\n  templateUrl: './timelines.component.html',\n  styleUrl: './timelines.component.scss',\n})\n@Sentry.TraceClass({ name: 'Timelines' })\nexport class TimelinesComponent {}\n\n    \n\n    \n        timelines works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'timelines works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUploadByIdGQL.html":{"url":"injectables/UpdateUploadByIdGQL.html","title":"injectable - UpdateUploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Mutation\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UpdateUploadByIdQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/mutations/update-upload-by-id.gql.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Mutation } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Permission } from '@enums'\n\nexport type UpdateUploadByIdResponse = {\n  updateUpload: {\n    id: string\n    url: string\n    name: string\n    file_name: string\n    permissions: Permission[]\n  }\n}\n\nexport type UpdateUploadByIdVariables = {\n  data: {\n    name?: string\n    file_name?: string\n    permissions?: Permission[]\n  }\n  id: string\n}\n\nexport const UpdateUploadByIdQuery = gql`\n  mutation updateUploadById($data: UploadUpdateInput!, $id: String!) {\n    updateUpload(data: $data, where: { id: $id }) {\n      id\n      url\n      name\n      file_name\n      permissions\n    }\n  }\n`\n\n@Injectable()\nexport class UpdateUploadByIdGQL extends Mutation {\n  document = UpdateUploadByIdQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadActionsComponent.html":{"url":"components/UploadActionsComponent.html","title":"component - UploadActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-actions/upload-actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-upload-actions\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiSvgModule\n                            TuiPreviewActionModule\n                            TuiHintModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-actions.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-actions.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _actions\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                            \n                                handleSave\n                            \n                            \n                                preview\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                            \n                                handleSave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        handleDelete\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleOpen\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleSave\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _actions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required({ alias: 'actions' })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDelete\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleOpen\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSave\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input void } | null>(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiPreviewActionModule } from '@taiga-ui/addon-preview'\nimport { TuiHintModule, TuiSvgModule } from '@taiga-ui/core'\nimport { Component, input, output } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadActionsParams } from '@interfaces'\n\n@Component({\n  selector: 'spomen-upload-actions',\n  standalone: true,\n  imports: [TuiSvgModule, TuiPreviewActionModule, TuiHintModule],\n  templateUrl: './upload-actions.component.html',\n  styleUrl: './upload-actions.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadActions' })\nexport class UploadActionsComponent {\n  _actions = input.required({ alias: 'actions' })\n  url = input.required()\n\n  preview = input void } | null>(null)\n\n  handleOpen = output()\n  handleSave = output()\n  handleDelete = output()\n}\n\n    \n\n    \n        @if (this._actions().open) {\n  \n    \n  \n}\n\n@if (this._actions().delete) {\n  \n    \n  \n}\n\n@if (this._actions().save) {\n  \n    \n  \n}\n\n\n  \n\n\n@if(this.preview()) {\n  \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (this._actions().open) {        }@if (this._actions().delete) {        }@if (this._actions().save) {        }  @if(this.preview()) {        }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadActionsParams.html":{"url":"interfaces/UploadActionsParams.html","title":"interface - UploadActionsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadActionsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/ui.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            delete\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            save\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        save\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        save:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UploadActionsParams {\n  open?: boolean\n  save?: boolean\n  delete?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadByIdGQL.html":{"url":"injectables/UploadByIdGQL.html","title":"injectable - UploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-by-id.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { UploadModel } from '@models'\n\nexport type UploadByIdResponse = {\n  upload: UploadModel\n}\n\nexport type UploadByIdVariables = {\n  id?: string\n}\n\nexport type UploadByIdQueryRef = QueryRef\n\n@Injectable()\nexport class UploadByIdGQL extends Query {\n  document = gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadExtensionsGQL.html":{"url":"injectables/UploadExtensionsGQL.html","title":"injectable - UploadExtensionsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadExtensionsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-extensions.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-extensions.gql.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\n\nexport type UploadExtensionsResponse = {\n  uploadExtensions: string[]\n}\n\nexport type UploadExtensionsVariables = Pagination & {}\n\nexport type UploadExtensionsQueryRef = QueryRef\n\n@Injectable()\nexport class UploadExtensionsGQL extends Query {\n  document = gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadFileComponent.html":{"url":"components/UploadFileComponent.html","title":"component - UploadFileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadFileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-file/upload-file.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadService\n                \n            \n\n\n            \n                selector\n                spomen-upload-file\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiStepperModule\n                            TuiInputInlineModule\n                            TuiToggleModule\n                            TuiChipModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiLinkModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-file.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-file.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                currentStep\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Readonly\n                                fileForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                upload\n                            \n                            \n                                uploaded\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextStep\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFile\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nextStep\n                        \n                    \n                \n            \n            \n                \nnextStep()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UploadService\n\n                    \n                \n                \n                    \n                        Default value : inject(UploadService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService).$user()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiFileLike,\n  TuiInputFilesModule,\n  TuiInputInlineModule,\n  TuiLineClampModule,\n  TuiStepperModule,\n  TuiToggleModule,\n} from '@taiga-ui/kit'\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  OnInit,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport {\n  TuiAlertService,\n  TuiLoaderModule,\n  TuiSvgModule,\n  TuiLinkModule,\n} from '@taiga-ui/core'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, UploadService } from '@services'\nimport { AuthenticatedUser } from '@interfaces'\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-upload-file',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiStepperModule,\n    TuiInputInlineModule,\n    TuiToggleModule,\n    TuiChipModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiLinkModule,\n  ],\n  providers: [UploadService],\n  templateUrl: './upload-file.component.html',\n  styleUrl: './upload-file.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadFile' })\nexport class UploadFileComponent implements OnInit {\n  private user: AuthenticatedUser = inject(AuthService).$user()\n  private upload: UploadService = inject(UploadService)\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  isLoading: WritableSignal = signal(false)\n  uploaded: WritableSignal = signal(null)\n\n  readonly control = new FormControl(null)\n\n  readonly fileForm = new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n\n  currentStep: number = 1\n\n  ngOnInit() {\n    this.fileForm.controls['ext'].disable()\n  }\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  nextStep() {\n    if (!this.control.value) {\n      return\n    }\n\n    const selectedFile = this.upload.getFileParams(this.control.value)\n\n    this.fileForm.controls['name'].setValue(selectedFile.name)\n    this.fileForm.controls['ext'].setValue('.' + selectedFile.ext)\n\n    this.currentStep++\n  }\n\n  uploadFile() {\n    if (\n      !this.fileForm.controls['name'].valid ||\n      this.fileForm.controls['name'].value!.trim().length === 0\n    ) {\n      this.alerts\n        .open('Название файла не может быть меньше 2 символов')\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe()\n\n      return\n    }\n\n    const isCustomName =\n      this.control.value!.name !==\n      this.fileForm.controls['name'].value! +\n        '' +\n        this.fileForm.controls['ext'].value!\n\n    this.isLoading.set(true)\n\n    this.upload\n      .uploadFile({\n        file: this.control.value!,\n        compress: this.fileForm.controls['compress'].value!,\n        private: this.fileForm.controls['private'].value!,\n        path: this.user.id!,\n        name: isCustomName ? this.fileForm.controls['name'].value! : undefined,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.isLoading.set(false)\n\n          this.uploaded.set(res)\n\n          this.alerts\n            .open('Файл успешно загружен', {\n              status: 'success',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.currentStep++\n        },\n        error: () => {\n          this.isLoading.set(false)\n\n          this.alerts\n            .open('Ошибка загрузки файла', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          // TODO: Обработка превышенного лимита файлов\n        },\n      })\n  }\n}\n\n    \n\n    \n        \n  \n    @switch (this.currentStep) {\n      @case (1) {\n        \n      }\n\n      @case (2) {\n        \n          \n            \n            \n            {{ this.fileForm.controls['ext'].value }}\n          \n          \n            \n              \n                Сжать\n                \n              \n              \n                Личный\n                \n              \n            \n            \n              \n                Загрузить\n              \n            \n          \n        \n      }\n\n      @case (3) {\n            \n              \n              Файл успешно загружен\n            \n            \n              Название\n              \n              Файл\n              \n              Ссылка\n              \n              \n              \n            \n      }\n      @default {\n        \n      }\n    }\n  \n\n\n\n  \n    \n      \n    \n    \n      \n    \n    @if (this.control.value) {\n      Далее\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @switch (this.currentStep) {      @case (1) {              }      @case (2) {                                                      {{ this.fileForm.controls[\\'ext\\'].value }}                                                              Сжать                                                            Личный                                                                                    Загрузить                                                  }      @case (3) {                                        Файл успешно загружен                                      Название                            Файл                            Ссылка                                                            }      @default {              }    }                                    @if (this.control.value) {      Далее    }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadFileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadInfoComponent.html":{"url":"components/UploadInfoComponent.html","title":"component - UploadInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-info/upload-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadByIdGQL\n                                DeleteUploadByIdGQL\n                                UpdateUploadByIdGQL\n                \n            \n\n\n            \n                selector\n                spomen-upload-info\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputInlineModule\n                            TuiChipModule\n                            TuiLineClampModule\n                            TuiToggleModule\n                            TuiAvatarModule\n                            TuiLoaderModule\n                                UploadActionsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-info.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-info.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $actions\n                            \n                            \n                                $editable\n                            \n                            \n                                $edited\n                            \n                            \n                                $loading\n                            \n                            \n                                $upload\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                deleteUploadByIdGQL\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                isAdmin\n                            \n                            \n                                onDelete\n                            \n                            \n                                onUpdate\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                updateUploadByIdGQL\n                            \n                            \n                                    Private\n                                uploadByIdGQL\n                            \n                            \n                                uploadId\n                            \n                            \n                                uploadInfoForm\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickOwner\n                            \n                            \n                                    Private\n                                deleteUpload\n                            \n                            \n                                    Private\n                                getUpdatedFields\n                            \n                            \n                                handleDeleteUpload\n                            \n                            \n                                handleSaveUpload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                showPrompt\n                            \n                            \n                                    Private\n                                updateUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                uploadId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        uploadId\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-info/upload-info.component.ts:95\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-info/upload-info.component.ts:98\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickOwner\n                        \n                    \n                \n            \n            \n                \nclickOwner()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:245\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUpdatedFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUpdatedFields()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:273\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDeleteUpload\n                        \n                    \n                \n            \n            \n                \nhandleDeleteUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSaveUpload\n                        \n                    \n                \n            \n            \n                \nhandleSaveUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showPrompt\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPrompt(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:335\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUpload(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $actions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    open: false,\n    save: this.$editable() && this.$edited(),\n    delete: this.$editable(),\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $editable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const upload = this.$upload()\n\n    return this.$upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $edited\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteUploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DeleteUploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$isAdmin()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateUploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UpdateUploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadId\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n    isPrivate: new FormControl(false),\n    isSystem: new FormControl(false),\n    owner: new FormControl(null),\n    ownerAvatar: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$user().id!\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  OnInit,\n  WritableSignal,\n  inject,\n  signal,\n  computed,\n  input,\n  output,\n} from '@angular/core'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  ControlEvent,\n} from '@angular/forms'\n\nimport {\n  TUI_PROMPT,\n  TuiAvatarModule,\n  TuiInputInlineModule,\n  TuiLineClampModule,\n  TuiToggleModule,\n} from '@taiga-ui/kit'\n\nimport {\n  TuiAlertService,\n  TuiDialogService,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\nimport { Router } from '@angular/router'\nimport { filter, map } from 'rxjs'\n\nimport {\n  DeleteUploadByIdGQL,\n  UpdateUploadByIdGQL,\n  UploadByIdGQL,\n} from '@graphql'\nimport { UploadActionsParams } from '@interfaces'\nimport { AuthService } from '@services'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nimport { UploadActionsComponent } from '../upload-actions/upload-actions.component'\n\n@Component({\n  selector: 'spomen-upload-info',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputInlineModule,\n    TuiChipModule,\n    TuiLineClampModule,\n    TuiToggleModule,\n    TuiAvatarModule,\n    TuiLoaderModule,\n    UploadActionsComponent,\n  ],\n  providers: [UploadByIdGQL, DeleteUploadByIdGQL, UpdateUploadByIdGQL],\n  templateUrl: './upload-info.component.html',\n  styleUrl: './upload-info.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadInfo' })\nexport class UploadInfoComponent implements OnInit {\n  private uploadByIdGQL = inject(UploadByIdGQL)\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private router = inject(Router)\n\n  private deleteUploadByIdGQL = inject(DeleteUploadByIdGQL)\n  private updateUploadByIdGQL = inject(UpdateUploadByIdGQL)\n\n  userId = inject(AuthService).$user().id!\n  isAdmin = inject(AuthService).$isAdmin()\n\n  uploadInfoForm: FormGroup = new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n    isPrivate: new FormControl(false),\n    isSystem: new FormControl(false),\n    owner: new FormControl(null),\n    ownerAvatar: new FormControl(null),\n  })\n\n  uploadId = input.required()\n\n  onUpdate = output()\n  onDelete = output()\n\n  $upload: WritableSignal = signal(null)\n  $loading: WritableSignal = signal(true)\n  $edited: WritableSignal = signal(false)\n\n  $editable = computed(() => {\n    const upload = this.$upload()\n\n    return this.$upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n\n  $actions = computed(() => ({\n    open: false,\n    save: this.$editable() && this.$edited(),\n    delete: this.$editable(),\n  }))\n\n  ngOnInit(): void {\n    this.uploadInfoForm.controls['isSystem'].disable()\n\n    this.uploadInfoForm.events\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        filter((e: ControlEvent) => e.source.dirty),\n        map((e) => {\n          this.$edited.set(true)\n        })\n      )\n      .subscribe()\n\n    this.uploadByIdGQL\n      .watch({\n        id: this.uploadId()!,\n      })\n      .valueChanges.subscribe({\n        next: (res) => {\n          const { upload } = res.data\n\n          this.$upload.set(upload)\n\n          this.uploadInfoForm.controls['name'].setValue(upload.name)\n          this.uploadInfoForm.controls['originalName'].setValue(\n            upload.file_name\n          )\n          this.uploadInfoForm.controls['isSystem'].setValue(upload.is_system)\n          this.uploadInfoForm.controls['isPrivate'].setValue(\n            upload.permissions.includes(Permission.OwnerOnly)\n          )\n\n          this.uploadInfoForm.controls['owner'].setValue(\n            upload.owner\n              ? upload.owner.first_name && upload.owner.last_name\n                ? upload.owner.first_name + ' ' + upload.owner.last_name\n                : upload.owner.username\n              : null\n          )\n\n          this.uploadInfoForm.controls['ownerAvatar'].setValue(\n            upload.owner\n              ? upload.owner.avatar && upload.owner.avatar.url\n                ? upload!.owner!.avatar!.url\n                : upload!.owner!.vk_avatar\n              : null\n          )\n\n          this.$loading.set(false)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить информацию о загрузке', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n          this.$loading.set(false)\n        },\n      })\n  }\n\n  clickOwner() {\n    if (this.uploadInfoForm.controls['owner'].value) {\n      this.router.navigate(['/' + this.$upload()!.owner!.username])\n    }\n  }\n\n  handleSaveUpload() {\n    const updatedFields = this.getUpdatedFields()\n\n    if (updatedFields.length === 0) return\n\n    const data: { [key: string]: any } = {}\n\n    updatedFields.forEach((val) => {\n      data[Object.keys(val)[0] as string] = val[Object.keys(val)[0]]\n    })\n\n    this.updateUpload(data)\n  }\n\n  handleDeleteUpload() {\n    this.showPrompt('Удалить файл?').subscribe((res) => {\n      if (res) {\n        this.showPrompt('Вы уверены?').subscribe((res) => {\n          if (res) this.deleteUpload()\n        })\n      }\n    })\n  }\n\n  private updateUpload(data: { [key: string]: any }) {\n    this.$loading.set(true)\n\n    this.updateUploadByIdGQL\n      .mutate({\n        id: this.uploadId(),\n        data,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.onUpdate.emit({ data, id: this.uploadId() })\n\n          this.alerts\n            .open('Файл успешно изменён!', { status: 'success' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.$loading.set(false)\n        },\n        error: (err) => {\n          console.log(err)\n          this.alerts\n            .open('Изменить файл не удалось', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.$loading.set(false)\n        },\n      })\n  }\n\n  private deleteUpload() {\n    if (!this.$upload() || !this.$editable()) return\n\n    this.$loading.set(true)\n\n    this.deleteUploadByIdGQL\n      .mutate({\n        id: this.$upload()!.id,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: () => {\n          this.onDelete.emit(this.$upload()!.id)\n          this.$loading.set(false)\n        },\n        error: (err) => {\n          this.$loading.set(false)\n\n          this.alerts\n            .open('Удалить файл не удалось', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  private getUpdatedFields(): { [key: string]: any }[] {\n    return Object.keys(this.uploadInfoForm.controls)\n      .map((control) => {\n        return this.uploadInfoForm.controls[control].dirty\n          ? { [control]: this.uploadInfoForm.controls[control].value }\n          : null\n      })\n      .filter((val) => val)\n      .map((val: { [key: string]: any } | null) => {\n        const name = Object.keys(val!)[0]\n\n        let key\n        let value\n\n        switch (name) {\n          case 'name': {\n            key = 'name'\n            value =\n              this.$upload()![name] !== val![name]\n                ? { [key]: { set: val![name] } }\n                : null\n            break\n          }\n\n          case 'originalName': {\n            key = 'file_name'\n            value =\n              this.$upload()!.file_name !== val![name]\n                ? { [key]: { set: val![name] } }\n                : null\n            break\n          }\n\n          case 'isPrivate': {\n            const isPrivate = this.$upload()!.permissions.includes(\n              Permission.OwnerOnly\n            )\n            key = 'permissions'\n            value =\n              isPrivate !== val![name]\n                ? {\n                    [key]: {\n                      set: isPrivate\n                        ? this.$upload()!.permissions.filter(\n                            (p) => p !== Permission.OwnerOnly\n                          )\n                        : [\n                            ...this.$upload()!.permissions,\n                            Permission.OwnerOnly,\n                          ],\n                    },\n                  }\n                : null\n            break\n          }\n        }\n\n        return value\n      })\n      .filter((val) => val) as { [key: string]: any }[]\n  }\n\n  private showPrompt(label: string) {\n    return this.dialogs\n      .open(TUI_PROMPT, {\n        label,\n        size: 's',\n        data: {\n          yes: 'Да',\n          no: 'Нет',\n        },\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n  }\n}\n\n    \n\n    \n        @if (this.$upload()) {\n  \n    \n      \n        \n\n        \n          \n            Имя\n          \n          \n            \n          \n        \n        \n          \n            Тип\n          \n          \n            \n              {{ this.$upload()!.ext }}\n            \n          \n        \n        \n          \n            Ссылка\n          \n          \n            \n              \n            \n          \n        \n        \n          \n            Владелец\n          \n\n          @if (this.$upload()!.owner!) {\n            \n              \n              {{ this.uploadInfoForm.controls['owner'].value }}\n            \n          } @else {\n            Не найден\n          }\n        \n        @if (this.$editable()) {\n          \n            \n              Личный\n              \n            \n            \n              Системный\n              \n            \n          \n        }\n      \n      \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (this.$upload()) {                                                  Имя                                                                                Тип                                              {{ this.$upload()!.ext }}                                                            Ссылка                                                                                                          Владелец                    @if (this.$upload()!.owner!) {                                        {{ this.uploadInfoForm.controls[\\'owner\\'].value }}                      } @else {            Не найден          }                @if (this.$editable()) {                                    Личный                                                    Системный                                            }                  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadListItemComponent.html":{"url":"components/UploadListItemComponent.html","title":"component - UploadListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-list-item/upload-list-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                spomen-upload-list-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterModule\n                            TuiSkeletonModule\n                            TuiLineClampModule\n                            TuiPreviewModule\n                            TuiButtonModule\n                            TuiChipModule\n                            TuiHintModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-list-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-list-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alerts\n                            \n                            \n                                avatarUrl\n                            \n                            \n                                clickUpload\n                            \n                            \n                                index\n                            \n                            \n                                isLoading\n                            \n                            \n                                isPrivate\n                            \n                            \n                                owner\n                            \n                            \n                                router\n                            \n                            \n                                selectExtension\n                            \n                            \n                                showPreview\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isPrivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickUpload\n                            \n                            \n                                selectExtension\n                            \n                            \n                                showPreview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isPrivate\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickUpload\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectExtension\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPreview\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.avatar && this.upload()!.owner!.avatar!.url\n        ? this.upload()!.owner!.avatar!.url\n        : this.upload()!.owner!.vk_avatar\n      : null\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickUpload\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPrivate\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.first_name && this.upload()!.owner!.last_name\n        ? this.upload()!.owner!.first_name +\n          ' ' +\n          this.upload()!.owner!.last_name\n        : this.upload()!.owner!.username\n      : 'System'\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectExtension\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPreview\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\n\nimport { Component, computed, inject, input, output } from '@angular/core'\n\nimport { TuiAlertService, TuiHintModule, TuiSvgModule } from '@taiga-ui/core'\n\nimport {\n  TuiButtonModule,\n  TuiChipModule,\n  TuiSkeletonModule,\n} from '@taiga-ui/experimental'\n\nimport { TuiPreviewModule } from '@taiga-ui/addon-preview'\n\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { Router, RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-upload-list-item',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    TuiSkeletonModule,\n    TuiLineClampModule,\n    TuiPreviewModule,\n    TuiButtonModule,\n    TuiChipModule,\n    TuiHintModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n  ],\n  providers: [DatePipe],\n  templateUrl: './upload-list-item.component.html',\n  styleUrl: './upload-list-item.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadListItem' })\nexport class UploadListItemComponent {\n  alerts = inject(TuiAlertService)\n  router = inject(Router)\n\n  upload = input.required()\n  isPrivate = input.required()\n  isLoading = input.required()\n\n  showPreview = output()\n  clickUpload = output()\n  selectExtension = output()\n\n  avatarUrl = computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.avatar && this.upload()!.owner!.avatar!.url\n        ? this.upload()!.owner!.avatar!.url\n        : this.upload()!.owner!.vk_avatar\n      : null\n  )\n\n  owner = computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.first_name && this.upload()!.owner!.last_name\n        ? this.upload()!.owner!.first_name +\n          ' ' +\n          this.upload()!.owner!.last_name\n        : this.upload()!.owner!.username\n      : 'System'\n  )\n\n  index = 0\n}\n\n    \n\n    \n        @if (this.upload() && !this.isLoading()) {\n  \n    \n      \n    \n    \n      \n      \n        \n    \n    \n      \n      \n    \n    {{ this.upload()!.ext }}\n    \n    \n      \n\n      \n    \n    \n      {{\n        this.upload()!.created_at | date: 'd MMMM, YYYY г.'\n      }}\n    \n  \n} @else {\n  \n          \n          \n    \n    \n      \n    \n    loading\n    \n    \n      \n\n      \n    \n    01.01.2001\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (this.upload() && !this.isLoading()) {                                                                    {{ this.upload()!.ext }}                                  {{        this.upload()!.created_at | date: \\'d MMMM, YYYY г.\\'      }}      } @else {                                            loading                            01.01.2001  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadModel.html":{"url":"interfaces/UploadModel.html","title":"interface - UploadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/upload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            file_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_system\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            owner_id\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_system\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_system:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AccountModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         Permission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from '@models'\nimport { Permission } from '@enums'\n\nexport interface UploadModel {\n  id: string\n  bucket: string\n  name: string\n  ext: string\n  file_name: string\n  path: string\n  url: string\n  owner_id: string\n  owner?: AccountModel\n  permissions: Permission[]\n  is_system: boolean\n  created_at: Date\n  updated_at: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadPreviewComponent.html":{"url":"components/UploadPreviewComponent.html","title":"component - UploadPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-preview/upload-preview.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-upload-preview\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            IFrameUrlPipe\n                            PolymorpheusModule\n                            TuiPreviewModule\n                                UploadActionsComponent\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-preview.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-preview.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                actions\n                            \n                            \n                                destroyRef\n                            \n                            \n                                ext\n                            \n                            \n                                handleClose\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                            \n                                id\n                            \n                            \n                                index\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isEditable\n                            \n                            \n                                isLoading\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOpen\n                            \n                            \n                                isRotatable\n                            \n                            \n                                isZoomable\n                            \n                            \n                                name\n                            \n                            \n                                pdfViewers\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                preview\n                            \n                            \n                                previews\n                            \n                            \n                                    Private\n                                previewSub\n                            \n                            \n                                sanitizer\n                            \n                            \n                                title\n                            \n                            \n                                upload\n                            \n                            \n                                uploadActions\n                            \n                            \n                                url\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                handleClose\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    previewContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:107\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:61\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        handleClose\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleDelete\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleOpen\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:64\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(actions: PolymorpheusContent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-preview/upload-preview.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actions\n                                            \n                                                        PolymorpheusContent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('actions')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.ext : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleClose\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDelete\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleOpen\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.id : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$isAdmin()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const upload = this.upload()\n\n    return this.upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TUI_IS_MOBILE)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRotatable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isZoomable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.name : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pdfViewers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPdfViewerService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('preview')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previews\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPreviewDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previewSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sanitizer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload() ? `${this.upload()!.file_name}.${this.upload()!.ext}` : ''\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadActions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    open: true,\n    save: false,\n    delete: this.isEditable(),\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.url : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$user().id\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        previewContent\n                    \n                \n\n                \n                    \n                        getpreviewContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:105\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  computed,\n  DestroyRef,\n  effect,\n  inject,\n  input,\n  output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core'\nimport {\n  TuiPreviewDialogService,\n  TuiPreviewModule,\n} from '@taiga-ui/addon-preview'\nimport {\n  PolymorpheusContent,\n  PolymorpheusModule,\n} from '@tinkoff/ng-polymorpheus'\nimport { TuiPdfViewerOptions, TuiPdfViewerService } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiDialogContext, TuiSvgModule } from '@taiga-ui/core'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\nimport { Subscription } from 'rxjs'\n\nimport { AuthService } from '@services'\nimport { IFrameUrlPipe } from '@pipes'\nimport { UploadModel } from '@models'\n\nimport { UploadActionsComponent } from '../upload-actions/upload-actions.component'\n\n@Component({\n  selector: 'spomen-upload-preview',\n  standalone: true,\n  imports: [\n    IFrameUrlPipe,\n    PolymorpheusModule,\n    TuiPreviewModule,\n    UploadActionsComponent,\n    TuiSvgModule,\n  ],\n  templateUrl: './upload-preview.component.html',\n  styleUrl: './upload-preview.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadPreview' })\nexport class UploadPreviewComponent {\n  previews = inject(TuiPreviewDialogService)\n  pdfViewers = inject(TuiPdfViewerService)\n  sanitizer = inject(DomSanitizer)\n\n  destroyRef = inject(DestroyRef)\n  isMobile = inject(TUI_IS_MOBILE)\n\n  userId = inject(AuthService).$user().id\n  isAdmin = inject(AuthService).$isAdmin()\n\n  upload = input.required()\n  isLoading = input(false)\n  isOpen = input.required()\n\n  handleDelete = output()\n  handleOpen = output()\n  handleClose = output()\n\n  isRotatable = computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n  isZoomable = computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n  isEditable = computed(() => {\n    const upload = this.upload()\n\n    return this.upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n\n  id = computed(() => (this.upload() ? this.upload()!.id : ''))\n  title = computed(() =>\n    this.upload() ? `${this.upload()!.file_name}.${this.upload()!.ext}` : ''\n  )\n  ext = computed(() => (this.upload() ? this.upload()!.ext : ''))\n  name = computed(() => (this.upload() ? this.upload()!.name : ''))\n  url = computed(() => (this.upload() ? this.upload()!.url : ''))\n\n  uploadActions = computed(() => ({\n    open: true,\n    save: false,\n    delete: this.isEditable(),\n  }))\n\n  private previewSub: Subscription | null = null\n  index = 0\n\n  @ViewChild('preview')\n  readonly preview?: TemplateRef\n\n  @ViewChild('actions')\n  readonly actions?: TemplateRef\n\n  get previewContent(): PolymorpheusContent {\n    return this.url()\n  }\n\n  constructor() {\n    effect(() => {\n      if (this.isOpen()) {\n        this.show(this.actions)\n      } else if (this.previewSub) this.previewSub.unsubscribe()\n    })\n  }\n\n  show(actions: PolymorpheusContent) {\n    if (this.ext() === 'pdf') {\n      this.previewSub = this.pdfViewers\n        .open(\n          this.sanitizer.bypassSecurityTrustResourceUrl(\n            this.isMobile\n              ? `https://drive.google.com/viewerng/viewer?embedded=true&url=${this.url()}`\n              : this.url()\n          ),\n          {\n            label: this.name(),\n            actions,\n          }\n        )\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe({\n          complete: () => {\n            this.handleClose.emit()\n          },\n        })\n      return\n    }\n\n    this.previewSub = this.previews\n      .open(this.preview || '')\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        complete: () => {\n          this.handleClose.emit()\n        },\n      })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ this.title() }}\n    \n    \n\n    \n\n    @switch (this.ext()) {\n      @case ('webp') {\n        \n      }\n      @case ('mpga') {\n        \n      }\n      @default {\n        \n          \n          Просмотр не поддерживается\n        \n      }\n    }\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ this.title() }}                @switch (this.ext()) {      @case (\\'webp\\') {              }      @case (\\'mpga\\') {              }      @default {                            Просмотр не поддерживается              }    }    '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/upload.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для загрузки файлов\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFileParams\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFileParams\n                        \n                    \n                \n            \n            \n                \ngetFileParams(file: TuiFileLike)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Получение параметров файла\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        TuiFileLike\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Файл tui-kit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileParams\n\n                        \n                            \n                                Параметры файла\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(dto: UploadFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/upload.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { TuiFileLike } from '@taiga-ui/kit'\n\nimport { FileParams } from '@interfaces'\n\nimport { UploadFileDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API, Permission } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для загрузки файлов\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UploadService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadFile(dto: UploadFileDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n    body.append('path', dto.path)\n    body.append('compress', dto.compress.toString())\n    body.append('originalName', dto.file.name)\n\n    if (dto.name) {\n      body.append('name', dto.name)\n    }\n\n    if (dto.private) {\n      body.append('acl', Permission.OwnerOnly)\n    }\n\n    return this.http.post(`${env.apiUrl}${API.UPLOAD}`, body)\n  }\n\n  /**\n   * Получение параметров файла\n   * @param {TuiFileLike} file Файл tui-kit\n   * @return {FileParams} Параметры файла\n   */\n  getFileParams(file: TuiFileLike): FileParams {\n    const filename = file.name.split('.')\n    const ext = filename[filename.length - 1]\n\n    delete filename[filename.length - 1]\n\n    return {\n      name: filename.join('.').slice(0, filename.join('-').length - 1),\n      ext,\n      mime: file.type,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsGQL.html":{"url":"injectables/UploadsGQL.html","title":"injectable - UploadsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/uploads.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UploadsQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/uploads.gql.ts:63\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nexport type UploadsResponse = {\n  uploads: UploadModel[]\n}\n\nexport type UploadsVariables = Pagination & {\n  owner?: string[]\n  name?: string\n  ext?: string[]\n  permissions?: Permission[]\n}\n\nexport type UploadsQueryRef = QueryRef\n\nexport const UploadsQuery = gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n\n@Injectable()\nexport class UploadsGQL extends Query {\n  document = UploadsQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                        \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/validation.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                checkControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from '@angular/forms'\n\nexport class Validation {\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName)\n      const checkControl = controls.get(checkControlName)\n\n      if (checkControl?.errors && !checkControl.errors['matching']) {\n        return null\n      }\n\n      if (control?.value !== checkControl?.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true })\n        return { matching: true }\n      } else {\n        return null\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.0.5 (2024-08-04)\nBug Fixes\n\nprofile: fixed #14 (b8f80ba)\nuploads: fixed #13 (1599df4)\nworkflow: Изменить сценарий релиза (e7319e4)\nworkflow: Изменить сценарий релиза (5ee44fb)\nworkflow: CI (40226bb)\n\n0.0.4 (2024-08-03)\nFeatures\n\nworkflow: Добавить скрипт релиза (3e56403)\n\nBug Fixes\n\nprofile,uploads: Исправить отображение UI (5712d8d)\nuploads: Исправить изменение загрузки (9d20609)\nworkflow: Изменить генерацию документации (dded140)\nworkflow: Изменить генерацию документации (a9ca01e)\nworkflow: Изменить генерацию документации (10415fc)\nworkflow: Изменить генерацию документацию (e50d064)\nworkflow: Изменить сценарии релиза и документации (4ff626a)\nworkflow: Изменить сценарий релиза (990cabe)\nworkflow: Изменить сценарий релиза (be41310)\n\n0.0.3 (2024-08-02)\nFeatures\n\napp: интегрировать хук husky с commitizen (75f0adf)\nupdate package version (9dc7642)\n\nBug Fixes\n\napp: настроить commitizen (d5e22c5)\napp: Настроить commitizen (7bb7ca5)\nworkflow: Запускать релиз при публикации тега (8e4ac0a)\nworkflow: Удалить линтер для коммитов (b8284fa)\n\n0.0.2 (2024-07-02)\ninit\n0.0.1 (2024-05-17)\ninit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            appInitializerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/callback/auth-callback.component.ts\n            \n            component\n            AuthCallbackComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/pass/auth-pass.component.ts\n            \n            component\n            AuthPassComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/sign-in/sign-in.component.ts\n            \n            component\n            SignInComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/auth/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/chats/chats.component.ts\n            \n            component\n            ChatsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/enter-leave.animation.ts\n            \n            variable\n            enterLeaveAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/account-input/account-input.component.ts\n            \n            component\n            AccountInputComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/common/components/extension-input/extension-input.component.ts\n            \n            component\n            ExtensionInputComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/common/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/components/me/me.component.ts\n            \n            component\n            MeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/components/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            variable\n            protectedRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/components/oops/oops.component.ts\n            \n            component\n            OopsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/permission-input/permission-input.component.ts\n            \n            component\n            PermissionInputComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/common/directives/scroll-near-end.directive.ts\n            \n            directive\n            ScrollNearEndDirective\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            function\n            apolloOptionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            variable\n            graphqlProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/models/getAccount.model.ts\n            \n            interface\n            GetAccountModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            injectable\n            DeleteUploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            variable\n            DeleteUploadByIdQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n            \n            injectable\n            UpdateUploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n            \n            variable\n            UpdateUploadByIdQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/account.gql.ts\n            \n            injectable\n            AccountGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n            \n            injectable\n            AccountsInfoByUsernameGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-by-id.gql.ts\n            \n            injectable\n            UploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-extensions.gql.ts\n            \n            injectable\n            UploadExtensionsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            injectable\n            UploadsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            variable\n            UploadsQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth-callback.guard.ts\n            \n            variable\n            authCallbackGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/http.interceptor.ts\n            \n            variable\n            httpRequestInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/iframe-url.pipe.ts\n            \n            pipe\n            IFrameUrlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/sex.pipe.ts\n            \n            pipe\n            SexPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/scroll.service.ts\n            \n            injectable\n            ScrollService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/memories/memories.component.ts\n            \n            component\n            MemoriesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/profile/change-avatar/change-avatar.component.ts\n            \n            component\n            ChangeAvatarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            variable\n            sexIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/timelines/timelines.component.ts\n            \n            component\n            TimelinesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-actions/upload-actions.component.ts\n            \n            component\n            UploadActionsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-file/upload-file.component.ts\n            \n            component\n            UploadFileComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-info/upload-info.component.ts\n            \n            component\n            UploadInfoComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-list-item/upload-list-item.component.ts\n            \n            component\n            UploadListItemComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-preview/upload-preview.component.ts\n            \n            component\n            UploadPreviewComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/uploads/uploads.component.ts\n            \n            component\n            UploadsComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                src/envs/env.development.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.staging.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            variable\n            initialAccount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            interface\n            AuthenticatedUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            variable\n            initialAuthenticatedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/env.interface.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            ApiError\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            GraphqlError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/interfaces/route.interface.ts\n            \n            interface\n            Route\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/interfaces/ui.interface.ts\n            \n            interface\n            UploadActionsParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/interfaces/upload.interface.ts\n            \n            interface\n            FileParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountShortModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/models/auth.model.ts\n            \n            interface\n            AuthModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/models/upload.model.ts\n            \n            interface\n            UploadModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            debouncedSignal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getCurrentPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getQueryPayload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            isNotFound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/sentry.ts\n            \n            function\n            initSentry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializePermissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializeRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/validation.ts\n            \n            class\n            Validation\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/cdk : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @apollo/client : ^3.0.0\n        \n            @sentry/angular : ^8.13.0\n        \n            @sentry/cli : ^2.32.1\n        \n            @taiga-ui/addon-charts : ^3.83.0\n        \n            @taiga-ui/addon-commerce : ^3.83.0\n        \n            @taiga-ui/addon-mobile : ^3.83.0\n        \n            @taiga-ui/addon-preview : ^3.83.0\n        \n            @taiga-ui/addon-table : ^3.83.0\n        \n            @taiga-ui/addon-tablebars : ^3.83.0\n        \n            @taiga-ui/cdk : ^3.83.0\n        \n            @taiga-ui/core : ^3.83.0\n        \n            @taiga-ui/experimental : ^3.84.0\n        \n            @taiga-ui/icons : ^3.83.0\n        \n            @taiga-ui/kit : ^3.83.0\n        \n            @taiga-ui/layout : ^3.83.0\n        \n            @taiga-ui/styles : ^3.83.0\n        \n            @tinkoff/ng-dompurify : 4.0.0\n        \n            @vkid/sdk : ^1.1.0\n        \n            apollo-angular : 7.0.2\n        \n            dompurify : 3.0.6\n        \n            graphql : ^16\n        \n            normalize.css : ^8.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.6.3\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API   (src/.../api.enum.ts)\n                        \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/enums/api.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        API\n                    \n                \n                        \n                            \n                                 AUTH_ME\n                            \n                        \n                        \n                            \n                                Value : /auth\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_IN\n                            \n                        \n                        \n                            \n                                Value : /auth/token\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_UP\n                            \n                        \n                        \n                            \n                                Value : /auth/sign-up\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_OUT\n                            \n                        \n                        \n                            \n                                Value : /auth/logout\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH_CLEAR\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh/clear\n                            \n                        \n                        \n                            \n                                 VK_ID_EXCHANGE_TOKEN\n                            \n                        \n                        \n                            \n                                Value : /vk-id/exchange-token\n                            \n                        \n                        \n                            \n                                 ACCOUNT_AVATAR\n                            \n                        \n                        \n                            \n                                Value : /account/avatar\n                            \n                        \n                        \n                            \n                                 UPLOAD\n                            \n                        \n                        \n                            \n                                Value : /upload\n                            \n                        \n            \n        \n\n    src/types/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 OwnerOnly\n                            \n                        \n                        \n                            \n                                Value : OwnerOnly\n                            \n                        \n                        \n                            \n                                 ChatOnly\n                            \n                        \n                        \n                            \n                                Value : ChatOnly\n                            \n                        \n                        \n                            \n                                 MemberOnly\n                            \n                        \n                        \n                            \n                                Value : MemberOnly\n                            \n                        \n            \n        \n\n    src/types/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 Administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apolloOptionsFactory   (src/.../graphql.provider.ts)\n                        \n                        \n                            appInitializerFactory   (src/.../app.config.ts)\n                        \n                        \n                            debouncedSignal   (src/.../funcs.ts)\n                        \n                        \n                            getCurrentPath   (src/.../funcs.ts)\n                        \n                        \n                            getQueryPayload   (src/.../funcs.ts)\n                        \n                        \n                            initSentry   (src/.../sentry.ts)\n                        \n                        \n                            isNotFound   (src/.../funcs.ts)\n                        \n                        \n                            serializePermissions   (src/.../serialize.ts)\n                        \n                        \n                            serializeRole   (src/.../serialize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apolloOptionsFactory\n                        \n                    \n                \n            \n            \n                \napolloOptionsFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ApolloClientOptions\n\n                        \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appInitializerFactory\n                        \n                    \n                \n            \n            \n                \nappInitializerFactory(config: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/funcs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debouncedSignal\n                        \n                    \n                \n            \n            \n                \ndebouncedSignal(sourceSignal: Signal, debounceTimeInMs: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                sourceSignal\n                                            \n                                                        Signal\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                debounceTimeInMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentPath\n                        \n                    \n                \n            \n            \n                \ngetCurrentPath(router: Router)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQueryPayload\n                        \n                    \n                \n            \n            \n                \ngetQueryPayload(params: Params)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotFound\n                        \n                    \n                \n            \n            \n                \nisNotFound(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/sentry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initSentry\n                        \n                    \n                \n            \n            \n                \ninitSentry()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    src/utils/serialize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serializePermissions\n                        \n                    \n                \n            \n            \n                \nserializePermissions(permissions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissions\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Permission[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nspomen-client\nПлатформа воспоминаний\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    28 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.5\n        \n            Description : Platform of memories\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountQueryRef   (src/.../account.gql.ts)\n                        \n                        \n                            AccountResponse   (src/.../account.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameQueryRef   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameResponse   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameVariables   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountVariables   (src/.../account.gql.ts)\n                        \n                        \n                            AuthCallbackDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            DeleteUploadByIdResponse   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            DeleteUploadByIdVariables   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            PaginatedQuery   (src/.../index.ts)\n                        \n                        \n                            Pagination   (src/.../index.ts)\n                        \n                        \n                            RemoveAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            ScrollState   (src/.../scroll.service.ts)\n                        \n                        \n                            Sex   (src/.../sex.interface.ts)\n                        \n                        \n                            SignInDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            SignUpDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            UpdateUploadByIdResponse   (src/.../update-upload-by-id.gql.ts)\n                        \n                        \n                            UpdateUploadByIdVariables   (src/.../update-upload-by-id.gql.ts)\n                        \n                        \n                            UploadAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            UploadByIdQueryRef   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdResponse   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdVariables   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadExtensionsQueryRef   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsResponse   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsVariables   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadFileDto   (src/.../upload.dtos.ts)\n                        \n                        \n                            UploadsQueryRef   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsResponse   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsVariables   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/queries/account.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/auth.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    AuthCallbackDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignInDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignUpDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/index.ts\n    \n    \n        \n            \n                \n                    \n                    PaginatedQuery\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pagination\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/account.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    RemoveAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/services/scroll.service.ts\n    \n    \n        \n            \n                \n                    \n                    ScrollState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/interfaces/sex.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Sex\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\"\n\n                \n            \n        \n    \n    src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UpdateUploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateUploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadByIdQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-extensions.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/types/dtos/upload.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    UploadFileDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/uploads.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authCallbackGuard   (src/.../auth-callback.guard.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            DeleteUploadByIdQuery   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            enterLeaveAnimation   (src/.../enter-leave.animation.ts)\n                        \n                        \n                            env   (src/.../env.development.ts)\n                        \n                        \n                            env   (src/.../env.staging.ts)\n                        \n                        \n                            env   (src/.../env.ts)\n                        \n                        \n                            graphqlProvider   (src/.../graphql.provider.ts)\n                        \n                        \n                            httpRequestInterceptor   (src/.../http.interceptor.ts)\n                        \n                        \n                            initialAccount   (src/.../account.interface.ts)\n                        \n                        \n                            initialAuthenticatedUser   (src/.../authenticated-user.interface.ts)\n                        \n                        \n                            inOutAnimation200   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutAnimation500   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutGridAnimation200   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            inOutGridAnimation500   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            protectedRoutes   (src/.../nav.component.ts)\n                        \n                        \n                            sexIcons   (src/.../profile.component.ts)\n                        \n                        \n                            UpdateUploadByIdQuery   (src/.../update-upload-by-id.gql.ts)\n                        \n                        \n                            UploadsQuery   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes, withViewTransitions()),\n    importProvidersFrom(TuiRootModule),\n    provideHttpClient(withInterceptors([httpRequestInterceptor])),\n    {\n      provide: ErrorHandler,\n      useValue: Sentry.createErrorHandler({\n        showDialog: false,\n      }),\n    },\n    {\n      provide: Sentry.TraceService,\n      deps: [Router],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: appInitializerFactory,\n      deps: [ConfigService, Sentry.TraceService],\n      multi: true,\n    },\n    { provide: TUI_SANITIZER, useClass: NgDompurifySanitizer },\n    {\n      provide: TUI_LANGUAGE,\n      useValue: of(TUI_RUSSIAN_LANGUAGE),\n    },\n    { provide: LOCALE_ID, useValue: 'ru' },\n    graphqlProvider,\n    ConfigService,\n    AuthService,\n    AccountService,\n    UploadService,\n    ScrollService,\n    AccountGQL,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth-callback.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authCallbackGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route) => {\n  const router = inject(Router)\n\n  const payload = getQueryPayload(route.queryParams)\n\n  return payload && payload.token\n    ? true\n    : router.createUrlTree(['/auth/sign-in'])\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const auth = inject(AuthService)\n  const router = inject(Router)\n\n  const currentPath = getCurrentPath(router)\n  const isAuthPage = currentPath.includes('/auth')\n\n  return auth.$$isAuth.pipe(\n    withLatestFrom(auth.$$isLoading),\n    filter(([_, loading]) => !loading),\n    map(([isAuth]) => {\n      if (\n        (currentPath.includes('/auth/callback') && isAuth) ||\n        (isAuthPage && !isAuth)\n      ) {\n        return true\n      }\n\n      if (isAuthPage && isAuth) {\n        return router.createUrlTree(['/'])\n      }\n\n      return isAuth\n        ? true\n        : router.createUrlTree(['/auth'], {\n            queryParams: { url: currentPath },\n          })\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeleteUploadByIdQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/enter-leave.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enterLeaveAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('enterLeave', [\n  transition(':enter', [\n    style({\n      transform: 'translateX(-50%)',\n      opacity: 0,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(0)',\n        opacity: 1,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      transform: 'translateX(0)',\n      opacity: 1,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(50%)',\n        opacity: 0,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/envs/env.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'local',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn:\n    'https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.staging.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'staging',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'production',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        graphqlProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  Apollo,\n  {\n    provide: APOLLO_OPTIONS,\n    useFactory: apolloOptionsFactory,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/http.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpRequestInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  req = req.clone({\n    withCredentials: true,\n    headers: req.headers\n      .set('Access-Control-Allow-Origin', env.origin)\n      .set('Access-Control-Allow-Methods', 'GET,POST,PUT,DELETE,OPTIONS')\n      .set(\n        'Access-Control-Allow-Headers',\n        'Accept, Cache-Control, Pragma, Origin, Authorization, Content-Type, X-Requested-With, sentry-trace, baggage'\n      )\n      .set('Access-Control-Allow-Credentials', 'true'),\n  })\n\n  return next(req).pipe(\n    catchError((err: Error) => {\n      if (env.environment !== 'production') {\n        console.log(err)\n      }\n      return throwError(() => err)\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/account.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAccount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/authenticated-user.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAuthenticatedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out-grid.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/components/nav/nav.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        protectedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/profile/profile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sexIcons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UpdateUploadByIdQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  mutation updateUploadById($data: UploadUpdateInput!, $id: String!) {\n    updateUpload(data: $data, where: { id: $id }) {\n      id\n      url\n      name\n      file_name\n      permissions\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/queries/uploads.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UploadsQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
