var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,0.927,1,0.695]],["body/interfaces/Account.html",[0,1.016,1,1.131,2,1.242,3,0.169,4,0.208,5,0.169,6,3.331,7,0.29,8,0.533,9,3.126,10,3.448,11,3.633,12,2.984,13,4.642,14,2.403,15,3.126,16,3.633,17,3.448,18,2.614,19,3.28,20,3.838,21,1.381,22,0.016,23,2.582,24,0.566,25,3.675,26,3.69,27,2.17,28,2.576,29,2.962,30,0.334,31,4.282,32,0.275,33,1.402,34,3.048,35,0.011,36,0.011]],["title/injectables/AccountGQL.html",[37,1.004,38,2.574]],["body/injectables/AccountGQL.html",[1,0.902,3,0.2,4,0.246,5,0.2,7,0.344,8,0.595,9,2.808,10,3.097,11,3.263,12,2.68,14,2.158,15,2.808,16,3.263,18,2.849,19,2.946,20,3.447,21,1.174,22,0.016,24,0.502,30,0.537,32,0.35,35,0.012,36,0.012,37,1.626,38,4.169,39,2.15,40,3.945,41,3.263,42,4.289,43,3.982,44,0.827,45,0.791,46,3.756,47,6.322,48,6.322,49,2.946,50,0.827,51,5.072,52,3.892,53,2.617,54,2.765,55,0.594,56,3.654,57,1.883,58,4.393,59,4.393,60,4.393,61,3.122,62,2.932,63,0.505]],["title/components/AccountInputComponent.html",[64,0.19,65,0.855]],["body/components/AccountInputComponent.html",[1,1.115,3,0.098,4,0.121,5,0.098,7,0.169,8,0.361,18,1.424,21,1.068,22,0.016,23,1.655,24,0.517,27,0.849,30,0.529,32,0.121,35,0.007,36,0.007,44,1.157,45,1.107,50,1.224,55,0.291,57,0.923,63,0.248,64,0.228,65,1.316,66,0.875,67,0.59,68,0.59,69,0.59,70,6.529,71,6.529,72,1.77,73,1.487,74,2.08,75,3.643,76,0.523,77,1.98,78,2.731,79,3.643,80,2.731,81,1.019,82,2.984,83,3.335,84,1.777,85,1.773,86,2.782,87,0.806,88,0.911,89,1.985,90,2.883,91,3.643,92,2.417,93,3.643,94,3.643,95,0.911,96,2.984,97,0.911,98,2.984,99,4.684,100,4.056,101,4.684,102,4.684,103,2.391,104,4.684,105,4.684,106,2.182,107,2.871,108,4.425,109,4.425,110,0.948,111,3.836,112,2.338,113,2.984,114,2.984,115,2.984,116,4.096,117,1.704,118,3.643,119,3.278,120,4.425,121,3.643,122,2.487,123,2.154,124,1.817,125,2.154,126,2.154,127,3.836,128,2.487,129,1.655,130,0.797,131,1.301,132,1.77,133,1.485,134,2.487,135,2.984,136,2.487,137,2.984,138,2.487,139,2.984,140,2.08,141,2.487,142,2.487,143,2.554,144,3.836,145,2.487,146,2.936,147,3.169,148,2.487,149,2.487,150,2.883,151,3.836,152,3.836,153,2.487,154,3.836,155,2.154,156,3.643,157,2.154,158,1.788,159,2.154,160,2.092,161,2.154,162,1.879,163,2.487,164,2.487,165,0.751,166,1.159,167,1.159,168,1.158,169,0.814,170,1.437,171,1.77,172,1.283,173,1.283,174,0.964,175,2.154,176,3.836,177,1.007,178,1.007,179,0.567,180,0.567,181,1.437,182,1.531,183,0.59,184,2.487,185,2.487,186,2.487,187,4.684,188,2.154,189,1.934,190,2.154,191,2.487,192,1.283,193,1.934,194,2.154,195,1.985,196,2.487,197,2.487,198,2.217,199,1.054,200,1.639,201,2.487,202,1.554,203,1.437,204,1.283,205,1.218,206,2.487,207,2.487,208,2.487,209,1.934,210,1.934,211,1.934,212,2.984,213,0.59,214,0.911,215,0.875,216,0.502,217,1.25,218,0.59,219,1.112,220,0.544,221,0.59,222,0.544,223,0.84,224,0.59,225,0.544,226,0.59,227,0.544,228,0.59,229,0.544,230,0.59,231,0.59,232,0.544,233,0.59,234,0.544,235,0.59,236,0.544,237,0.59,238,0.544,239,0.59,240,0.544,241,0.59,242,0.544,243,0.59,244,0.544,245,0.59,246,0.544,247,0.59,248,0.544,249,0.59,250,0.544,251,0.59,252,0.544,253,0.59,254,0.544,255,0.442,256,0.544,257,0.59,258,0.544,259,0.911,260,0.59,261,0.544,262,0.59,263,0.544,264,0.59,265,0.544,266,1.012,267,0.59,268,0.544,269,0.59,270,0.544,271,0.59,272,0.544,273,0.567,274,0.59,275,0.544,276,0.59,277,0.567,278,0.544,279,0.567,280,0.523,281,0.567,282,0.59]],["title/interfaces/AccountModel.html",[0,0.927,56,2.257]],["body/interfaces/AccountModel.html",[0,1.376,2,1.284,3,0.175,4,0.215,5,0.175,7,0.3,8,0.545,9,3.045,10,3.359,11,3.539,12,3.017,14,2.429,15,3.161,16,3.539,17,3.359,18,2.643,19,3.195,20,3.739,21,1.381,22,0.016,23,2.539,24,0.572,25,4.412,26,3.739,27,2.206,28,2.619,29,3.012,30,0.452,32,0.282,35,0.011,36,0.011,56,3.352,57,1.645,182,2.727,283,3.446,284,3.964,285,4.522,286,2.779,287,2.064]],["title/injectables/AccountService.html",[37,1.004,288,2.574]],["body/injectables/AccountService.html",[3,0.193,4,0.237,5,0.193,7,0.331,8,0.581,22,0.016,24,0.493,30,0.585,32,0.237,33,1.6,35,0.012,36,0.012,37,1.588,39,2.072,44,0.797,45,0.763,50,1.105,55,0.572,57,1.814,61,3.008,62,2.825,63,0.487,103,2.311,110,1.526,129,1.942,130,0.761,131,1.526,133,1.526,165,1.475,286,1.98,287,2.277,288,4.072,289,4.232,290,3.222,291,4.821,292,5.349,293,5.349,294,6.176,295,6.162,296,4.887,297,4.804,298,6.176,299,6.162,300,4.887,301,4.821,302,4.397,303,4.887,304,3.008,305,3.222,306,3.479,307,3.187,308,5.349,309,1.98,310,4.232,311,4.232,312,4.232,313,4.232,314,4.232,315,6.176,316,4.887,317,2.293,318,4.232,319,4.887,320,4.887,321,4.887,322,4.887]],["title/interfaces/AccountShortModel.html",[0,0.927,182,2.403]],["body/interfaces/AccountShortModel.html",[0,1.505,2,1.478,3,0.201,4,0.248,5,0.201,7,0.346,8,0.597,9,2.264,10,2.497,11,2.63,12,3.15,14,2.536,15,3.3,16,2.63,17,2.497,18,2.759,19,2.375,20,2.779,21,1.383,22,0.016,23,2.513,24,0.526,25,3.991,26,3.458,27,1.74,28,2.065,29,2.375,30,0.495,32,0.308,35,0.012,36,0.012,56,2.946,57,1.893,182,3.904,283,3.965,284,2.946,285,3.361,286,2.57,287,2.375]],["title/injectables/AccountsInfoByUsernameGQL.html",[37,1.004,83,2.779]],["body/injectables/AccountsInfoByUsernameGQL.html",[3,0.272,4,0.246,5,0.2,7,0.343,8,0.594,12,2.677,14,2.156,15,2.805,18,2.848,21,1.173,22,0.016,24,0.502,28,2.559,30,0.537,32,0.35,35,0.012,36,0.012,37,1.624,39,2.147,41,3.259,42,4.287,43,3.979,44,0.826,45,0.79,46,3.753,50,0.826,52,3.888,53,2.613,54,2.761,55,0.593,57,1.88,63,0.505,83,4.497,100,5.961,156,3.939,182,3.888,323,4.913,324,3.939,325,6.316,326,4.913,327,4.913,328,3.259,329,6.316,330,3.888,331,5.064,332,4.385,333,4.385]],["title/interfaces/ApiError.html",[0,0.927,334,2.779]],["body/interfaces/ApiError.html",[0,1.601,2,1.635,3,0.222,4,0.274,5,0.222,7,0.382,8,0.634,21,1.382,22,0.015,24,0.545,32,0.328,35,0.013,36,0.013,131,1.666,205,3.663,290,5.04,334,4.802,335,4.386,336,5.946,337,4.931,338,4.014,339,4.883,340,2.627]],["title/components/AppComponent.html",[64,0.19,220,0.855]],["body/components/AppComponent.html",[1,0.502,3,0.111,4,0.137,5,0.111,7,0.192,8,0.398,12,1.791,18,1.049,22,0.016,24,0.308,27,0.964,30,0.593,32,0.137,33,0.925,35,0.008,36,0.008,44,1.03,45,0.986,50,1.143,55,0.331,62,2.443,63,0.281,64,0.246,65,0.618,66,0.964,67,0.67,68,0.67,69,0.67,73,1.638,74,2.249,76,0.594,77,2.181,81,0.818,84,1.799,85,1.795,87,0.888,88,1.003,89,2.147,95,1.003,97,1.003,103,2.46,106,2.36,110,1.044,112,2.496,124,1.745,129,0.888,130,0.848,131,0.698,133,1.251,158,1.969,165,0.853,167,1.316,168,1.529,169,0.925,174,1.095,177,1.144,178,1.144,179,0.644,180,0.644,183,0.67,199,1.197,202,1.144,213,0.67,214,1.003,215,0.964,216,0.57,217,1.334,218,0.67,219,1.202,220,1.231,221,0.67,222,0.618,223,1.318,224,0.67,225,0.618,226,0.67,227,0.618,228,0.67,229,0.618,230,0.67,231,0.67,232,0.618,233,0.67,234,0.618,235,0.67,236,0.618,237,0.67,238,0.618,239,0.67,240,1.231,241,0.67,242,0.618,243,0.67,244,0.618,245,0.67,246,1.231,247,0.67,248,1.231,249,0.67,250,0.618,251,0.67,252,1.231,253,0.67,254,0.618,255,0.502,256,0.618,257,0.67,258,0.618,259,1.003,260,0.67,261,0.618,262,0.67,263,0.618,264,0.67,265,0.618,266,1.071,267,0.67,268,0.618,269,0.67,270,0.618,271,0.67,272,0.618,273,0.644,274,0.67,275,0.618,276,0.67,277,0.644,278,0.618,279,0.964,280,1.328,281,0.644,282,0.67,304,1.738,307,2.181,317,1.049,340,2.36,341,2.446,342,3.339,343,5.064,344,5.064,345,3.939,346,5.064,347,3.939,348,5.064,349,2.761,350,4.226,351,4.226,352,3.117,353,2.619,354,4.386,355,3.339,356,3.66,357,3.706,358,2.613,359,4.226,360,4.226,361,2.824,362,3.66,363,2.181,364,4.226,365,2.824,366,4.226,367,2.824,368,2.824,369,2.181,370,2.824,371,3.009,372,2.824,373,2.07,374,2.824,375,4.226,376,2.824,377,3.117,378,3.287,379,2.824,380,1.862,381,1.862,382,3.287,383,1.095,384,2.446,385,2.197,386,1.095,387,1.457,388,1.862,389,1.197,390,3.287,391,3.287,392,3.66,393,2.197,394,2.011,395,2.824,396,2.824,397,2.824,398,2.446,399,3.66,400,4.386,401,2.824,402,4.226,403,2.446,404,2.824,405,2.824,406,1.862,407,2.443,408,2.824,409,2.824,410,2.197,411,2.824,412,2.446,413,2.824,414,2.824,415,2.824,416,1.862,417,2.824,418,5.064,419,1.457,420,2.011,421,2.824,422,2.824,423,2.824,424,2.824,425,1.862,426,4.226,427,3.287,428,6.316,429,3.66]],["title/components/AuthCallbackComponent.html",[64,0.19,222,0.855]],["body/components/AuthCallbackComponent.html",[1,0.581,3,0.129,4,0.159,5,0.129,7,0.221,8,0.442,22,0.016,24,0.401,30,0.566,32,0.159,33,1.069,35,0.009,36,0.009,44,1.085,45,1.038,50,1.144,55,0.382,63,0.325,64,0.268,65,0.715,66,1.072,67,0.775,68,0.775,69,0.775,73,1.822,74,2.446,76,0.686,81,0.91,84,1.821,85,1.818,87,0.988,88,1.116,89,2.335,95,1.116,97,1.116,103,2.592,110,1.161,112,2.676,124,1.747,130,0.864,133,1.161,143,3.003,165,0.986,168,0.986,169,1.069,177,1.323,178,1.323,179,0.744,180,0.744,183,0.775,195,1.384,199,1.384,202,1.323,213,0.775,214,1.116,215,1.072,216,0.659,217,1.43,218,0.775,219,1.307,220,0.715,221,0.775,222,1.319,223,1.608,224,0.775,225,0.715,226,0.775,227,1.319,228,0.775,229,0.715,230,0.775,231,0.775,232,0.715,233,0.775,234,0.715,235,0.775,236,0.715,237,0.775,238,0.715,239,0.775,240,0.715,241,0.775,242,0.715,243,0.775,244,0.715,245,0.775,246,0.715,247,0.775,248,0.715,249,0.775,250,0.715,251,0.775,252,0.715,253,0.775,254,0.715,255,0.581,256,0.715,257,0.775,258,0.715,259,1.116,260,0.775,261,0.715,262,0.775,263,0.715,264,0.775,265,0.715,266,1.136,267,0.775,268,0.715,269,0.775,270,0.715,271,0.775,272,0.715,273,0.744,274,0.775,275,0.715,276,0.775,277,0.744,278,0.715,279,0.744,280,0.686,281,0.744,282,0.775,305,2.152,309,1.904,342,3.632,349,3.481,353,2.808,355,3.632,357,3.973,363,2.426,369,2.426,373,2.302,377,3.39,383,1.266,386,1.266,389,1.384,394,2.324,406,3.099,407,2.717,419,1.685,425,2.152,427,3.656,430,6.187,431,2.827,432,4.7,433,4.7,434,4.7,435,3.62,436,2.842,437,4.7,438,3.265,439,4.7,440,3.265,441,3.265,442,3.632,443,4.7,444,3.265,445,3.346,446,3.265,447,3.346,448,3.265,449,3.265,450,3.265,451,2.324,452,3.265,453,3.265,454,3.346,455,2.324,456,3.265,457,3.656,458,2.827,459,2.539,460,2.539,461,2.827,462,1.685,463,2.539,464,2.539,465,2.324]],["title/components/AuthComponent.html",[64,0.19,225,0.855]],["body/components/AuthComponent.html",[1,0.661,3,0.147,4,0.18,5,0.147,7,0.252,8,0.484,21,0.877,22,0.016,23,2.107,24,0.375,27,2.178,28,2.086,30,0.555,32,0.18,35,0.01,36,0.01,44,0.964,45,0.922,50,1.041,55,0.435,63,0.37,64,0.287,65,0.813,66,1.174,67,0.881,68,0.881,69,0.881,73,1.996,74,2.624,76,0.781,81,0.997,84,1.838,85,1.836,87,1.082,88,1.222,95,1.222,97,1.222,110,1.272,112,2.834,124,1.493,130,0.855,133,0.918,165,1.121,168,1.121,174,1.44,179,0.847,180,0.847,183,0.881,213,0.881,214,1.222,215,1.174,216,0.749,217,1.515,218,0.881,219,1.403,220,0.813,221,0.881,222,0.813,223,1.468,224,0.881,225,1.397,226,0.881,227,0.813,228,0.881,229,0.813,230,0.881,231,0.881,232,0.813,233,0.881,234,0.813,235,0.881,236,0.813,237,0.881,238,0.813,239,0.881,240,0.813,241,0.881,242,0.813,243,0.881,244,0.813,245,0.881,246,0.813,247,0.881,248,0.813,249,0.881,250,0.813,251,0.881,252,0.813,253,0.881,254,0.813,255,0.661,256,0.813,257,0.881,258,1.397,259,1.515,260,0.881,261,1.397,262,0.881,263,0.813,264,0.881,265,0.813,266,1.192,267,0.881,268,0.813,269,0.881,270,0.813,271,0.881,272,0.813,273,0.847,274,0.881,275,0.813,276,0.881,277,0.847,278,0.813,279,0.847,280,0.781,281,0.847,282,0.881,340,2.399,363,1.916,383,1.44,392,4.459,407,2.146,436,3.05,447,3.665,451,2.644,466,3.216,467,5.91,468,5.148,469,5.148,470,7.111,471,4.597,472,5.148,473,3.713,474,3.713,475,3.713,476,3.713,477,4.005,478,2.889,479,3.713,480,2.889,481,3.713,482,2.889,483,3.713]],["title/interfaces/AuthModel.html",[0,0.927,484,2.779]],["body/interfaces/AuthModel.html",[0,1.395,2,1.704,3,0.232,4,0.285,5,0.232,7,0.399,8,0.65,21,1.335,22,0.015,24,0.504,30,0.458,32,0.285,35,0.013,36,0.013,41,3.567,56,4.244,484,4.921,485,5.089,486,7.58,487,7.58,488,5.875]],["title/components/AuthPassComponent.html",[64,0.19,227,0.855]],["body/components/AuthPassComponent.html",[1,0.504,3,0.112,4,0.138,5,0.112,7,0.192,8,0.398,21,0.483,22,0.016,24,0.461,30,0.537,32,0.138,33,0.927,35,0.008,36,0.008,44,1.099,45,1.023,50,1.162,55,0.332,63,0.282,64,0.246,65,0.62,66,0.966,67,0.672,68,0.672,69,0.672,73,1.642,74,2.253,76,0.595,81,0.82,84,1.799,85,1.796,87,0.89,88,1.005,89,2.15,92,2.617,95,1.005,97,1.005,103,2.532,106,2.363,110,1.046,112,2.5,119,3.285,124,1.747,129,0.89,130,0.849,131,0.7,133,1.253,143,2.765,158,1.973,165,0.855,166,1.32,167,1.32,168,0.855,169,0.927,177,1.147,178,1.147,179,0.646,180,0.646,183,0.672,195,1.201,202,1.147,213,0.672,214,1.005,215,0.966,216,0.571,217,1.336,218,0.672,219,1.204,220,0.62,221,0.672,222,0.62,223,1.475,224,0.672,225,0.62,226,0.672,227,1.232,228,0.672,229,0.62,230,0.672,231,0.672,232,0.62,233,0.672,234,0.62,235,0.672,236,0.62,237,0.672,238,0.62,239,0.672,240,0.62,241,0.672,242,0.62,243,0.672,244,0.62,245,0.672,246,0.62,247,0.672,248,0.62,249,0.672,250,0.62,251,0.672,252,0.62,253,0.672,254,0.62,255,0.504,256,0.62,257,0.672,258,0.62,259,1.005,260,0.672,261,0.62,262,0.672,263,0.62,264,0.672,265,0.62,266,1.072,267,0.672,268,0.62,269,0.672,270,0.62,271,0.672,272,0.62,273,0.646,274,0.672,275,0.62,276,0.672,277,0.646,278,0.62,279,0.646,280,0.595,281,0.646,282,0.672,305,1.867,309,2.885,317,1.052,342,3.344,349,2.765,355,3.344,357,3.711,358,1.461,363,2.185,377,3.122,383,1.098,394,2.016,407,2.448,425,1.867,435,3.263,436,2.617,442,4.321,445,3.015,447,3.015,451,2.016,454,3.015,455,2.016,457,2.203,458,2.453,465,2.016,489,6.245,490,2.453,491,4.687,492,4.235,493,4.235,494,3.945,495,3.344,496,4.378,497,2.203,498,4.378,499,2.832,500,3.294,501,4.235,502,2.832,503,4.235,504,2.832,505,2.832,506,2.832,507,3.892,508,5.218,509,2.832,510,3.015,511,2.832,512,2.832,513,2.832,514,2.832,515,2.832,516,3.015,517,2.016,518,2.832,519,1.867,520,2.832,521,2.203,522,2.203,523,3.015,524,2.453,525,2.203,526,2.832,527,2.203,528,3.294,529,2.832,530,4.235,531,4.235,532,3.668,533,2.832,534,2.832,535,2.832,536,2.832,537,1.867,538,3.344,539,1.743,540,4.378,541,4.393,542,2.832,543,2.832,544,2.453,545,2.832,546,2.203,547,2.203,548,2.203]],["title/injectables/AuthService.html",[37,1.004,386,1.514]],["body/injectables/AuthService.html",[2,0.936,3,0.127,4,0.157,5,0.127,7,0.219,8,0.438,9,2.662,10,1.581,11,1.665,12,1.368,13,2.128,14,1.101,15,1.433,16,1.665,17,1.581,18,1.198,19,1.504,20,1.759,22,0.016,23,2.147,24,0.539,26,1.759,30,0.556,32,0.157,35,0.009,36,0.009,37,1.199,39,1.368,44,1.141,45,1.091,50,1.251,55,0.378,57,1.198,61,1.986,62,1.865,63,0.322,103,1.868,110,1.152,124,1.352,129,1.884,130,0.739,131,1.481,132,2.297,133,1.76,143,4.219,146,2.824,147,3.425,150,4.204,165,0.974,171,2.297,172,1.665,173,1.665,177,1.307,287,1.504,291,3.896,297,5.153,301,3.896,302,3.319,304,1.986,305,2.128,306,2.297,307,2.405,309,1.889,317,2.686,318,2.795,382,3.626,386,1.807,416,3.608,419,1.665,420,2.297,435,3.418,442,3.608,455,4.267,461,4.037,462,2.405,484,4.267,495,2.128,510,3.319,549,2.795,550,5.737,551,4.256,552,5.993,553,5.19,554,5.993,555,3.626,556,4.037,557,5.993,558,4.037,559,3.227,560,3.227,561,3.227,562,3.227,563,4.661,564,3.227,565,4.661,566,5.19,567,3.227,568,4.661,569,3.227,570,3.227,571,4.661,572,5.19,573,3.227,574,4.661,575,3.227,576,4.661,577,3.227,578,4.661,579,4.661,580,3.227,581,4.661,582,3.227,583,4.661,584,3.227,585,3.227,586,4.661,587,3.227,588,3.227,589,2.795,590,2.297,591,4.037,592,4.037,593,1.986,594,2.297,595,3.227,596,3.227,597,3.227,598,3.227,599,3.227,600,3.227,601,3.227,602,3.227,603,3.227,604,3.227,605,3.227,606,3.227,607,3.227,608,3.227,609,4.661,610,4.661,611,3.227,612,3.227,613,3.227,614,3.227,615,3.227,616,3.227,617,3.227,618,2.51,619,2.795,620,3.227,621,3.227,622,3.227,623,3.227,624,3.227,625,3.227,626,3.227,627,3.227]],["title/interfaces/AuthenticatedUser.html",[0,0.927,593,2.403]],["body/interfaces/AuthenticatedUser.html",[0,1.317,1,1.275,2,1.609,3,0.219,4,0.269,5,0.219,7,0.376,8,0.628,9,2.463,10,2.717,11,2.863,12,2.352,13,3.658,14,1.893,15,2.463,16,2.863,17,2.717,18,2.06,19,2.585,20,3.024,21,1.221,22,0.016,23,2.551,24,0.404,30,0.433,32,0.324,33,1.817,35,0.013,36,0.013,41,3.447,495,5.018,593,4.411,594,3.949,628,4.315,629,4.315,630,5.547]],["title/components/ChangeAvatarComponent.html",[64,0.19,229,0.855]],["body/components/ChangeAvatarComponent.html",[1,0.969,3,0.105,4,0.129,5,0.159,7,0.18,8,0.38,9,1.792,14,1.665,21,0.999,22,0.016,23,1.713,24,0.45,30,0.547,32,0.129,35,0.008,36,0.008,44,0.956,45,0.914,50,1.186,55,0.311,57,0.986,63,0.265,64,0.237,65,0.582,66,0.92,67,0.63,68,0.63,69,0.63,76,0.558,81,0.781,84,1.789,85,1.785,87,0.848,88,0.958,89,2.068,90,3.003,92,2.518,95,0.958,97,0.958,103,2.608,106,2.273,107,2.971,110,0.997,124,1.789,129,1.534,130,0.79,131,1.206,133,1.525,140,1.792,146,2.518,147,1.301,158,1.88,160,2.2,165,1.218,166,1.238,167,1.238,168,1.218,169,0.87,170,1.535,172,1.371,173,1.371,174,1.03,177,1.076,178,1.076,179,0.606,180,0.606,183,0.63,192,2.518,193,3.795,195,2.068,198,1.535,199,2.068,200,3.593,202,2.208,203,1.535,205,1.301,213,0.63,214,0.958,215,0.92,216,0.536,217,1.293,218,0.63,219,1.158,220,0.582,221,0.63,222,0.582,223,0.883,224,0.63,225,0.582,226,0.63,227,0.582,228,0.63,229,1.193,230,1.522,231,0.63,232,0.582,233,0.63,234,0.582,235,0.63,236,0.582,237,0.63,238,0.582,239,0.63,240,0.582,241,0.63,242,0.582,243,0.63,244,0.582,245,0.63,246,0.582,247,0.63,248,0.582,249,0.63,250,0.582,251,0.63,252,0.582,253,0.63,254,0.582,255,0.473,256,0.582,257,0.63,258,0.582,259,0.958,260,0.63,261,0.582,262,0.63,263,0.582,264,0.63,265,0.582,266,1.043,267,0.63,268,0.582,269,0.63,270,0.582,271,0.63,272,0.582,273,0.606,274,0.63,275,0.582,276,0.63,277,0.606,278,0.582,279,0.606,280,0.558,281,0.606,282,0.63,286,2.5,288,1.751,292,5.344,293,5.075,309,1.635,317,2.023,349,2.66,358,2.082,389,1.126,419,1.371,435,2.518,507,1.635,589,2.3,591,2.3,618,2.066,631,6.353,632,5.706,633,2.3,634,4.226,635,2.518,636,3.474,637,4.035,638,4.035,639,5.075,640,4.239,641,3.217,642,4.879,643,5.075,644,4.035,645,4.72,646,4.035,647,2.656,648,4.72,649,4.035,650,4.035,651,2.656,652,4.035,653,2.656,654,2.656,655,2.656,656,4.035,657,2.656,658,2.656,659,4.035,660,2.656,661,2.656,662,3.139,663,2.656,664,2.656,665,2.66,666,2.656,667,2.656,668,2.066,669,2.656,670,1.891,671,2.066,672,2.656,673,2.656,674,5.449,675,2.656,676,4.035,677,2.656,678,2.3,679,3.494,680,4.879,681,4.035,682,4.035,683,4.879,684,4.035,685,2.656,686,2.656,687,2.656,688,4.035,689,5.075,690,2.656,691,2.656,692,2.656,693,2.656,694,2.3,695,2.656,696,2.656,697,2.656,698,2.656]],["title/components/ChatsComponent.html",[64,0.19,232,0.855]],["body/components/ChatsComponent.html",[1,0.796,3,0.177,4,0.217,5,0.177,22,0.015,30,0.455,32,0.217,35,0.011,36,0.011,55,0.524,63,0.446,64,0.316,65,0.98,66,1.331,67,1.062,68,1.062,69,1.062,76,0.941,81,1.13,84,1.861,85,1.859,87,1.227,88,1.062,95,1.385,97,1.385,130,0.848,179,1.02,180,1.02,183,1.062,213,1.062,214,1.385,215,1.331,216,0.903,217,1.634,218,1.062,219,1.542,220,0.98,221,1.062,222,0.98,223,1.278,224,1.062,225,0.98,226,1.062,227,0.98,228,1.062,229,0.98,230,1.062,231,1.062,232,1.507,233,1.062,234,0.98,235,1.062,236,0.98,237,1.062,238,0.98,239,1.062,240,0.98,241,1.062,242,0.98,243,1.062,244,0.98,245,1.062,246,0.98,247,1.062,248,0.98,249,1.062,250,0.98,251,1.062,252,0.98,253,1.062,254,0.98,255,0.796,256,0.98,257,1.062,258,0.98,259,1.385,260,1.062,261,0.98,262,1.062,263,0.98,264,1.062,265,0.98,266,1.27,267,1.062,268,0.98,269,1.062,270,0.98,271,1.062,272,0.98,273,1.02,274,1.062,275,0.98,276,1.062,277,1.02,278,0.98,279,1.02,280,0.941,281,1.02,282,1.062,699,3.875,700,5.555,701,5.837,702,5.837,703,3.848]],["title/injectables/ConfigService.html",[37,1.004,387,2.015]],["body/injectables/ConfigService.html",[3,0.177,4,0.218,5,0.177,7,0.304,8,0.55,22,0.016,24,0.474,30,0.558,32,0.218,33,1.47,35,0.011,36,0.011,37,1.504,39,1.902,44,1.166,45,1.115,50,1.248,55,0.526,61,2.762,62,2.594,63,0.447,103,2.501,110,1.445,124,1.696,132,3.195,133,1.607,146,3.852,147,2.198,165,1.355,177,1.818,192,2.316,195,1.902,291,4.631,301,3.195,302,4.163,304,2.762,307,3.018,352,3.6,353,3.211,358,3.357,373,2.864,383,1.74,387,3.018,427,5.06,590,3.195,665,4.832,704,3.887,705,6.505,706,6.505,707,6.505,708,5.969,709,6.892,710,6.892,711,5.848,712,4.488,713,4.488,714,5.848,715,4.488,716,4.488,717,4.488,718,4.488,719,4.488,720,5.848,721,3.491,722,4.488,723,4.488,724,3.491,725,4.488,726,4.488,727,4.488,728,4.488,729,4.488,730,4.488,731,4.488,732,4.488,733,4.488,734,4.488,735,4.488,736,4.488,737,4.488]],["title/components/DashboardComponent.html",[64,0.19,234,0.855]],["body/components/DashboardComponent.html",[1,0.23,3,0.051,4,0.063,5,0.051,14,1.209,22,0.011,30,0.175,32,0.063,35,0.004,36,0.004,55,0.152,63,0.129,64,0.144,65,0.284,66,0.512,67,0.308,68,0.308,69,0.308,76,0.272,81,0.434,84,1.626,85,1.618,87,0.472,88,0.308,95,0.533,97,0.533,130,0.436,179,0.295,180,0.295,183,0.308,202,1.777,213,0.308,214,0.533,215,0.512,216,0.261,217,0.841,218,0.308,219,0.705,220,0.284,221,0.308,222,0.284,223,0.491,224,0.308,225,0.284,226,0.308,227,0.284,228,0.308,229,0.284,230,0.308,231,0.308,232,0.284,233,0.308,234,0.775,235,0.308,236,0.284,237,0.308,238,0.284,239,0.308,240,0.284,241,0.308,242,0.284,243,0.308,244,0.284,245,0.308,246,0.284,247,0.308,248,0.284,249,0.308,250,0.284,251,0.308,252,0.284,253,0.308,254,0.284,255,0.23,256,0.284,257,0.308,258,0.284,259,0.533,260,0.308,261,0.284,262,0.308,263,0.284,264,0.308,265,0.284,266,0.712,267,0.308,268,0.284,269,0.308,270,0.284,271,0.308,272,0.284,273,0.295,274,0.308,275,0.284,276,0.308,277,0.295,278,0.284,279,0.295,280,0.272,281,0.295,282,0.308,703,0.854,738,1.122,739,4.005,740,2.245,741,2.245,742,1.296,743,6.031,744,6.587,745,6.147,746,5.217,747,6.251,748,2.245,749,2.245,750,4.387,751,5.602,752,5.904,753,6.031,754,5.422,755,6.513,756,3.542,757,5.904,758,5.602,759,6.433,760,5.602,761,4.981,762,5.217,763,4.387,764,3.542,765,5.422,766,5.217,767,6.031,768,5.602,769,5.602,770,4.708,771,4.708,772,5.217,773,6.251,774,6.346,775,4.387,776,2.245,777,5.761,778,5.904,779,4.981,780,4.005,781,5.602,782,4.387,783,4.981,784,5.422,785,5.904,786,5.422,787,5.422,788,5.217,789,5.904,790,4.981,791,4.981,792,5.904,793,6.346,794,5.422,795,6.031,796,4.005,797,5.904,798,5.217,799,5.422,800,3.542,801,2.245,802,6.031,803,5.217,804,6.832,805,5.422,806,5.761,807,4.387,808,5.217,809,6.031,810,5.422,811,4.981,812,5.217,813,4.387,814,4.981,815,6.031,816,4.708,817,5.602,818,6.031,819,6.031,820,3.542,821,5.602,822,4.005,823,5.422,824,2.245,825,5.217,826,5.422,827,4.708,828,5.217,829,5.904,830,4.387,831,5.422,832,4.981,833,4.708,834,6.031,835,4.981,836,5.422,837,4.387,838,5.761,839,6.031,840,5.422,841,5.217,842,6.513,843,4.708,844,3.542,845,5.761,846,5.602,847,5.217,848,5.904,849,5.602,850,4.005,851,6.251,852,5.761,853,5.904,854,4.981,855,5.602,856,5.217,857,4.387,858,4.981,859,4.708,860,5.217,861,4.981,862,6.147,863,5.602,864,3.542,865,5.422,866,2.97,867,4.981,868,4.387,869,4.708,870,5.602,871,4.387,872,4.981,873,5.602,874,3.542,875,4.708,876,4.708,877,5.761,878,4.708,879,5.761,880,4.981,881,4.981,882,4.708,883,4.387,884,4.708,885,5.422,886,5.217,887,4.708,888,5.602,889,4.981,890,2.245,891,2.245,892,5.422,893,4.708,894,4.387,895,5.602,896,2.245,897,4.387,898,3.542,899,4.708,900,2.245,901,5.761,902,4.708,903,2.97,904,4.708,905,3.542,906,2.245,907,4.005,908,4.981,909,4.708,910,5.602,911,2.97,912,3.542,913,4.387,914,2.97,915,4.387,916,2.97,917,4.708,918,4.708,919,2.245,920,4.387,921,1.944,922,1.296,923,1.296,924,1.296,925,1.296,926,1.296,927,1.296,928,1.296,929,1.296,930,1.296,931,1.296,932,1.296,933,1.296,934,1.296,935,1.296,936,1.296,937,1.296,938,1.296,939,1.296,940,1.296,941,1.296,942,1.296,943,1.296,944,1.296,945,1.296,946,1.296,947,1.296,948,1.296,949,1.296,950,1.296,951,1.296,952,1.296,953,1.296,954,1.296,955,1.296,956,1.296,957,1.296,958,1.296,959,1.296,960,1.296,961,1.296,962,1.296,963,1.296,964,1.296,965,1.296,966,1.296,967,1.296,968,1.296,969,1.296,970,1.296,971,1.296,972,1.296,973,1.296,974,1.296,975,1.296,976,1.296,977,1.296,978,1.296,979,1.296,980,1.296,981,1.296,982,1.296,983,1.296,984,1.296,985,1.296,986,1.296,987,1.296,988,1.296,989,1.296,990,1.296,991,1.296,992,1.296,993,1.296,994,1.296,995,1.296,996,1.296,997,1.296,998,1.296,999,1.296,1000,1.296,1001,1.296,1002,1.296,1003,1.296,1004,1.296,1005,1.296,1006,1.296,1007,1.296,1008,1.296,1009,1.296]],["title/injectables/DeleteUploadByIdGQL.html",[37,1.004,1010,2.779]],["body/injectables/DeleteUploadByIdGQL.html",[3,0.215,4,0.265,5,0.215,7,0.37,8,0.622,14,2.586,21,1.213,22,0.016,24,0.482,30,0.516,32,0.359,33,1.788,35,0.013,36,0.013,37,1.701,39,2.314,41,3.413,43,4.114,44,0.89,45,0.852,46,3.606,50,0.89,53,2.817,54,2.976,55,0.639,63,0.544,266,1.177,1010,4.709,1011,4.709,1012,3.36,1013,5.754,1014,5.536,1015,5.459,1016,4.728,1017,4.728,1018,4.728,1019,4.728]],["title/interfaces/Env.html",[0,0.927,307,2.015]],["body/interfaces/Env.html",[0,1.284,2,1.569,3,0.213,4,0.263,5,0.213,7,0.367,8,0.619,21,1.367,22,0.016,24,0.56,32,0.263,35,0.013,36,0.013,307,3.395,340,3.303,410,5.737,1020,4.686,1021,6.388,1022,6.388,1023,6.388,1024,6.388,1025,6.388,1026,6.14,1027,7.089,1028,6.14,1029,6.14]],["title/components/EventsComponent.html",[64,0.19,236,0.855]],["body/components/EventsComponent.html",[1,0.796,3,0.177,4,0.217,5,0.177,22,0.015,30,0.455,32,0.217,35,0.011,36,0.011,55,0.524,63,0.446,64,0.316,65,0.98,66,1.331,67,1.062,68,1.062,69,1.062,76,0.941,81,1.13,84,1.861,85,1.859,87,1.227,88,1.062,95,1.385,97,1.385,130,0.848,179,1.02,180,1.02,183,1.062,213,1.062,214,1.385,215,1.331,216,0.903,217,1.634,218,1.062,219,1.542,220,0.98,221,1.062,222,0.98,223,1.278,224,1.062,225,0.98,226,1.062,227,0.98,228,1.062,229,0.98,230,1.062,231,1.062,232,0.98,233,1.062,234,0.98,235,1.062,236,1.507,237,1.062,238,0.98,239,1.062,240,0.98,241,1.062,242,0.98,243,1.062,244,0.98,245,1.062,246,0.98,247,1.062,248,0.98,249,1.062,250,0.98,251,1.062,252,0.98,253,1.062,254,0.98,255,0.796,256,0.98,257,1.062,258,0.98,259,1.385,260,1.062,261,0.98,262,1.062,263,0.98,264,1.062,265,0.98,266,1.27,267,1.062,268,0.98,269,1.062,270,0.98,271,1.062,272,0.98,273,1.02,274,1.062,275,0.98,276,1.062,277,1.02,278,0.98,279,1.02,280,0.941,281,1.02,282,1.062,703,3.848,1030,3.875,1031,5.555,1032,5.837,1033,5.837]],["title/components/ExtensionInputComponent.html",[64,0.19,238,0.855]],["body/components/ExtensionInputComponent.html",[1,0.489,3,0.109,4,0.134,5,0.109,7,0.187,8,0.39,21,0.945,22,0.016,24,0.498,28,1.115,30,0.533,32,0.134,35,0.008,36,0.008,44,1.115,45,1.066,50,1.213,55,0.322,63,0.274,64,0.242,65,0.602,66,0.945,67,0.653,68,0.653,69,0.653,72,1.959,73,1.606,74,2.214,75,3.877,76,0.578,77,2.138,78,2.95,79,3.877,80,2.95,81,1.074,82,3.223,84,1.794,85,1.791,86,2.966,87,0.871,88,0.984,89,2.113,90,3.068,91,3.877,92,2.572,93,3.877,94,3.877,95,0.984,96,3.223,97,0.984,98,3.223,103,2.332,106,2.323,107,3.025,108,4.629,109,4.629,110,1.024,112,2.464,113,3.223,114,3.223,115,3.223,116,4.315,117,1.84,118,3.877,119,3.41,120,4.629,121,3.877,123,2.383,124,1.814,125,2.383,126,2.383,129,1.567,130,0.8,131,1.232,133,1.47,135,3.223,137,3.223,139,3.223,140,2.214,146,2.572,147,2.03,155,2.383,157,2.383,158,1.931,159,2.383,160,2.259,161,2.383,162,2.03,165,0.831,166,1.282,167,1.282,168,1.251,169,0.901,170,1.59,172,1.42,173,1.42,174,1.067,178,1.115,179,0.627,180,0.627,181,1.59,183,0.653,195,1.756,198,1.59,199,1.166,202,1.679,203,1.59,204,1.42,205,1.347,209,2.14,210,2.14,211,2.14,212,3.223,213,0.653,214,0.984,215,0.945,216,0.555,217,1.317,218,0.653,219,1.183,220,0.602,221,0.653,222,0.602,223,0.907,224,0.653,225,0.602,226,0.653,227,0.602,228,0.653,229,0.602,230,0.653,231,0.653,232,0.602,233,0.653,234,0.602,235,0.653,236,0.602,237,0.653,238,1.369,239,1.541,240,0.602,241,0.653,242,0.602,243,0.653,244,0.602,245,0.653,246,0.602,247,0.653,248,0.602,249,0.653,250,0.602,251,0.653,252,0.602,253,0.653,254,0.602,255,0.489,256,0.602,257,0.653,258,0.602,259,0.984,260,0.653,261,0.602,262,0.653,263,0.602,264,0.653,265,0.602,266,1.059,267,0.653,268,0.602,269,0.653,270,0.602,271,0.653,272,0.602,273,0.627,274,0.653,275,0.602,276,0.653,277,0.627,278,0.602,279,0.627,280,0.578,281,0.627,282,0.653,328,2.863,330,1.693,389,1.166,462,1.42,1034,6.485,1035,6.485,1036,3.068,1037,4.453,1038,2.395,1039,4.985,1040,2.751,1041,2.383,1042,3.589,1043,3.658,1044,3.589,1045,2.751,1046,2.751,1047,2.751,1048,2.751,1049,2.751,1050,2.383,1051,4.144,1052,2.383,1053,2.395,1054,2.751,1055,2.751,1056,2.14,1057,2.383,1058,2.383,1059,2.751]],["title/interfaces/FileParams.html",[0,0.927,1060,2.779]],["body/interfaces/FileParams.html",[0,1.389,2,1.697,3,0.231,4,0.284,5,0.231,7,0.397,8,0.649,21,1.364,22,0.015,24,0.534,32,0.284,35,0.013,36,0.013,130,0.933,131,1.704,1060,4.91,1061,5.069,1062,4.127,1063,6.556]],["title/interfaces/GetAccountModel.html",[0,0.927,1064,3.037]],["body/interfaces/GetAccountModel.html",[0,1.298,1,1.317,2,1.586,3,0.216,4,0.266,5,0.216,7,0.371,8,0.623,9,2.428,10,2.678,11,2.822,12,2.318,14,1.866,15,2.428,16,2.822,17,2.678,18,2.03,19,2.548,20,2.981,21,1.34,22,0.016,23,2.473,24,0.519,25,4.117,26,3.61,27,1.866,28,2.216,29,2.548,30,0.427,32,0.266,35,0.013,36,0.013,49,2.548,284,3.161,285,3.606,287,2.548,1064,5.151,1065,4.736,1066,5.151]],["title/interfaces/GraphqlError.html",[0,0.927,338,2.779]],["body/interfaces/GraphqlError.html",[0,1.613,2,1.656,3,0.225,4,0.277,5,0.225,7,0.387,8,0.639,21,1.366,22,0.015,24,0.529,32,0.33,35,0.013,36,0.013,131,1.679,205,2.798,290,5.058,334,4.067,335,4.443,336,5.967,337,3.766,338,4.839,339,6.504,340,3.381]],["title/components/HeaderComponent.html",[64,0.19,240,0.855]],["body/components/HeaderComponent.html",[1,0.702,3,0.156,4,0.192,5,0.156,7,0.268,8,0.505,22,0.016,30,0.564,32,0.192,35,0.01,36,0.01,44,0.995,45,0.952,50,0.995,55,0.462,63,0.393,64,0.296,65,0.864,66,1.224,67,0.937,68,0.937,69,0.937,76,0.83,81,1.039,84,1.846,85,1.844,87,1.129,88,1.274,95,1.274,97,1.274,130,0.807,162,2.629,165,1.192,168,1.621,169,1.293,174,1.53,179,0.9,180,0.9,183,0.937,213,0.937,214,1.274,215,1.224,216,0.796,217,1.554,218,0.937,219,1.448,220,0.864,221,0.937,222,0.864,223,1.5,224,0.937,225,0.864,226,0.937,227,0.864,228,0.937,229,0.864,230,0.937,231,0.937,232,0.864,233,0.937,234,0.864,235,0.937,236,0.864,237,0.937,238,0.864,239,0.937,240,1.434,241,0.937,242,1.434,243,0.937,244,0.864,245,0.937,246,0.864,247,0.937,248,0.864,249,0.937,250,0.864,251,0.937,252,0.864,253,0.937,254,0.864,255,0.702,256,0.864,257,0.937,258,0.864,259,1.274,260,0.937,261,0.864,262,0.937,263,0.864,264,0.937,265,0.864,266,1.218,267,0.937,268,0.864,269,0.937,270,0.864,271,0.937,272,0.864,273,0.9,274,0.937,275,0.864,276,0.937,277,0.9,278,0.864,279,0.9,280,0.83,281,0.9,282,0.937,352,3.755,369,2.77,371,3.822,383,1.53,386,1.53,387,2.037,389,1.673,635,3.148,1067,3.418,1068,6.101,1069,4.746,1070,4.344,1071,4.023,1072,6.101,1073,5.368,1074,5.368,1075,6.101,1076,3.947,1077,3.947,1078,3.947,1079,3.947,1080,5.368]],["title/pipes/IFrameUrlPipe.html",[192,2.015,1081,2.779]],["body/pipes/IFrameUrlPipe.html",[3,0.218,4,0.269,5,0.218,21,1.22,22,0.016,23,2.337,24,0.403,30,0.52,32,0.269,35,0.013,36,0.013,49,3.109,50,0.903,55,0.649,63,0.552,73,2.147,76,1.164,81,1.291,87,1.403,110,1.368,129,1.741,130,0.882,131,1.368,133,1.368,192,3.443,317,2.056,519,3.651,1081,4.75,1082,3.651,1083,5.778,1084,4.796,1085,6.672,1086,4.307,1087,6.672,1088,5.537,1089,6.202,1090,3.942,1091,3.942,1092,5.778,1093,5.537]],["title/components/MeComponent.html",[64,0.19,242,0.855]],["body/components/MeComponent.html",[1,0.645,3,0.143,4,0.176,5,0.143,7,0.246,8,0.476,22,0.016,24,0.264,30,0.518,32,0.176,35,0.01,36,0.01,44,1.084,45,1.037,50,1.176,55,0.425,63,0.361,64,0.283,65,0.794,66,1.155,67,0.861,68,0.861,69,0.861,76,0.762,81,1.129,84,1.835,85,1.833,87,1.064,88,1.202,95,1.202,97,1.202,107,3.444,110,1.251,124,1.468,130,0.778,133,1.251,160,2.761,165,1.095,168,1.095,169,1.188,179,0.827,180,0.827,183,0.861,195,1.537,199,1.537,202,2.052,204,1.871,213,0.861,214,1.202,215,1.155,216,0.732,217,1.499,218,0.861,219,1.385,220,0.794,221,0.861,222,0.794,223,1.455,224,0.861,225,0.794,226,0.861,227,0.794,228,0.861,229,0.794,230,0.861,231,0.861,232,0.794,233,0.861,234,0.794,235,0.861,236,0.794,237,0.861,238,0.794,239,0.861,240,0.794,241,0.861,242,1.383,243,0.861,244,0.794,245,0.861,246,0.794,247,0.861,248,0.794,249,0.861,250,0.794,251,0.861,252,0.794,253,0.861,254,0.794,255,0.645,256,0.794,257,0.861,258,0.794,259,1.202,260,0.861,261,0.794,262,0.861,263,0.794,264,0.861,265,0.794,266,1.182,267,0.861,268,0.794,269,0.861,270,0.794,271,0.861,272,0.794,273,0.827,274,0.861,275,0.794,276,0.861,277,0.827,278,0.794,279,0.827,280,0.762,281,0.827,282,0.861,309,1.469,328,1.871,352,3.592,353,2.943,369,2.613,371,3.605,373,2.48,383,1.406,386,1.406,387,1.871,389,1.537,539,2.232,635,3.011,1038,2.927,1043,2.391,1053,2.927,1094,3.14,1095,5.064,1096,5.064,1097,4.539,1098,6.316,1099,6.316,1100,5.835,1101,5.053,1102,3.626,1103,3.626,1104,3.626,1105,3.626,1106,3.626,1107,3.626,1108,3.939,1109,3.626,1110,3.626,1111,2.82,1112,3.626,1113,3.626,1114,5.835,1115,3.14,1116,2.582,1117,3.626,1118,5.064,1119,5.064,1120,3.626]],["title/components/MemoriesComponent.html",[64,0.19,244,0.855]],["body/components/MemoriesComponent.html",[1,0.796,3,0.177,4,0.217,5,0.177,22,0.015,30,0.455,32,0.217,35,0.011,36,0.011,55,0.524,63,0.446,64,0.316,65,0.98,66,1.331,67,1.062,68,1.062,69,1.062,76,0.941,81,1.13,84,1.861,85,1.859,87,1.227,88,1.062,95,1.385,97,1.385,130,0.848,179,1.02,180,1.02,183,1.062,213,1.062,214,1.385,215,1.331,216,0.903,217,1.634,218,1.062,219,1.542,220,0.98,221,1.062,222,0.98,223,1.278,224,1.062,225,0.98,226,1.062,227,0.98,228,1.062,229,0.98,230,1.062,231,1.062,232,0.98,233,1.062,234,0.98,235,1.062,236,0.98,237,1.062,238,0.98,239,1.062,240,0.98,241,1.062,242,0.98,243,1.062,244,1.507,245,1.062,246,0.98,247,1.062,248,0.98,249,1.062,250,0.98,251,1.062,252,0.98,253,1.062,254,0.98,255,0.796,256,0.98,257,1.062,258,0.98,259,1.385,260,1.062,261,0.98,262,1.062,263,0.98,264,1.062,265,0.98,266,1.27,267,1.062,268,0.98,269,1.062,270,0.98,271,1.062,272,0.98,273,1.02,274,1.062,275,0.98,276,1.062,277,1.02,278,0.98,279,1.02,280,0.941,281,1.02,282,1.062,703,3.848,1121,3.875,1122,5.084,1123,5.837,1124,5.837]],["title/components/MenuComponent.html",[64,0.19,246,0.855]],["body/components/MenuComponent.html",[1,0.79,3,0.175,4,0.216,5,0.175,22,0.015,30,0.505,32,0.216,35,0.011,36,0.011,55,0.52,63,0.443,64,0.314,65,0.973,66,1.325,67,1.054,68,1.054,69,1.054,76,0.934,81,1.124,84,1.86,85,1.858,87,1.221,88,1.379,95,1.379,97,1.379,130,0.846,179,1.013,180,1.013,183,1.054,213,1.054,214,1.379,215,1.325,216,0.896,217,1.63,218,1.054,219,1.536,220,0.973,221,1.054,222,0.973,223,1.272,224,1.054,225,0.973,226,1.054,227,0.973,228,1.054,229,0.973,230,1.054,231,1.054,232,0.973,233,1.054,234,0.973,235,1.054,236,0.973,237,1.054,238,0.973,239,1.054,240,0.973,241,1.054,242,0.973,243,1.054,244,0.973,245,1.054,246,1.503,247,1.054,248,1.503,249,1.054,250,0.973,251,1.054,252,0.973,253,1.054,254,0.973,255,0.79,256,0.973,257,1.054,258,0.973,259,1.379,260,1.054,261,0.973,262,1.054,263,0.973,264,1.054,265,0.973,266,1.267,267,1.054,268,0.973,269,1.054,270,0.973,271,1.054,272,0.973,273,1.013,274,1.054,275,0.973,276,1.054,277,1.013,278,0.973,279,1.013,280,0.934,281,1.013,282,1.054,398,3.847,1125,3.847,1126,6.473,1127,5.809,1128,5.809]],["title/components/NavComponent.html",[64,0.19,248,0.855]],["body/components/NavComponent.html",[1,0.628,2,1.024,3,0.139,4,0.171,5,0.139,7,0.239,8,0.467,22,0.016,24,0.257,30,0.532,32,0.171,33,1.156,35,0.01,36,0.01,44,1.018,45,0.974,49,3.18,50,1.073,55,0.414,63,0.352,64,0.279,65,0.773,66,1.133,67,0.838,68,0.838,69,0.838,76,0.742,81,1.274,84,1.832,85,1.829,86,2.207,87,1.045,88,1.18,95,1.18,97,1.18,110,1.228,117,2.207,124,1.024,130,0.769,133,0.872,140,2.207,162,2.434,165,1.066,168,1.066,169,1.156,179,0.805,180,0.805,183,0.838,213,0.838,214,1.18,215,1.133,216,0.712,217,1.482,218,0.838,219,1.365,220,0.773,221,0.838,222,0.773,223,1.441,224,0.838,225,0.773,226,0.838,227,0.773,228,0.838,229,0.773,230,0.838,231,0.838,232,0.773,233,0.838,234,0.773,235,0.838,236,0.773,237,0.838,238,0.773,239,0.838,240,0.773,241,0.838,242,0.773,243,0.838,244,0.773,245,0.838,246,0.773,247,0.838,248,1.367,249,0.838,250,0.773,251,0.838,252,0.773,253,0.838,254,0.773,255,0.628,256,0.773,257,0.838,258,0.773,259,1.18,260,0.838,261,0.773,262,0.838,263,0.773,264,0.838,265,0.773,266,1.171,267,0.838,268,0.773,269,0.838,270,0.773,271,0.838,272,0.773,273,0.805,274,0.838,275,0.773,276,0.838,277,0.805,278,1.088,279,0.805,280,0.742,281,0.805,282,0.838,352,3.54,369,2.565,371,3.538,383,1.369,386,1.369,387,1.822,389,1.497,400,4.304,429,3.058,436,3.522,635,2.968,700,2.746,708,5.406,1031,2.746,1122,2.513,1129,2.746,1130,5.751,1131,5.751,1132,5.751,1133,4.97,1134,4.97,1135,5.751,1136,4.981,1137,3.53,1138,3.53,1139,3.53,1140,4.474,1141,3.53,1142,3.53,1143,4.201,1144,5.309,1145,3.058,1146,2.746,1147,3.058,1148,3.058,1149,3.866,1150,2.746,1151,3.058,1152,3.058,1153,3.058,1154,3.53,1155,4.97,1156,4.304,1157,4.97]],["title/components/NotFoundComponent.html",[64,0.19,250,0.855]],["body/components/NotFoundComponent.html",[1,0.726,3,0.161,4,0.198,5,0.161,7,0.277,21,0.936,22,0.016,24,0.4,30,0.484,32,0.198,35,0.011,36,0.011,44,0.896,45,0.857,50,0.896,55,0.478,63,0.407,64,0.302,65,0.894,66,1.252,67,0.969,68,0.969,69,0.969,76,0.858,81,1.285,84,1.85,85,1.848,86,2.757,87,1.155,88,1.304,95,1.304,97,1.304,117,2.439,130,0.818,140,2.439,179,0.931,180,0.931,183,0.969,213,0.969,214,1.304,215,1.252,216,0.824,217,1.576,218,0.969,219,1.473,220,0.894,221,0.969,222,0.894,223,1.203,224,0.969,225,0.894,226,0.969,227,0.894,228,0.969,229,0.894,230,0.969,231,0.969,232,0.894,233,0.969,234,0.894,235,0.969,236,0.894,237,0.969,238,0.894,239,0.969,240,0.894,241,0.969,242,0.894,243,0.969,244,0.894,245,0.969,246,0.894,247,0.969,248,0.894,249,0.969,250,1.454,251,0.969,252,0.894,253,0.969,254,0.894,255,0.726,256,0.894,257,0.969,258,0.894,259,1.304,260,0.969,261,0.894,262,0.969,263,0.894,264,0.969,265,0.894,266,1.233,267,0.969,268,0.894,269,0.969,270,0.894,271,0.969,272,0.894,273,0.931,274,0.969,275,0.894,276,0.969,277,0.931,278,0.894,279,0.931,280,0.858,281,0.931,282,0.969,383,1.583,1069,4.829,1143,3.821,1158,5.376,1159,5.376,1160,3.536,1161,5.493,1162,5.493,1163,5.493,1164,6.208,1165,4.083,1166,4.083,1167,4.083,1168,4.757,1169,5.493]],["title/components/OopsComponent.html",[64,0.19,252,0.855]],["body/components/OopsComponent.html",[1,0.782,3,0.174,4,0.214,5,0.174,22,0.016,30,0.45,32,0.214,35,0.011,36,0.011,55,0.515,63,0.438,64,0.313,65,0.963,66,1.316,67,1.044,68,1.044,69,1.044,76,0.925,81,1.117,84,1.859,85,1.857,87,1.213,88,1.044,95,1.37,97,1.37,130,0.843,179,1.003,180,1.003,183,1.044,213,1.044,214,1.37,215,1.316,216,0.887,217,1.623,218,1.044,219,1.529,220,0.963,221,1.044,222,0.963,223,1.264,224,1.044,225,0.963,226,1.044,227,0.963,228,1.044,229,0.963,230,1.044,231,1.044,232,0.963,233,1.044,234,0.963,235,1.044,236,0.963,237,1.044,238,0.963,239,1.044,240,0.963,241,1.044,242,0.963,243,1.044,244,0.963,245,1.044,246,0.963,247,1.044,248,0.963,249,1.044,250,0.963,251,1.044,252,1.497,253,1.044,254,0.963,255,0.782,256,0.963,257,1.044,258,0.963,259,1.37,260,1.044,261,0.963,262,1.044,263,0.963,264,1.044,265,0.963,266,1.263,267,1.044,268,0.963,269,1.044,270,0.963,271,1.044,272,0.963,273,1.003,274,1.044,275,0.963,276,1.044,277,1.003,278,0.963,279,1.003,280,0.925,281,1.003,282,1.044,1170,3.809,1171,6.441,1172,5.771,1173,5.771]],["title/components/PermissionInputComponent.html",[64,0.19,254,0.855]],["body/components/PermissionInputComponent.html",[1,0.543,3,0.12,4,0.148,5,0.12,7,0.207,8,0.421,21,1.107,22,0.016,24,0.512,30,0.507,32,0.148,35,0.009,36,0.009,44,1.095,45,1.048,50,1.195,55,0.358,63,0.304,64,0.258,65,0.669,66,1.021,67,0.725,68,0.725,69,0.725,72,2.174,73,1.736,75,4.124,76,0.642,77,2.311,78,3.188,79,4.124,80,3.188,81,1.13,82,3.483,84,1.811,85,1.808,86,3.12,87,0.941,88,1.063,89,2.248,90,3.264,91,4.124,92,2.736,93,4.124,94,4.124,95,1.063,96,3.483,97,1.063,98,3.483,108,4.836,109,4.836,110,1.106,113,3.483,114,3.483,115,3.483,116,4.542,117,1.989,118,4.124,119,3.543,120,4.836,121,4.124,124,1.803,129,1.667,130,0.827,131,1.31,133,1.443,135,3.483,137,3.483,139,3.483,140,2.355,162,2.193,166,1.423,168,1.352,169,1,174,1.184,178,1.237,179,0.696,180,0.696,183,0.725,209,2.376,210,2.376,211,2.376,212,3.483,213,0.725,214,1.063,215,1.021,216,0.616,217,1.386,218,0.725,219,1.259,220,0.669,221,0.725,222,0.669,223,0.981,224,0.725,225,0.669,226,0.725,227,0.669,228,0.725,229,0.669,230,0.725,231,0.725,232,0.669,233,0.725,234,0.669,235,0.725,236,0.669,237,0.725,238,0.669,239,0.725,240,0.669,241,0.725,242,0.669,243,0.725,244,0.669,245,0.725,246,0.669,247,0.725,248,0.669,249,0.725,250,0.669,251,0.725,252,0.669,253,0.725,254,1.423,255,1.195,256,0.669,257,0.725,258,0.669,259,1.063,260,0.725,261,0.669,262,0.725,263,0.669,264,0.725,265,0.669,266,1.106,267,0.725,268,0.669,269,0.725,270,0.669,271,0.725,272,0.669,273,0.696,274,0.725,275,0.669,276,0.725,277,0.696,278,0.669,279,0.696,280,0.642,281,0.696,282,0.725,328,2.736,1041,2.645,1042,3.878,1043,3.85,1044,3.878,1050,2.645,1052,2.645,1174,6.406,1175,6.406,1176,2.891,1177,3.054,1178,3.054,1179,3.054,1180,3.054,1181,3.054,1182,3.054,1183,3.054,1184,3.054,1185,3.054,1186,3.054]],["title/components/ProfileComponent.html",[64,0.19,256,0.855]],["body/components/ProfileComponent.html",[1,0.839,2,0.591,3,0.08,4,0.099,5,0.08,7,0.138,8,0.308,9,2.452,10,0.998,13,1.343,16,2.123,17,2.957,18,0.756,19,0.949,21,0.941,22,0.016,23,2.011,24,0.454,25,1.895,26,2.817,27,0.695,28,1.667,29,1.917,30,0.562,32,0.099,33,1.347,34,1.45,35,0.006,36,0.006,38,3.109,42,2.378,44,1.157,45,1.106,50,1.199,55,0.239,63,0.203,64,0.2,65,0.446,66,0.748,67,0.484,68,0.484,69,0.484,73,1.271,74,1.827,76,0.428,77,1.692,81,0.635,84,1.738,85,1.733,87,0.689,88,0.778,89,1.744,95,0.778,97,0.778,103,2.567,106,1.917,107,2.571,110,0.81,112,2.094,124,1.193,129,1.031,130,0.744,131,0.81,133,1.165,140,0.905,143,2.817,146,3.216,147,2.704,150,2.532,158,1.528,160,1.787,165,0.615,167,0.949,168,1.242,169,0.667,170,1.178,171,1.45,172,1.051,173,1.051,174,0.79,177,0.825,178,0.825,179,0.464,180,0.464,181,1.178,183,0.484,188,1.764,189,1.585,190,1.764,195,1.744,198,1.895,199,1.39,200,3.64,202,1.328,203,1.895,204,1.692,205,1.606,213,0.484,214,0.778,215,0.748,216,0.411,217,1.119,218,0.484,219,0.977,220,0.446,221,0.484,222,0.446,223,1.131,224,0.484,225,0.446,226,0.484,227,0.446,228,0.484,229,0.718,230,0.778,231,0.484,232,0.446,233,0.484,234,0.446,235,0.484,236,0.446,237,0.484,238,0.446,239,0.484,240,0.446,241,0.484,242,0.446,243,0.484,244,0.446,245,0.484,246,0.446,247,0.484,248,0.446,249,0.484,250,0.446,251,0.484,252,0.446,253,0.484,254,0.446,255,0.362,256,1.032,257,0.484,258,0.446,259,0.778,260,0.484,261,0.446,262,0.484,263,0.446,264,0.484,265,0.446,266,0.919,267,0.484,268,0.446,269,0.484,270,0.446,271,0.484,272,0.446,273,0.464,274,0.484,275,0.446,276,0.484,277,0.464,278,0.446,279,0.464,280,0.428,281,0.464,282,0.484,287,0.949,309,0.825,317,2.05,328,1.051,345,3.2,353,2.197,358,2.123,363,1.051,369,1.692,373,1.606,378,2.55,383,0.79,386,0.79,389,0.864,394,1.45,407,1.178,416,1.343,419,1.051,436,2.123,447,2.334,451,1.45,462,2.123,532,3.563,590,1.45,632,1.585,635,2.123,636,2.929,639,1.764,643,4.083,665,2.162,670,1.45,671,1.585,1043,1.343,1056,1.585,1058,1.764,1070,2.929,1071,2.713,1082,1.343,1090,1.45,1091,1.45,1097,3.2,1108,2.55,1111,1.585,1143,2.902,1156,2.839,1187,1.585,1188,3.563,1189,6.037,1190,3.563,1191,2.929,1192,2.929,1193,3.279,1194,3.279,1195,6.037,1196,3.357,1197,4.715,1198,4.114,1199,3.2,1200,3.279,1201,2.037,1202,2.037,1203,3.279,1204,2.037,1205,3.563,1206,2.037,1207,3.279,1208,2.037,1209,3.279,1210,3.279,1211,3.279,1212,3.279,1213,3.279,1214,4.114,1215,2.037,1216,3.279,1217,3.279,1218,3.279,1219,2.037,1220,4.114,1221,3.279,1222,2.037,1223,2.037,1224,2.839,1225,2.037,1226,3.279,1227,2.037,1228,2.037,1229,3.279,1230,2.037,1231,2.037,1232,2.037,1233,2.037,1234,2.037,1235,3.279,1236,2.037,1237,2.037,1238,2.037,1239,2.037,1240,3.279,1241,2.037,1242,1.343,1243,2.037,1244,3.279,1245,2.037,1246,1.585,1247,2.037,1248,1.585,1249,1.764,1250,1.764,1251,1.764,1252,3.279,1253,2.037,1254,2.037,1255,2.037,1256,2.037,1257,1.764,1258,2.037,1259,2.037,1260,2.037,1261,2.037,1262,2.037,1263,2.037,1264,2.037,1265,2.037,1266,2.037,1267,2.037,1268,2.037,1269,2.037,1270,2.037,1271,2.037,1272,2.037,1273,1.585,1274,2.037,1275,2.037,1276,2.037,1277,2.037,1278,2.037,1279,2.037,1280,2.037,1281,2.037,1282,2.037,1283,5.521,1284,6.037,1285,3.279,1286,3.279,1287,3.279,1288,4.715,1289,2.839,1290,2.839,1291,3.279]],["title/interfaces/Route.html",[0,0.927,436,2.015]],["body/interfaces/Route.html",[0,1.338,2,1.635,3,0.222,4,0.274,5,0.222,7,0.382,8,0.634,21,1.356,22,0.015,24,0.557,32,0.274,35,0.013,36,0.013,49,3.485,131,1.848,140,3.446,436,3.481,1143,4.603,1144,5.817,1146,5.817,1149,5.817,1292,4.883]],["title/directives/ScrollNearEndDirective.html",[216,0.788,280,0.821]],["body/directives/ScrollNearEndDirective.html",[3,0.163,4,0.201,5,0.163,7,0.281,8,0.521,22,0.016,24,0.522,30,0.323,32,0.201,33,2.346,35,0.011,36,0.011,44,0.675,45,0.646,50,1.194,55,0.485,63,0.412,64,0.201,73,2.149,74,2.775,76,0.87,81,1.073,84,1.264,86,2.461,87,1.165,103,2.133,110,1.369,112,2.965,117,2.461,124,1.812,129,1.742,130,0.683,131,1.369,133,1.369,215,1.264,216,1.118,279,0.943,280,1.165,281,1.264,309,1.677,330,4.109,340,1.928,354,4.8,356,5.413,358,2.135,363,2.135,416,2.728,519,2.728,1038,3.204,1053,3.204,1057,4.8,1101,5.781,1293,6.44,1294,6.59,1295,3.584,1296,7.531,1297,5.542,1298,6.96,1299,5.542,1300,5.542,1301,4.138,1302,5.781,1303,5.542,1304,5.542,1305,4.138,1306,5.542,1307,5.542,1308,5.542,1309,6.676,1310,4.138,1311,4.138,1312,6.25,1313,5.542,1314,4.138,1315,5.542,1316,6.25,1317,5.542,1318,4.138,1319,4.138,1320,2.946,1321,3.584,1322,4.138,1323,4.138,1324,5.542,1325,4.138,1326,5.542,1327,4.138,1328,4.138,1329,4.138,1330,6.25,1331,4.138,1332,4.138,1333,4.138,1334,4.138,1335,3.584,1336,5.542,1337,4.138,1338,5.542,1339,4.138,1340,4.138,1341,5.542,1342,4.138,1343,4.138,1344,4.138,1345,4.138,1346,4.138,1347,4.138,1348,5.542,1349,4.138,1350,4.138,1351,5.542]],["title/injectables/ScrollService.html",[37,1.004,388,2.574]],["body/injectables/ScrollService.html",[3,0.2,4,0.246,5,0.2,7,0.343,8,0.594,22,0.016,24,0.525,27,2.156,30,0.537,32,0.246,35,0.012,36,0.012,37,1.624,39,2.147,44,1.03,45,0.986,50,1.123,55,0.593,61,3.117,62,2.927,63,0.505,103,2.349,110,1.56,124,1.468,129,1.592,130,0.624,131,1.251,133,1.251,140,3.057,143,3.753,146,3.552,147,3.371,162,3.094,171,3.605,172,2.613,173,2.613,175,4.385,177,2.052,194,5.47,199,2.677,205,2.48,340,3.207,362,6.423,388,4.164,412,5.961,721,3.939,724,5.606,1352,3.939,1353,7.563,1354,5.064,1355,5.064,1356,5.064,1357,6.316,1358,6.316,1359,6.316,1360,5.064,1361,4.385]],["title/pipes/SexPipe.html",[192,2.015,1192,2.779]],["body/pipes/SexPipe.html",[2,1.575,3,0.214,4,0.264,5,0.214,17,3.767,21,1.124,22,0.016,23,2.232,24,0.396,28,2.2,29,2.53,30,0.514,32,0.264,35,0.013,36,0.013,44,0.886,45,1.029,50,0.886,55,0.636,63,0.541,73,2.105,76,1.141,81,1.276,87,1.386,110,1.342,129,1.707,130,0.875,131,1.342,133,1.342,192,3.402,317,2.636,537,3.58,538,4.347,1082,3.58,1086,4.224,1092,5.71,1192,4.694,1362,4.703,1363,6.593,1364,5.43]],["title/components/SignInComponent.html",[64,0.19,258,0.855]],["body/components/SignInComponent.html",[1,0.466,3,0.103,4,0.127,5,0.103,7,0.178,8,0.375,18,0.972,21,0.824,22,0.016,23,1.7,24,0.465,30,0.526,32,0.127,35,0.008,36,0.008,44,1.099,45,1.052,50,1.193,55,0.307,63,0.261,64,0.235,65,0.573,66,0.91,67,0.621,68,0.621,69,0.621,73,1.547,74,2.148,76,0.55,81,0.772,84,1.786,85,1.782,86,1.772,87,0.839,88,0.947,89,2.05,92,2.495,95,0.947,97,0.947,103,2.551,106,2.253,110,0.986,112,2.402,117,1.772,119,3.174,124,1.85,129,0.823,130,0.861,131,0.647,133,1.336,143,2.637,158,1.859,165,0.79,166,1.22,167,1.22,168,0.79,169,0.857,177,1.061,178,1.061,179,0.597,180,0.597,183,0.621,195,2.05,199,1.11,202,1.061,213,0.621,214,0.947,215,0.91,216,0.528,217,1.284,218,0.621,219,1.148,220,0.573,221,0.621,222,0.573,223,1.275,224,0.621,225,0.573,226,0.621,227,0.573,228,0.621,229,0.573,230,0.621,231,0.621,232,0.573,233,0.621,234,0.573,235,0.621,236,0.573,237,0.621,238,0.573,239,0.621,240,0.573,241,0.621,242,0.573,243,0.621,244,0.573,245,0.621,246,0.573,247,0.621,248,0.573,249,0.621,250,0.573,251,0.621,252,0.573,253,0.621,254,0.573,255,0.466,256,0.573,257,0.621,258,1.184,259,1.561,260,0.621,261,0.573,262,0.621,263,0.573,264,0.621,265,0.573,266,1.036,267,0.621,268,0.573,269,0.621,270,0.573,271,0.621,272,0.573,273,0.597,274,0.621,275,0.573,276,0.621,277,0.597,278,0.573,279,0.597,280,0.55,281,0.597,282,0.621,309,2.785,317,1.482,342,3.188,349,2.637,353,2.52,355,3.188,357,3.566,358,1.351,363,2.791,369,2.059,373,1.955,377,2.977,383,1.015,384,2.267,385,2.036,386,1.015,389,1.11,403,2.267,406,1.726,407,2.795,419,1.351,420,2.841,425,1.726,435,3.166,442,3.188,445,2.841,459,3.104,460,2.036,462,1.351,463,2.036,465,1.864,471,3.762,478,5.736,482,3.104,491,4.207,494,3.762,496,4.207,497,2.036,498,4.207,500,3.104,507,3.777,510,2.841,516,1.864,519,1.726,521,2.036,522,2.036,523,2.841,525,3.104,527,2.036,528,2.036,540,3.104,546,2.036,547,2.036,548,2.036,556,3.456,619,2.267,1116,1.864,1302,4.188,1365,5.736,1366,2.267,1367,4.836,1368,3.99,1369,3.99,1370,4.836,1371,4.836,1372,5.409,1373,2.618,1374,2.618,1375,3.99,1376,2.618,1377,3.99,1378,2.618,1379,3.99,1380,2.618,1381,2.618,1382,2.618,1383,2.618,1384,4.188,1385,2.618,1386,2.618,1387,2.618,1388,2.618,1389,2.618,1390,3.99,1391,2.618,1392,3.99,1393,2.618,1394,2.267,1395,3.456,1396,2.618,1397,2.618,1398,2.618,1399,2.618,1400,2.618,1401,2.618,1402,2.618,1403,2.618,1404,2.618,1405,2.618,1406,2.036,1407,2.267,1408,2.267,1409,2.267,1410,2.267,1411,2.267,1412,2.267,1413,3.456,1414,2.618]],["title/components/SignUpComponent.html",[64,0.19,261,0.855]],["body/components/SignUpComponent.html",[1,0.404,3,0.09,4,0.11,5,0.09,7,0.154,8,0.336,10,2.669,11,2.812,12,0.962,15,1.007,18,0.842,21,0.753,22,0.016,23,1.575,24,0.441,27,1.219,29,1.664,30,0.526,32,0.11,35,0.007,36,0.007,44,1.078,45,1.031,50,1.16,55,0.266,63,0.226,64,0.215,65,0.497,66,0.814,67,0.538,68,0.538,69,0.538,73,1.385,74,1.962,76,0.477,81,0.855,84,1.76,85,1.755,86,1.586,87,0.751,88,0.848,89,1.872,92,2.279,95,0.848,97,0.848,103,2.427,106,2.058,110,0.882,112,2.225,117,1.586,119,3.519,124,1.678,129,0.713,130,0.856,131,0.56,133,1.238,143,2.408,158,1.664,162,1.749,165,0.685,166,1.057,167,1.057,168,1.334,169,0.743,174,0.879,177,0.919,178,0.919,179,0.517,180,0.517,183,0.538,195,2.31,199,0.962,202,1.447,203,2.553,204,2.279,205,1.111,213,0.538,214,0.848,215,0.814,216,0.458,217,1.189,218,0.538,219,1.048,220,0.497,221,0.538,222,0.497,223,1.193,224,0.538,225,0.497,226,0.538,227,0.497,228,0.538,229,0.497,230,0.538,231,0.538,232,0.497,233,0.538,234,0.497,235,0.538,236,0.497,237,0.538,238,0.497,239,0.538,240,0.497,241,0.538,242,0.497,243,0.538,244,0.497,245,0.538,246,0.497,247,0.538,248,0.497,249,0.538,250,0.497,251,0.538,252,0.497,253,0.538,254,0.497,255,0.404,256,0.497,257,0.538,258,0.497,259,1.489,260,0.538,261,1.097,262,0.538,263,0.497,264,0.538,265,0.497,266,0.969,267,0.538,268,0.497,269,0.538,270,0.497,271,0.538,272,0.497,273,0.517,274,0.538,275,0.497,276,0.538,277,0.517,278,0.497,279,0.517,280,0.477,281,0.517,282,0.538,304,1.396,309,3.013,317,2.023,342,2.912,345,3.436,349,2.408,353,2.335,355,2.912,357,3.304,358,1.171,363,1.843,369,1.843,373,1.749,377,2.719,382,2.778,383,0.879,386,0.879,389,0.962,406,1.496,407,2.064,419,1.171,420,1.615,425,1.496,435,2.987,442,2.912,445,2.543,459,3.897,460,1.765,462,1.171,463,1.765,465,1.615,471,3.436,480,5.585,482,2.778,491,3.897,494,3.436,496,3.897,497,1.765,498,3.897,500,2.778,507,4.491,508,5.245,510,2.543,516,1.615,519,1.496,521,1.765,522,2.778,523,3.145,524,1.965,525,4.239,527,1.765,528,1.765,540,3.897,546,1.765,547,1.765,548,1.765,558,3.093,1116,1.615,1365,5.585,1384,3.826,1395,3.093,1407,1.965,1408,1.965,1409,1.965,1410,1.965,1411,1.965,1412,3.093,1413,4.339,1415,1.965,1416,3.093,1417,4.417,1418,3.571,1419,3.571,1420,4.417,1421,4.417,1422,2.268,1423,2.268,1424,2.268,1425,3.571,1426,2.268,1427,3.571,1428,2.268,1429,2.268,1430,2.268,1431,2.268,1432,2.268,1433,5.01,1434,3.571,1435,4.417,1436,4.417,1437,4.417,1438,2.268,1439,2.268,1440,2.268,1441,2.268,1442,2.268,1443,2.268,1444,2.268,1445,1.765,1446,3.093,1447,2.268,1448,2.268,1449,2.268,1450,2.268,1451,2.268,1452,2.268,1453,2.268,1454,3.571,1455,3.571,1456,2.268,1457,2.268,1458,4.339,1459,3.571,1460,3.571,1461,3.571,1462,2.268,1463,2.268,1464,2.268,1465,2.268,1466,2.268,1467,2.268,1468,2.268,1469,2.268,1470,2.268,1471,2.268,1472,2.268]],["title/components/TimelinesComponent.html",[64,0.19,263,0.855]],["body/components/TimelinesComponent.html",[1,0.796,3,0.177,4,0.217,5,0.177,22,0.015,30,0.455,32,0.217,35,0.011,36,0.011,55,0.524,63,0.446,64,0.316,65,0.98,66,1.331,67,1.062,68,1.062,69,1.062,76,0.941,81,1.13,84,1.861,85,1.859,87,1.227,88,1.062,95,1.385,97,1.385,130,0.848,179,1.02,180,1.02,183,1.062,213,1.062,214,1.385,215,1.331,216,0.903,217,1.634,218,1.062,219,1.542,220,0.98,221,1.062,222,0.98,223,1.278,224,1.062,225,0.98,226,1.062,227,0.98,228,1.062,229,0.98,230,1.062,231,1.062,232,0.98,233,1.062,234,0.98,235,1.062,236,0.98,237,1.062,238,0.98,239,1.062,240,0.98,241,1.062,242,0.98,243,1.062,244,0.98,245,1.062,246,0.98,247,1.062,248,0.98,249,1.062,250,0.98,251,1.062,252,0.98,253,1.062,254,0.98,255,0.796,256,0.98,257,1.062,258,0.98,259,1.385,260,1.062,261,0.98,262,1.062,263,1.507,264,1.062,265,0.98,266,1.27,267,1.062,268,0.98,269,1.062,270,0.98,271,1.062,272,0.98,273,1.02,274,1.062,275,0.98,276,1.062,277,1.02,278,0.98,279,1.02,280,0.941,281,1.02,282,1.062,703,3.848,1150,5.555,1473,3.875,1474,5.837,1475,5.837]],["title/injectables/UpdateUploadByIdGQL.html",[37,1.004,1476,2.779]],["body/injectables/UpdateUploadByIdGQL.html",[3,0.209,4,0.257,5,0.209,7,0.359,8,0.611,14,2.61,21,1.281,22,0.016,24,0.473,30,0.548,32,0.356,33,1.735,35,0.013,36,0.013,37,1.67,39,2.246,41,3.352,43,4.06,44,0.864,45,0.827,46,3.542,50,0.864,53,2.734,54,2.889,55,0.621,63,0.528,130,0.653,255,1.156,266,1.156,287,2.469,462,3.352,1012,3.262,1013,5.696,1176,2.889,1476,4.625,1477,4.625,1478,5.464,1479,5.299,1480,4.589,1481,4.589,1482,3.262,1483,4.589,1484,4.589,1485,4.122]],["title/components/UploadActionsComponent.html",[64,0.19,265,0.855]],["body/components/UploadActionsComponent.html",[1,0.643,2,1.048,3,0.143,4,0.176,5,0.143,7,0.245,8,0.475,22,0.016,30,0.518,32,0.176,35,0.01,36,0.01,44,0.824,45,0.788,49,3.092,50,1.209,55,0.423,63,0.36,64,0.283,65,0.791,66,1.152,67,0.858,68,0.858,69,0.858,76,0.76,81,1.127,84,1.835,85,1.832,86,2.586,87,1.062,88,1.199,95,1.199,97,1.199,117,2.243,124,1.465,130,0.777,168,1.525,169,1.183,179,0.824,180,0.824,183,0.858,213,0.858,214,1.199,215,1.152,216,0.729,217,1.497,218,0.858,219,1.382,220,0.791,221,0.858,222,0.791,223,1.106,224,0.858,225,0.791,226,0.858,227,0.791,228,0.858,229,0.791,230,0.858,231,0.858,232,0.791,233,0.858,234,0.791,235,0.858,236,0.791,237,0.858,238,0.791,239,0.858,240,0.791,241,0.858,242,0.791,243,0.858,244,0.791,245,0.858,246,0.791,247,0.858,248,0.791,249,0.858,250,0.791,251,0.858,252,0.791,253,0.858,254,0.791,255,0.643,256,0.791,257,0.858,258,0.791,259,1.199,260,0.858,261,0.791,262,0.858,263,0.791,264,0.858,265,1.381,266,1.333,267,0.858,268,0.791,269,0.858,270,0.791,271,0.858,272,0.791,273,0.824,274,0.858,275,0.791,276,0.858,277,0.824,278,0.791,279,0.824,280,0.76,281,0.824,282,0.858,380,2.382,381,4.158,539,2.224,635,3.005,636,4.146,921,4.375,1038,2.92,1053,3.645,1486,4.611,1487,5.333,1488,3.129,1489,4.905,1490,5.824,1491,5.051,1492,5.051,1493,5.824,1494,5.747,1495,5.747,1496,6.636,1497,5.051,1498,5.051,1499,5.051,1500,5.051,1501,4.146,1502,3.613,1503,5.051,1504,3.613,1505,2.382,1506,3.129,1507,5.051,1508,5.051,1509,5.051,1510,5.051]],["title/interfaces/UploadActionsParams.html",[0,0.927,1505,2.574]],["body/interfaces/UploadActionsParams.html",[0,1.379,2,1.684,3,0.229,4,0.282,5,0.229,7,0.394,8,0.646,22,0.015,24,0.533,32,0.282,35,0.013,36,0.013,131,1.93,140,3.551,204,3.897,1320,5.377,1505,4.527,1511,5.031,1512,5.377]],["title/injectables/UploadByIdGQL.html",[37,1.004,1513,2.779]],["body/injectables/UploadByIdGQL.html",[3,0.193,4,0.238,5,0.193,7,0.333,8,0.582,9,2.748,12,2.624,14,2.654,15,2.748,18,2.298,19,2.884,21,1.156,22,0.016,24,0.494,30,0.529,32,0.346,35,0.012,36,0.012,37,1.592,39,2.078,41,3.194,42,4.246,43,3.92,44,0.8,45,0.765,46,3.698,49,3.495,50,0.8,52,3.809,53,2.53,54,2.673,55,0.574,57,1.82,63,0.488,130,0.763,266,0.872,284,3.577,285,4.081,286,2.508,337,4.081,1012,3.018,1062,3.374,1176,3.374,1482,3.809,1513,4.406,1514,4.406,1515,6.189,1516,6.189,1517,5.36,1518,5.36,1519,3.809,1520,4.902,1521,4.246,1522,4.246,1523,4.246]],["title/injectables/UploadExtensionsGQL.html",[37,1.004,1037,2.779]],["body/injectables/UploadExtensionsGQL.html",[3,0.211,4,0.259,5,0.211,7,0.362,8,0.614,21,0.909,22,0.016,24,0.513,30,0.55,32,0.357,35,0.013,36,0.013,37,1.678,39,2.262,41,3.366,42,4.352,43,4.073,44,0.87,45,0.833,46,3.842,50,0.87,52,4.015,53,2.753,54,2.909,55,0.625,63,0.532,181,3.084,328,3.788,330,4.518,1037,4.644,1514,4.644,1524,4.15,1525,6.523,1526,5.71,1527,6.523,1528,5.336,1529,5.074,1530,4.621,1531,5.336,1532,4.621,1533,4.621]],["title/components/UploadFileComponent.html",[64,0.19,268,0.855]],["body/components/UploadFileComponent.html",[1,0.447,2,0.728,3,0.099,4,0.122,5,0.209,7,0.17,8,0.364,22,0.016,24,0.416,27,0.857,28,2.144,29,2.196,30,0.54,32,0.122,33,1.266,35,0.007,36,0.007,44,1.129,45,1.039,50,1.16,55,0.294,57,0.932,63,0.25,64,0.229,65,0.55,66,0.881,67,0.596,68,0.596,69,0.596,73,1.498,74,2.093,76,0.528,77,1.995,81,0.748,84,1.779,85,1.775,87,0.813,88,0.917,89,1.998,90,2.901,92,2.432,95,0.917,97,0.917,103,2.477,106,2.196,107,2.885,110,0.955,112,2.35,119,2.569,124,1.657,130,0.775,133,1.308,146,2.949,147,1.23,158,1.801,160,2.107,165,0.758,166,1.17,167,1.17,168,1.423,169,0.822,170,1.451,172,1.296,173,1.296,174,0.973,178,1.017,179,0.572,180,0.572,183,0.596,195,2.244,198,3.059,199,1.064,200,1.656,202,1.566,203,2.724,204,2.432,205,1.893,213,0.596,214,0.917,215,0.881,216,0.507,217,1.256,218,0.596,219,1.119,220,0.55,221,0.596,222,0.55,223,0.846,224,0.596,225,0.55,226,0.596,227,0.55,228,0.596,229,0.55,230,0.596,231,0.596,232,0.55,233,0.596,234,0.55,235,0.596,236,0.55,237,0.596,238,0.55,239,0.596,240,0.55,241,0.596,242,0.55,243,0.596,244,0.55,245,0.596,246,0.55,247,0.596,248,0.55,249,0.596,250,0.55,251,0.596,252,0.55,253,0.596,254,0.55,255,0.447,256,0.55,257,0.596,258,0.55,259,0.917,260,0.596,261,0.55,262,0.596,263,0.55,264,0.596,265,0.55,266,1.279,267,0.596,268,1.159,269,0.596,270,0.55,271,0.596,272,0.55,273,0.572,274,0.596,275,0.55,276,0.596,277,0.572,278,0.55,279,0.572,280,0.528,281,0.572,282,0.596,286,1.017,309,2.845,317,1.435,337,1.656,340,1.801,349,2.569,386,0.973,389,1.064,416,3.107,435,2.432,507,1.546,516,3.355,523,2.752,537,2.548,538,3.979,593,2.901,634,4.081,635,2.432,640,4.695,641,3.107,645,4.584,662,3.007,665,2.548,668,1.953,678,2.175,679,2.175,689,3.347,694,4.584,1036,3.517,1062,2.107,1071,3.107,1191,3.355,1242,1.656,1273,1.953,1446,3.347,1458,2.175,1486,4.425,1534,6.226,1535,2.175,1536,4.712,1537,4.081,1538,4.081,1539,4.712,1540,3.865,1541,3.865,1542,4.712,1543,4.712,1544,4.712,1545,5.292,1546,5.227,1547,2.511,1548,2.511,1549,2.511,1550,2.511,1551,2.511,1552,2.511,1553,2.511,1554,2.511,1555,3.865,1556,3.865,1557,4.712,1558,4.584,1559,2.511,1560,2.511,1561,3.865,1562,2.511,1563,3.347,1564,2.511,1565,3.865,1566,2.511,1567,2.511,1568,2.511,1569,2.511,1570,2.511,1571,2.511,1572,2.511,1573,5.292,1574,2.511,1575,2.511,1576,3.865,1577,2.511,1578,3.865,1579,3.865,1580,1.953,1581,2.511,1582,2.511,1583,2.511,1584,2.511,1585,2.511,1586,3.865,1587,2.511]],["title/components/UploadInfoComponent.html",[64,0.19,270,0.855]],["body/components/UploadInfoComponent.html",[1,0.304,2,0.496,3,0.144,4,0.083,5,0.067,7,0.116,8,0.267,14,1.449,21,0.997,22,0.016,23,1.772,24,0.426,27,0.584,30,0.526,32,0.083,33,1.764,35,0.005,36,0.005,44,1.1,45,1.104,50,1.201,55,0.2,57,0.635,63,0.17,64,0.177,65,0.374,66,0.648,67,0.406,68,0.406,69,0.406,73,1.102,74,1.619,76,0.36,77,1.466,81,0.705,84,1.699,85,1.693,86,0.759,87,0.597,88,0.674,89,1.545,90,2.244,92,1.881,95,0.674,97,0.674,103,2.561,106,1.698,107,2.314,110,0.702,112,1.885,117,1.262,119,2.568,124,1.562,129,0.893,130,0.78,131,0.702,132,2.023,133,1.393,146,2.779,147,0.838,150,2.9,158,1.324,160,1.549,162,2.489,165,0.516,166,0.797,167,0.797,168,1.1,169,0.56,170,0.989,172,0.883,173,0.883,174,0.663,177,0.693,178,0.693,179,0.39,180,0.39,181,0.989,183,0.406,192,0.883,193,1.33,195,2.283,198,3.113,199,1.545,200,2.403,202,2.059,203,2.454,204,2.623,205,2.079,213,0.406,214,0.674,215,0.648,216,0.345,217,1.008,218,0.406,219,0.865,220,0.374,221,0.406,222,0.374,223,0.622,224,0.406,225,0.374,226,0.406,227,0.374,228,0.406,229,0.374,230,0.406,231,0.406,232,0.374,233,0.406,234,0.374,235,0.406,236,0.374,237,0.406,238,0.374,239,0.406,240,0.374,241,0.406,242,0.374,243,0.406,244,0.374,245,0.406,246,0.374,247,0.406,248,0.374,249,0.406,250,0.374,251,0.406,252,0.374,253,0.406,254,0.374,255,0.505,256,0.374,257,0.406,258,0.374,259,0.674,260,0.406,261,0.374,262,0.406,263,0.374,264,0.406,265,0.929,266,1.227,267,0.406,268,0.374,269,0.406,270,0.929,271,0.406,272,0.374,273,0.39,274,0.406,275,0.374,276,0.406,277,0.39,278,0.374,279,0.39,280,0.36,281,0.39,282,0.406,286,0.693,287,0.797,309,2.658,317,2.093,328,0.883,349,1.987,353,1.978,373,1.392,383,0.663,386,0.663,389,0.725,406,1.128,419,1.466,462,2.431,464,1.33,507,2.9,537,1.128,538,2.403,539,1.053,541,3.157,551,2.835,555,2.835,590,1.218,641,1.128,662,3.302,665,1.873,721,1.33,724,2.21,1010,3.618,1038,1.642,1043,1.128,1053,2.454,1056,1.33,1066,2.835,1070,2.595,1071,2.403,1097,2.835,1108,2.21,1111,1.33,1115,1.481,1176,0.932,1191,2.595,1196,2.595,1224,2.461,1242,1.128,1257,4.401,1273,1.33,1320,2.023,1476,3.618,1482,1.053,1485,2.21,1486,4.552,1487,1.218,1489,2.835,1501,1.218,1505,1.128,1512,2.023,1513,3.618,1519,1.749,1537,3.157,1538,3.157,1558,3.676,1563,2.461,1588,6.404,1589,1.481,1590,2.841,1591,2.841,1592,3.645,1593,3.645,1594,4.711,1595,3.645,1596,4.711,1597,3.645,1598,3.157,1599,4.245,1600,4.245,1601,4.245,1602,4.245,1603,4.245,1604,2.841,1605,2.841,1606,2.841,1607,2.841,1608,1.71,1609,1.71,1610,1.71,1611,1.71,1612,1.71,1613,1.71,1614,2.841,1615,1.71,1616,2.461,1617,1.71,1618,5.385,1619,2.841,1620,1.71,1621,5.385,1622,2.461,1623,2.461,1624,2.461,1625,2.461,1626,1.71,1627,1.71,1628,1.71,1629,1.71,1630,1.71,1631,2.841,1632,1.71,1633,1.71,1634,1.71,1635,2.461,1636,1.71,1637,1.71,1638,1.71,1639,2.841,1640,1.71,1641,2.841,1642,1.71,1643,3.645,1644,4.401,1645,2.841,1646,2.841,1647,1.71,1648,2.461,1649,1.71,1650,2.841,1651,1.71,1652,1.481,1653,1.71,1654,1.71,1655,1.71,1656,1.71,1657,1.71,1658,1.71,1659,1.71,1660,1.71,1661,3.645,1662,1.71,1663,1.71,1664,1.71,1665,1.71,1666,1.71,1667,1.71,1668,1.71,1669,1.71,1670,1.71,1671,1.71,1672,2.841,1673,2.841,1674,2.841,1675,1.71,1676,1.71,1677,1.71,1678,1.71,1679,1.71,1680,1.71,1681,2.841,1682,1.71,1683,1.71,1684,1.71,1685,1.71,1686,6.452,1687,1.71,1688,1.71,1689,1.71,1690,1.71,1691,2.841,1692,2.841,1693,1.71,1694,2.841,1695,1.71,1696,2.841,1697,1.71,1698,1.71,1699,1.71,1700,2.461,1701,1.71,1702,1.71,1703,1.71,1704,1.71,1705,1.71,1706,1.71,1707,1.71,1708,1.71,1709,1.71,1710,1.71,1711,1.71,1712,4.711,1713,1.71,1714,1.71,1715,3.157,1716,1.71,1717,2.841,1718,1.71,1719,1.71,1720,1.71,1721,2.841,1722,2.841,1723,1.71]],["title/components/UploadListItemComponent.html",[64,0.19,272,0.855]],["body/components/UploadListItemComponent.html",[1,0.506,3,0.112,4,0.138,5,0.112,7,0.382,8,0.399,22,0.016,23,1.335,24,0.207,25,2.455,27,1.449,30,0.538,32,0.138,35,0.008,36,0.008,44,1.033,45,0.988,50,1.22,55,0.333,57,1.055,63,0.283,64,0.247,65,0.622,66,0.968,67,0.675,68,0.675,69,0.675,76,0.598,77,2.191,81,1.092,84,1.8,85,1.796,86,1.262,87,0.893,88,1.008,89,2.155,95,1.008,97,1.008,106,2.369,117,1.886,130,0.695,150,3.715,158,1.979,165,0.858,167,1.324,168,1.702,169,0.931,174,1.102,178,1.152,179,0.648,180,0.648,183,0.675,213,0.675,214,1.008,215,0.968,216,0.573,217,1.339,218,0.675,219,1.207,220,0.622,221,0.675,222,0.622,223,0.93,224,0.675,225,0.622,226,0.675,227,0.622,228,0.675,229,0.622,230,0.675,231,0.675,232,0.622,233,0.675,234,0.622,235,0.675,236,0.622,237,0.675,238,0.622,239,0.675,240,0.622,241,0.675,242,0.622,243,0.675,244,0.622,245,0.675,246,0.622,247,0.675,248,0.622,249,0.675,250,0.622,251,0.675,252,0.622,253,0.675,254,0.622,255,0.506,256,0.622,257,0.675,258,0.622,259,1.008,260,0.675,261,0.622,262,0.675,263,0.622,264,0.675,265,0.622,266,1.31,267,0.675,268,0.622,269,0.675,270,0.622,271,0.675,272,1.235,273,1.826,274,0.675,275,0.622,276,0.675,277,0.648,278,0.622,279,0.648,280,0.598,281,0.648,282,0.675,286,1.152,340,1.324,347,3.954,353,2.628,373,2.08,380,1.874,381,1.874,383,1.102,435,3.114,539,2.614,635,2.623,636,3.619,1038,2.455,1053,3.26,1069,3.954,1070,3.619,1071,3.352,1188,4.403,1190,4.403,1191,3.619,1196,3.023,1242,1.874,1289,3.678,1290,3.678,1486,4.633,1501,4.015,1519,3.129,1580,3.303,1644,5.227,1700,3.678,1724,6.519,1725,2.462,1726,5.083,1727,4.246,1728,4.246,1729,5.083,1730,6.035,1731,6.035,1732,6.035,1733,4.246,1734,4.246,1735,4.246,1736,4.246,1737,4.246,1738,2.842,1739,5.639,1740,4.246,1741,5.639,1742,4.246,1743,2.842,1744,2.842,1745,5.639,1746,5.639,1747,4.246,1748,4.246,1749,2.842,1750,2.842,1751,2.842,1752,2.842,1753,4.246,1754,3.678,1755,4.246,1756,4.246,1757,4.246]],["title/interfaces/UploadModel.html",[0,0.927,286,1.582]],["body/interfaces/UploadModel.html",[0,1.167,2,1.426,3,0.194,4,0.239,5,0.194,7,0.334,8,0.583,14,2.434,21,1.389,22,0.016,24,0.58,25,4.339,30,0.484,32,0.239,35,0.012,36,0.012,49,3.323,56,4.122,57,1.826,130,0.879,131,1.532,140,3.016,255,1.269,284,4.122,285,4.702,286,2.513,287,2.292,337,4.702,1062,3.888,1176,3.888,1482,4.39,1517,6.177,1518,6.177,1519,4.39,1758,4.259,1759,7.132]],["title/components/UploadPreviewComponent.html",[64,0.19,275,0.855]],["body/components/UploadPreviewComponent.html",[1,0.368,3,0.082,4,0.1,5,0.082,7,0.323,8,0.312,14,1.419,22,0.016,23,1.495,24,0.379,27,1.133,30,0.537,32,0.1,33,1.087,35,0.006,36,0.006,44,1.208,45,1.143,49,1.937,50,1.256,55,0.242,57,0.768,63,0.206,64,0.202,65,0.453,66,0.757,67,0.491,68,0.491,69,0.491,76,0.435,81,1.008,84,1.741,85,1.736,86,0.919,87,0.698,88,0.788,95,0.788,97,0.788,103,1.419,107,2.593,110,0.82,117,1.474,124,0.6,129,0.65,130,0.748,131,1.287,133,0.511,150,4.449,160,1.81,162,3.276,165,0.625,168,1.436,169,0.678,170,1.196,172,1.068,173,1.068,174,0.802,177,0.838,179,0.472,180,0.472,183,0.491,195,1.407,198,1.919,204,2.145,213,0.491,214,0.788,215,0.757,216,0.417,217,1.129,218,0.491,219,0.987,220,0.453,221,0.491,222,0.453,223,0.727,224,0.491,225,0.453,226,0.491,227,0.453,228,0.491,229,0.453,230,0.491,231,0.491,232,0.453,233,0.491,234,0.453,235,0.491,236,0.453,237,0.491,238,0.453,239,0.491,240,0.453,241,0.491,242,0.453,243,0.491,244,0.453,245,0.491,246,0.453,247,0.491,248,0.453,249,0.491,250,0.453,251,0.491,252,0.453,253,0.491,254,0.453,255,0.368,256,0.453,257,0.491,258,0.453,259,0.788,260,0.491,261,0.453,262,0.491,263,0.453,264,0.491,265,1.042,266,1.265,267,0.491,268,0.453,269,0.491,270,0.453,271,0.491,272,0.453,273,0.472,274,0.491,275,1.042,276,0.491,277,0.472,278,0.453,279,0.472,280,0.435,281,0.472,282,0.491,286,0.838,317,1.766,340,0.964,347,3.233,358,2.145,363,1.713,377,2.559,378,2.582,380,1.364,381,3.665,386,0.802,389,0.877,435,2.687,537,2.188,538,3.136,539,1.273,551,3.233,635,2.145,640,4.324,648,1.792,670,1.473,671,1.609,1038,1.919,1053,2.749,1062,2.266,1081,2.959,1082,1.364,1089,1.792,1090,1.473,1091,1.473,1116,2.363,1143,2.559,1168,2.875,1320,2.363,1394,1.792,1445,1.609,1486,4.75,1487,1.473,1489,4.051,1494,4.51,1495,4.51,1501,2.959,1506,3.6,1512,2.363,1580,5.58,1598,3.6,1616,1.792,1622,2.875,1623,2.875,1624,2.875,1625,2.875,1635,2.875,1648,2.875,1652,1.792,1754,4.815,1760,6.684,1761,1.792,1762,4.157,1763,3.319,1764,3.319,1765,5.208,1766,4.157,1767,4.157,1768,5.208,1769,4.157,1770,4.157,1771,4.157,1772,4.157,1773,4.157,1774,4.157,1775,3.319,1776,3.319,1777,4.157,1778,2.069,1779,3.319,1780,3.319,1781,3.319,1782,3.319,1783,3.319,1784,3.319,1785,5.208,1786,2.069,1787,5.208,1788,3.319,1789,2.069,1790,2.069,1791,2.069,1792,3.319,1793,2.069,1794,2.069,1795,2.069,1796,2.069,1797,3.319,1798,2.069,1799,5.559,1800,2.069,1801,2.069,1802,3.319,1803,2.069,1804,3.319,1805,2.069,1806,3.319,1807,2.069,1808,3.319,1809,2.069,1810,2.069,1811,3.319,1812,2.069,1813,3.319,1814,2.069,1815,2.069,1816,3.319,1817,2.069,1818,3.319,1819,2.069,1820,2.069,1821,2.069,1822,2.069,1823,2.069,1824,2.069,1825,2.069,1826,2.069,1827,2.069,1828,2.069,1829,3.319,1830,2.069,1831,2.069,1832,4.157,1833,2.069,1834,4.157,1835,2.069,1836,2.069,1837,2.069,1838,2.069,1839,2.069,1840,2.069,1841,3.319,1842,2.069,1843,2.069,1844,3.319]],["title/injectables/UploadService.html",[37,1.004,1036,2.403]],["body/injectables/UploadService.html",[2,1.284,3,0.175,4,0.215,5,0.255,7,0.3,8,0.545,22,0.016,24,0.471,28,2.619,30,0.589,32,0.215,33,2.117,35,0.011,36,0.011,37,1.491,39,1.878,44,0.723,45,0.691,50,1.054,55,0.519,57,1.645,61,2.727,62,2.56,63,0.441,103,2.206,110,1.433,129,1.823,130,0.797,131,1.433,133,1.433,165,1.337,168,1.337,174,1.717,255,0.788,286,1.795,287,2.064,290,3.823,291,4.602,297,3.446,301,4.602,302,4.128,304,2.727,305,2.921,306,3.154,307,2.992,308,5.022,309,1.795,310,3.836,311,3.836,312,3.836,313,3.836,314,3.836,317,2.4,668,5.537,1036,3.569,1060,4.882,1062,3.161,1063,3.836,1512,3.154,1546,5.022,1715,3.836,1845,3.836,1846,5.798,1847,5.798,1848,4.43,1849,5.798,1850,5.798,1851,5.798,1852,5.939,1853,4.43,1854,4.43,1855,4.43,1856,4.43,1857,4.43,1858,4.43,1859,4.43,1860,4.43,1861,4.43,1862,5.798,1863,4.43,1864,4.43,1865,4.43,1866,4.43,1867,4.43,1868,4.43,1869,4.43,1870,5.798,1871,4.43,1872,4.43,1873,4.43,1874,4.43]],["title/injectables/UploadsGQL.html",[37,1.004,1875,3.037]],["body/injectables/UploadsGQL.html",[3,0.189,4,0.232,5,0.189,7,0.324,8,0.573,9,2.123,12,2.026,14,2.079,15,2.123,18,2.262,19,2.227,21,1.27,22,0.016,24,0.488,30,0.569,32,0.354,33,1.566,35,0.012,36,0.012,37,1.566,39,2.026,41,3.143,42,4.08,43,3.875,44,0.78,45,0.746,46,3.321,49,2.838,50,0.78,52,3.749,53,2.467,54,2.606,55,0.56,57,1.775,63,0.476,130,0.898,181,2.763,255,1.193,278,1.468,284,2.763,286,2.468,287,2.227,326,3.718,327,3.718,328,3.459,330,4.126,1062,3.974,1176,3.974,1482,2.943,1519,4.487,1526,4.738,1529,4.738,1875,4.738,1876,3.403,1877,5.214,1878,4.78,1879,4.14,1880,4.14,1881,4.14,1882,4.14]],["title/classes/Validation.html",[63,0.389,517,2.779]],["body/classes/Validation.html",[3,0.212,4,0.261,5,0.212,7,0.365,21,1.308,22,0.016,23,2.062,24,0.392,30,0.42,32,0.261,33,2.148,35,0.013,36,0.014,50,0.878,63,0.536,81,1.269,110,1.62,129,1.692,130,0.663,131,1.33,133,1.33,166,2.508,317,2.734,517,4.669,544,5.68,641,3.549,1883,5.382,1884,4.661,1885,7.073,1886,6.558,1887,7.073,1888,5.382,1889,5.382,1890,7.073,1891,6.558,1892,5.382,1893,5.382,1894,5.382,1895,5.382,1896,5.382,1897,5.382,1898,5.382,1899,5.382,1900,5.382]],["title/changelog.html",[1901,2.823,1902,2.823,1903,2.823]],["body/changelog.html",[5,0.207,22,0.016,35,0.012,36,0.012,399,6.691,553,5.584,1903,4.535,1904,5.584,1905,7.292,1906,6.448,1907,6.987,1908,6.448,1909,6.448,1910,7.726,1911,6.448,1912,6.448,1913,7.292,1914,6.448,1915,6.448,1916,6.448,1917,6.448,1918,6.448,1919,6.448,1920,5.016,1921,6.052,1922,6.448,1923,5.236,1924,5.236,1925,5.236,1926,5.236,1927,5.236,1928,5.236,1929,5.236,1930,5.236,1931,5.236,1932,5.236,1933,5.236,1934,5.236,1935,5.236,1936,5.236,1937,5.236,1938,5.236]],["title/coverage.html",[1939,4.615]],["body/coverage.html",[0,1.739,1,0.516,3,0.114,5,0.114,6,3.354,22,0.016,24,0.211,27,2.8,34,2.066,35,0.008,36,0.008,37,1.864,38,1.913,40,2.257,56,1.677,63,0.289,64,0.382,65,0.635,70,2.513,71,2.513,72,3.663,83,2.066,182,1.786,192,2.225,216,0.585,220,0.635,222,0.635,225,0.635,227,0.635,229,0.635,232,0.635,234,0.635,236,0.635,238,0.635,240,0.635,242,0.635,244,0.635,246,0.635,248,0.635,250,0.635,252,0.635,254,0.635,256,0.635,258,0.635,261,0.635,263,0.635,265,0.635,266,1.013,268,0.635,270,0.635,272,0.635,273,0.983,275,0.635,277,0.662,280,0.61,283,3.354,286,1.176,288,1.913,289,2.513,307,2.94,309,1.176,323,2.257,324,2.257,334,2.066,335,3.354,338,2.066,341,2.513,386,1.125,387,1.497,388,1.913,390,2.257,391,2.257,393,2.257,430,2.513,431,2.513,436,1.497,454,2.066,466,2.513,477,2.257,478,2.257,480,2.257,484,2.066,485,2.513,489,2.513,490,2.513,517,2.066,549,2.513,593,1.786,594,2.066,628,3.354,629,3.354,631,2.513,632,2.257,633,2.513,699,2.513,704,2.513,738,2.513,1010,2.066,1011,3.07,1012,3.747,1014,2.257,1020,2.513,1030,2.513,1034,2.513,1035,2.513,1036,1.786,1037,2.066,1060,2.066,1061,2.513,1064,2.257,1065,2.513,1067,2.513,1081,2.066,1083,2.513,1084,2.513,1094,2.513,1121,2.513,1125,2.513,1129,3.354,1140,2.257,1158,2.513,1159,2.513,1160,2.513,1170,2.513,1174,2.513,1175,2.513,1187,3.354,1192,2.066,1199,2.257,1246,2.257,1248,2.257,1292,2.513,1293,2.513,1294,2.513,1295,2.513,1352,2.257,1362,2.513,1365,3.354,1366,2.513,1406,2.257,1415,2.513,1473,2.513,1476,2.066,1477,3.07,1478,2.257,1486,3.747,1487,2.066,1488,2.513,1505,1.913,1511,2.513,1513,2.066,1514,3.07,1524,2.257,1534,2.513,1535,2.513,1588,2.513,1589,2.513,1724,2.513,1725,2.513,1758,2.513,1760,2.513,1761,2.513,1845,2.513,1875,2.257,1876,3.07,1877,2.257,1884,2.513,1939,2.513,1940,2.901,1941,2.901,1942,2.901,1943,4.312,1944,3.354,1945,6.933,1946,2.257,1947,7.993,1948,7.666,1949,2.513,1950,5.146,1951,4.312,1952,2.901,1953,4.312,1954,2.513,1955,2.513,1956,4.934,1957,3.734,1958,3.734,1959,2.513,1960,2.513,1961,3.734,1962,2.901,1963,4.312,1964,6.087,1965,4.312,1966,4.312,1967,4.312,1968,2.513,1969,2.901,1970,3.354,1971,2.257,1972,2.513,1973,7.056,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.901,1982,2.901,1983,2.901,1984,2.901,1985,2.901,1986,2.901,1987,2.901,1988,5.146,1989,2.901,1990,2.901,1991,2.901,1992,2.901,1993,2.513,1994,2.513,1995,2.513,1996,2.901,1997,4.934,1998,2.513,1999,2.513,2000,2.513,2001,3.734,2002,2.513,2003,2.901,2004,2.513]],["title/dependencies.html",[1920,2.536,2005,4.067]],["body/dependencies.html",[22,0.016,35,0.012,36,0.012,53,2.604,54,2.752,55,0.591,166,2.352,168,2.41,169,1.653,174,1.957,177,2.045,178,2.045,180,1.151,181,2.917,380,4.982,381,3.328,383,1.957,385,3.926,670,3.593,1090,4.487,1091,4.487,1242,3.328,1445,3.926,2004,4.371,2005,4.371,2006,5.047,2007,7.816,2008,5.047,2009,5.047,2010,5.047,2011,5.047,2012,5.047,2013,5.047,2014,5.047,2015,5.047,2016,5.047,2017,7.952,2018,5.047,2019,5.047,2020,5.047,2021,5.047,2022,5.047,2023,5.047,2024,5.047,2025,6.303,2026,5.047,2027,5.047,2028,5.047,2029,5.047,2030,5.047,2031,5.047,2032,5.047,2033,5.047,2034,5.047,2035,5.047,2036,5.047,2037,5.047]],["title/miscellaneous/enumerations.html",[2038,1.777,2039,4.067]],["body/miscellaneous/enumerations.html",[7,0.372,22,0.016,26,3.618,35,0.013,36,0.013,45,1.265,223,1.202,255,1.181,266,1.181,306,4.724,495,3.618,1416,4.753,2038,2.992,2039,4.753,2040,5.488,2041,5.488,2042,5.488,2043,5.488,2044,5.488,2045,5.488,2046,5.488,2047,5.488,2048,5.488,2049,5.488,2050,5.488,2051,5.488,2052,5.488,2053,5.488,2054,5.488,2055,5.488,2056,5.488,2057,5.488,2058,5.488,2059,5.488,2060,5.488,2061,7.411,2062,6.636,2063,6.636,2064,6.636,2065,5.488,2066,6.636]],["title/miscellaneous/functions.html",[2038,1.777,2067,4.067]],["body/miscellaneous/functions.html",[7,0.341,21,1.225,22,0.016,23,1.579,24,0.55,26,3.739,27,1.714,35,0.012,36,0.012,44,0.819,45,0.784,124,1.456,129,2.407,130,0.944,131,1.892,133,1.913,140,2.23,147,3.359,255,0.893,336,3.907,340,2.928,352,3.091,353,3.195,387,3.243,393,4.888,454,4.474,1176,2.738,1199,4.888,1205,4.35,1246,4.888,1944,3.907,1946,4.888,1970,3.907,1971,5.334,1997,4.35,1998,5.442,1999,4.35,2000,5.939,2001,4.35,2002,5.442,2038,2.738,2067,4.35,2068,4.35,2069,4.35,2070,7.186,2071,5.022,2072,6.284,2073,5.022,2074,5.022,2075,5.022,2076,6.284,2077,5.022,2078,4.35,2079,5.022,2080,6.858,2081,5.022,2082,5.022,2083,5.022]],["title/index.html",[7,0.221,1901,2.823,1902,2.823]],["body/index.html",[22,0.015,35,0.014,36,0.014,85,1.441,2084,6.322]],["title/modules.html",[2085,4.615]],["body/modules.html",[22,0.014,35,0.014,36,0.014,2085,5.509]],["title/overview.html",[2086,4.615]],["body/overview.html",[2,1.8,22,0.014,28,2.891,29,2.892,35,0.014,36,0.014,39,2.631,63,0.619,66,1.415,216,1.252,1082,4.093,1968,5.376,2086,5.376,2087,6.207,2088,6.207]],["title/properties.html",[8,0.442,1920,2.536]],["body/properties.html",[8,0.59,22,0.015,35,0.014,36,0.014,290,4.134,1122,4.464,1904,5.431,1921,5.431,2089,6.27]],["title/miscellaneous/typealiases.html",[2038,1.777,2090,4.696]],["body/miscellaneous/typealiases.html",[3,0.275,7,0.314,17,2.92,22,0.013,24,0.589,27,1.578,28,1.873,29,2.154,35,0.012,36,0.012,40,3.596,52,4.547,58,5.163,59,5.163,60,5.163,156,4.637,266,1.314,295,5.163,299,5.163,323,3.596,324,5.422,332,5.163,333,5.163,455,4.244,566,5.163,572,5.163,1011,3.291,1012,4.776,1016,5.163,1017,5.163,1066,6.271,1352,3.596,1361,5.163,1477,3.291,1480,5.163,1481,5.163,1514,4.244,1521,5.163,1522,5.163,1523,5.163,1524,5.422,1529,4.637,1530,5.163,1532,5.163,1533,5.163,1852,5.163,1876,3.291,1879,5.163,1880,5.163,1881,5.163,2038,2.52,2091,4.623,2092,6.598,2093,6.598,2094,6.598,2095,5.163,2096,5.961,2097,5.961,2098,5.961,2099,4.623,2100,4.623,2101,5.163,2102,7.387,2103,4.623,2104,5.714,2105,4.623,2106,4.623,2107,4.623,2108,4.623,2109,4.623]],["title/miscellaneous/variables.html",[2038,1.777,2110,4.067]],["body/miscellaneous/variables.html",[1,0.361,6,1.578,7,0.138,9,1.822,10,1.601,11,1.686,12,1.739,13,2.155,14,2.229,15,1.822,16,1.686,17,1.601,18,1.747,19,1.912,20,1.782,21,0.879,22,0.016,23,2.322,24,0.485,27,2.758,28,2.646,29,0.946,33,1.805,34,2.327,35,0.006,36,0.006,38,1.338,42,1.173,44,1.183,45,1.132,46,2.237,49,2.9,53,1.047,77,1.047,78,4.126,80,1.445,81,1.237,110,0.501,130,0.58,162,0.994,179,0.463,189,1.578,199,0.86,202,0.822,223,0.444,255,0.361,266,0.837,278,0.898,284,1.173,288,1.338,307,3.211,317,2.152,326,1.578,327,1.578,328,2.117,330,2.526,353,1.912,369,1.047,373,1.601,386,0.787,387,1.686,388,1.338,390,2.542,391,2.542,410,3.192,419,1.047,436,1.686,457,2.542,462,1.047,464,1.578,477,2.542,495,1.338,550,4.074,555,1.578,592,1.757,593,1.249,594,2.327,618,1.578,628,1.578,629,2.542,641,3.4,700,1.578,1011,1.445,1012,2.896,1013,2.542,1014,2.542,1018,1.757,1019,1.757,1021,3.554,1022,3.554,1023,3.554,1024,4.467,1025,3.554,1026,1.757,1028,1.757,1029,2.83,1031,1.578,1036,1.249,1062,2.565,1086,3.659,1122,1.445,1129,1.578,1136,5.221,1140,2.542,1143,3.392,1144,4.287,1145,1.757,1146,1.578,1147,1.757,1148,1.757,1149,2.542,1150,1.578,1151,1.757,1152,1.757,1153,1.757,1176,2.565,1187,1.578,1196,2.327,1248,2.542,1249,1.757,1250,1.757,1251,1.757,1321,1.757,1335,6.282,1406,1.578,1477,1.445,1478,2.542,1482,1.249,1483,1.757,1484,1.757,1485,1.578,1519,2.896,1526,2.542,1876,1.445,1877,2.542,1882,1.757,1944,1.578,1946,1.578,1949,2.83,1954,1.757,1955,2.83,1956,2.83,1957,3.554,1958,3.554,1959,2.83,1960,2.83,1961,3.554,1970,1.578,1971,1.578,1972,3.554,1974,1.757,1975,2.83,1976,2.83,1977,1.757,1978,2.83,1979,1.757,1980,2.83,1993,1.757,1994,1.757,1995,1.757,2038,1.106,2068,1.757,2069,1.757,2078,1.757,2095,1.757,2101,1.757,2104,1.757,2110,1.757,2111,2.029,2112,2.029,2113,2.029,2114,2.029,2115,2.029,2116,2.029,2117,2.029,2118,2.029,2119,2.029,2120,4.704,2121,2.029,2122,2.029,2123,2.029,2124,2.029,2125,2.029,2126,2.029,2127,2.029,2128,2.029,2129,2.029,2130,2.029,2131,2.029,2132,4.103,2133,2.029,2134,2.029,2135,3.268,2136,3.268,2137,2.029,2138,3.268,2139,2.029,2140,2.029,2141,2.029,2142,2.029,2143,2.029,2144,2.029,2145,2.029,2146,3.268,2147,2.029,2148,2.029,2149,2.029,2150,3.268,2151,4.103,2152,2.029,2153,2.029,2154,2.029,2155,2.029,2156,2.029,2157,2.029,2158,2.029,2159,2.029,2160,2.029,2161,2.029,2162,5.157,2163,7.254,2164,2.029,2165,7.254,2166,6.653,2167,7.254,2168,6.388,2169,5.511,2170,6.388,2171,3.268,2172,5.157,2173,2.029,2174,2.029,2175,2.029,2176,2.029,2177,3.268,2178,2.029,2179,2.029,2180,3.268,2181,2.029,2182,4.103,2183,4.704,2184,2.029,2185,2.029,2186,2.029,2187,2.029,2188,2.029,2189,2.029,2190,2.029,2191,2.029,2192,2.029,2193,2.029,2194,2.029,2195,2.029,2196,2.029,2197,2.029,2198,2.029,2199,7.016,2200,7.016,2201,7.016,2202,4.704,2203,2.029,2204,2.029,2205,2.029]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":27,"title":{},"body":{"interfaces/Account.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1936,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1904,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.14.3",{"_index":2037,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1947,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1943,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1952,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1967,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1953,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1963,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1962,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1966,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1964,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1950,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1965,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1951,"title":{},"body":{"coverage.html":{}}}],["01.01.2001",{"_index":1757,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["02",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1935,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":28,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AuthComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":2027,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1969,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1968,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["13",{"_index":2088,"title":{},"body":{"overview.html":{}}}],["16",{"_index":2030,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":2007,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":29,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["2.32.1",{"_index":2015,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2035,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1057,"title":{},"body":{"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["200ms",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1905,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1437,"title":{},"body":{"components/SignUpComponent.html":{}}}],["28",{"_index":2087,"title":{},"body":{"overview.html":{}}}],["2c42561",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1586,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["3.0.0",{"_index":2012,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":2029,"title":{},"body":{"dependencies.html":{}}}],["3.83.0",{"_index":2017,"title":{},"body":{"dependencies.html":{}}}],["3.84.0",{"_index":2021,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1436,"title":{},"body":{"components/SignUpComponent.html":{}}}],["4.0.0",{"_index":2026,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1414,"title":{},"body":{"components/SignInComponent.html":{}}}],["401",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["409",{"_index":1471,"title":{},"body":{"components/SignUpComponent.html":{}}}],["5",{"_index":329,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["50",{"_index":1406,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["500ms",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":2028,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2033,"title":{},"body":{"dependencies.html":{}}}],["75f0adf",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["7bb7ca5",{"_index":1912,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":543,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["8.0.1",{"_index":2032,"title":{},"body":{"dependencies.html":{}}}],["8.13.0",{"_index":2013,"title":{},"body":{"dependencies.html":{}}}],["8e4ac0a",{"_index":1914,"title":{},"body":{"changelog.html":{}}}],["9dc7642",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["_actions",{"_index":1493,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["a,optio",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a.localecompare(b",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["a.url",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.url.includes('/404",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.urlafterredirects.includes('/404",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ab",{"_index":830,"title":{},"body":{"components/DashboardComponent.html":{}}}],["absolute",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":1891,"title":{},"body":{"classes/Validation.html":{}}}],["accept",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token",{"_index":486,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["accessors",{"_index":1776,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["account($username",{"_index":47,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account(where",{"_index":48,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["account.avatar",{"_index":1263,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.avatar.url",{"_index":1264,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.birthday",{"_index":1262,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name",{"_index":1266,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.first_name.trim",{"_index":1268,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.interface",{"_index":630,"title":{},"body":{"interfaces/AuthenticatedUser.html":{}}}],["account.last_name",{"_index":1267,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.last_name.trim",{"_index":1269,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account.model",{"_index":488,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["account.vk_avatar",{"_index":1265,"title":{},"body":{"components/ProfileComponent.html":{}}}],["account/avatar",{"_index":2059,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["account_avatar",{"_index":2058,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accountfilter",{"_index":99,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountgql",{"_index":38,"title":{"injectables/AccountGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountid",{"_index":1281,"title":{},"body":{"components/ProfileComponent.html":{}}}],["accountinfogql",{"_index":104,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinfoquery",{"_index":105,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinput",{"_index":184,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountinputcomponent",{"_index":65,"title":{"components/AccountInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["accountmodel",{"_index":56,"title":{"interfaces/AccountModel.html":{}},"body":{"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/AuthModel.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["accountqueryref",{"_index":60,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountresponse",{"_index":58,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accounts",{"_index":100,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountservice",{"_index":288,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountsfilter",{"_index":101,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountshortmodel",{"_index":182,"title":{"interfaces/AccountShortModel.html":{}},"body":{"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusername($username",{"_index":325,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["accountsinfobyusernamegql",{"_index":83,"title":{"injectables/AccountsInfoByUsernameGQL.html":{}},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{}}}],["accountsinfobyusernamequeryref",{"_index":156,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernameresponse",{"_index":332,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountsinfobyusernamevariables",{"_index":333,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accountslist",{"_index":102,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["accountvariables",{"_index":59,"title":{},"body":{"injectables/AccountGQL.html":{},"miscellaneous/typealiases.html":{}}}],["accusamus",{"_index":788,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusamusreiciendis",{"_index":997,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantium",{"_index":843,"title":{},"body":{"components/DashboardComponent.html":{}}}],["accusantiumquidem",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actions",{"_index":1489,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["actions'},{'name",{"_index":267,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["actions.component",{"_index":1652,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["actions.component.html",{"_index":1491,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.scss",{"_index":1492,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts",{"_index":1488,"title":{},"body":{"components/UploadActionsComponent.html":{},"coverage.html":{}}}],["actions.component.ts:17",{"_index":1502,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:18",{"_index":1497,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:20",{"_index":1504,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:22",{"_index":1499,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:23",{"_index":1500,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions.component.ts:24",{"_index":1498,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["actions/upload",{"_index":1487,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":451,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["activeitemindex",{"_index":470,"title":{},"body":{"components/AuthComponent.html":{}}}],["actual_component",{"_index":282,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["ad",{"_index":896,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisci",{"_index":799,"title":{},"body":{"components/DashboardComponent.html":{}}}],["adipisicing",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{}}}],["administrator",{"_index":2066,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":1367,"title":{},"body":{"components/SignInComponent.html":{}}}],["alerts",{"_index":106,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["alias",{"_index":921,"title":{},"body":{"components/DashboardComponent.html":{},"components/UploadActionsComponent.html":{}}}],["aliases",{"_index":2091,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliquam",{"_index":846,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquam,nemo",{"_index":946,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquamearum",{"_index":1002,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid",{"_index":770,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquid!soluta",{"_index":925,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aliquidpraesentium",{"_index":987,"title":{},"body":{"components/DashboardComponent.html":{}}}],["allow",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amet",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ametimpedit",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{}}}],["angular",{"_index":54,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2006,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2008,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":178,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":304,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/SignUpComponent.html":{},"injectables/UploadService.html":{}}}],["angular/compiler",{"_index":2009,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":55,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":172,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["angular/forms",{"_index":166,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"classes/Validation.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1090,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animations",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["animi",{"_index":878,"title":{},"body":{"components/DashboardComponent.html":{}}}],["animicommodi",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aperiam",{"_index":767,"title":{},"body":{"components/DashboardComponent.html":{}}}],["api",{"_index":306,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["apierror",{"_index":334,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["apiurl",{"_index":1021,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":53,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["apollo/client",{"_index":2011,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/errors",{"_index":1245,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollo_options",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apolloclientoptions",{"_index":2073,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apolloerror",{"_index":1244,"title":{},"body":{"components/ProfileComponent.html":{}}}],["apollooptionsfactory",{"_index":1971,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["app.component.html",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngondestroy",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["app.ngoninit",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/pass/auth",{"_index":452,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["app_initializer",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":220,"title":{"components/AppComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":1022,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory",{"_index":1946,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory(config",{"_index":2074,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applicationconfig",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["architecto",{"_index":821,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architecto,molestias",{"_index":974,"title":{},"body":{"components/DashboardComponent.html":{}}}],["architectonesciunt",{"_index":963,"title":{},"body":{"components/DashboardComponent.html":{}}}],["area",{"_index":1343,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["arguments",{"_index":1311,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["asperiores",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernatur",{"_index":849,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aspernaturquia",{"_index":969,"title":{},"body":{"components/DashboardComponent.html":{}}}],["assumenda",{"_index":919,"title":{},"body":{"components/DashboardComponent.html":{}}}],["async",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{}}}],["atque",{"_index":778,"title":{},"body":{"components/DashboardComponent.html":{}}}],["atqueeaque",{"_index":926,"title":{},"body":{"components/DashboardComponent.html":{}}}],["aut",{"_index":794,"title":{},"body":{"components/DashboardComponent.html":{}}}],["autem",{"_index":838,"title":{},"body":{"components/DashboardComponent.html":{}}}],["auth",{"_index":223,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":226,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["auth.$$isauth.pipe",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.component.html",{"_index":468,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":469,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.ngoninit",{"_index":472,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth/logout",{"_index":2050,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh",{"_index":2052,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/refresh/clear",{"_index":2054,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/sign",{"_index":2048,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth/token",{"_index":2046,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_me",{"_index":2044,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh",{"_index":2051,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_refresh_clear",{"_index":2053,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_in",{"_index":2045,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_out",{"_index":2049,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth_sign_up",{"_index":2047,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authcallback",{"_index":456,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngondestroy",{"_index":437,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallback.ngoninit",{"_index":439,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["authcallbackcomponent",{"_index":222,"title":{"components/AuthCallbackComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["authcallbackdto",{"_index":455,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["authcallbackguard",{"_index":1976,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcomponent",{"_index":225,"title":{"components/AuthComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["authenticatedroutes",{"_index":1135,"title":{},"body":{"components/NavComponent.html":{}}}],["authenticateduser",{"_index":593,"title":{"interfaces/AuthenticatedUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/UploadFileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":1978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodel",{"_index":484,"title":{"interfaces/AuthModel.html":{}},"body":{"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authorization",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authpass",{"_index":518,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngondestroy",{"_index":501,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpass.ngoninit",{"_index":503,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["authpasscomponent",{"_index":227,"title":{"components/AuthPassComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":386,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autquia",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{}}}],["avatar",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["avatar'},{'name",{"_index":231,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["avatar.component",{"_index":1247,"title":{},"body":{"components/ProfileComponent.html":{}}}],["avatar.component.html",{"_index":637,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.scss",{"_index":638,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts",{"_index":633,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["avatar.component.ts:108",{"_index":654,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:133",{"_index":658,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:149",{"_index":653,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:155",{"_index":657,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:47",{"_index":660,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:48",{"_index":664,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:49",{"_index":649,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:65",{"_index":663,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:67",{"_index":666,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:69",{"_index":667,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:70",{"_index":661,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:72",{"_index":655,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar.component.ts:76",{"_index":651,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["avatar/change",{"_index":632,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["avataralreadyexists",{"_index":639,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["avatarurl",{"_index":1729,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["await",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["b",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["b8284fa",{"_index":1915,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beatae",{"_index":791,"title":{},"body":{"components/DashboardComponent.html":{}}}],["before",{"_index":1308,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["behaviorsubject",{"_index":442,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(false",{"_index":510,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["behaviorsubject(true",{"_index":443,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["between",{"_index":1344,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["big",{"_index":1328,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["birthday",{"_index":10,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["blanditiis",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blanditiislaudantium",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{}}}],["blob",{"_index":314,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body",{"_index":308,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('acl",{"_index":1865,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('compress",{"_index":1858,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('file",{"_index":311,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["body.append('id",{"_index":316,"title":{},"body":{"injectables/AccountService.html":{}}}],["body.append('name",{"_index":1863,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('originalname",{"_index":1860,"title":{},"body":{"injectables/UploadService.html":{}}}],["body.append('path",{"_index":1856,"title":{},"body":{"injectables/UploadService.html":{}}}],["boolean",{"_index":140,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"injectables/ScrollService.html":{},"interfaces/UploadActionsParams.html":{},"interfaces/UploadModel.html":{},"miscellaneous/functions.html":{}}}],["borderradius",{"_index":1405,"title":{},"body":{"components/SignInComponent.html":{}}}],["bottom",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":541,"title":{},"body":{"components/AuthPassComponent.html":{},"components/UploadInfoComponent.html":{}}}],["browser",{"_index":1091,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["bucket",{"_index":1517,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["bug",{"_index":1908,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":189,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["calculated",{"_index":1349,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["callback",{"_index":432,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback'},{'name",{"_index":224,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["callback.component.html",{"_index":433,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.scss",{"_index":434,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts",{"_index":431,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["callback.component.ts:23",{"_index":448,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:24",{"_index":441,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:25",{"_index":449,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:27",{"_index":450,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:29",{"_index":444,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:30",{"_index":446,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:33",{"_index":440,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.component.ts:57",{"_index":438,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["callback.guard.ts",{"_index":1975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["callbackurl",{"_index":471,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["canactivatefn",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":538,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["catcherror",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["catcherror((err",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"miscellaneous/variables.html":{}}}],["catcherror((res",{"_index":681,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["change",{"_index":230,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["changeavatar",{"_index":643,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{}}}],["changeavatarcomponent",{"_index":229,"title":{"components/ChangeAvatarComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["changelog",{"_index":1903,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["charts",{"_index":2016,"title":{},"body":{"dependencies.html":{}}}],["chatonly",{"_index":2063,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chats",{"_index":700,"title":{},"body":{"components/ChatsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["chats'},{'name",{"_index":233,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["chats.component.html",{"_index":701,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chats.component.scss",{"_index":702,"title":{},"body":{"components/ChatsComponent.html":{}}}],["chatscomponent",{"_index":232,"title":{"components/ChatsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["checkcontrol",{"_index":1894,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol.errors['matching",{"_index":1897,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.errors",{"_index":1896,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrol?.value",{"_index":1899,"title":{},"body":{"classes/Validation.html":{}}}],["checkcontrolname",{"_index":1887,"title":{},"body":{"classes/Validation.html":{}}}],["class",{"_index":63,"title":{"classes/Validation.html":{}},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1883,"title":{},"body":{"classes/Validation.html":{}}}],["clear",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["clickowner",{"_index":1599,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["clickupload",{"_index":1730,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["client",{"_index":2084,"title":{},"body":{"index.html":{}}}],["close",{"_index":1100,"title":{},"body":{"components/MeComponent.html":{}}}],["closemenu",{"_index":708,"title":{},"body":{"injectables/ConfigService.html":{},"components/NavComponent.html":{}}}],["code",{"_index":339,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{}}}],["commerce",{"_index":2018,"title":{},"body":{"dependencies.html":{}}}],["commit",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["commitizen",{"_index":1910,"title":{},"body":{"changelog.html":{}}}],["commodi",{"_index":790,"title":{},"body":{"components/DashboardComponent.html":{}}}],["commonmodule",{"_index":89,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["complete",{"_index":1116,"title":{},"body":{"components/MeComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["component",{"_index":64,"title":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":218,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["components",{"_index":66,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"overview.html":{}}}],["components/header",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["components/me",{"_index":1079,"title":{},"body":{"components/HeaderComponent.html":{}}}],["components/menu",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["components/nav",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{}}}],["components/oops",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["compress",{"_index":1557,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["computed",{"_index":150,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["config",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"miscellaneous/functions.html":{}}}],["configservice",{"_index":387,"title":{"injectables/ConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["confirmform",{"_index":1420,"title":{},"body":{"components/SignUpComponent.html":{}}}],["confirmpass",{"_index":508,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["consectetur",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequatur",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequaturmollitia",{"_index":924,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequuntur",{"_index":769,"title":{},"body":{"components/DashboardComponent.html":{}}}],["consequunturcommodi",{"_index":990,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console",{"_index":1340,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["console.log(err",{"_index":464,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":33,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["constructor(context",{"_index":647,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["constructor(el",{"_index":1301,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["constructor(fb",{"_index":497,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(private",{"_index":519,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/IFrameUrlPipe.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["container",{"_index":1398,"title":{},"body":{"components/SignInComponent.html":{}}}],["contains",{"_index":327,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":650,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["context.data.accountid",{"_index":675,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["context.data.avataralreadyexists",{"_index":677,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["control",{"_index":641,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["control?.value",{"_index":1898,"title":{},"body":{"classes/Validation.html":{}}}],["controlevent",{"_index":1650,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["controlname",{"_index":1889,"title":{},"body":{"classes/Validation.html":{}}}],["controls",{"_index":1892,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname",{"_index":1895,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(checkcontrolname)?.seterrors",{"_index":1900,"title":{},"body":{"classes/Validation.html":{}}}],["controls.get(controlname",{"_index":1893,"title":{},"body":{"classes/Validation.html":{}}}],["controlvalueaccessor",{"_index":75,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["corporis",{"_index":888,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corporisdicta",{"_index":989,"title":{},"body":{"components/DashboardComponent.html":{}}}],["corrupti",{"_index":883,"title":{},"body":{"components/DashboardComponent.html":{}}}],["coverage",{"_index":1939,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":284,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["credentials",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["culpa",{"_index":812,"title":{},"body":{"components/DashboardComponent.html":{}}}],["culpaconsectetur",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cum",{"_index":901,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cumque",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditate",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatequasi",{"_index":966,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cupiditatereiciendis",{"_index":976,"title":{},"body":{"components/DashboardComponent.html":{}}}],["currently",{"_index":1332,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentpath",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpath.includes('/auth/callback",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentscrolledy",{"_index":1336,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["currentstep",{"_index":1542,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["customicon",{"_index":1149,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":1289,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["d5e22c5",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["dashboard",{"_index":739,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":235,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["dashboard.component.html",{"_index":740,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":741,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":234,"title":{"components/DashboardComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["data",{"_index":462,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["data.access_token",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.avatar.url",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.birthday",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.email",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.first_name.trim",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.last_name.trim",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.roles.sort((a",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.sex",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.username",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_avatar",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.vk_id",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["data[key].set",{"_index":1701,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["data[object.keys(val)[0",{"_index":1688,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["date",{"_index":25,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{}}}],["datepipe",{"_index":1188,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["debitis",{"_index":891,"title":{},"body":{"components/DashboardComponent.html":{}}}],["debouncedsignal",{"_index":1998,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["debouncedsignal(sourcesignal",{"_index":2075,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debouncetime",{"_index":175,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{}}}],["debouncetime(1000",{"_index":194,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/ScrollService.html":{}}}],["debouncetimeinms",{"_index":2076,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["default",{"_index":44,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":50,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["delectus",{"_index":827,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delectusconsequuntur",{"_index":994,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deleniti",{"_index":834,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitipariatur",{"_index":995,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delenitiquaerat",{"_index":961,"title":{},"body":{"components/DashboardComponent.html":{}}}],["delete",{"_index":1512,"title":{},"body":{"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{}}}],["deleteupload",{"_index":1600,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["deleteupload(where",{"_index":1019,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyid($id",{"_index":1018,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidgql",{"_index":1010,"title":{"injectables/DeleteUploadByIdGQL.html":{}},"body":{"injectables/DeleteUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["deleteuploadbyidquery",{"_index":1014,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deleteuploadbyidresponse",{"_index":1016,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["deleteuploadbyidvariables",{"_index":1017,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":2005,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":290,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadService.html":{},"properties.html":{}}}],["deserunt",{"_index":806,"title":{},"body":{"components/DashboardComponent.html":{}}}],["deseruntaut",{"_index":973,"title":{},"body":{"components/DashboardComponent.html":{}}}],["destroyref",{"_index":107,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["dev",{"_index":1027,"title":{},"body":{"interfaces/Env.html":{}}}],["dialogs",{"_index":1097,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["dicta",{"_index":879,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dignissimos",{"_index":906,"title":{},"body":{"components/DashboardComponent.html":{}}}],["directive",{"_index":216,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":279,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["disabled",{"_index":108,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["distinctio",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctioaliquid",{"_index":952,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctiovoluptates",{"_index":991,"title":{},"body":{"components/DashboardComponent.html":{}}}],["distinctuntilchanged",{"_index":176,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["dj29fnsadjsd82f249k293c139j1kd3",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["document",{"_index":43,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["documentation",{"_index":1940,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["dolor",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolore",{"_index":890,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorem",{"_index":913,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloremque",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolores",{"_index":899,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribus!aspernatur",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{}}}],["doloribusut",{"_index":1005,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dolorum",{"_index":823,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dom",{"_index":68,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["dompurify",{"_index":2025,"title":{},"body":{"dependencies.html":{}}}],["domsanitizer",{"_index":1089,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadPreviewComponent.html":{}}}],["dto",{"_index":297,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["dto.compress.tostring",{"_index":1859,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.file",{"_index":312,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["dto.file.name",{"_index":1861,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.id",{"_index":315,"title":{},"body":{"injectables/AccountService.html":{}}}],["dto.name",{"_index":1862,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.path",{"_index":1857,"title":{},"body":{"injectables/UploadService.html":{}}}],["dto.private",{"_index":1864,"title":{},"body":{"injectables/UploadService.html":{}}}],["dtos",{"_index":305,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"injectables/UploadService.html":{}}}],["ducimus",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dynamic",{"_index":2010,"title":{},"body":{"dependencies.html":{}}}],["e.source.dirty",{"_index":1657,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["ea",{"_index":912,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eaque",{"_index":779,"title":{},"body":{"components/DashboardComponent.html":{}}}],["earum",{"_index":884,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ease",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editable",{"_index":1592,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["edited",{"_index":1593,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["effect",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["eius",{"_index":809,"title":{},"body":{"components/DashboardComponent.html":{}}}],["el",{"_index":1304,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["element",{"_index":215,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["elementref",{"_index":1302,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{}}}],["eligendi",{"_index":876,"title":{},"body":{"components/DashboardComponent.html":{}}}],["elit",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{}}}],["email",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["emit",{"_index":1307,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end",{"_index":1309,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts",{"_index":1295,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["end.directive.ts:16",{"_index":1310,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:21",{"_index":1305,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:23",{"_index":1303,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:27",{"_index":1314,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["end.directive.ts:33",{"_index":1313,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["enim",{"_index":833,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enimdeleniti",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enterleaveanimation",{"_index":477,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2039,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":287,"title":{},"body":{"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}}}],["enums/role.enum",{"_index":31,"title":{},"body":{"interfaces/Account.html":{}}}],["env",{"_index":307,"title":{"interfaces/Env.html":{}},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/Env.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.apiurl}${api.account_avatar",{"_index":319,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.account_avatar}${dto.id",{"_index":321,"title":{},"body":{"injectables/AccountService.html":{}}}],["env.apiurl}${api.vk_id_exchange_token",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["env.appid",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["env.environment",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.origin",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.redirecturl",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["environment",{"_index":1023,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["eos",{"_index":842,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eos,impedit",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{}}}],["err",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["err.status",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["error",{"_index":202,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["error(err",{"_index":692,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["error(res.error",{"_index":684,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["errorhandler",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":528,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.foreach((error",{"_index":1409,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["errors.push",{"_index":540,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["esse",{"_index":895,"title":{},"body":{"components/DashboardComponent.html":{}}}],["esseperspiciatis",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{}}}],["est",{"_index":887,"title":{},"body":{"components/DashboardComponent.html":{}}}],["et",{"_index":808,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eum",{"_index":892,"title":{},"body":{"components/DashboardComponent.html":{}}}],["eveniet",{"_index":915,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event",{"_index":1318,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["event.target",{"_index":1312,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["eventcoalescing",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1101,"title":{},"body":{"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["events",{"_index":1031,"title":{},"body":{"components/EventsComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["events'},{'name",{"_index":237,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["events.component.html",{"_index":1032,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.scss",{"_index":1033,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":236,"title":{"components/EventsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["ex",{"_index":840,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exact",{"_index":1146,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["excepturi",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{}}}],["exercitationem",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{}}}],["expedita",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["explicabo",{"_index":826,"title":{},"body":{"components/DashboardComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["ext",{"_index":1062,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":41,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{}}}],["extension",{"_index":239,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["extensioninput",{"_index":1054,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensioninputcomponent",{"_index":238,"title":{"components/ExtensionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["extensions",{"_index":1039,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["extensions.gql.ts",{"_index":1524,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["extensions.gql.ts:22",{"_index":1528,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["facere",{"_index":774,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facerequae",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{}}}],["facilis",{"_index":907,"title":{},"body":{"components/DashboardComponent.html":{}}}],["false",{"_index":162,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":500,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["features",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["fetchpolicy",{"_index":188,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{}}}],["file'},{'name",{"_index":269,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["file.component.html",{"_index":1540,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.scss",{"_index":1541,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts",{"_index":1535,"title":{},"body":{"components/UploadFileComponent.html":{},"coverage.html":{}}}],["file.component.ts:104",{"_index":1550,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:62",{"_index":1566,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:63",{"_index":1562,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:64",{"_index":1554,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:65",{"_index":1551,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:67",{"_index":1560,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:68",{"_index":1564,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:70",{"_index":1552,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:72",{"_index":1559,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:81",{"_index":1553,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:83",{"_index":1548,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:87",{"_index":1549,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.component.ts:91",{"_index":1547,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["file.name.split",{"_index":1869,"title":{},"body":{"injectables/UploadService.html":{}}}],["file.type",{"_index":1874,"title":{},"body":{"injectables/UploadService.html":{}}}],["file/upload",{"_index":1534,"title":{},"body":{"components/UploadFileComponent.html":{},"coverage.html":{}}}],["file_name",{"_index":1482,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["fileform",{"_index":1543,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["filename",{"_index":1868,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join",{"_index":1872,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename.join('.').slice(0",{"_index":1871,"title":{},"body":{"injectables/UploadService.html":{}}}],["filename[filename.length",{"_index":1870,"title":{},"body":{"injectables/UploadService.html":{}}}],["fileparams",{"_index":1060,"title":{"interfaces/FileParams.html":{}},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["filter",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"components/UploadInfoComponent.html":{}}}],["filter(([_",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter((e",{"_index":1656,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["filter((val",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"components/UploadInfoComponent.html":{}}}],["filters",{"_index":326,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["first_name",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["firstvaluefrom(this.http.get('/assets/config.json",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fixed",{"_index":1136,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["fixes",{"_index":1909,"title":{},"body":{"changelog.html":{}}}],["float",{"_index":1526,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["foreach((error",{"_index":536,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["form",{"_index":494,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formbuilder",{"_index":498,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontrol",{"_index":507,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrol('.png",{"_index":1556,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol('file",{"_index":1555,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["formcontrol(false",{"_index":1558,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrol(new",{"_index":1434,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formcontrol(null",{"_index":662,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formcontrolname",{"_index":118,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["formdata",{"_index":310,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["formgroup",{"_index":119,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["formsmodule",{"_index":90,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["found",{"_index":1161,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":251,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["found.component.html",{"_index":1162,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1163,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1160,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:14",{"_index":1166,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:15",{"_index":1165,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1159,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["fuga",{"_index":908,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat",{"_index":787,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiat,est",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugiatfacilis",{"_index":964,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fugit",{"_index":909,"title":{},"body":{"components/DashboardComponent.html":{}}}],["full_name",{"_index":13,"title":{},"body":{"interfaces/Account.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":1945,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2067,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get,post,put,delete,options",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getaccountmodel",{"_index":1064,"title":{"interfaces/GetAccountModel.html":{}},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["getcurrentpath",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcurrentpath(router",{"_index":2078,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getcurrentpath(this.router).includes('/auth",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["getfileparams",{"_index":1846,"title":{},"body":{"injectables/UploadService.html":{}}}],["getfileparams(file",{"_index":1847,"title":{},"body":{"injectables/UploadService.html":{}}}],["getpreviewcontent",{"_index":1821,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["getquerypayload",{"_index":454,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getquerypayload(params",{"_index":2079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getquerypayload(route.queryparams",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1901,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["getupdatedfields",{"_index":1601,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["gql",{"_index":46,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["graphql",{"_index":181,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadsGQL.html":{},"dependencies.html":{}}}],["graphqlerror",{"_index":338,"title":{"interfaces/GraphqlError.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["graphqlprovider",{"_index":1972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["grid.animation.ts",{"_index":1958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guidelines",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["handlechange",{"_index":111,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handlechange(val",{"_index":127,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["handleclose",{"_index":1765,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["handledelete",{"_index":1494,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["handledeleteupload",{"_index":1602,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["handleme",{"_index":1098,"title":{},"body":{"components/MeComponent.html":{}}}],["handleopen",{"_index":1495,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["handlesave",{"_index":1496,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["handlesaveupload",{"_index":1603,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["handlesignout",{"_index":1099,"title":{},"body":{"components/MeComponent.html":{}}}],["handleuploadresult",{"_index":644,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["handleuploadresult(res",{"_index":652,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["harum",{"_index":813,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hasevery",{"_index":1882,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1068,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":241,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["header.component.html",{"_index":1073,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1074,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":240,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1324,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofelement",{"_index":1330,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["heightofwholepage",{"_index":1326,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hic",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hostlistener",{"_index":1319,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlistener('window:scroll",{"_index":1317,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["hostlisteners",{"_index":1299,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["html",{"_index":214,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["http",{"_index":291,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httpclient",{"_index":301,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["httperrorresponse",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["httpheaders",{"_index":1855,"title":{},"body":{"injectables/UploadService.html":{}}}],["httpinterceptorfn",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequestinterceptor",{"_index":1980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://drive.google.com/viewerng/viewer?embedded=true&url=${this.url",{"_index":1839,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["husky",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":1144,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Route.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/GetAccountModel.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts",{"_index":1012,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["id.gql.ts:24",{"_index":1520,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["id.gql.ts:25",{"_index":1015,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{}}}],["id.gql.ts:32",{"_index":1479,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{}}}],["id/exchange",{"_index":2057,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id=${dto.id",{"_index":322,"title":{},"body":{"injectables/AccountService.html":{}}}],["identifier",{"_index":1941,"title":{},"body":{"coverage.html":{}}}],["if(this.preview",{"_index":1510,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["iframeurl",{"_index":1085,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["iframeurlpipe",{"_index":1081,"title":{"pipes/IFrameUrlPipe.html":{}},"body":{"pipes/IFrameUrlPipe.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["illo",{"_index":816,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illum",{"_index":880,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumdeserunt",{"_index":1008,"title":{},"body":{"components/DashboardComponent.html":{}}}],["illumobcaecati",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{}}}],["images/cake.svg",{"_index":1148,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/files.svg",{"_index":1153,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["images/man.svg",{"_index":1250,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/tor.svg",{"_index":1249,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["images/woman.svg",{"_index":1251,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["impedit",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":73,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GetAccountModel.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["importprovidersfrom(tuirootmodule",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":88,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["improvements",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["in'},{'name",{"_index":260,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["in.component",{"_index":479,"title":{},"body":{"components/AuthComponent.html":{}}}],["in.component.html",{"_index":1368,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":1369,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts",{"_index":1366,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:151",{"_index":1378,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:38",{"_index":1393,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:40",{"_index":1382,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:41",{"_index":1383,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:42",{"_index":1388,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:44",{"_index":1374,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:46",{"_index":1391,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:47",{"_index":1389,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:49",{"_index":1386,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:50",{"_index":1387,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:52",{"_index":1385,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:58",{"_index":1373,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:63",{"_index":1380,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:85",{"_index":1376,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:98",{"_index":1381,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":478,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["incidunt",{"_index":886,"title":{},"body":{"components/DashboardComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["info'},{'name",{"_index":271,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["info.component.html",{"_index":1590,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.scss",{"_index":1591,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts",{"_index":1589,"title":{},"body":{"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:100",{"_index":1629,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:101",{"_index":1628,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:102",{"_index":1627,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:104",{"_index":1626,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:113",{"_index":1620,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:119",{"_index":1613,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:181",{"_index":1608,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:187",{"_index":1612,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:201",{"_index":1611,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:211",{"_index":1617,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:256",{"_index":1609,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:284",{"_index":1610,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:346",{"_index":1615,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:74",{"_index":1642,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:75",{"_index":1634,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:76",{"_index":1630,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:77",{"_index":1633,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:78",{"_index":1638,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:80",{"_index":1632,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:81",{"_index":1640,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:83",{"_index":1649,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:84",{"_index":1636,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:86",{"_index":1647,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:95",{"_index":1606,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:97",{"_index":1637,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info.component.ts:98",{"_index":1607,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["info/upload",{"_index":1588,"title":{},"body":{"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["init",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["initialaccount",{"_index":34,"title":{},"body":{"interfaces/Account.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialauthenticateduser",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initsentry",{"_index":2000,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":165,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{}}}],["inject(accountgql",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(accountservice",{"_index":659,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["inject(accountsinfobyusernamegql",{"_index":154,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["inject(activatedroute",{"_index":447,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["inject(authservice",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice).$isadmin",{"_index":1635,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inject(authservice).$user",{"_index":1565,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["inject(authservice).$user().id",{"_index":1648,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inject(configservice",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{}}}],["inject(deleteuploadbyidgql",{"_index":1631,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(destroyref",{"_index":160,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inject(domsanitizer",{"_index":1811,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(httpclient",{"_index":302,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/UploadService.html":{}}}],["inject(injector",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(polymorpheus_context",{"_index":673,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["inject(router",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(scrollservice",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(title",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inject(tui_is_mobile",{"_index":1797,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(tuialertservice",{"_index":158,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["inject(tuidialogservice",{"_index":1108,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["inject(tuipdfviewerservice",{"_index":1804,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(tuipreviewdialogservice",{"_index":1808,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["inject(updateuploadbyidgql",{"_index":1639,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(uploadbyidgql",{"_index":1641,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["inject(uploadextensionsgql",{"_index":1051,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["inject(uploadservice",{"_index":1561,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["injectable",{"_index":37,"title":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":39,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"injectables/ScrollService.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"overview.html":{}}}],["injector",{"_index":1197,"title":{},"body":{"components/ProfileComponent.html":{}}}],["innerheight",{"_index":1341,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["inoutanimation200",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutanimation500",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation200",{"_index":1959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inoutgridanimation500",{"_index":1960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":86,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["input'},{'name",{"_index":219,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["input(false",{"_index":1828,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["input.component.html",{"_index":96,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.scss",{"_index":98,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts",{"_index":72,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:101",{"_index":1047,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:119",{"_index":128,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:125",{"_index":142,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:127",{"_index":136,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:131",{"_index":138,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:135",{"_index":141,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:37",{"_index":1178,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:38",{"_index":1177,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:39",{"_index":1182,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:40",{"_index":1181,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:41",{"_index":1180,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:48",{"_index":1179,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:50",{"_index":1185,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:52",{"_index":1052,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:53",{"_index":1049,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:54",{"_index":1050,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:56",{"_index":1041,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["input.component.ts:57",{"_index":1040,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:58",{"_index":161,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:59",{"_index":159,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:60",{"_index":1183,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:61",{"_index":155,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:63",{"_index":157,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:64",{"_index":1184,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["input.component.ts:65",{"_index":123,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:66",{"_index":122,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:67",{"_index":126,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:69",{"_index":125,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{}}}],["input.component.ts:71",{"_index":164,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:73",{"_index":163,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:75",{"_index":148,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:77",{"_index":153,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:81",{"_index":149,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:82",{"_index":145,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:84",{"_index":134,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["input.component.ts:91",{"_index":1048,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:93",{"_index":1045,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.component.ts:97",{"_index":1046,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["input.required",{"_index":1501,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["input/account",{"_index":71,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["input/extension",{"_index":1035,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["input/permission",{"_index":1175,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":117,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["instanceof",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadActionsParams.html":{},"interfaces/UploadModel.html":{}},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"interfaces/Route.html":{},"interfaces/UploadActionsParams.html":{},"interfaces/UploadModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/ApiError.html":{},"interfaces/AuthModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/Env.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["interop",{"_index":173,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["inventore",{"_index":869,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inventoreillo",{"_index":970,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsa",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsam",{"_index":844,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsaneque",{"_index":996,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ipsum",{"_index":743,"title":{},"body":{"components/DashboardComponent.html":{}}}],["is_system",{"_index":1518,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["isadmin",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["isauth",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["isauthpage",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscustomname",{"_index":1576,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["iseditable",{"_index":1766,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["isend",{"_index":1353,"title":{},"body":{"injectables/ScrollService.html":{}}}],["isloading",{"_index":435,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["isme",{"_index":1195,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ismobile",{"_index":1767,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["isnotfound",{"_index":1246,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotfound(err.message",{"_index":1270,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isnotfound(message",{"_index":2082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotfoundpage",{"_index":705,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isopen",{"_index":1768,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["isopenprofiledropdown",{"_index":1075,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isprivate",{"_index":1644,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["isrefusedpage",{"_index":706,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isrotatable",{"_index":1769,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["issystem",{"_index":1645,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["iste",{"_index":820,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iszoomable",{"_index":1770,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["itaque",{"_index":803,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquebeatae",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{}}}],["itaquelaudantium",{"_index":1006,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item",{"_index":1700,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["item'},{'name",{"_index":274,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["item.component.html",{"_index":1727,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.scss",{"_index":1728,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts",{"_index":1725,"title":{},"body":{"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:42",{"_index":1738,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:43",{"_index":1750,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:45",{"_index":1751,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:46",{"_index":1734,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:47",{"_index":1733,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:49",{"_index":1737,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:50",{"_index":1735,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:51",{"_index":1736,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:53",{"_index":1743,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:61",{"_index":1749,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item.component.ts:71",{"_index":1744,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["item/upload",{"_index":1724,"title":{},"body":{"components/UploadListItemComponent.html":{},"coverage.html":{}}}],["iure",{"_index":795,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iusto",{"_index":780,"title":{},"body":{"components/DashboardComponent.html":{}}}],["iustoarchitecto",{"_index":1004,"title":{},"body":{"components/DashboardComponent.html":{}}}],["key",{"_index":1686,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["keyboardevent",{"_index":1316,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["keyof",{"_index":531,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["kit",{"_index":1850,"title":{},"body":{"injectables/UploadService.html":{}}}],["l",{"_index":1044,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["label",{"_index":1616,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["labore",{"_index":835,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laboriosam",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborum",{"_index":911,"title":{},"body":{"components/DashboardComponent.html":{}}}],["laborumcupiditate",{"_index":998,"title":{},"body":{"components/DashboardComponent.html":{}}}],["lang",{"_index":1402,"title":{},"body":{"components/SignInComponent.html":{}}}],["last_name",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["laudantium",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{}}}],["leave.animation.ts",{"_index":1955,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":213,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["length",{"_index":1873,"title":{},"body":{"injectables/UploadService.html":{}}}],["libero",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{}}}],["list",{"_index":273,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["literal",{"_index":1066,"title":{},"body":{"interfaces/GetAccountModel.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfig",{"_index":709,"title":{},"body":{"injectables/ConfigService.html":{}}}],["loading",{"_index":1196,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1026,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["locale_id",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1384,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["lorem",{"_index":742,"title":{},"body":{"components/DashboardComponent.html":{}}}],["m",{"_index":1042,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["magnam",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{}}}],["magni",{"_index":811,"title":{},"body":{"components/DashboardComponent.html":{}}}],["maiores",{"_index":910,"title":{},"body":{"components/DashboardComponent.html":{}}}],["map",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["map(([isauth",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map((a",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["map((control",{"_index":1706,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["map((data",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((e",{"_index":1658,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["map((params",{"_index":1210,"title":{},"body":{"components/ProfileComponent.html":{}}}],["map((profile",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{}}}],["map((val",{"_index":1709,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["match",{"_index":544,"title":{},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{}}}],["match(controlname",{"_index":1886,"title":{},"body":{"classes/Validation.html":{}}}],["matching",{"_index":36,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxime",{"_index":814,"title":{},"body":{"components/DashboardComponent.html":{}}}],["me'},{'name",{"_index":243,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["me.component.html",{"_index":1095,"title":{},"body":{"components/MeComponent.html":{}}}],["me.component.scss",{"_index":1096,"title":{},"body":{"components/MeComponent.html":{}}}],["mecomponent",{"_index":242,"title":{"components/MeComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["memberonly",{"_index":2064,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["memories",{"_index":1122,"title":{},"body":{"components/MemoriesComponent.html":{},"components/NavComponent.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["memories'},{'name",{"_index":245,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["memories.component.html",{"_index":1123,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memories.component.scss",{"_index":1124,"title":{},"body":{"components/MemoriesComponent.html":{}}}],["memoriescomponent",{"_index":244,"title":{"components/MemoriesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["menu",{"_index":1126,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'name",{"_index":247,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["menu.component.html",{"_index":1127,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":1128,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":246,"title":{"components/MenuComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["menuisopen",{"_index":707,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":336,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":76,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["methods",{"_index":110,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["mime",{"_index":1063,"title":{},"body":{"interfaces/FileParams.html":{},"injectables/UploadService.html":{}}}],["minima",{"_index":797,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minlength",{"_index":542,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["minus",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{}}}],["minus,ratione",{"_index":923,"title":{},"body":{"components/DashboardComponent.html":{}}}],["miscellaneous",{"_index":2038,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":1290,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["mobile",{"_index":2019,"title":{},"body":{"dependencies.html":{}}}],["models",{"_index":57,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{}}}],["modi",{"_index":845,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modules",{"_index":2085,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["molestiae",{"_index":893,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaedolores",{"_index":983,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestias",{"_index":900,"title":{},"body":{"components/DashboardComponent.html":{}}}],["molestiaset",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitia",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mollitiaaliquam",{"_index":988,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mpga",{"_index":1844,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["multi",{"_index":80,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["mutate",{"_index":1696,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["mutation",{"_index":1013,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["nam",{"_index":894,"title":{},"body":{"components/DashboardComponent.html":{}}}],["name",{"_index":130,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["natus",{"_index":801,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nav",{"_index":1130,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":249,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["nav.component.html",{"_index":1133,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":1134,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":248,"title":{"components/NavComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["navigationend",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{}}}],["near",{"_index":1294,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["nearend",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["nearend(posy",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["necessitatibus",{"_index":875,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nemo",{"_index":792,"title":{},"body":{"components/DashboardComponent.html":{}}}],["neque",{"_index":916,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nesciunt",{"_index":785,"title":{},"body":{"components/DashboardComponent.html":{}}}],["network",{"_index":190,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ProfileComponent.html":{}}}],["new",{"_index":309,"title":{},"body":{"injectables/AccountService.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["next",{"_index":199,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(status",{"_index":1354,"title":{},"body":{"injectables/ScrollService.html":{}}}],["nextstep",{"_index":1545,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["ng_value_accessor",{"_index":79,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ngafterviewinit",{"_index":1372,"title":{},"body":{"components/SignInComponent.html":{}}}],["ngdompurifysanitizer",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngondestroy",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ngoninit",{"_index":112,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["nihil",{"_index":804,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilconsectetur",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihildicta",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nihilpossimus",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisi",{"_index":824,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisieaque",{"_index":984,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nisivero",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nobis",{"_index":776,"title":{},"body":{"components/DashboardComponent.html":{}}}],["non",{"_index":889,"title":{},"body":{"components/DashboardComponent.html":{}}}],["normalize.css",{"_index":2031,"title":{},"body":{"dependencies.html":{}}}],["nostrum",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{}}}],["nostrumbeatae",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["notable",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":1167,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["notfoundcomponent",{"_index":250,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["null",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["null>(null",{"_index":1503,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["nulla",{"_index":773,"title":{},"body":{"components/DashboardComponent.html":{}}}],["number",{"_index":340,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Env.html":{},"interfaces/GraphqlError.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/functions.html":{}}}],["numquam",{"_index":905,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecati",{"_index":817,"title":{},"body":{"components/DashboardComponent.html":{}}}],["obcaecatinostrum",{"_index":981,"title":{},"body":{"components/DashboardComponent.html":{}}}],["object",{"_index":1321,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["object.assign(env",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys",{"_index":534,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["object.keys(data).foreach((key",{"_index":1698,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["object.keys(this.form.controls).foreach((control",{"_index":529,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["object.keys(this.uploadinfoform.controls",{"_index":1705,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["object.keys(val!)[0",{"_index":1710,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["observable",{"_index":143,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["odio",{"_index":877,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odioat",{"_index":968,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odiomaiores",{"_index":1000,"title":{},"body":{"components/DashboardComponent.html":{}}}],["odit",{"_index":848,"title":{},"body":{"components/DashboardComponent.html":{}}}],["oditaspernatur",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["of(new",{"_index":683,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(null",{"_index":687,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["of(tui_russian_language",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officia",{"_index":885,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiis",{"_index":793,"title":{},"body":{"components/DashboardComponent.html":{}}}],["officiispariatur",{"_index":971,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnis",{"_index":918,"title":{},"body":{"components/DashboardComponent.html":{}}}],["omnisrepudiandae",{"_index":1003,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onchange",{"_index":120,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["ondelete",{"_index":1594,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["ondestroy",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["oninit",{"_index":74,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["onsubmit",{"_index":496,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ontouched",{"_index":109,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["onupdate",{"_index":1595,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["oops",{"_index":1171,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops'},{'name",{"_index":253,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["oops.component.html",{"_index":1172,"title":{},"body":{"components/OopsComponent.html":{}}}],["oops.component.scss",{"_index":1173,"title":{},"body":{"components/OopsComponent.html":{}}}],["oopscomponent",{"_index":252,"title":{"components/OopsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["opacity",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":204,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["open(err",{"_index":698,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["open(this.preview",{"_index":1843,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["open(tui_prompt",{"_index":1719,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["opened",{"_index":1338,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["optio",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{}}}],["optional",{"_index":131,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":1024,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["originalname",{"_index":1643,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["out",{"_index":1957,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out.animation.ts",{"_index":1961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":1053,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["outputs",{"_index":1038,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["overview",{"_index":2086,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1519,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["owner_id",{"_index":1759,"title":{},"body":{"interfaces/UploadModel.html":{}}}],["owneravatar",{"_index":1646,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["owneronly",{"_index":2062,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["p",{"_index":1717,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["package",{"_index":1920,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["page",{"_index":330,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["paginatedquery",{"_index":2096,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pagination",{"_index":1529,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":1867,"title":{},"body":{"injectables/UploadService.html":{}}}],["parameters",{"_index":129,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parent",{"_index":1347,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["pariatur",{"_index":786,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pass",{"_index":491,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["pass'},{'name",{"_index":228,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["pass.component",{"_index":453,"title":{},"body":{"components/AuthCallbackComponent.html":{}}}],["pass.component.html",{"_index":492,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.scss",{"_index":493,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts",{"_index":490,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["pass.component.ts:120",{"_index":502,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:28",{"_index":515,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:29",{"_index":513,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:30",{"_index":506,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:31",{"_index":514,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:33",{"_index":511,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:34",{"_index":512,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:36",{"_index":509,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:42",{"_index":499,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:47",{"_index":504,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["pass.component.ts:72",{"_index":505,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["password",{"_index":1411,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":337,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"interfaces/UploadModel.html":{}}}],["payload",{"_index":457,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"miscellaneous/variables.html":{}}}],["payload.token",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pdf",{"_index":1835,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["pdfviewers",{"_index":1771,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["perferendis",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{}}}],["performance",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":255,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["permission.owneronly",{"_index":1715,"title":{},"body":{"components/UploadInfoComponent.html":{},"injectables/UploadService.html":{}}}],["permissioninput",{"_index":1186,"title":{},"body":{"components/PermissionInputComponent.html":{}}}],["permissioninputcomponent",{"_index":254,"title":{"components/PermissionInputComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["permissions",{"_index":1176,"title":{},"body":{"components/PermissionInputComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["perspiciatis",{"_index":832,"title":{},"body":{"components/DashboardComponent.html":{}}}],["perspiciatislibero",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pipe",{"_index":192,"title":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["pipe(takeuntildestroyed(this.destroyref",{"_index":198,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["pipes",{"_index":1082,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/UploadPreviewComponent.html":{},"overview.html":{}}}],["pipetransform",{"_index":1092,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{}}}],["pixels",{"_index":1329,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["placeat",{"_index":914,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeat,voluptatum",{"_index":975,"title":{},"body":{"components/DashboardComponent.html":{}}}],["placeholder",{"_index":121,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["platform",{"_index":2089,"title":{},"body":{"properties.html":{}}}],["polymorpheus",{"_index":671,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["polymorpheus_context",{"_index":669,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["polymorpheuscomponent",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{}}}],["polymorpheuscomponent(changeavatarcomponent",{"_index":1279,"title":{},"body":{"components/ProfileComponent.html":{}}}],["polymorpheuscontent",{"_index":1785,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["polymorpheusmodule",{"_index":1762,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["porro",{"_index":920,"title":{},"body":{"components/DashboardComponent.html":{}}}],["position",{"_index":1335,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"miscellaneous/variables.html":{}}}],["possimus",{"_index":805,"title":{},"body":{"components/DashboardComponent.html":{}}}],["possimusaliquam",{"_index":999,"title":{},"body":{"components/DashboardComponent.html":{}}}],["posy",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["praesentium",{"_index":874,"title":{},"body":{"components/DashboardComponent.html":{}}}],["praesentiumnecessitatibus",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pragma",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preview",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["preview'},{'name",{"_index":276,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["preview.component.html",{"_index":1763,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.scss",{"_index":1764,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts",{"_index":1761,"title":{},"body":{"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:100",{"_index":1807,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:103",{"_index":1789,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:105",{"_index":1822,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:107",{"_index":1778,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:117",{"_index":1786,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:49",{"_index":1809,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:50",{"_index":1805,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:51",{"_index":1812,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:53",{"_index":1790,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:54",{"_index":1798,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:56",{"_index":1820,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:57",{"_index":1795,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:59",{"_index":1815,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:60",{"_index":1779,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:61",{"_index":1780,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:63",{"_index":1782,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:64",{"_index":1783,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:65",{"_index":1781,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:67",{"_index":1800,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:70",{"_index":1801,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:73",{"_index":1796,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:82",{"_index":1793,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:83",{"_index":1814,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:86",{"_index":1791,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:87",{"_index":1803,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:88",{"_index":1819,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:90",{"_index":1817,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:96",{"_index":1810,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview.component.ts:97",{"_index":1794,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["preview/upload",{"_index":1760,"title":{},"body":{"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["previewcontent",{"_index":1777,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["previews",{"_index":1772,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["previewsub",{"_index":1773,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["private",{"_index":103,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{}}}],["production",{"_index":1029,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1189,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile!.username",{"_index":1254,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":257,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["profile.component.html",{"_index":1193,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1194,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.ngoninit",{"_index":1203,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.roles",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":256,"title":{"components/ProfileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["project",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"properties.html":{}}}],["protectedroutes",{"_index":1140,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":78,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":61,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["providehttpclient(withinterceptors([httprequestinterceptor",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provident",{"_index":807,"title":{},"body":{"components/DashboardComponent.html":{}}}],["providerouter(routes",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":77,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":2061,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["px",{"_index":1306,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["quae",{"_index":870,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quaerat",{"_index":903,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quam",{"_index":818,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamobcaecati",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quamrecusandae",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quas",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quasi",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["query",{"_index":42,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryref",{"_index":52,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["qui",{"_index":829,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quia",{"_index":819,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdam",{"_index":847,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quibusdamperferendis",{"_index":972,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quidem",{"_index":822,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quireprehenderit",{"_index":1001,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quis",{"_index":766,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquam",{"_index":789,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisquamnihil",{"_index":993,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quisvelit",{"_index":927,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quo",{"_index":841,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quod",{"_index":872,"title":{},"body":{"components/DashboardComponent.html":{}}}],["quos",{"_index":871,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ratione",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":92,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["readonly",{"_index":640,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["recusandae",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{}}}],["redirecturl",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":487,"title":{},"body":{"interfaces/AuthModel.html":{}}}],["registeronchange",{"_index":113,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registeronchange(onchange",{"_index":135,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched",{"_index":114,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["registerontouched(ontouched",{"_index":137,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["reiciendis",{"_index":772,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reiciendisnostrum",{"_index":965,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rem",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["removeavatar",{"_index":292,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["removeavatar(dto",{"_index":294,"title":{},"body":{"injectables/AccountService.html":{}}}],["removeavatardto",{"_index":295,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["removefile",{"_index":645,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["repellat",{"_index":810,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repellendus",{"_index":897,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit",{"_index":836,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reprehenderit,fugit",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{}}}],["repudiandae",{"_index":882,"title":{},"body":{"components/DashboardComponent.html":{}}}],["req",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":539,"title":{},"body":{"components/AuthPassComponent.html":{},"components/MeComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["rerum",{"_index":815,"title":{},"body":{"components/DashboardComponent.html":{}}}],["res",{"_index":200,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["res.data",{"_index":1663,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["res.url",{"_index":697,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["results",{"_index":35,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":317,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":133,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":26,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":62,"title":{},"body":{"injectables/AccountGQL.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"injectables/ScrollService.html":{},"injectables/UploadService.html":{}}}],["root'},{'name",{"_index":221,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["route",{"_index":436,"title":{"interfaces/Route.html":{}},"body":{"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route.title",{"_index":1157,"title":{},"body":{"components/NavComponent.html":{}}}],["router",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"injectables/ConfigService.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/auth/sign",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1131,"title":{},"body":{"components/NavComponent.html":{}}}],["routerlinkactive",{"_index":1132,"title":{},"body":{"components/NavComponent.html":{}}}],["routermodule",{"_index":1069,"title":{},"body":{"components/HeaderComponent.html":{},"components/NotFoundComponent.html":{},"components/UploadListItemComponent.html":{}}}],["routeroutlet",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["ru",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":177,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1043,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["saepe",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{}}}],["saepetotam",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{}}}],["safety",{"_index":1322,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sanitizer",{"_index":1774,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["sapiente",{"_index":800,"title":{},"body":{"components/DashboardComponent.html":{}}}],["save",{"_index":1320,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["scheme",{"_index":1400,"title":{},"body":{"components/SignInComponent.html":{}}}],["scroll",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"directives/ScrollNearEndDirective.html":{}}}],["scrolled",{"_index":1333,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["scrollnearend",{"_index":281,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["scrollnearenddirective",{"_index":280,"title":{"directives/ScrollNearEndDirective.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["scrollservice",{"_index":388,"title":{"injectables/ScrollService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrollstate",{"_index":1361,"title":{},"body":{"injectables/ScrollService.html":{},"miscellaneous/typealiases.html":{}}}],["scrolltobottom",{"_index":1351,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sed",{"_index":796,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sedminima",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["selectedfile",{"_index":1568,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectedfile.ext",{"_index":1572,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["selectextension",{"_index":1731,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["selector",{"_index":84,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["sentry",{"_index":179,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["sentry.createerrorhandler",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.traceclass",{"_index":183,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["sentry.tracemethod",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["sentry.traceservice",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry/angular",{"_index":180,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["sentry/cli",{"_index":2014,"title":{},"body":{"dependencies.html":{}}}],["sentrydsn",{"_index":1025,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["sequi",{"_index":917,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sequirepellat",{"_index":982,"title":{},"body":{"components/DashboardComponent.html":{}}}],["serializepermissions",{"_index":2002,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializepermissions(permissions",{"_index":2083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["serializerole",{"_index":1199,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serializerole(role",{"_index":1205,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["serializesex",{"_index":1200,"title":{},"body":{"components/ProfileComponent.html":{}}}],["serializesex(sex",{"_index":1207,"title":{},"body":{"components/ProfileComponent.html":{}}}],["services",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["set",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["set('access",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set(data",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["set(errors).foreach((error",{"_index":545,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["setdisabledstate",{"_index":115,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["setdisabledstate(disabled",{"_index":139,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["sex",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sexicons",{"_index":1248,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sexicons[0",{"_index":1277,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexicons[sex",{"_index":1276,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sexpipe",{"_index":1192,"title":{"pipes/SexPipe.html":{}},"body":{"components/ProfileComponent.html":{},"pipes/SexPipe.html":{},"coverage.html":{}}}],["show",{"_index":1775,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["show(actions",{"_index":1784,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["showchangeavatardialog",{"_index":1198,"title":{},"body":{"components/ProfileComponent.html":{}}}],["showconfirmform",{"_index":1421,"title":{},"body":{"components/SignUpComponent.html":{}}}],["showdialog",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showerror",{"_index":646,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showerror(err",{"_index":656,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["showpreview",{"_index":1732,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["showprompt",{"_index":1604,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["showprompt(label",{"_index":1614,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["showref",{"_index":1164,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["shrinks",{"_index":1339,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["sign",{"_index":259,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["signal",{"_index":147,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["signal(false",{"_index":665,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signal(initialaccount",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{}}}],["signal(initialauthenticateduser",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["signal(null",{"_index":1563,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signal(true",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["signin",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{}}}],["signin(dto",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin.ngafterviewinit",{"_index":1375,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngondestroy",{"_index":1377,"title":{},"body":{"components/SignInComponent.html":{}}}],["signin.ngoninit",{"_index":1379,"title":{},"body":{"components/SignInComponent.html":{}}}],["signincomponent",{"_index":258,"title":{"components/SignInComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["signindto",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["signinvk",{"_index":461,"title":{},"body":{"components/AuthCallbackComponent.html":{},"injectables/AuthService.html":{}}}],["signinvk(dto",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{},"components/SignUpComponent.html":{}}}],["signup(dto",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.ngondestroy",{"_index":1425,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup.ngoninit",{"_index":1427,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signupcomponent",{"_index":261,"title":{"components/SignUpComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["signupdto",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["similique",{"_index":898,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sint",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sit",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitaliquam",{"_index":985,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitcumque",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sitincidunt",{"_index":1009,"title":{},"body":{"components/DashboardComponent.html":{}}}],["size",{"_index":328,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["skeleton",{"_index":1284,"title":{},"body":{"components/ProfileComponent.html":{}}}],["soluta",{"_index":771,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutadeleniti",{"_index":1007,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solutaquo",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"injectables/ConfigService.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{}}}],["sourcesignal",{"_index":2077,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spaceofelementandpage",{"_index":1348,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["spomen",{"_index":85,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"index.html":{}}}],["src/.../account.dtos.ts",{"_index":2098,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.gql.ts",{"_index":2092,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../account.interface.ts",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../accounts",{"_index":2093,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api.enum.ts",{"_index":2040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":2069,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.dtos.ts",{"_index":2094,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auth.guard.ts",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticated",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../delete",{"_index":2095,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../enter",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.development.ts",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.staging.ts",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.ts",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../funcs.ts",{"_index":2070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../graphql.provider.ts",{"_index":2068,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../http.interceptor.ts",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../in",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2097,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../nav.component.ts",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":2041,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../profile.component.ts",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":2042,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../scroll.service.ts",{"_index":2099,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sentry.ts",{"_index":2071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../serialize.ts",{"_index":2072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sex.interface.ts",{"_index":2100,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../update",{"_index":2101,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../upload",{"_index":2102,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../upload.dtos.ts",{"_index":2103,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../uploads.gql.ts",{"_index":2104,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:119",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:124",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:89",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1944,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.component.ts",{"_index":466,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":476,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:23",{"_index":474,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:24",{"_index":475,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:27",{"_index":473,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/callback/auth",{"_index":430,"title":{},"body":{"components/AuthCallbackComponent.html":{},"coverage.html":{}}}],["src/app/auth/pass/auth",{"_index":489,"title":{},"body":{"components/AuthPassComponent.html":{},"coverage.html":{}}}],["src/app/auth/sign",{"_index":1365,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/chats/chats.component.ts",{"_index":699,"title":{},"body":{"components/ChatsComponent.html":{},"coverage.html":{}}}],["src/app/common/animations/enter",{"_index":1954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/animations/in",{"_index":1956,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/account",{"_index":70,"title":{},"body":{"components/AccountInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/extension",{"_index":1034,"title":{},"body":{"components/ExtensionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts",{"_index":1067,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/common/components/header/header.component.ts:27",{"_index":1076,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:28",{"_index":1077,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/header/header.component.ts:30",{"_index":1078,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/common/components/me/me.component.ts",{"_index":1094,"title":{},"body":{"components/MeComponent.html":{},"coverage.html":{}}}],["src/app/common/components/me/me.component.ts:23",{"_index":1109,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:24",{"_index":1107,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:25",{"_index":1106,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:26",{"_index":1105,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:27",{"_index":1110,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:29",{"_index":1102,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:31",{"_index":1103,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/me/me.component.ts:37",{"_index":1104,"title":{},"body":{"components/MeComponent.html":{}}}],["src/app/common/components/menu/menu.component.ts",{"_index":1125,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/common/components/nav/nav.component.ts",{"_index":1129,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/common/components/nav/nav.component.ts:54",{"_index":1142,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:55",{"_index":1139,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:57",{"_index":1137,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:59",{"_index":1141,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/nav/nav.component.ts:61",{"_index":1138,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/common/components/not",{"_index":1158,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/common/components/oops/oops.component.ts",{"_index":1170,"title":{},"body":{"components/OopsComponent.html":{},"coverage.html":{}}}],["src/app/common/components/permission",{"_index":1174,"title":{},"body":{"components/PermissionInputComponent.html":{},"coverage.html":{}}}],["src/app/common/directives/scroll",{"_index":1293,"title":{},"body":{"directives/ScrollNearEndDirective.html":{},"coverage.html":{}}}],["src/app/core/graphql/graphql.provider.ts",{"_index":1970,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/index.ts",{"_index":2106,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/models/getaccount.model.ts",{"_index":1065,"title":{},"body":{"interfaces/GetAccountModel.html":{},"coverage.html":{}}}],["src/app/core/graphql/mutations/delete",{"_index":1011,"title":{},"body":{"injectables/DeleteUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/mutations/update",{"_index":1477,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/account.gql.ts",{"_index":40,"title":{},"body":{"injectables/AccountGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/account.gql.ts:20",{"_index":51,"title":{},"body":{"injectables/AccountGQL.html":{}}}],["src/app/core/graphql/queries/accounts",{"_index":323,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/upload",{"_index":1514,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts",{"_index":1876,"title":{},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/graphql/queries/uploads.gql.ts:63",{"_index":1878,"title":{},"body":{"injectables/UploadsGQL.html":{}}}],["src/app/core/guards/auth",{"_index":1974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/http.interceptor.ts",{"_index":1979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/pipes/iframe",{"_index":1083,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts",{"_index":1362,"title":{},"body":{"pipes/SexPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/sex.pipe.ts:10",{"_index":1364,"title":{},"body":{"pipes/SexPipe.html":{}}}],["src/app/core/services/account.service.ts",{"_index":289,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts:18",{"_index":303,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:20",{"_index":300,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:33",{"_index":296,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:101",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:105",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:109",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:120",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:34",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:36",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:38",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:42",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:43",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:45",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:49",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:50",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:52",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:73",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:77",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:97",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/config.service.ts",{"_index":704,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/core/services/config.service.ts:11",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:12",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:14",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:15",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:16",{"_index":711,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:33",{"_index":713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:38",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/config.service.ts:42",{"_index":712,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/core/services/scroll.service.ts",{"_index":1352,"title":{},"body":{"injectables/ScrollService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/scroll.service.ts:14",{"_index":1356,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:19",{"_index":1360,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/scroll.service.ts:25",{"_index":1355,"title":{},"body":{"injectables/ScrollService.html":{}}}],["src/app/core/services/upload.service.ts",{"_index":1845,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/core/services/upload.service.ts:21",{"_index":1854,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:23",{"_index":1853,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/core/services/upload.service.ts:47",{"_index":1848,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":738,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/events/events.component.ts",{"_index":1030,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/memories/memories.component.ts",{"_index":1121,"title":{},"body":{"components/MemoriesComponent.html":{},"coverage.html":{}}}],["src/app/profile/change",{"_index":631,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1187,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/profile/profile.component.ts:100",{"_index":1201,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:113",{"_index":1204,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:162",{"_index":1202,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:188",{"_index":1206,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:192",{"_index":1208,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:196",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:70",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:71",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:72",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:73",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:74",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:75",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:76",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:77",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:79",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:81",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:82",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:83",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:84",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:86",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:90",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:94",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/timelines/timelines.component.ts",{"_index":1473,"title":{},"body":{"components/TimelinesComponent.html":{},"coverage.html":{}}}],["src/app/uploads/upload",{"_index":1486,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["src/app/uploads/uploads.component.ts",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["src/envs/env.development.ts",{"_index":1993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.staging.ts",{"_index":1994,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/envs/env.ts",{"_index":1995,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/dtos/account.dtos.ts",{"_index":2107,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/auth.dtos.ts",{"_index":2105,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/dtos/upload.dtos.ts",{"_index":2109,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/enums/api.enum.ts",{"_index":2043,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/permission.enum.ts",{"_index":2060,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/enums/role.enum.ts",{"_index":2065,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/interfaces/account.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/authenticated",{"_index":628,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/interfaces/env.interface.ts",{"_index":1020,"title":{},"body":{"interfaces/Env.html":{},"coverage.html":{}}}],["src/types/interfaces/error.interface.ts",{"_index":335,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/GraphqlError.html":{},"coverage.html":{}}}],["src/types/interfaces/route.interface.ts",{"_index":1292,"title":{},"body":{"interfaces/Route.html":{},"coverage.html":{}}}],["src/types/interfaces/sex.interface.ts",{"_index":2108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/types/interfaces/ui.interface.ts",{"_index":1511,"title":{},"body":{"interfaces/UploadActionsParams.html":{},"coverage.html":{}}}],["src/types/interfaces/upload.interface.ts",{"_index":1061,"title":{},"body":{"interfaces/FileParams.html":{},"coverage.html":{}}}],["src/types/models/account.model.ts",{"_index":283,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"coverage.html":{}}}],["src/types/models/auth.model.ts",{"_index":485,"title":{},"body":{"interfaces/AuthModel.html":{},"coverage.html":{}}}],["src/types/models/upload.model.ts",{"_index":1758,"title":{},"body":{"interfaces/UploadModel.html":{},"coverage.html":{}}}],["src/utils/funcs.ts",{"_index":1997,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/sentry.ts",{"_index":1999,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/serialize.ts",{"_index":2001,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/validation.ts",{"_index":1884,"title":{},"body":{"classes/Validation.html":{},"coverage.html":{}}}],["src/utils/validation.ts:4",{"_index":1888,"title":{},"body":{"classes/Validation.html":{}}}],["staging",{"_index":1028,"title":{},"body":{"interfaces/Env.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":87,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["standard",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1345,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["started",{"_index":1902,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["state",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScrollService.html":{}}}],["statements",{"_index":1942,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1885,"title":{},"body":{"classes/Validation.html":{}}}],["status",{"_index":205,"title":{},"body":{"components/AccountInputComponent.html":{},"interfaces/ApiError.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"interfaces/GraphqlError.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadInfoComponent.html":{},"interfaces/UploadModel.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":1404,"title":{},"body":{"components/SignInComponent.html":{}}}],["styleurl",{"_index":97,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["sub.unsubscribe",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subs",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe",{"_index":195,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["subscribe((res",{"_index":1692,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["subscription",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["success",{"_index":1273,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["sunt",{"_index":782,"title":{},"body":{"components/DashboardComponent.html":{}}}],["surname",{"_index":1433,"title":{},"body":{"components/SignUpComponent.html":{}}}],["suscipit",{"_index":873,"title":{},"body":{"components/DashboardComponent.html":{}}}],["switch",{"_index":537,"title":{},"body":{"components/AuthPassComponent.html":{},"pipes/SexPipe.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["switchmap",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{}}}],["switchmap((res",{"_index":685,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["system",{"_index":1748,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["t",{"_index":2081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":2004,"title":{},"body":{"coverage.html":{},"dependencies.html":{}}}],["tablebars",{"_index":2020,"title":{},"body":{"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":168,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["takelast",{"_index":672,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takelast(1",{"_index":695,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["takeuntildestroyed",{"_index":170,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["takeuntildestroyed(this.destroyref",{"_index":193,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/UploadInfoComponent.html":{}}}],["targetaccountid",{"_index":642,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["template",{"_index":67,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["templateref",{"_index":1787,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["templateurl",{"_index":95,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tempora",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tempore",{"_index":802,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibus",{"_index":902,"title":{},"body":{"components/DashboardComponent.html":{}}}],["temporibuslaudantium",{"_index":986,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tenetur",{"_index":831,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.$$accountfilter",{"_index":191,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$$isme.pipe(takeuntildestroyed(this.destroyref)).subscribe",{"_index":1255,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$accounts().map((val",{"_index":151,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accounts.set(res.data.accounts",{"_index":201,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter",{"_index":187,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$accountsfilter.set(val.trim",{"_index":208,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.$editable",{"_index":1618,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$edited",{"_index":1619,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$edited.set(true",{"_index":1659,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$extensions.set(data.uploadextensions",{"_index":1059,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.$isloading.asobservable",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isloading.next(true",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$isme",{"_index":1214,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isme.set(params['username",{"_index":1212,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$isnotfoundpage.set",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$loading",{"_index":1283,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$loading.set(false",{"_index":1257,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.$loading.set(loading",{"_index":1260,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$loading.set(true",{"_index":1694,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$menuisopen",{"_index":736,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(!this.$menuisopen",{"_index":735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$menuisopen.set(false",{"_index":737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.$profile",{"_index":1252,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().avatar",{"_index":1220,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().birthday",{"_index":1288,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().full_name",{"_index":1286,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().id",{"_index":1282,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().sex",{"_index":1291,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().username",{"_index":1287,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile().vk_avatar",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set",{"_index":1261,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.set(this.auth.$user",{"_index":1256,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$profile.update((profile",{"_index":1274,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query",{"_index":1259,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$query.set(params['username",{"_index":1211,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.$upload",{"_index":1621,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.ext",{"_index":1721,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.file_name",{"_index":1713,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.id",{"_index":1703,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.owner",{"_index":1722,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.owner!.username",{"_index":1682,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.permissions",{"_index":1718,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.permissions.filter",{"_index":1716,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()!.permissions.includes",{"_index":1714,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload()![name",{"_index":1711,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload.set(upload",{"_index":1664,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$upload.update((item",{"_index":1699,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.$user().avatar",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().id",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().roles.includes(role.administrator",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user().vk_avatar",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.$user.set(initialauthenticateduser",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._actions().delete",{"_index":1508,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["this._actions().open",{"_index":1507,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["this._actions().save",{"_index":1509,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["this.account",{"_index":680,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.accountgql",{"_index":1258,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.accountinfogql.watch",{"_index":186,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery",{"_index":185,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery!.refetch",{"_index":196,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.accountinfoquery.valuechanges",{"_index":197,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["this.alerts",{"_index":203,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.alerts.open",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["this.auth",{"_index":460,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.$$isloading",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isauth",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.auth.$isloading.next(false",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$isloading.next(true",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.$user().id",{"_index":1080,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.auth.$user().username",{"_index":1213,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.$user.update((user",{"_index":1275,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.clear",{"_index":1118,"title":{},"body":{"components/MeComponent.html":{}}}],["this.auth.init().subscribe",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.set(data",{"_index":463,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.auth.set(user",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.signout().subscribe",{"_index":1117,"title":{},"body":{"components/MeComponent.html":{}}}],["this.authenticatedroutes",{"_index":1155,"title":{},"body":{"components/NavComponent.html":{}}}],["this.avataralreadyexists",{"_index":676,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.callbackurl",{"_index":482,"title":{},"body":{"components/AuthComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.close.emit",{"_index":1114,"title":{},"body":{"components/MeComponent.html":{}}}],["this.config.$isrefusedpage",{"_index":428,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$isrefusedpage.set(true",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["this.config.$menuisopen",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["this.config.$menuisopen.set(false",{"_index":1154,"title":{},"body":{"components/NavComponent.html":{}}}],["this.config.closemenu",{"_index":1113,"title":{},"body":{"components/MeComponent.html":{}}}],["this.confirmform",{"_index":1448,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.reset",{"_index":1454,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.setvalue",{"_index":1472,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.confirmform.controls.confirmpass.value!.trim",{"_index":1453,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.context.completewith(res",{"_index":696,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.context.completewith(true",{"_index":693,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.control.setvalue(null",{"_index":678,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value",{"_index":694,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.control.value!.name",{"_index":1577,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.currentstep",{"_index":1573,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.deleteupload",{"_index":1693,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.deleteuploadbyidgql",{"_index":1702,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.dialogs",{"_index":1115,"title":{},"body":{"components/MeComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.dialogs.open",{"_index":1278,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.disabled",{"_index":211,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(url",{"_index":1093,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["this.el.nativeelement.scrollheight",{"_index":1331,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.ext",{"_index":1834,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.fb.group",{"_index":522,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.fileform.controls['compress'].value",{"_index":1581,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].disable",{"_index":1567,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].setvalue",{"_index":1571,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['ext'].value",{"_index":1579,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].setvalue(selectedfile.name",{"_index":1570,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].valid",{"_index":1574,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value",{"_index":1578,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['name'].value!.trim().length",{"_index":1575,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls['private'].value",{"_index":1582,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.fileform.controls[\\'ext\\'].value",{"_index":1587,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.form",{"_index":521,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls",{"_index":535,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls.birthday.touched",{"_index":1456,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.birthday.value!.toutcnativedate().toisostring",{"_index":1457,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.errors",{"_index":1451,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.touched",{"_index":1459,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.valid",{"_index":1460,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim",{"_index":1462,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.email.value!.trim().length",{"_index":1461,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.login.errors",{"_index":1407,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.login.value!.trim",{"_index":1410,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.name.errors",{"_index":1449,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.touched",{"_index":1463,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.valid",{"_index":1464,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim",{"_index":1466,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.name.value!.trim().length",{"_index":1465,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.errors",{"_index":1408,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.pass.reset",{"_index":1455,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.pass.value!.trim",{"_index":1412,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.controls.surname.errors",{"_index":1450,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.touched",{"_index":1467,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.valid",{"_index":1468,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim",{"_index":1470,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls.surname.value!.trim().length",{"_index":1469,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.form.controls[control",{"_index":530,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.controls].errors",{"_index":533,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.form.valid",{"_index":527,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.getupdatedfields",{"_index":1684,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.handleclose.emit",{"_index":1841,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.handleuploadresult(res",{"_index":688,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.http.delete",{"_index":320,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.get(`${env.apiurl}${api.auth_me",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":318,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_refresh",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_in",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_out",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.auth_sign_up",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${env.apiurl}${api.upload",{"_index":1866,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.injector",{"_index":1280,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.isadmin",{"_index":1622,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.iseditable",{"_index":1816,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.isloading",{"_index":1753,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.isloading.asobservable",{"_index":445,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(false",{"_index":1413,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.next(true",{"_index":548,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.isloading.set(false",{"_index":689,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.isloading.set(true",{"_index":679,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["this.ismobile",{"_index":1838,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.isopen",{"_index":1830,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.me().pipe",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.me().pipe(map((val",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.name",{"_index":1840,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.onchange",{"_index":209,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.ondelete.emit(this.$upload()!.id",{"_index":1704,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.ontouched",{"_index":210,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.onupdate.emit",{"_index":1697,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.pdfviewers",{"_index":1836,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.placeholder",{"_index":212,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["this.previews",{"_index":1842,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.previewsub",{"_index":1832,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.previewsub.unsubscribe",{"_index":1833,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.refresh().pipe",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.route.params.pipe",{"_index":1209,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.route.snapshot.queryparams",{"_index":458,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{}}}],["this.route.snapshot.queryparams['url",{"_index":483,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.events",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.router.navigate",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadInfoComponent.html":{}}}],["this.router.navigate(['/404",{"_index":1271,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1119,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigate([`/${this.auth.$user().username",{"_index":1112,"title":{},"body":{"components/MeComponent.html":{}}}],["this.router.navigatebyurl(getcurrentpath(this.router",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl",{"_index":1837,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.scroll.next(true",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["this.serializerole(role",{"_index":1285,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.set(data",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.show(this.actions",{"_index":1831,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.showchangeavatardialog().subscribe((res",{"_index":1272,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.showconfirmform",{"_index":1452,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.showerror(err",{"_index":691,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.showerror(res.error.message",{"_index":682,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.showprompt",{"_index":1691,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.showref",{"_index":1169,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.subs$.foreach((sub",{"_index":465,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push",{"_index":459,"title":{},"body":{"components/AuthCallbackComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open",{"_index":547,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs$.push(this.alerts.open(error).subscribe",{"_index":546,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.subs.foreach((sub",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subs.push",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["this.targetaccountid",{"_index":674,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.title",{"_index":1168,"title":{},"body":{"components/NotFoundComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.title.settitle(profile!.full_name",{"_index":1253,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.token.next(payload.token",{"_index":520,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["this.updateupload(data",{"_index":1690,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.updateuploadbyidgql",{"_index":1695,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.upload",{"_index":1580,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.upload()!.created_at",{"_index":1755,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.ext",{"_index":1754,"title":{},"body":{"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.upload()!.file_name}.${this.upload()!.ext",{"_index":1813,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload()!.id",{"_index":1792,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload()!.name",{"_index":1802,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload()!.owner",{"_index":1739,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.avatar",{"_index":1740,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.avatar!.url",{"_index":1741,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.first_name",{"_index":1745,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.last_name",{"_index":1746,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.username",{"_index":1747,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.owner!.vk_avatar",{"_index":1742,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["this.upload()!.url",{"_index":1818,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.upload.getfileparams(this.control.value",{"_index":1569,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadavatar",{"_index":686,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadavatar().subscribe",{"_index":690,"title":{},"body":{"components/ChangeAvatarComponent.html":{}}}],["this.uploadbyidgql",{"_index":1660,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploaded.set(res",{"_index":1584,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.uploadextensionsgql",{"_index":1055,"title":{},"body":{"components/ExtensionInputComponent.html":{}}}],["this.uploadid",{"_index":1661,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['isprivate'].setvalue",{"_index":1669,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['issystem'].disable",{"_index":1654,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['issystem'].setvalue(upload.is_system",{"_index":1668,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['name'].setvalue(upload.name",{"_index":1665,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['originalname'].setvalue",{"_index":1666,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owner'].setvalue",{"_index":1671,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owner'].value",{"_index":1681,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls['owneravatar'].setvalue",{"_index":1676,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[\\'owner\\'].value",{"_index":1723,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[control].dirty",{"_index":1707,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.controls[control].value",{"_index":1708,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.uploadinfoform.events",{"_index":1655,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["this.url",{"_index":1829,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["this.user.id",{"_index":1583,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["this.userid",{"_index":1625,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["this.vkidonetap.render",{"_index":1397,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap",{"_index":1396,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.vkidsdkonetap.nativeelement",{"_index":1399,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.window",{"_index":1323,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.document.documentelement.scrollheight",{"_index":1327,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.innerheight",{"_index":1342,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["this.window.scrolly",{"_index":1337,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["threshold",{"_index":1298,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["throwerror",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["timelines",{"_index":1150,"title":{},"body":{"components/NavComponent.html":{},"components/TimelinesComponent.html":{},"miscellaneous/variables.html":{}}}],["timelines'},{'name",{"_index":264,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["timelines.component.html",{"_index":1474,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelines.component.scss",{"_index":1475,"title":{},"body":{"components/TimelinesComponent.html":{}}}],["timelinescomponent",{"_index":263,"title":{"components/TimelinesComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["tinkoff/ng",{"_index":670,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["title",{"_index":1143,"title":{},"body":{"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1585,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["togglemenustatus",{"_index":710,"title":{},"body":{"injectables/ConfigService.html":{}}}],["token",{"_index":495,"title":{},"body":{"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["toobservable",{"_index":171,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{}}}],["toobservable(this.$accountsfilter",{"_index":144,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["toobservable(this.$isauth",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["toobservable(this.$profile).pipe",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{}}}],["toobservable(this.$state).pipe",{"_index":1357,"title":{},"body":{"injectables/ScrollService.html":{}}}],["top",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totam",{"_index":839,"title":{},"body":{"components/DashboardComponent.html":{}}}],["totamperferendis",{"_index":937,"title":{},"body":{"components/DashboardComponent.html":{}}}],["trace",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1156,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["transform",{"_index":1086,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"pipes/SexPipe.html":{},"miscellaneous/variables.html":{}}}],["transform(url",{"_index":1087,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["transform(value",{"_index":1363,"title":{},"body":{"pipes/SexPipe.html":{}}}],["transition(':enter",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(50",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":69,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["trigger('enterleave",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout200",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inout500",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid200",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('inoutgrid500",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":81,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"classes/Validation.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2034,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":1849,"title":{},"body":{"injectables/UploadService.html":{}}}],["tui_is_mobile",{"_index":1826,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tui_language",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tui_prompt",{"_index":1651,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["tui_sanitizer",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tuialertmodule",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["tuialertservice",{"_index":167,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuiavatarmodule",{"_index":1070,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuibuttonmodule",{"_index":1726,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["tuichipmodule",{"_index":1191,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuidatalistwrappermodule",{"_index":91,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuiday",{"_index":1444,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiday(2000",{"_index":1435,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuidialogcontext",{"_index":648,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tuidialogmodule",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["tuidialogservice",{"_index":1111,"title":{},"body":{"components/MeComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuifilelike",{"_index":668,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["tuihintmodule",{"_index":636,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/ProfileComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuihosteddropdownmodule",{"_index":1072,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuiiconairplaylarge",{"_index":1145,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconcalendarlarge",{"_index":1147,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconchartlinelarge",{"_index":1151,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconmessagecirclelarge",{"_index":1152,"title":{},"body":{"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiinputdatemodule",{"_index":1417,"title":{},"body":{"components/SignUpComponent.html":{}}}],["tuiinputfilesmodule",{"_index":634,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/UploadFileComponent.html":{}}}],["tuiinputinlinemodule",{"_index":1537,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuiinputtagmodule",{"_index":94,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuilineclampmodule",{"_index":1071,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuilinkmodule",{"_index":1539,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuiloadermodule",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["tuipdfviewermodule",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["tuipdfvieweroptions",{"_index":1824,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tuipdfviewerservice",{"_index":1825,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tuipreviewactionmodule",{"_index":1490,"title":{},"body":{"components/UploadActionsComponent.html":{}}}],["tuipreviewdialogservice",{"_index":1823,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["tuipreviewmodule",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tuirootmodule",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiskeletonmodule",{"_index":1190,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadListItemComponent.html":{}}}],["tuisteppermodule",{"_index":1536,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["tuisvgmodule",{"_index":635,"title":{},"body":{"components/ChangeAvatarComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["tuitabsmodule",{"_index":467,"title":{},"body":{"components/AuthComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":93,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["tuitogglemodule",{"_index":1538,"title":{},"body":{"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["type",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthModel.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"interfaces/Env.html":{},"components/ExtensionInputComponent.html":{},"interfaces/FileParams.html":{},"interfaces/GetAccountModel.html":{},"interfaces/GraphqlError.html":{},"pipes/IFrameUrlPipe.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Route.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"interfaces/UploadActionsParams.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"classes/Validation.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2090,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":532,"title":{},"body":{"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["ui/addon",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["ui/cdk",{"_index":1445,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":169,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"dependencies.html":{}}}],["ui/experimental",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"dependencies.html":{}}}],["ui/icons",{"_index":2022,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":174,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":2023,"title":{},"body":{"dependencies.html":{}}}],["ui/styles",{"_index":2024,"title":{},"body":{"dependencies.html":{}}}],["ullam",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ullamsuscipit",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{}}}],["unde",{"_index":754,"title":{},"body":{"components/DashboardComponent.html":{}}}],["undefined",{"_index":1458,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["unknown",{"_index":313,"title":{},"body":{"injectables/AccountService.html":{},"injectables/UploadService.html":{}}}],["untracked",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["untracked(this.auth.$user",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["up",{"_index":1416,"title":{},"body":{"components/SignUpComponent.html":{},"miscellaneous/enumerations.html":{}}}],["up'},{'name",{"_index":262,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["up.component",{"_index":481,"title":{},"body":{"components/AuthComponent.html":{}}}],["up.component.html",{"_index":1418,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":1419,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":1415,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:111",{"_index":1429,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:141",{"_index":1424,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:237",{"_index":1426,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:41",{"_index":1430,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:42",{"_index":1431,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:43",{"_index":1441,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:45",{"_index":1423,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:47",{"_index":1443,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:49",{"_index":1439,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:50",{"_index":1440,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:52",{"_index":1442,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:54",{"_index":1438,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:70",{"_index":1432,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:74",{"_index":1422,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:79",{"_index":1428,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":480,"title":{},"body":{"components/AuthComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["update",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["updated_at",{"_index":285,"title":{},"body":{"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"interfaces/GetAccountModel.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{}}}],["updatedfields",{"_index":1683,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updatedfields.foreach((val",{"_index":1687,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updatedfields.length",{"_index":1685,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updateupload",{"_index":1605,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["updateupload(data",{"_index":1485,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["updateuploadbyid($data",{"_index":1483,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["updateuploadbyidgql",{"_index":1476,"title":{"injectables/UpdateUploadByIdGQL.html":{}},"body":{"injectables/UpdateUploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["updateuploadbyidquery",{"_index":1478,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateuploadbyidresponse",{"_index":1480,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["updateuploadbyidvariables",{"_index":1481,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["upload",{"_index":266,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["upload!.owner",{"_index":1623,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["upload!.owner!.avatar!.url",{"_index":1679,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload!.owner!.id",{"_index":1624,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["upload!.owner!.vk_avatar",{"_index":1680,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload($id",{"_index":1515,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload(where",{"_index":1516,"title":{},"body":{"injectables/UploadByIdGQL.html":{}}}],["upload.file_name",{"_index":1667,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner",{"_index":1672,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.avatar",{"_index":1677,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.avatar.url",{"_index":1678,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.first_name",{"_index":1673,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.last_name",{"_index":1674,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.owner.username",{"_index":1675,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["upload.permissions.includes(permission.owneronly",{"_index":1670,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadactions",{"_index":1506,"title":{},"body":{"components/UploadActionsComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["uploadactionscomponent",{"_index":265,"title":{"components/UploadActionsComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadactionsparams",{"_index":1505,"title":{"interfaces/UploadActionsParams.html":{}},"body":{"components/UploadActionsComponent.html":{},"interfaces/UploadActionsParams.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["uploadavatar",{"_index":293,"title":{},"body":{"injectables/AccountService.html":{},"components/ChangeAvatarComponent.html":{}}}],["uploadavatar(dto",{"_index":298,"title":{},"body":{"injectables/AccountService.html":{}}}],["uploadavatardto",{"_index":299,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidgql",{"_index":1513,"title":{"injectables/UploadByIdGQL.html":{}},"body":{"injectables/UploadByIdGQL.html":{},"components/UploadInfoComponent.html":{},"coverage.html":{}}}],["uploadbyidqueryref",{"_index":1523,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidresponse",{"_index":1521,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadbyidvariables",{"_index":1522,"title":{},"body":{"injectables/UploadByIdGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploaded",{"_index":1544,"title":{},"body":{"components/UploadFileComponent.html":{}}}],["uploadextensions",{"_index":1531,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions($size",{"_index":1525,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensions(page",{"_index":1527,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{}}}],["uploadextensionsgql",{"_index":1037,"title":{"injectables/UploadExtensionsGQL.html":{}},"body":{"components/ExtensionInputComponent.html":{},"injectables/UploadExtensionsGQL.html":{},"coverage.html":{}}}],["uploadextensionsqueryref",{"_index":1533,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsresponse",{"_index":1530,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadextensionsvariables",{"_index":1532,"title":{},"body":{"injectables/UploadExtensionsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadfile",{"_index":1546,"title":{},"body":{"components/UploadFileComponent.html":{},"injectables/UploadService.html":{}}}],["uploadfile(dto",{"_index":1851,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfilecomponent",{"_index":268,"title":{"components/UploadFileComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadfiledto",{"_index":1852,"title":{},"body":{"injectables/UploadService.html":{},"miscellaneous/typealiases.html":{}}}],["uploadid",{"_index":1596,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadinfo",{"_index":1653,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadinfocomponent",{"_index":270,"title":{"components/UploadInfoComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadinfoform",{"_index":1597,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["uploadlistitem",{"_index":1752,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["uploadlistitemcomponent",{"_index":272,"title":{"components/UploadListItemComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadmodel",{"_index":286,"title":{"interfaces/UploadModel.html":{}},"body":{"interfaces/AccountModel.html":{},"injectables/AccountService.html":{},"interfaces/AccountShortModel.html":{},"components/ChangeAvatarComponent.html":{},"injectables/UploadByIdGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploadpreview",{"_index":1827,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["uploadpreviewcomponent",{"_index":275,"title":{"components/UploadPreviewComponent.html":{}},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploads",{"_index":278,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["uploadscomponent",{"_index":277,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"coverage.html":{}}}],["uploadservice",{"_index":1036,"title":{"injectables/UploadService.html":{}},"body":{"components/ExtensionInputComponent.html":{},"components/UploadFileComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsgql",{"_index":1875,"title":{"injectables/UploadsGQL.html":{}},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{}}}],["uploadsquery",{"_index":1877,"title":{},"body":{"injectables/UploadsGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadsqueryref",{"_index":1881,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsresponse",{"_index":1879,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadsvariables",{"_index":1880,"title":{},"body":{"injectables/UploadsGQL.html":{},"miscellaneous/typealiases.html":{}}}],["uploadupdateinput",{"_index":1484,"title":{},"body":{"injectables/UpdateUploadByIdGQL.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":49,"title":{},"body":{"injectables/AccountGQL.html":{},"interfaces/GetAccountModel.html":{},"pipes/IFrameUrlPipe.html":{},"components/NavComponent.html":{},"interfaces/Route.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"interfaces/UploadModel.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["url.pipe.ts",{"_index":1084,"title":{},"body":{"pipes/IFrameUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:11",{"_index":1088,"title":{},"body":{"pipes/IFrameUrlPipe.html":{}}}],["useclass",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":82,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["usefactory",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"components/UploadFileComponent.html":{}}}],["user.interface.ts",{"_index":629,"title":{},"body":{"interfaces/AuthenticatedUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":1598,"title":{},"body":{"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["username",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["username.gql.ts",{"_index":324,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["username.gql.ts:24",{"_index":331,"title":{},"body":{"injectables/AccountsInfoByUsernameGQL.html":{}}}],["username}!`).subscribe",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ut",{"_index":881,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utconsequuntur",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthPassComponent.html":{},"components/ProfileComponent.html":{}}}],["val",{"_index":132,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ConfigService.html":{},"components/UploadInfoComponent.html":{}}}],["val![name",{"_index":1712,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["val.isend",{"_index":1358,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.posy",{"_index":1359,"title":{},"body":{"injectables/ScrollService.html":{}}}],["val.trim",{"_index":207,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.trim().length",{"_index":206,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val.username",{"_index":152,"title":{},"body":{"components/AccountInputComponent.html":{}}}],["val[object.keys(val)[0",{"_index":1689,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["validation",{"_index":517,"title":{"classes/Validation.html":{}},"body":{"components/AuthPassComponent.html":{},"classes/Validation.html":{},"coverage.html":{}}}],["validation.match('pass",{"_index":526,"title":{},"body":{"components/AuthPassComponent.html":{}}}],["validatorfn",{"_index":1890,"title":{},"body":{"classes/Validation.html":{}}}],["validators",{"_index":516,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.email",{"_index":1447,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators.maxlength(30",{"_index":525,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(2",{"_index":1446,"title":{},"body":{"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["validators.minlength(4",{"_index":1395,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(8",{"_index":524,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.required",{"_index":523,"title":{},"body":{"components/AuthPassComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadFileComponent.html":{}}}],["value",{"_index":45,"title":{},"body":{"injectables/AccountGQL.html":{},"components/AccountInputComponent.html":{},"injectables/AccountService.html":{},"injectables/AccountsInfoByUsernameGQL.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"injectables/DeleteUploadByIdGQL.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"pipes/SexPipe.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"injectables/UpdateUploadByIdGQL.html":{},"components/UploadActionsComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadExtensionsGQL.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{},"injectables/UploadService.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuechanges.pipe(takeuntildestroyed(this.destroyref",{"_index":1058,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{}}}],["valuechanges.subscribe",{"_index":1662,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["var",{"_index":217,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"components/ChangeAvatarComponent.html":{},"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/ExtensionInputComponent.html":{},"components/HeaderComponent.html":{},"components/MeComponent.html":{},"components/MemoriesComponent.html":{},"components/MenuComponent.html":{},"components/NavComponent.html":{},"components/NotFoundComponent.html":{},"components/OopsComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TimelinesComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadListItemComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["variable",{"_index":1948,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2110,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":904,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velit",{"_index":768,"title":{},"body":{"components/DashboardComponent.html":{}}}],["velmagnam",{"_index":992,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veniam",{"_index":783,"title":{},"body":{"components/DashboardComponent.html":{}}}],["veritatis",{"_index":784,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vero",{"_index":825,"title":{},"body":{"components/DashboardComponent.html":{}}}],["version",{"_index":1921,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["viewchild",{"_index":1394,"title":{},"body":{"components/SignInComponent.html":{},"components/UploadPreviewComponent.html":{}}}],["viewchild('actions",{"_index":1788,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["viewchild('preview",{"_index":1806,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["viewchild('vkidsdkonetap",{"_index":1392,"title":{},"body":{"components/SignInComponent.html":{}}}],["visible",{"_index":1346,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["vitae",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{}}}],["vk",{"_index":2056,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vk_avatar",{"_index":19,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"components/ProfileComponent.html":{},"injectables/UploadByIdGQL.html":{},"injectables/UploadsGQL.html":{},"miscellaneous/variables.html":{}}}],["vk_id",{"_index":20,"title":{},"body":{"interfaces/Account.html":{},"injectables/AccountGQL.html":{},"interfaces/AccountModel.html":{},"interfaces/AccountShortModel.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedUser.html":{},"interfaces/GetAccountModel.html":{},"miscellaneous/variables.html":{}}}],["vk_id_exchange_token",{"_index":2055,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["vkid",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{}}}],["vkid.config.set",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["vkid.languages.rus",{"_index":1403,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.onetap",{"_index":1390,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid.scheme.dark",{"_index":1401,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkid/sdk",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/SignInComponent.html":{},"dependencies.html":{}}}],["vkidonetap",{"_index":1370,"title":{},"body":{"components/SignInComponent.html":{}}}],["vkidsdkonetap",{"_index":1371,"title":{},"body":{"components/SignInComponent.html":{}}}],["void",{"_index":124,"title":{},"body":{"components/AccountInputComponent.html":{},"components/AppComponent.html":{},"components/AuthCallbackComponent.html":{},"components/AuthComponent.html":{},"components/AuthPassComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/MeComponent.html":{},"components/NavComponent.html":{},"components/PermissionInputComponent.html":{},"components/ProfileComponent.html":{},"directives/ScrollNearEndDirective.html":{},"injectables/ScrollService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/UploadActionsComponent.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{},"components/UploadPreviewComponent.html":{},"miscellaneous/functions.html":{}}}],["voluptas",{"_index":781,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptas,eligendi",{"_index":967,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptate",{"_index":828,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatem",{"_index":837,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptaterepellat",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptates",{"_index":777,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatesitaque",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatibus",{"_index":775,"title":{},"body":{"components/DashboardComponent.html":{}}}],["voluptatum",{"_index":798,"title":{},"body":{"components/DashboardComponent.html":{}}}],["watch",{"_index":1056,"title":{},"body":{"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["webp",{"_index":1799,"title":{},"body":{"components/UploadPreviewComponent.html":{}}}],["whether",{"_index":1350,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["whole",{"_index":1325,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window",{"_index":1296,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["window.location.reload",{"_index":1120,"title":{},"body":{"components/MeComponent.html":{}}}],["window:scroll",{"_index":1300,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent",{"_index":1297,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["windowscrollevent(event",{"_index":1315,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["withcredentials",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withlatestfrom(auth.$$isloading",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withviewtransitions",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflow",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":703,"title":{},"body":{"components/ChatsComponent.html":{},"components/DashboardComponent.html":{},"components/EventsComponent.html":{},"components/MemoriesComponent.html":{},"components/TimelinesComponent.html":{}}}],["works!lorem",{"_index":922,"title":{},"body":{"components/DashboardComponent.html":{}}}],["writablesignal",{"_index":146,"title":{},"body":{"components/AccountInputComponent.html":{},"injectables/AuthService.html":{},"components/ChangeAvatarComponent.html":{},"injectables/ConfigService.html":{},"components/ExtensionInputComponent.html":{},"components/ProfileComponent.html":{},"injectables/ScrollService.html":{},"components/UploadFileComponent.html":{},"components/UploadInfoComponent.html":{}}}],["writevalue",{"_index":116,"title":{},"body":{"components/AccountInputComponent.html":{},"components/ExtensionInputComponent.html":{},"components/PermissionInputComponent.html":{}}}],["x",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":1334,"title":{},"body":{"directives/ScrollNearEndDirective.html":{}}}],["yes",{"_index":1720,"title":{},"body":{"components/UploadInfoComponent.html":{}}}],["yyyy",{"_index":1756,"title":{},"body":{"components/UploadListItemComponent.html":{}}}],["zone.js",{"_index":2036,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/account.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"0\" | \"1\" | \"2\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"0\" | \"1\" | \"2\" | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '../enums/role.enum'\n\nexport const initialAccount: Account = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n\nexport interface Account {\n  id: string | null\n  vk_id: string | null\n  username: string | null\n  email: string | null\n  roles: Role[]\n  avatar: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  full_name: string | null\n  birthday: Date | null\n  sex: '0' | '1' | '2' | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountGQL.html":{"url":"injectables/AccountGQL.html","title":"injectable - AccountGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/account.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/account.gql.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountModel } from '@models'\n\nexport type AccountResponse = {\n  account: AccountModel\n}\n\nexport type AccountVariables = {\n  username: string\n}\n\nexport type AccountQueryRef = QueryRef\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountGQL extends Query {\n  document = gql`\n    query account($username: String!) {\n      account(where: { username: $username }) {\n        id\n        username\n        email\n        roles\n        avatar {\n          url\n        }\n        vk_id\n        vk_avatar\n        first_name\n        last_name\n        birthday\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountInputComponent.html":{"url":"components/AccountInputComponent.html","title":"component - AccountInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/account-input/account-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: AccountInputComponent,\n}\n                                AccountsInfoByUsernameGQL\n                \n            \n\n\n            \n                selector\n                spomen-account-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            TuiDataListWrapperModule\n                            ReactiveFormsModule\n                            TuiTextfieldControllerModule\n                            TuiInputTagModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$accountFilter\n                            \n                            \n                                $accounts\n                            \n                            \n                                $accountsFilter\n                            \n                            \n                                $accountsList\n                            \n                            \n                                    Private\n                                accountInfoGQL\n                            \n                            \n                                    Private\n                                accountInfoQuery\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Аккаунт'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/account-input/account-input.component.ts:67\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleChange\n                        \n                    \n                \n            \n            \n                \nhandleChange(val: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/account-input/account-input.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$accountFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$accountsFilter)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accounts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $accountsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountsInfoByUsernameGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountInfoQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsInfoByUsernameQueryRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/account-input/account-input.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  computed,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Signal,\n  signal,\n  WritableSignal,\n} from '@angular/core'\n\nimport {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\n\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { debounceTime, distinctUntilChanged, Observable } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  AccountsInfoByUsernameGQL,\n  AccountsInfoByUsernameQueryRef,\n} from '@graphql'\nimport { AccountShortModel } from '@models'\n\n@Component({\n  selector: 'spomen-account-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    TuiDataListWrapperModule,\n    ReactiveFormsModule,\n    TuiTextfieldControllerModule,\n    TuiInputTagModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: AccountInputComponent,\n    },\n    AccountsInfoByUsernameGQL,\n  ],\n  templateUrl: './account-input.component.html',\n  styleUrl: './account-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'AccountInput' })\nexport class AccountInputComponent implements OnInit, ControlValueAccessor {\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  private accountInfoGQL = inject(AccountsInfoByUsernameGQL)\n\n  private accountInfoQuery: AccountsInfoByUsernameQueryRef | null = null\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() placeholder: string = 'Аккаунт'\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  $accounts: WritableSignal = signal([])\n\n  $accountsList: Signal = computed(() =>\n    this.$accounts().map((val) => val.username)\n  )\n\n  $accountsFilter: WritableSignal = signal('')\n  $$accountFilter: Observable = toObservable(this.$accountsFilter)\n\n  ngOnInit() {\n    this.accountInfoQuery = this.accountInfoGQL.watch(\n      {\n        username: this.$accountsFilter(),\n      },\n      { fetchPolicy: 'cache-and-network' }\n    )\n\n    this.$$accountFilter\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        debounceTime(1000),\n        distinctUntilChanged()\n      )\n      .subscribe(() => {\n        this.accountInfoQuery!.refetch({\n          username: this.$accountsFilter(),\n        })\n      })\n\n    this.accountInfoQuery.valueChanges\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.$accounts.set(res.data.accounts)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список аккаунтов', { status: 'error' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  handleChange(val: string) {\n    if (val.trim().length > 0 && val.trim() !== this.$accountsFilter()) {\n      this.$accountsFilter.set(val.trim())\n    }\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountModel.html":{"url":"interfaces/AccountModel.html","title":"interface - AccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            vk_avatar\n                                        \n                                \n                                \n                                        \n                                            vk_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         UploadModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UploadModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"0\" | \"1\" | \"2\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"0\" | \"1\" | \"2\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_avatar:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vk_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vk_id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: '0' | '1' | '2'\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/account.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для работы с аккаунтами\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeAvatar\n                            \n                            \n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar(dto: RemoveAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RemoveAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \nuploadAvatar(dto: UploadAvatarDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/account.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadAvatarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/account.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\n\nimport { RemoveAvatarDto, UploadAvatarDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для работы с аккаунтами\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadAvatar(dto: UploadAvatarDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n\n    if (dto.id) body.append('id', dto.id)\n\n    return this.http.post(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}`,\n      body\n    )\n  }\n\n  removeAvatar(dto: RemoveAvatarDto) {\n    return this.http.delete(\n      `${env.apiUrl}${API.ACCOUNT_AVATAR}${dto.id ? `?id=${dto.id}` : ''}`\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccountShortModel.html":{"url":"interfaces/AccountShortModel.html","title":"interface - AccountShortModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccountShortModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/account.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UploadModel } from '@models'\nimport { Role } from '@enums'\n\nexport interface AccountModel {\n  id: string\n  username: string\n  email: string | null\n  roles: Role[]\n  avatar: UploadModel | null\n  vk_id: string | null\n  vk_avatar: string | null\n  first_name: string | null\n  last_name: string | null\n  birthday: Date | null\n  sex: '0' | '1' | '2'\n  created_at: Date\n  updated_at: Date\n}\n\nexport interface AccountShortModel {\n  id: string\n  username: string\n  first_name: string | null\n  last_name: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsInfoByUsernameGQL.html":{"url":"injectables/AccountsInfoByUsernameGQL.html","title":"injectable - AccountsInfoByUsernameGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountsInfoByUsernameGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/accounts-info-by-username.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { AccountShortModel } from '@models'\n\nexport type AccountsInfoByUsernameResponse = {\n  accounts: AccountShortModel[]\n}\n\nexport type AccountsInfoByUsernameVariables = {\n  username: string\n}\n\nexport type AccountsInfoByUsernameQueryRef = QueryRef\n\n@Injectable()\nexport class AccountsInfoByUsernameGQL extends Query {\n  document = gql`\n    query accountsInfoByUsername($username: String!) {\n      accounts(\n        filters: { username: { contains: $username } }\n        size: 5\n        page: 1\n      ) {\n        id\n        username\n        first_name\n        last_name\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ScrollNearEndDirective\n                \n            \n\n\n            \n                selector\n                spomen-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterOutlet\n                            TuiRootModule\n                            TuiDialogModule\n                            TuiAlertModule\n                            TuiPreviewModule\n                            TuiPdfViewerModule\n                            TuiLoaderModule\n                                HeaderComponent\n                                NavComponent\n                                OopsComponent\n                                MenuComponent\n                                ScrollNearEndDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                scroll\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:70\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nearEnd\n                        \n                    \n                \n            \n            \n                \nnearEnd(posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'App.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scroll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ScrollService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiRootModule,\n  TuiDialogModule,\n  TuiAlertModule,\n  TuiAlertService,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n  effect,\n  inject,\n  untracked,\n} from '@angular/core'\n\nimport { TuiPreviewModule } from '@taiga-ui/addon-preview'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { Router, RouterOutlet } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\nimport { Subscription } from 'rxjs'\nimport * as VKID from '@vkid/sdk'\n\nimport { env } from '@env'\n\nimport { AuthService, ConfigService, ScrollService } from '@services'\nimport { inOutAnimation200, inOutAnimation500 } from '@animations'\nimport { ScrollNearEndDirective } from '@directives'\nimport { TuiPdfViewerModule } from '@taiga-ui/kit'\nimport { getCurrentPath } from '@utils'\n\nimport { HeaderComponent } from '@components/header'\nimport { OopsComponent } from '@components/oops'\nimport { MenuComponent } from '@components/menu'\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    TuiRootModule,\n    TuiDialogModule,\n    TuiAlertModule,\n    TuiPreviewModule,\n    TuiPdfViewerModule,\n    TuiLoaderModule,\n    HeaderComponent,\n    NavComponent,\n    OopsComponent,\n    MenuComponent,\n    ScrollNearEndDirective,\n  ],\n  animations: [inOutAnimation200, inOutAnimation500],\n  providers: [ScrollNearEndDirective],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\n@Sentry.TraceClass({ name: 'App' })\nexport class AppComponent implements OnInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private scroll = inject(ScrollService)\n  private router = inject(Router)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  private subs: Subscription[] = []\n\n  constructor() {\n    effect(() => {\n      if (this.auth.$isAuth()) {\n        const { first_name, username } = untracked(this.auth.$user)\n\n        this.subs.push(\n          this.alerts.open(`Привет, ${first_name || username}!`).subscribe()\n        )\n\n        if (getCurrentPath(this.router).includes('/auth')) {\n          this.router.navigate(['/'])\n        }\n      }\n    }, {})\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnInit' })\n  ngOnInit(): void {\n    VKID.Config.set({\n      app: env.appId,\n      redirectUrl: env.redirectUrl,\n      state: 'dj29fnsadjsd82f249k293c139j1kd3',\n    })\n\n    this.auth.$isLoading.next(true)\n\n    this.subs.push(\n      this.auth.init().subscribe({\n        next: (user) => {\n          this.auth.set(user)\n          this.auth.$isLoading.next(false)\n        },\n        error: (err: HttpErrorResponse) => {\n          if (err.status === 0) {\n            this.config.$isRefusedPage.set(true)\n            this.auth.$isLoading.next(false)\n            return\n          }\n\n          this.auth.$isLoading.next(false)\n\n          this.router.navigateByUrl(getCurrentPath(this.router))\n        },\n      })\n    )\n  }\n\n  nearEnd(posY: number) {\n    this.scroll.next(true, posY)\n  }\n\n  @Sentry.TraceMethod({ name: 'App.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n  @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {\n    \n  } @else if (!this.config.$isRefusedPage()) {\n    @if (this.auth.$isAuth()) {\n      \n        \n        \n          \n        \n      \n    } @else {\n      \n    }\n\n    @if (this.config.$menuIsOpen()) {\n      \n    }\n  }\n\n  @if (this.config.$isRefusedPage()) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if ((this.auth.$$isLoading | async) && !this.config.$isRefusedPage()) {      } @else if (!this.config.$isRefusedPage()) {    @if (this.auth.$isAuth()) {                                                  } @else {          }    @if (this.config.$menuIsOpen()) {          }  }  @if (this.config.$isRefusedPage()) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthCallbackComponent.html":{"url":"components/AuthCallbackComponent.html","title":"component - AuthCallbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthCallbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/callback/auth-callback.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-callback\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiLoaderModule\n                                AuthPassComponent\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-callback.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-callback.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthCallback.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/callback/auth-callback.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/callback/auth-callback.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { TuiLoaderModule } from '@taiga-ui/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthPassComponent } from '@app/auth/pass/auth-pass.component'\n\nimport { getQueryPayload } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-auth-callback',\n  standalone: true,\n  imports: [CommonModule, TuiLoaderModule, AuthPassComponent, TuiLoaderModule],\n  templateUrl: './auth-callback.component.html',\n  styleUrl: './auth-callback.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthCallback' })\nexport class AuthCallbackComponent implements OnInit, OnDestroy {\n  private route = inject(ActivatedRoute)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(true)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.subs$.push(\n      this.auth\n        .signInVK({\n          ...payload,\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n            this.router.navigate(['/'])\n          },\n          error: (err) => {\n            this.router.navigate(['/'])\n            console.log(err)\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthCallback.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        @if (isLoading$$ | async) {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (isLoading$$ | async) {  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthCallbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiTabsModule\n                                SignInComponent\n                                SignUpComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemIndex\n                            \n                            \n                                callbackUrl\n                            \n                            \n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Auth.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/auth.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        callbackUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, inject } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { TuiTabsModule } from '@taiga-ui/kit'\nimport * as Sentry from '@sentry/angular'\n\nimport { enterLeaveAnimation } from '@animations'\n\nimport { SignInComponent } from './sign-in/sign-in.component'\nimport { SignUpComponent } from './sign-up/sign-up.component'\n\n@Component({\n  selector: 'spomen-auth',\n  standalone: true,\n  imports: [TuiTabsModule, SignInComponent, SignUpComponent],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n  animations: [enterLeaveAnimation],\n})\n@Sentry.TraceClass({ name: 'Auth' })\nexport class AuthComponent implements OnInit {\n  route = inject(ActivatedRoute)\n\n  activeItemIndex: number = 0\n  callbackUrl: string | null = null\n\n  @Sentry.TraceMethod({ name: 'Auth.ngOnInit' })\n  ngOnInit(): void {\n    this.callbackUrl = this.route.snapshot.queryParams['url'] ?? null\n  }\n}\n\n    \n\n    \n        \n  Вход\n  Регистрация\n\n\n  @if (activeItemIndex === 0) {\n    \n  }\n  @if (activeItemIndex === 1) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Вход  Регистрация  @if (activeItemIndex === 0) {      }  @if (activeItemIndex === 1) {      }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthModel.html":{"url":"interfaces/AuthModel.html","title":"interface - AuthModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/auth.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AccountModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from './account.model'\n\nexport interface AuthModel extends AccountModel {\n  access_token: string\n  refresh_token: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthPassComponent.html":{"url":"components/AuthPassComponent.html","title":"component - AuthPassComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthPassComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pass/auth-pass.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-auth-pass\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-pass.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-pass.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pass/auth-pass.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'AuthPass.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pass/auth-pass.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pass/auth-pass.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, inject } from '@angular/core'\nimport { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { ActivatedRoute } from '@angular/router'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { getQueryPayload, Validation } from '@utils'\nimport { AuthCallbackDto } from '@dtos'\n\n@Component({\n  selector: 'spomen-auth-pass',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './auth-pass.component.html',\n  styleUrl: './auth-pass.component.scss',\n})\n@Sentry.TraceClass({ name: 'AuthPass' })\nexport class AuthPassComponent implements OnInit, OnDestroy {\n  private token: BehaviorSubject = new BehaviorSubject('')\n  private route = inject(ActivatedRoute)\n  private alerts = inject(TuiAlertService)\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    confirmPass: FormControl\n  }> = new FormGroup({\n    pass: new FormControl(''),\n    confirmPass: new FormControl(),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnInit' })\n  ngOnInit(): void {\n    const payload = getQueryPayload(\n      this.route.snapshot.queryParams\n    )!\n\n    this.token.next(payload.token)\n\n    this.form = this.fb.group(\n      {\n        pass: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(30),\n          ],\n        ],\n        confirmPass: ['', [Validators.required]],\n      },\n      {\n        validators: [Validation.match('pass', 'confirmPass')],\n      }\n    )\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      Object.keys(this.form.controls).forEach((control) => {\n        if (\n          this.form.controls[control as keyof typeof this.form.controls].errors\n        ) {\n          Object.keys(\n            this.form.controls[control as keyof typeof this.form.controls]\n              .errors!\n          ).forEach((error) => {\n            switch (error) {\n              case 'required': {\n                errors.push('Пароль обязателен')\n                break\n              }\n\n              case 'minlength': {\n                errors.push('Пароль должен быть не менее 8 символов')\n                break\n              }\n\n              case 'match': {\n                errors.push('Пароли должны быть одинаковы')\n                break\n              }\n\n              default: {\n                errors.push('Проверьте правильность полей')\n              }\n            }\n          })\n        }\n      })\n\n      new Set(errors).forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.subs$.push(this.alerts.open('Запрос на сервер...').subscribe())\n    this.isLoading.next(true)\n  }\n\n  @Sentry.TraceMethod({ name: 'AuthPass.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  Придумайте пароль\n  \n  \n  \n    \n      Продолжить\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Придумайте пароль                Продолжить      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthPassComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isAuth\n                            \n                            \n                                $$isLoading\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isAdmin\n                            \n                            \n                                $isAuth\n                            \n                            \n                                $isLoading\n                            \n                            \n                                $user\n                            \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                init\n                            \n                            \n                                me\n                            \n                            \n                                refresh\n                            \n                            \n                                set\n                            \n                            \n                                signIn\n                            \n                            \n                                signInVK\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(data: AuthModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AuthModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(dto: SignInDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInVK\n                        \n                    \n                \n            \n            \n                \nsignInVK(dto: AuthCallbackDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            AuthCallbackDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(dto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$isAuth)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.$isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() => !!this.$user().id)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAuthenticatedUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Signal,\n  WritableSignal,\n  computed,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  BehaviorSubject,\n  Observable,\n  catchError,\n  map,\n  switchMap,\n  throwError,\n} from 'rxjs'\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { toObservable } from '@angular/core/rxjs-interop'\n\nimport { AuthenticatedUser, initialAuthenticatedUser } from '@interfaces'\nimport { AuthCallbackDto, SignUpDto, SignInDto } from '@dtos'\nimport { AuthModel } from '@models'\n\nimport { API, Role } from '@enums'\n\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private http: HttpClient = inject(HttpClient)\n\n  $user: WritableSignal = signal(initialAuthenticatedUser)\n\n  $avatar: Signal = computed(\n    () => this.$user().avatar || this.$user().vk_avatar\n  )\n\n  $isAuth: Signal = computed(() => !!this.$user().id)\n  $$isAuth: Observable = toObservable(this.$isAuth)\n\n  $isAdmin: Signal = computed(() =>\n    this.$user().roles.includes(Role.Administrator)\n  )\n\n  $isLoading: BehaviorSubject = new BehaviorSubject(false)\n  $$isLoading: Observable = this.$isLoading.asObservable()\n\n  set(data: AuthModel) {\n    this.$user.set({\n      id: data.id,\n      username: data.username,\n      birthday: data.birthday,\n      sex: data.sex,\n      token: data.access_token,\n      roles: data.roles.sort((a, b) => a.localeCompare(b)),\n      vk_id: data.vk_id || null,\n      avatar: data.avatar ? data.avatar.url : null,\n      vk_avatar: data.vk_avatar || null,\n      email: data.email || null,\n      first_name: data.first_name || null,\n      last_name: data.last_name || null,\n      full_name:\n        data.first_name && data.last_name\n          ? `${data.first_name.trim()} ${data.last_name.trim()}`\n          : null,\n    })\n  }\n\n  clear() {\n    this.$user.set(initialAuthenticatedUser)\n  }\n\n  init(): Observable {\n    this.$isLoading.next(true)\n\n    return this.me().pipe(\n      map((data) => {\n        this.set(data)\n        return data\n      }),\n      catchError((err: HttpErrorResponse) => {\n        if (err.status === 401) {\n          return this.refresh().pipe(\n            switchMap(() => this.me().pipe(map((val) => val)))\n          )\n        }\n\n        return throwError(() => err)\n      })\n    )\n  }\n\n  signIn(dto: SignInDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_IN}`, dto)\n  }\n\n  signUp(dto: SignUpDto): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_UP}`, dto)\n  }\n\n  signOut(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_SIGN_OUT}`, {})\n  }\n\n  signInVK(dto: AuthCallbackDto): Observable {\n    return this.http.post(\n      `${env.apiUrl}${API.VK_ID_EXCHANGE_TOKEN}`,\n      dto\n    )\n  }\n\n  me(): Observable {\n    return this.http.get(`${env.apiUrl}${API.AUTH_ME}`)\n  }\n\n  refresh(): Observable {\n    return this.http.post(`${env.apiUrl}${API.AUTH_REFRESH}`, {})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticatedUser.html":{"url":"interfaces/AuthenticatedUser.html","title":"interface - AuthenticatedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticatedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/authenticated-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Account\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from './account.interface'\n\nexport const initialAuthenticatedUser: AuthenticatedUser = {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n\nexport interface AuthenticatedUser extends Account {\n  token: string | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangeAvatarComponent.html":{"url":"components/ChangeAvatarComponent.html","title":"component - ChangeAvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangeAvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/change-avatar/change-avatar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-change-avatar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiSvgModule\n                            TuiHintModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./change-avatar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./change-avatar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                account\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                avatarAlreadyExists\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                targetAccountId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    Private\n                                handleUploadResult\n                            \n                            \n                                removeAvatar\n                            \n                            \n                                removeFile\n                            \n                            \n                                    Private\n                                showError\n                            \n                            \n                                    Private\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(context: TuiDialogContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                    TuiDialogContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleUploadResult\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUploadResult(res: UploadModel | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            UploadModel | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAvatar\n                        \n                    \n                \n            \n            \n                \nremoveAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(err: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/change-avatar/change-avatar.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarAlreadyExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        targetAccountId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/change-avatar/change-avatar.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Inject,\n  WritableSignal,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogContext,\n  TuiHintModule,\n  TuiLoaderModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { TuiFileLike, TuiInputFilesModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus'\nimport { catchError, of, switchMap, takeLast } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AccountService } from '@services'\n\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-change-avatar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiSvgModule,\n    TuiHintModule,\n  ],\n  templateUrl: './change-avatar.component.html',\n  styleUrl: './change-avatar.component.scss',\n})\n@Sentry.TraceClass({ name: 'ChangeAvatar' })\nexport class ChangeAvatarComponent {\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private account = inject(AccountService)\n\n  constructor(\n    @Inject(POLYMORPHEUS_CONTEXT)\n    private readonly context: TuiDialogContext\n  ) {\n    this.targetAccountId = context.data.accountId\n    this.avatarAlreadyExists = context.data.avatarAlreadyExists\n  }\n\n  readonly control = new FormControl(null)\n\n  isLoading: WritableSignal = signal(false)\n\n  private targetAccountId: string\n  avatarAlreadyExists: boolean\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  changeAvatar() {\n    this.isLoading.set(true)\n\n    if (this.avatarAlreadyExists) {\n      this.account\n        .removeAvatar({\n          id: this.targetAccountId,\n        })\n        .pipe(\n          takeUntilDestroyed(this.destroyRef),\n          catchError((res) => {\n            this.showError(res.error.message)\n            return of(new Error(res.error))\n          }),\n          switchMap((res) => (res ? this.uploadAvatar() : of(null)))\n        )\n        .subscribe({\n          next: (res) => this.handleUploadResult(res as UploadModel),\n          error: () => {\n            this.isLoading.set(false)\n          },\n        })\n    } else {\n      this.uploadAvatar().subscribe({\n        next: (res) => this.handleUploadResult(res as UploadModel),\n        error: () => {\n          this.isLoading.set(false)\n        },\n      })\n    }\n  }\n\n  removeAvatar() {\n    this.isLoading.set(true)\n\n    this.account\n      .removeAvatar({\n        id: this.targetAccountId,\n      })\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        catchError((err) => {\n          this.showError(err)\n          return of(new Error(err))\n        })\n      )\n      .subscribe({\n        next: () => {\n          this.isLoading.set(false)\n          this.context.completeWith(true)\n        },\n        error: () => {\n          this.isLoading.set(false)\n        },\n      })\n  }\n\n  private uploadAvatar() {\n    return this.account\n      .uploadAvatar({\n        file: this.control.value!,\n        id: this.targetAccountId,\n      })\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        takeLast(1),\n        catchError((res) => {\n          this.showError(res.error.message)\n          return of(new Error(res.error))\n        })\n      )\n  }\n\n  private handleUploadResult(res: UploadModel | null) {\n    this.isLoading.set(false)\n\n    this.context.completeWith(res ? res.url : null)\n  }\n\n  private showError(err: string) {\n    this.alerts\n      .open(err, { status: 'error' })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe()\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      Обновить аватар\n    \n\n    @if (avatarAlreadyExists) {\n      \n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Обновить аватар        @if (avatarAlreadyExists) {                        }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangeAvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatsComponent.html":{"url":"components/ChatsComponent.html","title":"component - ChatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chats/chats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-chats\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./chats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-chats',\n  standalone: true,\n  imports: [],\n  templateUrl: './chats.component.html',\n  styleUrl: './chats.component.scss',\n})\n@Sentry.TraceClass({ name: 'Chats' })\nexport class ChatsComponent {}\n\n    \n\n    \n        chats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'chats works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $isNotFoundPage\n                            \n                            \n                                $isRefusedPage\n                            \n                            \n                                $menuIsOpen\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                    Async\n                                loadConfig\n                            \n                            \n                                toggleMenuStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/config.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenuStatus\n                        \n                    \n                \n            \n            \n                \ntoggleMenuStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/config.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $isNotFoundPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isRefusedPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $menuIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/config.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, WritableSignal, inject, signal } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { filter, firstValueFrom, map } from 'rxjs'\nimport { env } from '@env'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private router = inject(Router)\n  private http = inject(HttpClient)\n\n  $isNotFoundPage: WritableSignal = signal(false)\n  $isRefusedPage: WritableSignal = signal(false)\n  $menuIsOpen: WritableSignal = signal(false)\n\n  constructor() {\n    this.router.events\n      .pipe(\n        filter((val) => val instanceof NavigationEnd),\n        map((a: any) => {\n          if (a.url && a.urlAfterRedirects) {\n            this.$isNotFoundPage.set(\n              a.url.includes('/404') || a.urlAfterRedirects.includes('/404')\n            )\n          }\n        })\n      )\n      .subscribe()\n  }\n\n  async loadConfig(): Promise {\n    const config = await firstValueFrom(this.http.get('/assets/config.json'))\n    Object.assign(env, config)\n  }\n\n  toggleMenuStatus() {\n    this.$menuIsOpen.set(!this.$menuIsOpen())\n  }\n\n  closeMenu() {\n    if (this.$menuIsOpen()) {\n      this.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-dashboard',\n  standalone: true,\n  imports: [],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n})\n@Sentry.TraceClass({ name: 'Dashboard' })\nexport class DashboardComponent {}\n\n    \n\n    \n        dashboard works!\nLorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,\nratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequatur\nmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!\nSoluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atque\neaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quis\nvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sed\nminima voluptatum adipisci sapiente officiis natus tempore itaque, nihil\npossimus nemo deserunt atque provident et in eius repellat facere magni culpa\nconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, aut\nquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisi\nvero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quam\nobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enim\ndeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepe\ntotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, odit\naspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totam\nperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptate\nrepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiis\nlaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,\nimpedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!\nAspernatur, dolor inventore quae doloremque accusantium quos odit nostrum\nbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantium\nquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentium\nnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animi\ncommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,\nnemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat amet\nimpedit iure modi rem unde sit officia! Voluptate veritatis optio quam\nrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihil\nconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,\noptio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illum\nobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctio\naliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sit\ncumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,\nest nemo ex recusandae, accusamus nostrum dolorum at, totam qui esse\nperspiciatis labore autem minima! Error veniam soluta corporis ad voluptates\nitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihil\ndicta quos consequuntur similique doloremque provident voluptate at iste itaque\nbeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facere\nquae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestias\net consectetur cum iusto modi, sit reprehenderit dicta temporibus deleniti\nquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullam\nsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architecto\nnesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiat\nfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendis\nnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditate\nquasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,\neligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odio\nat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernatur\nquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventore\nillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiis\npariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdam\nperferendis ratione cum, minus molestiae reprehenderit autem architecto deserunt\naut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,\nmolestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,\nvoluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditate\nreiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus ut\nconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe soluta\nquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatis\nlibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,\nfugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecati\nnostrum, laudantium maiores repudiandae aspernatur perferendis libero sequi\nrepellat corporis expedita temporibus explicabo quae placeat odit molestiae\ndolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisi\neaque impedit officia consequatur deserunt incidunt, inventore corrupti sit\naliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibus\nlaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquid\npraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitia\naliquam nihil similique voluptate iure tenetur at velit nulla officia corporis\ndicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequuntur\ncommodi numquam, totam corporis recusandae maiores tempore aperiam distinctio\nvoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro vel\nmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquam\nnihil laudantium quibusdam, nulla, possimus asperiores quas delectus\nconsequuntur dolores alias, odit amet odio? Perferendis tenetur deleniti\npariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsa\nneque est odit, vel voluptates repellendus quod suscipit minima, accusamus\nreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborum\ncupiditate officiis sint unde nihil! Rerum enim laudantium esse possimus\naliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odio\nmaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam qui\nreprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquam\nearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnis\nrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iusto\narchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribus\nut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaque\nlaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque soluta\ndeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illum\ndeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sit\nincidunt, aperiam quia omnis! Sequi, aliquam eligendi!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dashboard works!Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem minus,ratione rem unde saepe distinctio nostrum ipsa hic cupiditate sint consequaturmollitia, ducimus laboriosam quis aperiam velit consequuntur dolor aliquid!Soluta, reiciendis laboriosam! Nulla facere voluptatibus nobis voluptates atqueeaque velit iusto. Voluptas sunt veniam veritatis, nesciunt pariatur minus. Quisvelit fugiat, ipsa accusamus quisquam commodi beatae nemo officiis aut! Iure sedminima voluptatum adipisci sapiente officiis natus tempore itaque, nihilpossimus nemo deserunt atque provident et in eius repellat facere magni culpaconsectetur? Harum maxime rerum in illo obcaecati! Aperiam voluptas quam, autquia iste architecto quidem eius culpa dolorum consequuntur officiis nihil nisivero, explicabo delectus voluptate ratione qui, ab exercitationem. Aliquid quamobcaecati a facere tenetur illo. Voluptatum cupiditate perspiciatis, enimdeleniti labore accusamus reprehenderit voluptatem quisquam quam autem saepetotam ex quo, ipsum eos qui! Accusantium ipsam modi aliquam. Hic quibusdam, oditaspernatur blanditiis perferendis vitae. Recusandae, doloremque qui totamperferendis quasi cumque tempora rem vero obcaecati asperiores dolorum voluptaterepellat ullam atque, libero voluptatem expedita. Ab officiis blanditiislaudantium optio dolor excepturi ipsa hic doloremque! Officiis rerum eos,impedit et recusandae enim, id magni culpa vitae magnam a quas doloribus!Aspernatur, dolor inventore quae doloremque accusantium quos odit nostrumbeatae, eaque quod consectetur architecto saepe! Sit consequatur accusantiumquidem dolor, adipisci laboriosam quos rem suscipit atque harum, praesentiumnecessitatibus eius tenetur enim? Totam eligendi qui odio vero impedit! Animicommodi dicta nostrum cupiditate illum beatae? Minima aperiam quis ut aliquam,nemo illum repudiandae animi aut corrupti deleniti, quam earum atque fugiat ametimpedit iure modi rem unde sit officia! Voluptate veritatis optio quamrecusandae velit! Quam pariatur incidunt tempore! Repellat quis est nihilconsectetur iure ipsum praesentium corporis non hic voluptas odio eos aliquam a,optio recusandae cupiditate perspiciatis deleniti tempore dolore? Dolor, illumobcaecati? Voluptatibus debitis dolor quia sed non dicta autem facere distinctioaliquid, quod ab iure! Aspernatur corrupti dolorum quia officia quisquam, sitcumque vitae expedita eum obcaecati reiciendis at molestiae nam! Minus fugiat,est nemo ex recusandae, accusamus nostrum dolorum at, totam qui esseperspiciatis labore autem minima! Error veniam soluta corporis ad voluptatesitaque, ratione, quas vero harum quibusdam magni? Voluptatem repellendus nihildicta quos consequuntur similique doloremque provident voluptate at iste itaquebeatae, possimus doloribus rerum deserunt eligendi commodi minus tempore facerequae voluptatibus autem pariatur! Quo, dolores obcaecati. Ex provident molestiaset consectetur cum iusto modi, sit reprehenderit dicta temporibus delenitiquaerat at itaque vel autem numquam qui reiciendis dignissimos eaque nihil ullamsuscipit voluptatum impedit! Esse, eos. Asperiores perferendis illo architectonesciunt ipsam atque, veritatis vitae voluptates. Itaque libero modi fugiatfacilis, consequuntur eum repellat incidunt laudantium ullam veniam? Reiciendisnostrum perferendis nulla a fuga rem recusandae? Explicabo suscipit cupiditatequasi adipisci, atque labore nulla possimus! Rem fugit modi quas odit, voluptas,eligendi iure adipisci quasi nostrum eos deleniti! Eius, maiores laboriosam odioat quisquam repudiandae! Id? Maxime delectus tempore libero, odit aspernaturquia culpa facilis. Quo laborum illum earum vitae ipsa odio quia sunt inventoreillo maiores eum ea hic minima, aperiam amet iure eos mollitia! Officiispariatur quis minima quia nemo. Nihil hic, aspernatur commodi quibusdamperferendis ratione cum, minus molestiae reprehenderit autem architecto deseruntaut delectus nesciunt accusantium quia facilis maiores fuga. Architecto,molestias! Velit rerum, rem beatae dolorem non, inventore nihil placeat,voluptatum dolor voluptates molestiae. Consequatur ratione, saepe cupiditatereiciendis veritatis eos eveniet, rerum vel, laudantium aspernatur doloribus utconsequuntur eum cum? Fugit, nesciunt. Perferendis error excepturi saepe solutaquo pariatur officiis maxime. Dolorem laudantium voluptas quae perspiciatislibero neque saepe? Dolor ea est saepe suscipit deleniti ut nam reprehenderit,fugit optio! Quasi fuga incidunt totam et minus ipsum nulla asperiores obcaecatinostrum, laudantium maiores repudiandae aspernatur perferendis libero sequirepellat corporis expedita temporibus explicabo quae placeat odit molestiaedolores quod? Nihil? Temporibus facere architecto ratione totam eveniet nisieaque impedit officia consequatur deserunt incidunt, inventore corrupti sitaliquam fugiat quae esse saepe dicta optio quam omnis! Possimus temporibuslaudantium dolorum odio. Consectetur totam nemo deleniti assumenda aliquidpraesentium? Nesciunt nulla cumque voluptates consectetur! Suscipit non mollitiaaliquam nihil similique voluptate iure tenetur at velit nulla officia corporisdicta et, tempore ipsum! Animi accusamus explicabo modi nesciunt consequunturcommodi numquam, totam corporis recusandae maiores tempore aperiam distinctiovoluptates aliquid ex, cumque necessitatibus at eos exercitationem porro velmagnam. Impedit ratione expedita sint! Sed unde maxime deserunt ullam quisquamnihil laudantium quibusdam, nulla, possimus asperiores quas delectusconsequuntur dolores alias, odit amet odio? Perferendis tenetur delenitipariatur sunt esse sit porro, deserunt veniam. Eaque, consectetur unde. Ut ipsaneque est odit, vel voluptates repellendus quod suscipit minima, accusamusreiciendis magni, laboriosam nihil? Necessitatibus ex sequi ducimus eius laborumcupiditate officiis sint unde nihil! Rerum enim laudantium esse possimusaliquam. Rerum hic fuga quo, dolorem nulla quisquam facere repellendus eos odiomaiores, eius, officia necessitatibus. Soluta eius, amet eos nihil quisquam quireprehenderit cum! Nihil sapiente tempora perspiciatis veritatis aut aliquamearum, error omnis dolor consectetur cum facere? Voluptatum corporis dicta omnisrepudiandae officiis esse quidem ipsum nam quibusdam saepe explicabo, hic iustoarchitecto. Sequi blanditiis, tenetur vero reprehenderit ipsa nemo aut doloribusut sit eum, fugiat earum quam optio quae minima quaerat eveniet fugit itaquelaudantium hic porro culpa, aperiam voluptas! Vitae, nesciunt. Cumque solutadeleniti labore perferendis consequatur dolores cum ipsum, repellat saepe illumdeserunt facere quasi? Quasi sint adipisci tempora nostrum animi mollitia sitincidunt, aperiam quia omnis! Sequi, aliquam eligendi!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUploadByIdGQL.html":{"url":"injectables/DeleteUploadByIdGQL.html","title":"injectable - DeleteUploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Mutation\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DeleteUploadByIdQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/mutations/delete-upload-by-id.gql.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Mutation } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nexport type DeleteUploadByIdResponse = {\n  id: string\n}\n\nexport type DeleteUploadByIdVariables = {\n  id: string\n}\n\nexport const DeleteUploadByIdQuery = gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n\n@Injectable()\nexport class DeleteUploadByIdGQL extends Mutation {\n  document = DeleteUploadByIdQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Env.html":{"url":"interfaces/Env.html","title":"interface - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Env\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/env.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiUrl\n                                        \n                                \n                                \n                                        \n                                            appId\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            origin\n                                        \n                                \n                                \n                                        \n                                            redirectUrl\n                                        \n                                \n                                \n                                        \n                                            sentryDsn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"local\" | \"dev\" | \"staging\" | \"production\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        origin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sentryDsn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sentryDsn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Env {\n  environment: 'local' | 'dev' | 'staging' | 'production'\n  appId: number\n  redirectUrl: string\n  apiUrl: string\n  origin: string\n  sentryDsn: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/events.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-events\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n            \n                styleUrl\n                ./events.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n@Component({\n  selector: 'spomen-events',\n  standalone: true,\n  imports: [],\n  templateUrl: './events.component.html',\n  styleUrl: './events.component.scss',\n})\n@Sentry.TraceClass({ name: 'Events' })\nexport class EventsComponent {}\n\n    \n\n    \n        events works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'events works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtensionInputComponent.html":{"url":"components/ExtensionInputComponent.html","title":"component - ExtensionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtensionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/extension-input/extension-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: ExtensionInputComponent,\n}\n                                UploadService\n                                UploadExtensionsGQL\n                \n            \n\n\n            \n                selector\n                spomen-extension-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiDataListWrapperModule\n                            TuiTextfieldControllerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./extension-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./extension-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                            \n                                    Private\n                                uploadExtensionsGQL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                $extensions\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Тип'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:58\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        $extensions\n                    \n                \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/extension-input/extension-input.component.ts:67\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/extension-input/extension-input.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadExtensionsGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadExtensionsGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/extension-input/extension-input.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  Input,\n  OnInit,\n  Output,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport { TuiAlertService, TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadExtensionsGQL } from '@graphql'\nimport { UploadService } from '@services'\n\n@Component({\n  selector: 'spomen-extension-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiDataListWrapperModule,\n    TuiTextfieldControllerModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: ExtensionInputComponent,\n    },\n    UploadService,\n    UploadExtensionsGQL,\n  ],\n  templateUrl: './extension-input.component.html',\n  styleUrl: './extension-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'ExtensionInput' })\nexport class ExtensionInputComponent implements OnInit, ControlValueAccessor {\n  private uploadExtensionsGQL = inject(UploadExtensionsGQL)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Тип'\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  @Output() $extensions: WritableSignal = signal([])\n\n  ngOnInit() {\n    this.uploadExtensionsGQL\n      .watch({\n        size: 20,\n        page: 1,\n      })\n      .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: ({ data }) => {\n          this.$extensions.set(data.uploadExtensions)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить список расширений', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExtensionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileParams.html":{"url":"interfaces/FileParams.html","title":"interface - FileParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/upload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileParams {\n  name: string\n  ext: string\n  mime?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAccountModel.html":{"url":"interfaces/GetAccountModel.html","title":"interface - GetAccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/models/getAccount.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '@enums'\n\nexport interface GetAccountModel {\n  account: {\n    id: string\n    username: string\n    email: string | null\n    roles: Role[]\n    avatar: {\n      url: string\n    } | null\n    vk_id: string | null\n    vk_avatar: string | null\n    first_name: string | null\n    last_name: string | null\n    birthday: Date | null\n    sex: '0' | '1' | '2' | null\n    created_at: Date\n    updated_at: Date\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphqlError.html":{"url":"interfaces/GraphqlError.html","title":"interface - GraphqlError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphqlError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/error.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  path: string\n  status: string\n  message: string\n  description?: string\n}\n\nexport interface GraphqlError {\n  code: number\n  message: string\n  description?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiHostedDropdownModule\n                                MeComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                isOpenProfileDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpenProfileDropdown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/header/header.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiHostedDropdownModule, TuiSvgModule } from '@taiga-ui/core'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { Component, inject } from '@angular/core'\nimport { RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\n\nimport { MeComponent } from '@components/me'\n\n@Component({\n  selector: 'spomen-header',\n  standalone: true,\n  imports: [\n    RouterModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiHostedDropdownModule,\n    MeComponent,\n  ],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\n@Sentry.TraceClass({ name: 'Header' })\nexport class HeaderComponent {\n  auth = inject(AuthService)\n  config = inject(ConfigService)\n\n  isOpenProfileDropdown = false\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n    \n  \n  \n    \n      \n    \n  \n  \n    @if (this.auth.$user().id) {\n      \n        \n\n        \n        \n      \n    } @else {\n      Войти\n    }\n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      @if (this.auth.$user().id) {                                        } @else {      Войти    }          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IFrameUrlPipe.html":{"url":"pipes/IFrameUrlPipe.html","title":"pipe - IFrameUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IFrameUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/iframe-url.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        iframeUrl\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(url: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/iframe-url.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DomSanitizer } from '@angular/platform-browser'\nimport { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'iframeUrl',\n  standalone: true,\n})\nexport class IFrameUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  transform(url: string | null): any {\n    return url ? this.domSanitizer.bypassSecurityTrustResourceUrl(url) : null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeComponent.html":{"url":"components/MeComponent.html","title":"component - MeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/me/me.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-me\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./me.component.html\n            \n\n\n\n            \n                styleUrl\n                ./me.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                config\n                            \n                            \n                                destroyRef\n                            \n                            \n                                dialogs\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMe\n                            \n                            \n                                handleSignOut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/me/me.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMe\n                        \n                    \n                \n            \n            \n                \nhandleMe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/me/me.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/me/me.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  EventEmitter,\n  Output,\n  inject,\n} from '@angular/core'\n\nimport { TuiDialogService, TuiSvgModule } from '@taiga-ui/core'\nimport { AuthService, ConfigService } from '@services'\nimport * as Sentry from '@sentry/angular'\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'spomen-me',\n  standalone: true,\n  imports: [TuiSvgModule],\n  templateUrl: './me.component.html',\n  styleUrl: './me.component.scss',\n})\n@Sentry.TraceClass({ name: 'Me' })\nexport class MeComponent {\n  dialogs = inject(TuiDialogService)\n  destroyRef = inject(DestroyRef)\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n  router = inject(Router)\n\n  @Output() close = new EventEmitter()\n\n  handleMe() {\n    this.router.navigate([`/${this.auth.$user().username}`])\n    this.config.closeMenu()\n    this.close.emit()\n  }\n\n  handleSignOut() {\n    this.dialogs\n      .open('Выйти из воспоминаний?', {\n        size: 's',\n        required: true,\n      })\n      .subscribe({\n        error: () => {},\n        complete: () =>\n          this.auth.signOut().subscribe({\n            next: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n            },\n            error: () => {\n              this.auth.clear()\n              this.router.navigate(['/auth'])\n              this.close.emit()\n              window.location.reload()\n            },\n          }),\n      })\n  }\n}\n\n    \n\n    \n        \n  Профиль\n  \n\n\n  Выйти\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Профиль    Выйти  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemoriesComponent.html":{"url":"components/MemoriesComponent.html","title":"component - MemoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/memories/memories.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-memories\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./memories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./memories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-memories',\n  standalone: true,\n  imports: [],\n  templateUrl: './memories.component.html',\n  styleUrl: './memories.component.scss',\n})\n@Sentry.TraceClass({ name: 'Memories' })\nexport class MemoriesComponent {}\n\n    \n\n    \n        memories works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'memories works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/menu/menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { NavComponent } from '@components/nav'\n\n@Component({\n  selector: 'spomen-menu',\n  standalone: true,\n  imports: [NavComponent],\n  templateUrl: './menu.component.html',\n  styleUrl: './menu.component.scss',\n})\n@Sentry.TraceClass({ name: 'Menu' })\nexport class MenuComponent {}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/nav/nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-nav\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterLink\n                                RouterLinkActive\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n            \n                styleUrl\n                ./nav.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                authenticatedRoutes\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fixed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fixed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/nav/nav.component.ts:57\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/nav/nav.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticatedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : protectedRoutes\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/nav/nav.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { RouterLink, RouterLinkActive } from '@angular/router'\nimport { Component, Input, inject } from '@angular/core'\nimport { TuiSvgModule } from '@taiga-ui/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, ConfigService } from '@services'\nimport { Route } from '@interfaces'\n\nconst protectedRoutes: Route[] = [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n\n@Component({\n  selector: 'spomen-nav',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive, TuiSvgModule],\n  templateUrl: './nav.component.html',\n  styleUrl: './nav.component.scss',\n})\n@Sentry.TraceClass({ name: 'Nav' })\nexport class NavComponent {\n  config = inject(ConfigService)\n  auth = inject(AuthService)\n\n  @Input() fixed: boolean = false\n\n  authenticatedRoutes = protectedRoutes\n\n  closeMenu() {\n    if (this.config.$menuIsOpen()) {\n      this.config.$menuIsOpen.set(false)\n    }\n  }\n}\n\n    \n\n    \n        \n  @if (this.auth.$isAuth()) {\n    @for (route of this.authenticatedRoutes; track route) {\n      \n        \n        {{ route.title }}\n      \n    }\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (this.auth.$isAuth()) {    @for (route of this.authenticatedRoutes; track route) {                      {{ route.title }}          }  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showRef\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showRef\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Такой страницы не существует'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/not-found/not-found.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { RouterModule } from '@angular/router'\nimport { Component, Input } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-not-found',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss',\n})\n@Sentry.TraceClass({ name: 'NotFound' })\nexport class NotFoundComponent {\n  @Input() title: string = 'Такой страницы не существует'\n  @Input() showRef: boolean = true\n}\n\n    \n\n    \n        {{ this.title }}\n\n@if (this.showRef) {\n  На главную\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ this.title }}@if (this.showRef) {  На главную}'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OopsComponent.html":{"url":"components/OopsComponent.html","title":"component - OopsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OopsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/oops/oops.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-oops\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./oops.component.html\n            \n\n\n\n            \n                styleUrl\n                ./oops.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-oops',\n  standalone: true,\n  imports: [],\n  templateUrl: './oops.component.html',\n  styleUrl: './oops.component.scss',\n})\n@Sentry.TraceClass({ name: 'Oops' })\nexport class OopsComponent {}\n\n    \n\n    \n        \n  \n    У нас технические работы\n    Попробуйте вернуться позже\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      У нас технические работы    Попробуйте вернуться позже          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'OopsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PermissionInputComponent.html":{"url":"components/PermissionInputComponent.html","title":"component - PermissionInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PermissionInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/components/permission-input/permission-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: PermissionInputComponent,\n}\n                \n            \n\n\n            \n                selector\n                spomen-permission-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputTagModule\n                            TuiTextfieldControllerModule\n                            TuiDataListWrapperModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./permission-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./permission-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControlName\n                            \n                            \n                                formGroup\n                            \n                            \n                                onChange\n                            \n                            \n                                permissions\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     () => void\n\n                    \n                \n                \n                    \n                        Default value : () => {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        permissions\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Права доступа'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"m\" | \"s\" | \"l\"\n\n                    \n                \n                \n                    \n                        Default value : 's'\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/components/permission-input/permission-input.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(disabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/components/permission-input/permission-input.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/common/components/permission-input/permission-input.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ControlValueAccessor,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms'\nimport { TuiDataListWrapperModule, TuiInputTagModule } from '@taiga-ui/kit'\nimport { TuiTextfieldControllerModule } from '@taiga-ui/core'\nimport { Component, Input } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-permission-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputTagModule,\n    TuiTextfieldControllerModule,\n    TuiDataListWrapperModule,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: PermissionInputComponent,\n    },\n  ],\n  templateUrl: './permission-input.component.html',\n  styleUrl: './permission-input.component.scss',\n})\n@Sentry.TraceClass({ name: 'PermissionInput' })\nexport class PermissionInputComponent implements ControlValueAccessor {\n  @Input() formGroup!: FormGroup\n  @Input() formControlName: string = ''\n  @Input() size: 'm' | 's' | 'l' = 's'\n  @Input() placeholder: string = 'Права доступа'\n  @Input() permissions: string[] = [\n    'Публичный',\n    'Чат',\n    'Воспоминание',\n    'Личный',\n  ]\n\n  @Input() onChange = () => {}\n\n  onTouched = () => {}\n\n  disabled = false\n\n  writeValue() {}\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled\n  }\n}\n\n    \n\n    \n        \n  {{this.placeholder}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{this.placeholder}}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'PermissionInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                spomen-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiAvatarModule\n                            TuiSkeletonModule\n                            TuiDialogModule\n                            TuiChipModule\n                            TuiLineClampModule\n                            TuiSvgModule\n                            TuiHintModule\n                                SexPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $$isMe\n                            \n                            \n                                $$roles\n                            \n                            \n                                $avatar\n                            \n                            \n                                $isMe\n                            \n                            \n                                $loading\n                            \n                            \n                                $profile\n                            \n                            \n                                $query\n                            \n                            \n                                    Private\n                                accountGQL\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                auth\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                route\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                showChangeAvatarDialog\n                            \n                            \n                                    Private\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                serializeRole\n                            \n                            \n                                serializeSex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:100\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'Profile.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeSex\n                        \n                    \n                \n            \n            \n                \nserializeSex(sex: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sex\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $$isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $$roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $isMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(initialAccount)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $query\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        accountGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AccountGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Injector)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showChangeAvatarDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Title)\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  Injector,\n  OnInit,\n  Signal,\n  WritableSignal,\n  computed,\n  effect,\n  inject,\n  signal,\n} from '@angular/core'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiDialogService,\n  TuiHintModule,\n  TuiSvgModule,\n} from '@taiga-ui/core'\n\nimport { takeUntilDestroyed, toObservable } from '@angular/core/rxjs-interop'\nimport { TuiChipModule, TuiSkeletonModule } from '@taiga-ui/experimental'\nimport { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\nimport { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus'\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { ApolloError } from '@apollo/client/errors'\nimport { Title } from '@angular/platform-browser'\nimport * as Sentry from '@sentry/angular'\nimport { Observable, map } from 'rxjs'\n\nimport { isNotFound, serializeRole } from '@utils'\nimport { AuthService } from '@services'\nimport { AccountGQL } from '@graphql'\nimport { SexPipe } from '@pipes'\n\nimport { Account, Sex, initialAccount } from '@interfaces'\n\nimport { Role } from '@enums'\n\nimport { ChangeAvatarComponent } from './change-avatar/change-avatar.component'\n\nconst sexIcons = {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n\n@Component({\n  selector: 'spomen-profile',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TuiAvatarModule,\n    TuiSkeletonModule,\n    TuiDialogModule,\n    TuiChipModule,\n    TuiLineClampModule,\n    TuiSvgModule,\n    TuiHintModule,\n    SexPipe,\n  ],\n  providers: [DatePipe],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.scss',\n})\n@Sentry.TraceClass({ name: 'Profile' })\nexport class ProfileComponent implements OnInit {\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private route = inject(ActivatedRoute)\n  private injector = inject(Injector)\n  private router = inject(Router)\n  private title = inject(Title)\n  auth = inject(AuthService)\n\n  private accountGQL = inject(AccountGQL)\n\n  $profile: WritableSignal = signal(initialAccount)\n  $loading: WritableSignal = signal(true)\n  $isMe: WritableSignal = signal(false)\n  $query: WritableSignal = signal('')\n\n  $avatar: Signal = computed(\n    () => this.$profile().avatar || this.$profile().vk_avatar\n  )\n\n  $$roles: Observable = toObservable(this.$profile).pipe(\n    map((profile) => profile.roles)\n  )\n\n  $$isMe: Observable = this.route.params.pipe(\n    map((params) => {\n      this.$query.set(params['username'])\n      this.$isMe.set(params['username'] === this.auth.$user().username)\n      return this.$isMe()\n    })\n  )\n\n  constructor() {\n    effect(() => {\n      if (this.$profile()) {\n        const profile = this.$profile()\n\n        this.title.setTitle(profile!.full_name || profile!.username || '')\n      }\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'Profile.ngOnInit' })\n  ngOnInit(): void {\n    this.$$isMe.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n      next: (isMe) => {\n        if (isMe) {\n          this.$profile.set(this.auth.$user())\n          this.$loading.set(false)\n\n          return\n        }\n\n        this.accountGQL\n          .watch(\n            { username: this.$query() },\n            { fetchPolicy: 'cache-and-network' }\n          )\n          .valueChanges.pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe({\n            next: ({ data, loading }) => {\n              const { account } = data\n\n              this.$loading.set(loading)\n\n              this.$profile.set({\n                ...account,\n                birthday: account.birthday || null,\n                avatar: account.avatar ? account.avatar.url : null,\n                vk_avatar: account.vk_avatar || null,\n                full_name:\n                  account.first_name && account.last_name\n                    ? `${account.first_name.trim()} ${account.last_name.trim()}`\n                    : null,\n              })\n            },\n            error: (err: ApolloError) => {\n              if (isNotFound(err.message)) {\n                this.router.navigate(['/404'])\n                return\n              }\n\n              this.alerts\n                .open('Сервер временно недоступен', { status: 'error' })\n                .pipe(takeUntilDestroyed(this.destroyRef))\n                .subscribe()\n            },\n          })\n      },\n    })\n  }\n\n  changeAvatar() {\n    this.showChangeAvatarDialog().subscribe((res: string | boolean | null) => {\n      if (res) {\n        this.alerts\n          .open(\n            `Аватар успешно ${typeof res === 'string' ? 'изменён' : 'удалён'}`,\n            { status: 'success' }\n          )\n          .pipe(takeUntilDestroyed(this.destroyRef))\n          .subscribe()\n\n        this.$profile.update((profile) => ({\n          ...profile,\n          avatar: typeof res === 'string' ? res : null,\n        }))\n\n        if (this.$isMe()) {\n          this.auth.$user.update((user) => ({\n            ...user,\n            avatar: typeof res === 'string' ? res : null,\n          }))\n        }\n      }\n    })\n  }\n\n  serializeRole(role: Role) {\n    return serializeRole(role)\n  }\n\n  serializeSex(sex: Sex | null): string {\n    return sex ? sexIcons[sex] : sexIcons[0]\n  }\n\n  private showChangeAvatarDialog = () =>\n    this.dialogs.open(\n      new PolymorpheusComponent(ChangeAvatarComponent, this.injector),\n      {\n        size: 's',\n        data: {\n          accountId: this.$profile().id,\n          avatarAlreadyExists: !!this.$profile().avatar,\n        },\n      }\n    )\n}\n\n    \n\n    \n        \n  \n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    \n  }\n  \n    @if (this.$loading()) {\n      @for (skeleton of [1, 2]; track skeleton) {\n        \n      }\n    } @else {\n      {{ this.serializeRole(role) }}\n    }\n  \n\n\n  @if (this.$loading()) {\n    skeleton\n  } @else {\n    {{\n      this.$profile().full_name || this.$profile().username || ''\n    }}\n  }\n  \n    \n      \n      {{\n        this.$profile().birthday\n          ? (this.$profile().birthday | date: 'd MMMM')\n          : 'Не указан'\n      }}\n    \n    \n      \n      {{ this.$profile().sex | sex }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (this.$loading()) {    skeleton  } @else {      }      @if (this.$loading()) {      @for (skeleton of [1, 2]; track skeleton) {              }    } @else {      {{ this.serializeRole(role) }}    }    @if (this.$loading()) {    skeleton  } @else {    {{      this.$profile().full_name || this.$profile().username || \\'\\'    }}  }                  {{        this.$profile().birthday          ? (this.$profile().birthday | date: \\'d MMMM\\')          : \\'Не указан\\'      }}                    {{ this.$profile().sex | sex }}      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Route.html":{"url":"interfaces/Route.html","title":"interface - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/route.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exact\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customIcon:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exact\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exact:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Route {\n  url: string\n  icon: string\n  title: string\n  customIcon?: boolean\n  exact?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ScrollNearEndDirective.html":{"url":"directives/ScrollNearEndDirective.html","title":"directive - ScrollNearEndDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ScrollNearEndDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/directives/scroll-near-end.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [scrollNearEnd]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                windowScrollEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                threshold\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nearEnd\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        threshold\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:21\n                            \n                        \n                \n                    \n                        threshold in PX when to emit before page end scroll\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        nearEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/directives/scroll-near-end.directive.ts:16\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n\n\n            \n                \n                    Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        windowScrollEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    windowScrollEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/common/directives/scroll-near-end.directive.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                    \n                        \n                                Defined in src/app/common/directives/scroll-near-end.directive.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core'\n\n@Directive({\n  selector: '[scrollNearEnd]',\n  standalone: true,\n})\nexport class ScrollNearEndDirective implements OnInit {\n  @Output() nearEnd: EventEmitter = new EventEmitter()\n\n  /**\n   * threshold in PX when to emit before page end scroll\n   */\n  @Input() threshold = 20\n\n  private window!: Window\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit(): void {\n    // save window object for type safety\n    this.window = window\n  }\n\n  @HostListener('window:scroll', ['$event.target'])\n  windowScrollEvent(event: KeyboardEvent) {\n    // height of whole window page\n    const heightOfWholePage = this.window.document.documentElement.scrollHeight\n\n    // how big in pixels the element is\n    const heightOfElement = this.el.nativeElement.scrollHeight\n\n    // currently scrolled Y position\n    const currentScrolledY = this.window.scrollY\n\n    // height of opened window - shrinks if console is opened\n    const innerHeight = this.window.innerHeight\n\n    /**\n     * the area between the start of the page and when this element is visible\n     * in the parent component\n     */\n    const spaceOfElementAndPage = heightOfWholePage - heightOfElement\n\n    // calculated whether we are near the end\n    const scrollToBottom =\n      heightOfElement - innerHeight - currentScrolledY + spaceOfElementAndPage\n\n    // if the user is near end\n    if (scrollToBottom \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScrollService.html":{"url":"injectables/ScrollService.html","title":"injectable - ScrollService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScrollService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/scroll.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $state\n                            \n                            \n                                isEnd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext(status: boolean, posY: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/scroll.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                posY\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal({\n    posY: 0,\n    isEnd: false,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/scroll.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal, WritableSignal } from '@angular/core'\nimport { toObservable } from '@angular/core/rxjs-interop'\nimport { debounceTime, filter, Observable } from 'rxjs'\n\ntype ScrollState = {\n  posY: number\n  isEnd: boolean\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScrollService {\n  private $state: WritableSignal = signal({\n    posY: 0,\n    isEnd: false,\n  })\n\n  isEnd: Observable = toObservable(this.$state).pipe(\n    filter((val) => val.isEnd),\n    debounceTime(1000),\n    filter((val) => val.posY \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SexPipe.html":{"url":"pipes/SexPipe.html","title":"pipe - SexPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SexPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/sex.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sex\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: Sex | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/sex.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Sex | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core'\n\nimport { Sex } from '@interfaces'\n\n@Pipe({\n  name: 'sex',\n  standalone: true,\n})\nexport class SexPipe implements PipeTransform {\n  transform(value: Sex | null): string {\n    switch (value) {\n      case '1': {\n        return 'Мужской'\n      }\n      case '2': {\n        return 'Женский'\n      }\n      default: {\n        return 'Не указан'\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-in/sign-in.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-in\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Private\n                                vkIdOneTap\n                            \n                            \n                                    \n                                VkIdSdkOneTap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ngAfterViewInit\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-in/sign-in.component.ts:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngAfterViewInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignIn.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-in/sign-in.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        vkIdOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new VKID.OneTap()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        VkIdSdkOneTap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('VkIdSdkOneTap')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-in/sign-in.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiAlertService, TuiLoaderModule } from '@taiga-ui/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\nimport * as VKID from '@vkid/sdk'\n\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  inject,\n} from '@angular/core'\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-in',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, TuiLoaderModule],\n  templateUrl: './sign-in.component.html',\n  styleUrl: './sign-in.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignIn' })\nexport class SignInComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('VkIdSdkOneTap') VkIdSdkOneTap!: ElementRef\n\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private vkIdOneTap = new VKID.OneTap()\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  form: FormGroup\n    pass: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n    })\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngAfterViewInit' })\n  ngAfterViewInit(): void {\n    if (this.VkIdSdkOneTap) {\n      this.vkIdOneTap.render({\n        container: this.VkIdSdkOneTap.nativeElement,\n        scheme: VKID.Scheme.DARK,\n        lang: VKID.Languages.RUS,\n        styles: {\n          borderRadius: 50,\n        },\n      })\n    }\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signIn({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n        })\n        .subscribe({\n          next: (data) => {\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err) => {\n            this.isLoading.next(false)\n\n            if (err.status === 401 || err.status === 400) {\n              this.subs$.push(this.alerts.open(`Вход не выполнен`).subscribe())\n              return\n            }\n\n            this.subs$.push(\n              this.alerts.open(`Приложение временно недоступно`).subscribe()\n            )\n          },\n          complete: () => this.isLoading.next(false),\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignIn.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n        Войти\n      \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Войти          '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/sign-up/sign-up.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-sign-up\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiLoaderModule\n                            TuiInputDateModule\n                            TuiDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                confirmForm\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                isLoading\n                            \n                            \n                                isLoading$$\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                showConfirmForm\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPass\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                    \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callbackUrl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callbackUrl\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/sign-up/sign-up.component.ts:45\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPass\n                        \n                    \n                \n            \n            \n                \nconfirmPass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnDestroy'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:237\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @({name: 'SignUp.ngOnInit'})\n                \n            \n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/sign-up/sign-up.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.isLoading.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/sign-up/sign-up.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\n\nimport {\n  TuiAlertService,\n  TuiDialogModule,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\n\nimport { Component, Input, OnDestroy, OnInit, inject } from '@angular/core'\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { TuiInputDateModule } from '@taiga-ui/kit'\nimport { CommonModule } from '@angular/common'\nimport { Router } from '@angular/router'\nimport { TuiDay } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService } from '@services'\n\n@Component({\n  selector: 'spomen-sign-up',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiLoaderModule,\n    TuiInputDateModule,\n    TuiDialogModule,\n  ],\n  templateUrl: './sign-up.component.html',\n  styleUrl: './sign-up.component.scss',\n})\n@Sentry.TraceClass({ name: 'SignUp' })\nexport class SignUpComponent implements OnInit, OnDestroy {\n  private alerts = inject(TuiAlertService)\n  private auth = inject(AuthService)\n  private router = inject(Router)\n\n  @Input() callbackUrl: string | null = null\n\n  private subs$: Subscription[] = []\n\n  private isLoading: BehaviorSubject = new BehaviorSubject(false)\n  isLoading$$: Observable = this.isLoading.asObservable()\n\n  showConfirmForm = false\n\n  form: FormGroup\n    pass: FormControl\n    name: FormControl\n    surname: FormControl\n    email: FormControl\n    birthday: FormControl\n  }> = new FormGroup({\n    login: new FormControl(''),\n    pass: new FormControl(''),\n    name: new FormControl(''),\n    surname: new FormControl(''),\n    email: new FormControl(''),\n    birthday: new FormControl(new TuiDay(2000, 4, 27)),\n  })\n\n  confirmForm: FormGroup\n  }> = new FormGroup({\n    confirmPass: new FormControl(''),\n  })\n\n  constructor(private fb: FormBuilder) {}\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnInit' })\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      login: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(30),\n        ],\n      ],\n      pass: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(30),\n        ],\n      ],\n      name: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      surname: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      email: [\n        '',\n        [Validators.email, Validators.minLength(4), Validators.maxLength(30)],\n      ],\n      birthday: [new TuiDay(2000, 4, 27)],\n    })\n\n    this.confirmForm = this.fb.group({\n      confirmPass: ['', [Validators.required]],\n    })\n  }\n\n  onSubmit() {\n    if (!this.form.valid) {\n      let errors: string[] = []\n\n      if (this.form.controls.login.errors) {\n        errors.push('Введите логин')\n      }\n\n      if (this.form.controls.pass.errors) {\n        errors.push('Введите пароль')\n      }\n\n      if (this.form.controls.name.errors || this.form.controls.surname.errors) {\n        errors.push('Введите корректные имя и фамилию')\n      }\n\n      if (this.form.controls.email.errors) {\n        errors.push('Введите корректную почту')\n      }\n\n      errors.forEach((error) =>\n        this.subs$.push(this.alerts.open(error).subscribe())\n      )\n\n      return\n    }\n\n    this.showConfirmForm = true\n  }\n\n  confirmPass() {\n    if (\n      this.form.controls.pass.value!.trim() !==\n      this.confirmForm.controls.confirmPass.value!.trim()\n    ) {\n      this.subs$.push(this.alerts.open('Некорректный пароль').subscribe())\n      this.confirmForm.controls.confirmPass.reset()\n      this.form.controls.pass.reset()\n      return\n    }\n\n    this.isLoading.next(true)\n\n    this.subs$.push(\n      this.auth\n        .signUp({\n          username: this.form.controls.login.value!.trim(),\n          password: this.form.controls.pass.value!.trim(),\n          birthday: this.form.controls.birthday.touched\n            ? this.form.controls.birthday.value!.toUtcNativeDate().toISOString()\n            : undefined,\n          email:\n            this.form.controls.email.touched &&\n            this.form.controls.email.valid &&\n            this.form.controls.email.value!.trim().length > 0\n              ? this.form.controls.email.value!.trim()\n              : undefined,\n          first_name:\n            this.form.controls.name.touched &&\n            this.form.controls.name.valid &&\n            this.form.controls.name.value!.trim().length > 2\n              ? this.form.controls.name.value!.trim()\n              : undefined,\n          last_name:\n            this.form.controls.surname.touched &&\n            this.form.controls.surname.valid &&\n            this.form.controls.surname.value!.trim().length > 2\n              ? this.form.controls.surname.value!.trim()\n              : undefined,\n        })\n        .subscribe({\n          next: (data) => {\n            this.isLoading.next(false)\n\n            this.auth.set(data)\n\n            this.router.navigate([\n              `${this.callbackUrl ? this.callbackUrl : '/'}`,\n            ])\n          },\n          error: (err: HttpErrorResponse) => {\n            this.confirmForm.controls.confirmPass.reset()\n            this.form.controls.pass.reset()\n\n            if (err.status === 409) {\n              if (this.form.controls.email.value!.trim().length === 0) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данный логин уже зарегистрирован')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              } else if (\n                this.form.controls.email.touched &&\n                this.form.controls.email.valid\n              ) {\n                this.subs$.push(\n                  this.alerts\n                    .open('Данная почта уже зарегистрирована')\n                    .subscribe()\n                )\n\n                this.isLoading.next(false)\n                return\n              }\n            }\n\n            this.subs$.push(\n              this.alerts\n                .open('Сервер временно недоступен', { status: 'error' })\n                .subscribe()\n            )\n\n            this.isLoading.next(false)\n            return\n          },\n          complete: () => {\n            this.confirmForm.controls.confirmPass.setValue('')\n          },\n        })\n    )\n  }\n\n  @Sentry.TraceMethod({ name: 'SignUp.ngOnDestroy' })\n  ngOnDestroy(): void {\n    this.subs$.forEach((sub) => sub.unsubscribe())\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n    \n      Дата рождения\n      \n    \n  \n  \n    \n      Продолжить\n    \n\n\n\n  \n    \n\n    \n      ОК\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Дата рождения                        Продолжить                    ОК      '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinesComponent.html":{"url":"components/TimelinesComponent.html","title":"component - TimelinesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelinesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timelines/timelines.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-timelines\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./timelines.component.html\n            \n\n\n\n            \n                styleUrl\n                ./timelines.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\n@Component({\n  selector: 'spomen-timelines',\n  standalone: true,\n  imports: [],\n  templateUrl: './timelines.component.html',\n  styleUrl: './timelines.component.scss',\n})\n@Sentry.TraceClass({ name: 'Timelines' })\nexport class TimelinesComponent {}\n\n    \n\n    \n        timelines works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'timelines works!'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUploadByIdGQL.html":{"url":"injectables/UpdateUploadByIdGQL.html","title":"injectable - UpdateUploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Mutation\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UpdateUploadByIdQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/mutations/update-upload-by-id.gql.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Mutation } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Permission } from '@enums'\n\nexport type UpdateUploadByIdResponse = {\n  id: string\n}\n\nexport type UpdateUploadByIdVariables = {\n  data: {\n    name?: string\n    file_name?: string\n    permissions?: Permission[]\n  }\n  id: string\n}\n\nexport const UpdateUploadByIdQuery = gql`\n  mutation updateUploadById($data: UploadUpdateInput!, $id: String!) {\n    updateUpload(data: $data, where: { id: $id }) {\n      id\n    }\n  }\n`\n\n@Injectable()\nexport class UpdateUploadByIdGQL extends Mutation {\n  document = UpdateUploadByIdQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadActionsComponent.html":{"url":"components/UploadActionsComponent.html","title":"component - UploadActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-actions/upload-actions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-upload-actions\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            TuiSvgModule\n                            TuiPreviewActionModule\n                            TuiHintModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-actions.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-actions.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _actions\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                            \n                                handleSave\n                            \n                            \n                                preview\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                            \n                                handleSave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        handleDelete\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleOpen\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleSave\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-actions/upload-actions.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _actions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required({ alias: 'actions' })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDelete\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleOpen\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSave\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input void } | null>(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-actions/upload-actions.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiPreviewActionModule } from '@taiga-ui/addon-preview'\nimport { TuiHintModule, TuiSvgModule } from '@taiga-ui/core'\nimport { Component, input, output } from '@angular/core'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadActionsParams } from '@interfaces'\n\n@Component({\n  selector: 'spomen-upload-actions',\n  standalone: true,\n  imports: [TuiSvgModule, TuiPreviewActionModule, TuiHintModule],\n  templateUrl: './upload-actions.component.html',\n  styleUrl: './upload-actions.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadActions' })\nexport class UploadActionsComponent {\n  _actions = input.required({ alias: 'actions' })\n  url = input.required()\n\n  preview = input void } | null>(null)\n\n  handleOpen = output()\n  handleSave = output()\n  handleDelete = output()\n}\n\n    \n\n    \n        @if (this._actions().open) {\n  \n    \n  \n}\n\n@if (this._actions().delete) {\n  \n    \n  \n}\n\n@if (this._actions().save) {\n  \n    \n  \n}\n\n\n  \n\n\n@if(this.preview()) {\n  \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (this._actions().open) {        }@if (this._actions().delete) {        }@if (this._actions().save) {        }  @if(this.preview()) {        }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadActionsParams.html":{"url":"interfaces/UploadActionsParams.html","title":"interface - UploadActionsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadActionsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/interfaces/ui.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            delete\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            save\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        save\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        save:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UploadActionsParams {\n  open?: boolean\n  save?: boolean\n  delete?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadByIdGQL.html":{"url":"injectables/UploadByIdGQL.html","title":"injectable - UploadByIdGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadByIdGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-by-id.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-by-id.gql.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { UploadModel } from '@models'\n\nexport type UploadByIdResponse = {\n  upload: UploadModel\n}\n\nexport type UploadByIdVariables = {\n  id?: string\n}\n\nexport type UploadByIdQueryRef = QueryRef\n\n@Injectable()\nexport class UploadByIdGQL extends Query {\n  document = gql`\n    query upload($id: String!) {\n      upload(where: { id: $id }) {\n        id\n        name\n        ext\n        url\n        bucket\n        is_system\n        path\n        url\n        file_name\n        permissions\n        owner {\n          id\n          username\n          first_name\n          last_name\n          avatar {\n            url\n          }\n          vk_avatar\n        }\n        created_at\n        updated_at\n      }\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadExtensionsGQL.html":{"url":"injectables/UploadExtensionsGQL.html","title":"injectable - UploadExtensionsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadExtensionsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/upload-extensions.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/upload-extensions.gql.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\n\nexport type UploadExtensionsResponse = {\n  uploadExtensions: string[]\n}\n\nexport type UploadExtensionsVariables = Pagination & {}\n\nexport type UploadExtensionsQueryRef = QueryRef\n\n@Injectable()\nexport class UploadExtensionsGQL extends Query {\n  document = gql`\n    query uploadExtensions($size: Float!, $page: Float!) {\n      uploadExtensions(page: $page, size: $size)\n    }\n  `\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadFileComponent.html":{"url":"components/UploadFileComponent.html","title":"component - UploadFileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadFileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-file/upload-file.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadService\n                \n            \n\n\n            \n                selector\n                spomen-upload-file\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputFilesModule\n                            TuiLoaderModule\n                            TuiStepperModule\n                            TuiInputInlineModule\n                            TuiToggleModule\n                            TuiChipModule\n                            TuiSvgModule\n                            TuiLineClampModule\n                            TuiLinkModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-file.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-file.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Readonly\n                                control\n                            \n                            \n                                currentStep\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Readonly\n                                fileForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                upload\n                            \n                            \n                                uploaded\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextStep\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFile\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nextStep\n                        \n                    \n                \n            \n            \n                \nnextStep()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-file/upload-file.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fileForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UploadService\n\n                    \n                \n                \n                    \n                        Default value : inject(UploadService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService).$user()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-file/upload-file.component.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  TuiFileLike,\n  TuiInputFilesModule,\n  TuiInputInlineModule,\n  TuiLineClampModule,\n  TuiStepperModule,\n  TuiToggleModule,\n} from '@taiga-ui/kit'\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms'\nimport {\n  Component,\n  DestroyRef,\n  inject,\n  OnInit,\n  signal,\n  WritableSignal,\n} from '@angular/core'\nimport {\n  TuiAlertService,\n  TuiLoaderModule,\n  TuiSvgModule,\n  TuiLinkModule,\n} from '@taiga-ui/core'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\n\nimport { AuthService, UploadService } from '@services'\nimport { AuthenticatedUser } from '@interfaces'\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-upload-file',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputFilesModule,\n    TuiLoaderModule,\n    TuiStepperModule,\n    TuiInputInlineModule,\n    TuiToggleModule,\n    TuiChipModule,\n    TuiSvgModule,\n    TuiLineClampModule,\n    TuiLinkModule,\n  ],\n  providers: [UploadService],\n  templateUrl: './upload-file.component.html',\n  styleUrl: './upload-file.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadFile' })\nexport class UploadFileComponent implements OnInit {\n  private user: AuthenticatedUser = inject(AuthService).$user()\n  private upload: UploadService = inject(UploadService)\n  private destroyRef = inject(DestroyRef)\n  private alerts = inject(TuiAlertService)\n\n  isLoading: WritableSignal = signal(false)\n  uploaded: WritableSignal = signal(null)\n\n  readonly control = new FormControl(null)\n\n  readonly fileForm = new FormGroup({\n    name: new FormControl('file', {\n      validators: [Validators.required, Validators.minLength(2)],\n    }),\n    ext: new FormControl('.png'),\n    compress: new FormControl(false),\n    private: new FormControl(false),\n  })\n\n  currentStep: number = 1\n\n  ngOnInit() {\n    this.fileForm.controls['ext'].disable()\n  }\n\n  removeFile(): void {\n    this.control.setValue(null)\n  }\n\n  nextStep() {\n    if (!this.control.value) {\n      return\n    }\n\n    const selectedFile = this.upload.getFileParams(this.control.value)\n\n    this.fileForm.controls['name'].setValue(selectedFile.name)\n    this.fileForm.controls['ext'].setValue('.' + selectedFile.ext)\n\n    this.currentStep++\n  }\n\n  uploadFile() {\n    if (\n      !this.fileForm.controls['name'].valid ||\n      this.fileForm.controls['name'].value!.trim().length === 0\n    ) {\n      this.alerts\n        .open('Название файла не может быть меньше 2 символов')\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe()\n\n      return\n    }\n\n    const isCustomName =\n      this.control.value!.name !==\n      this.fileForm.controls['name'].value! +\n        '' +\n        this.fileForm.controls['ext'].value!\n\n    this.isLoading.set(true)\n\n    this.upload\n      .uploadFile({\n        file: this.control.value!,\n        compress: this.fileForm.controls['compress'].value!,\n        private: this.fileForm.controls['private'].value!,\n        path: this.user.id!,\n        name: isCustomName ? this.fileForm.controls['name'].value! : undefined,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: (res) => {\n          this.isLoading.set(false)\n\n          this.uploaded.set(res)\n\n          this.alerts\n            .open('Файл успешно загружен', {\n              status: 'success',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.currentStep++\n        },\n        error: () => {\n          this.isLoading.set(false)\n\n          this.alerts\n            .open('Ошибка загрузки файла', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          // TODO: Обработка превышенного лимита файлов\n        },\n      })\n  }\n}\n\n    \n\n    \n        \n  \n    @switch (this.currentStep) {\n      @case (1) {\n        \n      }\n\n      @case (2) {\n        \n          \n            \n            \n            {{ this.fileForm.controls['ext'].value }}\n          \n          \n            \n              \n                Сжать\n                \n              \n              \n                Личный\n                \n              \n            \n            \n              \n                Загрузить\n              \n            \n          \n        \n      }\n\n      @case (3) {\n            \n              \n              Файл успешно загружен\n            \n            \n              Название\n              \n              Файл\n              \n              Ссылка\n              \n              \n              \n            \n      }\n      @default {\n        \n      }\n    }\n  \n\n\n\n  \n    \n      \n    \n    \n      \n    \n    @if (this.control.value) {\n      Далее\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @switch (this.currentStep) {      @case (1) {              }      @case (2) {                                                      {{ this.fileForm.controls[\\'ext\\'].value }}                                                              Сжать                                                            Личный                                                                                    Загрузить                                                  }      @case (3) {                                        Файл успешно загружен                                      Название                            Файл                            Ссылка                                                            }      @default {              }    }                                    @if (this.control.value) {      Далее    }  '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadFileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadInfoComponent.html":{"url":"components/UploadInfoComponent.html","title":"component - UploadInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-info/upload-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UploadByIdGQL\n                                DeleteUploadByIdGQL\n                                UpdateUploadByIdGQL\n                \n            \n\n\n            \n                selector\n                spomen-upload-info\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputInlineModule\n                            TuiChipModule\n                            TuiLineClampModule\n                            TuiToggleModule\n                            TuiAvatarModule\n                            TuiLoaderModule\n                                UploadActionsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-info.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-info.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $actions\n                            \n                            \n                                $editable\n                            \n                            \n                                $edited\n                            \n                            \n                                $loading\n                            \n                            \n                                $upload\n                            \n                            \n                                    Private\n                                alerts\n                            \n                            \n                                    Private\n                                deleteUploadByIdGQL\n                            \n                            \n                                    Private\n                                destroyRef\n                            \n                            \n                                    Private\n                                dialogs\n                            \n                            \n                                isAdmin\n                            \n                            \n                                onDelete\n                            \n                            \n                                onUpdate\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Private\n                                updateUploadByIdGQL\n                            \n                            \n                                    Private\n                                uploadByIdGQL\n                            \n                            \n                                uploadId\n                            \n                            \n                                uploadInfoForm\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickOwner\n                            \n                            \n                                    Private\n                                deleteUpload\n                            \n                            \n                                    Private\n                                getUpdatedFields\n                            \n                            \n                                handleDeleteUpload\n                            \n                            \n                                handleSaveUpload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                showPrompt\n                            \n                            \n                                    Private\n                                updateUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                uploadId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        uploadId\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-info/upload-info.component.ts:95\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDelete\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-info/upload-info.component.ts:98\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickOwner\n                        \n                    \n                \n            \n            \n                \nclickOwner()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:256\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUpdatedFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUpdatedFields()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:284\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDeleteUpload\n                        \n                    \n                \n            \n            \n                \nhandleDeleteUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSaveUpload\n                        \n                    \n                \n            \n            \n                \nhandleSaveUpload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showPrompt\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPrompt(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:346\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateUpload\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUpload(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-info/upload-info.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $actions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    open: false,\n    save: this.$editable() && this.$edited(),\n    delete: this.$editable(),\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $editable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const upload = this.$upload()\n\n    return this.$upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $edited\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $upload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteUploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DeleteUploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$isAdmin()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : output()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateUploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UpdateUploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uploadByIdGQL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UploadByIdGQL)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadId\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n    isPrivate: new FormControl(false),\n    isSystem: new FormControl(false),\n    owner: new FormControl(null),\n    ownerAvatar: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$user().id!\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-info/upload-info.component.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  DestroyRef,\n  OnInit,\n  WritableSignal,\n  inject,\n  signal,\n  computed,\n  input,\n  output,\n} from '@angular/core'\n\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  ControlEvent,\n} from '@angular/forms'\n\nimport {\n  TUI_PROMPT,\n  TuiAvatarModule,\n  TuiInputInlineModule,\n  TuiLineClampModule,\n  TuiToggleModule,\n} from '@taiga-ui/kit'\n\nimport {\n  TuiAlertService,\n  TuiDialogService,\n  TuiLoaderModule,\n} from '@taiga-ui/core'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiChipModule } from '@taiga-ui/experimental'\nimport { CommonModule } from '@angular/common'\nimport * as Sentry from '@sentry/angular'\nimport { Router } from '@angular/router'\nimport { filter, map } from 'rxjs'\n\nimport {\n  DeleteUploadByIdGQL,\n  UpdateUploadByIdGQL,\n  UploadByIdGQL,\n} from '@graphql'\nimport { UploadActionsParams } from '@interfaces'\nimport { AuthService } from '@services'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nimport { UploadActionsComponent } from '../upload-actions/upload-actions.component'\n\n@Component({\n  selector: 'spomen-upload-info',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputInlineModule,\n    TuiChipModule,\n    TuiLineClampModule,\n    TuiToggleModule,\n    TuiAvatarModule,\n    TuiLoaderModule,\n    UploadActionsComponent,\n  ],\n  providers: [UploadByIdGQL, DeleteUploadByIdGQL, UpdateUploadByIdGQL],\n  templateUrl: './upload-info.component.html',\n  styleUrl: './upload-info.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadInfo' })\nexport class UploadInfoComponent implements OnInit {\n  private uploadByIdGQL = inject(UploadByIdGQL)\n  private dialogs = inject(TuiDialogService)\n  private alerts = inject(TuiAlertService)\n  private destroyRef = inject(DestroyRef)\n  private router = inject(Router)\n\n  private deleteUploadByIdGQL = inject(DeleteUploadByIdGQL)\n  private updateUploadByIdGQL = inject(UpdateUploadByIdGQL)\n\n  userId = inject(AuthService).$user().id!\n  isAdmin = inject(AuthService).$isAdmin()\n\n  uploadInfoForm: FormGroup = new FormGroup({\n    name: new FormControl(),\n    originalName: new FormControl(),\n    isPrivate: new FormControl(false),\n    isSystem: new FormControl(false),\n    owner: new FormControl(null),\n    ownerAvatar: new FormControl(null),\n  })\n\n  uploadId = input.required()\n\n  onUpdate = output()\n  onDelete = output()\n\n  $upload: WritableSignal = signal(null)\n  $loading: WritableSignal = signal(true)\n  $edited: WritableSignal = signal(false)\n\n  $editable = computed(() => {\n    const upload = this.$upload()\n\n    return this.$upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n\n  $actions = computed(() => ({\n    open: false,\n    save: this.$editable() && this.$edited(),\n    delete: this.$editable(),\n  }))\n\n  ngOnInit(): void {\n    this.uploadInfoForm.controls['isSystem'].disable()\n\n    this.uploadInfoForm.events\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        filter((e: ControlEvent) => e.source.dirty),\n        map((e) => {\n          this.$edited.set(true)\n        })\n      )\n      .subscribe()\n\n    this.uploadByIdGQL\n      .watch({\n        id: this.uploadId()!,\n      })\n      .valueChanges.subscribe({\n        next: (res) => {\n          const { upload } = res.data\n\n          this.$upload.set(upload)\n\n          this.uploadInfoForm.controls['name'].setValue(upload.name)\n          this.uploadInfoForm.controls['originalName'].setValue(\n            upload.file_name\n          )\n          this.uploadInfoForm.controls['isSystem'].setValue(upload.is_system)\n          this.uploadInfoForm.controls['isPrivate'].setValue(\n            upload.permissions.includes(Permission.OwnerOnly)\n          )\n\n          this.uploadInfoForm.controls['owner'].setValue(\n            upload.owner\n              ? upload.owner.first_name && upload.owner.last_name\n                ? upload.owner.first_name + ' ' + upload.owner.last_name\n                : upload.owner.username\n              : null\n          )\n\n          this.uploadInfoForm.controls['ownerAvatar'].setValue(\n            upload.owner\n              ? upload.owner.avatar && upload.owner.avatar.url\n                ? upload!.owner!.avatar!.url\n                : upload!.owner!.vk_avatar\n              : null\n          )\n\n          this.$loading.set(false)\n        },\n        error: () => {\n          this.alerts\n            .open('Не удалось получить информацию о загрузке', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n          this.$loading.set(false)\n        },\n      })\n  }\n\n  clickOwner() {\n    if (this.uploadInfoForm.controls['owner'].value) {\n      this.router.navigate(['/' + this.$upload()!.owner!.username])\n    }\n  }\n\n  handleSaveUpload() {\n    const updatedFields = this.getUpdatedFields()\n\n    if (updatedFields.length === 0) return\n\n    const data: { [key: string]: any } = {}\n\n    updatedFields.forEach((val) => {\n      data[Object.keys(val)[0] as string] = val[Object.keys(val)[0]]\n    })\n\n    this.updateUpload(data)\n  }\n\n  handleDeleteUpload() {\n    this.showPrompt('Удалить файл?').subscribe((res) => {\n      if (res) {\n        this.showPrompt('Вы уверены?').subscribe((res) => {\n          if (res) this.deleteUpload()\n        })\n      }\n    })\n  }\n\n  private updateUpload(data: { [key: string]: any }) {\n    this.$loading.set(true)\n\n    this.updateUploadByIdGQL\n      .mutate({\n        id: this.uploadId(),\n        data,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: () => {\n          this.onUpdate.emit({ data, id: this.uploadId() })\n\n          Object.keys(data).forEach((key) => {\n            this.$upload.update((item) =>\n              item\n                ? {\n                    ...item,\n                    [key]: data[key].set,\n                  }\n                : null\n            )\n          })\n\n          this.alerts\n            .open('Файл успешно изменён!', { status: 'success' })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.$loading.set(false)\n        },\n        error: (err) => {\n          console.log(err)\n          this.alerts\n            .open('Изменить файл не удалось', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n\n          this.$loading.set(false)\n        },\n      })\n  }\n\n  private deleteUpload() {\n    if (!this.$upload() || !this.$editable()) return\n\n    this.$loading.set(true)\n\n    this.deleteUploadByIdGQL\n      .mutate({\n        id: this.$upload()!.id,\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        next: () => {\n          this.onDelete.emit(this.$upload()!.id)\n          this.$loading.set(false)\n        },\n        error: (err) => {\n          this.$loading.set(false)\n\n          this.alerts\n            .open('Удалить файл не удалось', {\n              status: 'error',\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe()\n        },\n      })\n  }\n\n  private getUpdatedFields(): { [key: string]: any }[] {\n    return Object.keys(this.uploadInfoForm.controls)\n      .map((control) => {\n        return this.uploadInfoForm.controls[control].dirty\n          ? { [control]: this.uploadInfoForm.controls[control].value }\n          : null\n      })\n      .filter((val) => val)\n      .map((val: { [key: string]: any } | null) => {\n        const name = Object.keys(val!)[0]\n\n        let key\n        let value\n\n        switch (name) {\n          case 'name': {\n            key = 'name'\n            value =\n              this.$upload()![name] !== val![name]\n                ? { [key]: { set: val![name] } }\n                : null\n            break\n          }\n\n          case 'originalName': {\n            key = 'file_name'\n            value =\n              this.$upload()!.file_name !== val![name]\n                ? { [key]: { set: val![name] } }\n                : null\n            break\n          }\n\n          case 'isPrivate': {\n            const isPrivate = this.$upload()!.permissions.includes(\n              Permission.OwnerOnly\n            )\n            key = 'permissions'\n            value =\n              isPrivate !== val![name]\n                ? {\n                    [key]: {\n                      set: isPrivate\n                        ? this.$upload()!.permissions.filter(\n                            (p) => p !== Permission.OwnerOnly\n                          )\n                        : [\n                            ...this.$upload()!.permissions,\n                            Permission.OwnerOnly,\n                          ],\n                    },\n                  }\n                : null\n            break\n          }\n        }\n\n        return value\n      })\n      .filter((val) => val) as { [key: string]: any }[]\n  }\n\n  private showPrompt(label: string) {\n    return this.dialogs\n      .open(TUI_PROMPT, {\n        label,\n        size: 's',\n        data: {\n          yes: 'Да',\n          no: 'Нет',\n        },\n      })\n      .pipe(takeUntilDestroyed(this.destroyRef))\n  }\n}\n\n    \n\n    \n        @if (this.$upload()) {\n  \n    \n      \n        \n\n        \n          \n            Имя\n          \n          \n            \n          \n        \n        \n          \n            Тип\n          \n          \n            \n              {{ this.$upload()!.ext }}\n            \n          \n        \n        \n          \n            Ссылка\n          \n          \n            \n              \n            \n          \n        \n        \n          \n            Владелец\n          \n\n          @if (this.$upload()!.owner!) {\n            \n              \n              {{ this.uploadInfoForm.controls['owner'].value }}\n            \n          } @else {\n            Не найден\n          }\n        \n        @if (this.$editable()) {\n          \n            \n              Личный\n              \n            \n            \n              Системный\n              \n            \n          \n        }\n      \n      \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (this.$upload()) {                                                  Имя                                                                                Тип                                              {{ this.$upload()!.ext }}                                                            Ссылка                                                                                                          Владелец                    @if (this.$upload()!.owner!) {                                        {{ this.uploadInfoForm.controls[\\'owner\\'].value }}                      } @else {            Не найден          }                @if (this.$editable()) {                                    Личный                                                    Системный                                            }                  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadListItemComponent.html":{"url":"components/UploadListItemComponent.html","title":"component - UploadListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-list-item/upload-list-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                spomen-upload-list-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                RouterModule\n                            TuiSkeletonModule\n                            TuiLineClampModule\n                            TuiPreviewModule\n                            TuiButtonModule\n                            TuiChipModule\n                            TuiHintModule\n                            TuiAvatarModule\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-list-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-list-item.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alerts\n                            \n                            \n                                avatarUrl\n                            \n                            \n                                clickUpload\n                            \n                            \n                                index\n                            \n                            \n                                isLoading\n                            \n                            \n                                isPrivate\n                            \n                            \n                                owner\n                            \n                            \n                                router\n                            \n                            \n                                selectExtension\n                            \n                            \n                                showPreview\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isPrivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickUpload\n                            \n                            \n                                selectExtension\n                            \n                            \n                                showPreview\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isPrivate\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickUpload\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectExtension\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPreview\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.avatar && this.upload()!.owner!.avatar!.url\n        ? this.upload()!.owner!.avatar!.url\n        : this.upload()!.owner!.vk_avatar\n      : null\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickUpload\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPrivate\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.first_name && this.upload()!.owner!.last_name\n        ? this.upload()!.owner!.first_name +\n          ' ' +\n          this.upload()!.owner!.last_name\n        : this.upload()!.owner!.username\n      : 'System'\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectExtension\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPreview\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-list-item/upload-list-item.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiAvatarModule, TuiLineClampModule } from '@taiga-ui/kit'\n\nimport { Component, computed, inject, input, output } from '@angular/core'\n\nimport { TuiAlertService, TuiHintModule, TuiSvgModule } from '@taiga-ui/core'\n\nimport {\n  TuiButtonModule,\n  TuiChipModule,\n  TuiSkeletonModule,\n} from '@taiga-ui/experimental'\n\nimport { TuiPreviewModule } from '@taiga-ui/addon-preview'\n\nimport { CommonModule, DatePipe } from '@angular/common'\nimport { Router, RouterModule } from '@angular/router'\nimport * as Sentry from '@sentry/angular'\n\nimport { UploadModel } from '@models'\n\n@Component({\n  selector: 'spomen-upload-list-item',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    TuiSkeletonModule,\n    TuiLineClampModule,\n    TuiPreviewModule,\n    TuiButtonModule,\n    TuiChipModule,\n    TuiHintModule,\n    TuiAvatarModule,\n    TuiSvgModule,\n  ],\n  providers: [DatePipe],\n  templateUrl: './upload-list-item.component.html',\n  styleUrl: './upload-list-item.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadListItem' })\nexport class UploadListItemComponent {\n  alerts = inject(TuiAlertService)\n  router = inject(Router)\n\n  upload = input.required()\n  isPrivate = input.required()\n  isLoading = input.required()\n\n  showPreview = output()\n  clickUpload = output()\n  selectExtension = output()\n\n  avatarUrl = computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.avatar && this.upload()!.owner!.avatar!.url\n        ? this.upload()!.owner!.avatar!.url\n        : this.upload()!.owner!.vk_avatar\n      : null\n  )\n\n  owner = computed(() =>\n    this.upload()!.owner\n      ? this.upload()!.owner!.first_name && this.upload()!.owner!.last_name\n        ? this.upload()!.owner!.first_name +\n          ' ' +\n          this.upload()!.owner!.last_name\n        : this.upload()!.owner!.username\n      : 'System'\n  )\n\n  index = 0\n}\n\n    \n\n    \n        @if (this.upload() && !this.isLoading()) {\n  \n    \n      \n    \n    \n      \n      \n        \n    \n    \n      \n      \n    \n    {{ this.upload()!.ext }}\n    \n    \n      \n\n      \n    \n    \n      {{\n        this.upload()!.created_at | date: 'd MMMM, YYYY г.'\n      }}\n    \n  \n} @else {\n  \n          \n          \n    \n    \n      \n    \n    loading\n    \n    \n      \n\n      \n    \n    01.01.2001\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (this.upload() && !this.isLoading()) {                                                                    {{ this.upload()!.ext }}                                  {{        this.upload()!.created_at | date: \\'d MMMM, YYYY г.\\'      }}      } @else {                                            loading                            01.01.2001  }'\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadModel.html":{"url":"interfaces/UploadModel.html","title":"interface - UploadModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/models/upload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            file_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_system\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            owner_id\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_system\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_system:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AccountModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountModel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         Permission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccountModel } from '@models'\nimport { Permission } from '@enums'\n\nexport interface UploadModel {\n  id: string\n  bucket: string\n  name: string\n  ext: string\n  file_name: string\n  path: string\n  url: string\n  owner_id: string\n  owner?: AccountModel\n  permissions: Permission[]\n  is_system: boolean\n  created_at: Date\n  updated_at: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadPreviewComponent.html":{"url":"components/UploadPreviewComponent.html","title":"component - UploadPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/uploads/upload-preview/upload-preview.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spomen-upload-preview\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            IFrameUrlPipe\n                            PolymorpheusModule\n                            TuiPreviewModule\n                                UploadActionsComponent\n                            TuiSvgModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-preview.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-preview.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                actions\n                            \n                            \n                                destroyRef\n                            \n                            \n                                ext\n                            \n                            \n                                handleClose\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                            \n                                id\n                            \n                            \n                                index\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isEditable\n                            \n                            \n                                isLoading\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOpen\n                            \n                            \n                                isRotatable\n                            \n                            \n                                isZoomable\n                            \n                            \n                                name\n                            \n                            \n                                pdfViewers\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                preview\n                            \n                            \n                                previews\n                            \n                            \n                                    Private\n                                previewSub\n                            \n                            \n                                sanitizer\n                            \n                            \n                                title\n                            \n                            \n                                upload\n                            \n                            \n                                uploadActions\n                            \n                            \n                                url\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                handleClose\n                            \n                            \n                                handleDelete\n                            \n                            \n                                handleOpen\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    previewContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:107\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:61\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        handleClose\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleDelete\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        handleOpen\n                    \n                \n                        \n                            \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:64\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(actions: PolymorpheusContent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/uploads/upload-preview/upload-preview.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actions\n                                            \n                                                        PolymorpheusContent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('actions')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroyRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DestroyRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.ext : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleClose\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDelete\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleOpen\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.id : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$isAdmin()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => {\n    const upload = this.upload()\n\n    return this.upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TUI_IS_MOBILE)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRotatable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isZoomable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.name : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pdfViewers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPdfViewerService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('preview')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previews\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiPreviewDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previewSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sanitizer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(DomSanitizer)\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() =>\n    this.upload() ? `${this.upload()!.file_name}.${this.upload()!.ext}` : ''\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadActions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => ({\n    open: true,\n    save: false,\n    delete: this.isEditable(),\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => (this.upload() ? this.upload()!.url : ''))\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService).$user().id\n                    \n                \n                    \n                        \n                                Defined in src/app/uploads/upload-preview/upload-preview.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        previewContent\n                    \n                \n\n                \n                    \n                        getpreviewContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/uploads/upload-preview/upload-preview.component.ts:105\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  computed,\n  DestroyRef,\n  effect,\n  inject,\n  input,\n  output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core'\nimport {\n  TuiPreviewDialogService,\n  TuiPreviewModule,\n} from '@taiga-ui/addon-preview'\nimport {\n  PolymorpheusContent,\n  PolymorpheusModule,\n} from '@tinkoff/ng-polymorpheus'\nimport { TuiPdfViewerOptions, TuiPdfViewerService } from '@taiga-ui/kit'\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop'\nimport { TuiDialogContext, TuiSvgModule } from '@taiga-ui/core'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk'\nimport * as Sentry from '@sentry/angular'\nimport { Subscription } from 'rxjs'\n\nimport { AuthService } from '@services'\nimport { IFrameUrlPipe } from '@pipes'\nimport { UploadModel } from '@models'\n\nimport { UploadActionsComponent } from '../upload-actions/upload-actions.component'\n\n@Component({\n  selector: 'spomen-upload-preview',\n  standalone: true,\n  imports: [\n    IFrameUrlPipe,\n    PolymorpheusModule,\n    TuiPreviewModule,\n    UploadActionsComponent,\n    TuiSvgModule,\n  ],\n  templateUrl: './upload-preview.component.html',\n  styleUrl: './upload-preview.component.scss',\n})\n@Sentry.TraceClass({ name: 'UploadPreview' })\nexport class UploadPreviewComponent {\n  previews = inject(TuiPreviewDialogService)\n  pdfViewers = inject(TuiPdfViewerService)\n  sanitizer = inject(DomSanitizer)\n\n  destroyRef = inject(DestroyRef)\n  isMobile = inject(TUI_IS_MOBILE)\n\n  userId = inject(AuthService).$user().id\n  isAdmin = inject(AuthService).$isAdmin()\n\n  upload = input.required()\n  isLoading = input(false)\n  isOpen = input.required()\n\n  handleDelete = output()\n  handleOpen = output()\n  handleClose = output()\n\n  isRotatable = computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n  isZoomable = computed(() =>\n    this.upload() ? this.upload()!.ext === 'webp' : false\n  )\n  isEditable = computed(() => {\n    const upload = this.upload()\n\n    return this.upload()\n      ? this.isAdmin ||\n          (upload!.owner ? upload!.owner!.id === this.userId : false)\n      : false\n  })\n\n  id = computed(() => (this.upload() ? this.upload()!.id : ''))\n  title = computed(() =>\n    this.upload() ? `${this.upload()!.file_name}.${this.upload()!.ext}` : ''\n  )\n  ext = computed(() => (this.upload() ? this.upload()!.ext : ''))\n  name = computed(() => (this.upload() ? this.upload()!.name : ''))\n  url = computed(() => (this.upload() ? this.upload()!.url : ''))\n\n  uploadActions = computed(() => ({\n    open: true,\n    save: false,\n    delete: this.isEditable(),\n  }))\n\n  private previewSub: Subscription | null = null\n  index = 0\n\n  @ViewChild('preview')\n  readonly preview?: TemplateRef\n\n  @ViewChild('actions')\n  readonly actions?: TemplateRef\n\n  get previewContent(): PolymorpheusContent {\n    return this.url()\n  }\n\n  constructor() {\n    effect(() => {\n      if (this.isOpen()) {\n        this.show(this.actions)\n      } else if (this.previewSub) this.previewSub.unsubscribe()\n    })\n  }\n\n  show(actions: PolymorpheusContent) {\n    if (this.ext() === 'pdf') {\n      this.previewSub = this.pdfViewers\n        .open(\n          this.sanitizer.bypassSecurityTrustResourceUrl(\n            this.isMobile\n              ? `https://drive.google.com/viewerng/viewer?embedded=true&url=${this.url()}`\n              : this.url()\n          ),\n          {\n            label: this.name(),\n            actions,\n          }\n        )\n        .pipe(takeUntilDestroyed(this.destroyRef))\n        .subscribe({\n          complete: () => {\n            this.handleClose.emit()\n          },\n        })\n      return\n    }\n\n    this.previewSub = this.previews\n      .open(this.preview || '')\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe({\n        complete: () => {\n          this.handleClose.emit()\n        },\n      })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ this.title() }}\n    \n    \n\n    \n\n    @switch (this.ext()) {\n      @case ('webp') {\n        \n      }\n      @case ('mpga') {\n        \n      }\n      @default {\n        \n          \n          Просмотр не поддерживается\n        \n      }\n    }\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ this.title() }}                @switch (this.ext()) {      @case (\\'webp\\') {              }      @case (\\'mpga\\') {              }      @default {                            Просмотр не поддерживается              }    }    '\n    var COMPONENTS = [{'name': 'AccountInputComponent', 'selector': 'spomen-account-input'},{'name': 'AppComponent', 'selector': 'spomen-root'},{'name': 'AuthCallbackComponent', 'selector': 'spomen-auth-callback'},{'name': 'AuthComponent', 'selector': 'spomen-auth'},{'name': 'AuthPassComponent', 'selector': 'spomen-auth-pass'},{'name': 'ChangeAvatarComponent', 'selector': 'spomen-change-avatar'},{'name': 'ChatsComponent', 'selector': 'spomen-chats'},{'name': 'DashboardComponent', 'selector': 'spomen-dashboard'},{'name': 'EventsComponent', 'selector': 'spomen-events'},{'name': 'ExtensionInputComponent', 'selector': 'spomen-extension-input'},{'name': 'HeaderComponent', 'selector': 'spomen-header'},{'name': 'MeComponent', 'selector': 'spomen-me'},{'name': 'MemoriesComponent', 'selector': 'spomen-memories'},{'name': 'MenuComponent', 'selector': 'spomen-menu'},{'name': 'NavComponent', 'selector': 'spomen-nav'},{'name': 'NotFoundComponent', 'selector': 'spomen-not-found'},{'name': 'OopsComponent', 'selector': 'spomen-oops'},{'name': 'PermissionInputComponent', 'selector': 'spomen-permission-input'},{'name': 'ProfileComponent', 'selector': 'spomen-profile'},{'name': 'SignInComponent', 'selector': 'spomen-sign-in'},{'name': 'SignUpComponent', 'selector': 'spomen-sign-up'},{'name': 'TimelinesComponent', 'selector': 'spomen-timelines'},{'name': 'UploadActionsComponent', 'selector': 'spomen-upload-actions'},{'name': 'UploadFileComponent', 'selector': 'spomen-upload-file'},{'name': 'UploadInfoComponent', 'selector': 'spomen-upload-info'},{'name': 'UploadListItemComponent', 'selector': 'spomen-upload-list-item'},{'name': 'UploadPreviewComponent', 'selector': 'spomen-upload-preview'},{'name': 'UploadsComponent', 'selector': 'spomen-uploads'}];\n    var DIRECTIVES = [{'name': 'ScrollNearEndDirective', 'selector': '[scrollNearEnd]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/upload.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для загрузки файлов\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFileParams\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFileParams\n                        \n                    \n                \n            \n            \n                \ngetFileParams(file: TuiFileLike)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Получение параметров файла\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        TuiFileLike\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Файл tui-kit\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileParams\n\n                        \n                            \n                                Параметры файла\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(dto: UploadFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/upload.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UploadFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/upload.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { TuiFileLike } from '@taiga-ui/kit'\n\nimport { FileParams } from '@interfaces'\n\nimport { UploadFileDto } from '@dtos'\nimport { UploadModel } from '@models'\n\nimport { API, Permission } from '@enums'\n\nimport { env } from '@env'\n\n/**\n * Сервис для загрузки файлов\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UploadService {\n  private http: HttpClient = inject(HttpClient)\n\n  uploadFile(dto: UploadFileDto) {\n    const body = new FormData()\n\n    body.append('file', dto.file as unknown as Blob)\n    body.append('path', dto.path)\n    body.append('compress', dto.compress.toString())\n    body.append('originalName', dto.file.name)\n\n    if (dto.name) {\n      body.append('name', dto.name)\n    }\n\n    if (dto.private) {\n      body.append('acl', Permission.OwnerOnly)\n    }\n\n    return this.http.post(`${env.apiUrl}${API.UPLOAD}`, body)\n  }\n\n  /**\n   * Получение параметров файла\n   * @param {TuiFileLike} file Файл tui-kit\n   * @return {FileParams} Параметры файла\n   */\n  getFileParams(file: TuiFileLike): FileParams {\n    const filename = file.name.split('.')\n    const ext = filename[filename.length - 1]\n\n    delete filename[filename.length - 1]\n\n    return {\n      name: filename.join('.').slice(0, filename.join('-').length - 1),\n      ext,\n      mime: file.type,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadsGQL.html":{"url":"injectables/UploadsGQL.html","title":"injectable - UploadsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/graphql/queries/uploads.gql.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UploadsQuery\n                    \n                \n                    \n                        \n                                Defined in src/app/core/graphql/queries/uploads.gql.ts:63\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { gql, Query, QueryRef } from 'apollo-angular'\nimport { Injectable } from '@angular/core'\n\nimport { Pagination } from '@graphql'\nimport { UploadModel } from '@models'\nimport { Permission } from '@enums'\n\nexport type UploadsResponse = {\n  uploads: UploadModel[]\n}\n\nexport type UploadsVariables = Pagination & {\n  owner?: string[]\n  name?: string\n  ext?: string[]\n  permissions?: Permission[]\n}\n\nexport type UploadsQueryRef = QueryRef\n\nexport const UploadsQuery = gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n\n@Injectable()\nexport class UploadsGQL extends Query {\n  document = UploadsQuery\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validation.html":{"url":"classes/Validation.html","title":"class - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        match\n                        \n                    \n                \n            \n            \n                \n                        \n                    match(controlName: string, checkControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/validation.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                checkControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidatorFn } from '@angular/forms'\n\nexport class Validation {\n  static match(controlName: string, checkControlName: string): ValidatorFn {\n    return (controls: AbstractControl) => {\n      const control = controls.get(controlName)\n      const checkControl = controls.get(checkControlName)\n\n      if (checkControl?.errors && !checkControl.errors['matching']) {\n        return null\n      }\n\n      if (control?.value !== checkControl?.value) {\n        controls.get(checkControlName)?.setErrors({ matching: true })\n        return { matching: true }\n      } else {\n        return null\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n0.0.3 (2024-08-02)\nBug Fixes\n\napp: настроить commitizen (d5e22c5)\napp: Настроить commitizen (7bb7ca5)\nworkflow: Запускать релиз при публикации тега (8e4ac0a)\nworkflow: Удалить линтер для коммитов (b8284fa)\n\nFeatures\n\napp: интегрировать хук husky с commitizen (75f0adf)\nupdate package version (9dc7642)\n\nPerformance Improvements\n\napp: добавить commitizen. (2c42561)\n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.0.3 (2024-08-02)\nFeatures\n\napp: интегрировать хук husky с commitizen (75f0adf)\nupdate package version (9dc7642)\n\nBug Fixes\n\napp: настроить commitizen (d5e22c5)\napp: Настроить commitizen (7bb7ca5)\nworkflow: Запускать релиз при публикации тега (8e4ac0a)\nworkflow: Удалить линтер для коммитов (b8284fa)\n\n0.0.2 (2024-07-02)\ninit\n0.0.1 (2024-05-17)\ninit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            appInitializerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/callback/auth-callback.component.ts\n            \n            component\n            AuthCallbackComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/pass/auth-pass.component.ts\n            \n            component\n            AuthPassComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/sign-in/sign-in.component.ts\n            \n            component\n            SignInComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/auth/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/chats/chats.component.ts\n            \n            component\n            ChatsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/enter-leave.animation.ts\n            \n            variable\n            enterLeaveAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out-grid.animation.ts\n            \n            variable\n            inOutGridAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation200\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/animations/in-out.animation.ts\n            \n            variable\n            inOutAnimation500\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/account-input/account-input.component.ts\n            \n            component\n            AccountInputComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/common/components/extension-input/extension-input.component.ts\n            \n            component\n            ExtensionInputComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/common/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/components/me/me.component.ts\n            \n            component\n            MeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/components/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            component\n            NavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/common/components/nav/nav.component.ts\n            \n            variable\n            protectedRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/components/oops/oops.component.ts\n            \n            component\n            OopsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/components/permission-input/permission-input.component.ts\n            \n            component\n            PermissionInputComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/common/directives/scroll-near-end.directive.ts\n            \n            directive\n            ScrollNearEndDirective\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            function\n            apolloOptionsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/graphql.provider.ts\n            \n            variable\n            graphqlProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/models/getAccount.model.ts\n            \n            interface\n            GetAccountModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            injectable\n            DeleteUploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n            \n            variable\n            DeleteUploadByIdQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n            \n            injectable\n            UpdateUploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n            \n            variable\n            UpdateUploadByIdQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/account.gql.ts\n            \n            injectable\n            AccountGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n            \n            injectable\n            AccountsInfoByUsernameGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-by-id.gql.ts\n            \n            injectable\n            UploadByIdGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/upload-extensions.gql.ts\n            \n            injectable\n            UploadExtensionsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            injectable\n            UploadsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/graphql/queries/uploads.gql.ts\n            \n            variable\n            UploadsQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth-callback.guard.ts\n            \n            variable\n            authCallbackGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/http.interceptor.ts\n            \n            variable\n            httpRequestInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/iframe-url.pipe.ts\n            \n            pipe\n            IFrameUrlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/sex.pipe.ts\n            \n            pipe\n            SexPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/scroll.service.ts\n            \n            injectable\n            ScrollService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/memories/memories.component.ts\n            \n            component\n            MemoriesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/profile/change-avatar/change-avatar.component.ts\n            \n            component\n            ChangeAvatarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            variable\n            sexIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/timelines/timelines.component.ts\n            \n            component\n            TimelinesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-actions/upload-actions.component.ts\n            \n            component\n            UploadActionsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-file/upload-file.component.ts\n            \n            component\n            UploadFileComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-info/upload-info.component.ts\n            \n            component\n            UploadInfoComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-list-item/upload-list-item.component.ts\n            \n            component\n            UploadListItemComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/uploads/upload-preview/upload-preview.component.ts\n            \n            component\n            UploadPreviewComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/uploads/uploads.component.ts\n            \n            component\n            UploadsComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                src/envs/env.development.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.staging.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/envs/env.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/types/interfaces/account.interface.ts\n            \n            variable\n            initialAccount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            interface\n            AuthenticatedUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/interfaces/authenticated-user.interface.ts\n            \n            variable\n            initialAuthenticatedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/interfaces/env.interface.ts\n            \n            interface\n            Env\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            ApiError\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/interfaces/error.interface.ts\n            \n            interface\n            GraphqlError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/interfaces/route.interface.ts\n            \n            interface\n            Route\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/interfaces/ui.interface.ts\n            \n            interface\n            UploadActionsParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/interfaces/upload.interface.ts\n            \n            interface\n            FileParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/types/models/account.model.ts\n            \n            interface\n            AccountShortModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/types/models/auth.model.ts\n            \n            interface\n            AuthModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/models/upload.model.ts\n            \n            interface\n            UploadModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            debouncedSignal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getCurrentPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            getQueryPayload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/funcs.ts\n            \n            function\n            isNotFound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/sentry.ts\n            \n            function\n            initSentry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializePermissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/serialize.ts\n            \n            function\n            serializeRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/validation.ts\n            \n            class\n            Validation\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/cdk : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            @apollo/client : ^3.0.0\n        \n            @sentry/angular : ^8.13.0\n        \n            @sentry/cli : ^2.32.1\n        \n            @taiga-ui/addon-charts : ^3.83.0\n        \n            @taiga-ui/addon-commerce : ^3.83.0\n        \n            @taiga-ui/addon-mobile : ^3.83.0\n        \n            @taiga-ui/addon-preview : ^3.83.0\n        \n            @taiga-ui/addon-table : ^3.83.0\n        \n            @taiga-ui/addon-tablebars : ^3.83.0\n        \n            @taiga-ui/cdk : ^3.83.0\n        \n            @taiga-ui/core : ^3.83.0\n        \n            @taiga-ui/experimental : ^3.84.0\n        \n            @taiga-ui/icons : ^3.83.0\n        \n            @taiga-ui/kit : ^3.83.0\n        \n            @taiga-ui/layout : ^3.83.0\n        \n            @taiga-ui/styles : ^3.83.0\n        \n            @tinkoff/ng-dompurify : 4.0.0\n        \n            @vkid/sdk : ^1.1.0\n        \n            apollo-angular : 7.0.2\n        \n            dompurify : 3.0.6\n        \n            graphql : ^16\n        \n            normalize.css : ^8.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.6.3\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API   (src/.../api.enum.ts)\n                        \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/enums/api.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        API\n                    \n                \n                        \n                            \n                                 AUTH_ME\n                            \n                        \n                        \n                            \n                                Value : /auth\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_IN\n                            \n                        \n                        \n                            \n                                Value : /auth/token\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_UP\n                            \n                        \n                        \n                            \n                                Value : /auth/sign-up\n                            \n                        \n                        \n                            \n                                 AUTH_SIGN_OUT\n                            \n                        \n                        \n                            \n                                Value : /auth/logout\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh\n                            \n                        \n                        \n                            \n                                 AUTH_REFRESH_CLEAR\n                            \n                        \n                        \n                            \n                                Value : /auth/refresh/clear\n                            \n                        \n                        \n                            \n                                 VK_ID_EXCHANGE_TOKEN\n                            \n                        \n                        \n                            \n                                Value : /vk-id/exchange-token\n                            \n                        \n                        \n                            \n                                 ACCOUNT_AVATAR\n                            \n                        \n                        \n                            \n                                Value : /account/avatar\n                            \n                        \n                        \n                            \n                                 UPLOAD\n                            \n                        \n                        \n                            \n                                Value : /upload\n                            \n                        \n            \n        \n\n    src/types/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 OwnerOnly\n                            \n                        \n                        \n                            \n                                Value : OwnerOnly\n                            \n                        \n                        \n                            \n                                 ChatOnly\n                            \n                        \n                        \n                            \n                                Value : ChatOnly\n                            \n                        \n                        \n                            \n                                 MemberOnly\n                            \n                        \n                        \n                            \n                                Value : MemberOnly\n                            \n                        \n            \n        \n\n    src/types/enums/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : Public\n                            \n                        \n                        \n                            \n                                 Administrator\n                            \n                        \n                        \n                            \n                                Value : Administrator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apolloOptionsFactory   (src/.../graphql.provider.ts)\n                        \n                        \n                            appInitializerFactory   (src/.../app.config.ts)\n                        \n                        \n                            debouncedSignal   (src/.../funcs.ts)\n                        \n                        \n                            getCurrentPath   (src/.../funcs.ts)\n                        \n                        \n                            getQueryPayload   (src/.../funcs.ts)\n                        \n                        \n                            initSentry   (src/.../sentry.ts)\n                        \n                        \n                            isNotFound   (src/.../funcs.ts)\n                        \n                        \n                            serializePermissions   (src/.../serialize.ts)\n                        \n                        \n                            serializeRole   (src/.../serialize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apolloOptionsFactory\n                        \n                    \n                \n            \n            \n                \napolloOptionsFactory()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ApolloClientOptions\n\n                        \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appInitializerFactory\n                        \n                    \n                \n            \n            \n                \nappInitializerFactory(config: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/funcs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debouncedSignal\n                        \n                    \n                \n            \n            \n                \ndebouncedSignal(sourceSignal: Signal, debounceTimeInMs: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                sourceSignal\n                                            \n                                                        Signal\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                debounceTimeInMs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentPath\n                        \n                    \n                \n            \n            \n                \ngetCurrentPath(router: Router)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                router\n                                            \n                                                            Router\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQueryPayload\n                        \n                    \n                \n            \n            \n                \ngetQueryPayload(params: Params)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        Params\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotFound\n                        \n                    \n                \n            \n            \n                \nisNotFound(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/sentry.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initSentry\n                        \n                    \n                \n            \n            \n                \ninitSentry()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    src/utils/serialize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serializePermissions\n                        \n                    \n                \n            \n            \n                \nserializePermissions(permissions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissions\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Permission[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeRole\n                        \n                    \n                \n            \n            \n                \nserializeRole(role: Role)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nspomen-client\nПлатформа воспоминаний\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    28 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.3\n        \n            Description : Platform of memories\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountQueryRef   (src/.../account.gql.ts)\n                        \n                        \n                            AccountResponse   (src/.../account.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameQueryRef   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameResponse   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountsInfoByUsernameVariables   (src/.../accounts-info-by-username.gql.ts)\n                        \n                        \n                            AccountVariables   (src/.../account.gql.ts)\n                        \n                        \n                            AuthCallbackDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            DeleteUploadByIdResponse   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            DeleteUploadByIdVariables   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            PaginatedQuery   (src/.../index.ts)\n                        \n                        \n                            Pagination   (src/.../index.ts)\n                        \n                        \n                            RemoveAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            ScrollState   (src/.../scroll.service.ts)\n                        \n                        \n                            Sex   (src/.../sex.interface.ts)\n                        \n                        \n                            SignInDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            SignUpDto   (src/.../auth.dtos.ts)\n                        \n                        \n                            UpdateUploadByIdResponse   (src/.../update-upload-by-id.gql.ts)\n                        \n                        \n                            UpdateUploadByIdVariables   (src/.../update-upload-by-id.gql.ts)\n                        \n                        \n                            UploadAvatarDto   (src/.../account.dtos.ts)\n                        \n                        \n                            UploadByIdQueryRef   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdResponse   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadByIdVariables   (src/.../upload-by-id.gql.ts)\n                        \n                        \n                            UploadExtensionsQueryRef   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsResponse   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadExtensionsVariables   (src/.../upload-extensions.gql.ts)\n                        \n                        \n                            UploadFileDto   (src/.../upload.dtos.ts)\n                        \n                        \n                            UploadsQueryRef   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsResponse   (src/.../uploads.gql.ts)\n                        \n                        \n                            UploadsVariables   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/graphql/queries/account.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/accounts-info-by-username.gql.ts\n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameQueryRef\n                \n            \n            \n                \n                            QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AccountsInfoByUsernameVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/auth.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    AuthCallbackDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignInDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SignUpDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteUploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/index.ts\n    \n    \n        \n            \n                \n                    \n                    PaginatedQuery\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pagination\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/dtos/account.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    RemoveAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadAvatarDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/services/scroll.service.ts\n    \n    \n        \n            \n                \n                    \n                    ScrollState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/types/interfaces/sex.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Sex\n                \n            \n            \n                \n                        \"0\" | \"1\" | \"2\"\n\n                \n            \n        \n    \n    src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UpdateUploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateUploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-by-id.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadByIdQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadByIdVariables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/upload-extensions.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadExtensionsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/types/dtos/upload.dtos.ts\n    \n    \n        \n            \n                \n                    \n                    UploadFileDto\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/graphql/queries/uploads.gql.ts\n    \n    \n        \n            \n                \n                    \n                    UploadsQueryRef\n                \n            \n            \n                \n                        QueryRef\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UploadsVariables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authCallbackGuard   (src/.../auth-callback.guard.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            DeleteUploadByIdQuery   (src/.../delete-upload-by-id.gql.ts)\n                        \n                        \n                            enterLeaveAnimation   (src/.../enter-leave.animation.ts)\n                        \n                        \n                            env   (src/.../env.development.ts)\n                        \n                        \n                            env   (src/.../env.staging.ts)\n                        \n                        \n                            env   (src/.../env.ts)\n                        \n                        \n                            graphqlProvider   (src/.../graphql.provider.ts)\n                        \n                        \n                            httpRequestInterceptor   (src/.../http.interceptor.ts)\n                        \n                        \n                            initialAccount   (src/.../account.interface.ts)\n                        \n                        \n                            initialAuthenticatedUser   (src/.../authenticated-user.interface.ts)\n                        \n                        \n                            inOutAnimation200   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutAnimation500   (src/.../in-out.animation.ts)\n                        \n                        \n                            inOutGridAnimation200   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            inOutGridAnimation500   (src/.../in-out-grid.animation.ts)\n                        \n                        \n                            protectedRoutes   (src/.../nav.component.ts)\n                        \n                        \n                            sexIcons   (src/.../profile.component.ts)\n                        \n                        \n                            UpdateUploadByIdQuery   (src/.../update-upload-by-id.gql.ts)\n                        \n                        \n                            UploadsQuery   (src/.../uploads.gql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes, withViewTransitions()),\n    importProvidersFrom(TuiRootModule),\n    provideHttpClient(withInterceptors([httpRequestInterceptor])),\n    {\n      provide: ErrorHandler,\n      useValue: Sentry.createErrorHandler({\n        showDialog: false,\n      }),\n    },\n    {\n      provide: Sentry.TraceService,\n      deps: [Router],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: appInitializerFactory,\n      deps: [ConfigService, Sentry.TraceService],\n      multi: true,\n    },\n    { provide: TUI_SANITIZER, useClass: NgDompurifySanitizer },\n    {\n      provide: TUI_LANGUAGE,\n      useValue: of(TUI_RUSSIAN_LANGUAGE),\n    },\n    { provide: LOCALE_ID, useValue: 'ru' },\n    graphqlProvider,\n    ConfigService,\n    AuthService,\n    AccountService,\n    UploadService,\n    ScrollService,\n    AccountGQL,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth-callback.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authCallbackGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route) => {\n  const router = inject(Router)\n\n  const payload = getQueryPayload(route.queryParams)\n\n  return payload && payload.token\n    ? true\n    : router.createUrlTree(['/auth/sign-in'])\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  const auth = inject(AuthService)\n  const router = inject(Router)\n\n  const currentPath = getCurrentPath(router)\n  const isAuthPage = currentPath.includes('/auth')\n\n  return auth.$$isAuth.pipe(\n    withLatestFrom(auth.$$isLoading),\n    filter(([_, loading]) => !loading),\n    map(([isAuth]) => {\n      if (\n        (currentPath.includes('/auth/callback') && isAuth) ||\n        (isAuthPage && !isAuth)\n      ) {\n        return true\n      }\n\n      if (isAuthPage && isAuth) {\n        return router.createUrlTree(['/'])\n      }\n\n      return isAuth\n        ? true\n        : router.createUrlTree(['/auth'], {\n            queryParams: { url: currentPath },\n          })\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/mutations/delete-upload-by-id.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeleteUploadByIdQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  mutation deleteUploadById($id: String!) {\n    deleteUpload(where: { id: $id }) {\n      id\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/enter-leave.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enterLeaveAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('enterLeave', [\n  transition(':enter', [\n    style({\n      transform: 'translateX(-50%)',\n      opacity: 0,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(0)',\n        opacity: 1,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      transform: 'translateX(0)',\n      opacity: 1,\n      position: 'absolute',\n      top: '0',\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        transform: 'translateX(50%)',\n        opacity: 0,\n        position: 'absolute',\n        top: '0',\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/envs/env.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'local',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn:\n    'https://bca4d211be7053a6af2a25b2145fab8a@o4506607592996864.ingest.us.sentry.io/4507531555635200',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.staging.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'staging',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n}\n                    \n                \n\n\n        \n    \n\n    src/envs/env.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Env\n\n                    \n                \n                \n                    \n                        Default value : {\n  environment: 'production',\n  appId: 0,\n  redirectUrl: '',\n  apiUrl: '',\n  origin: '',\n  sentryDsn: '',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/graphql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        graphqlProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  Apollo,\n  {\n    provide: APOLLO_OPTIONS,\n    useFactory: apolloOptionsFactory,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/http.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpRequestInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  req = req.clone({\n    withCredentials: true,\n    headers: req.headers\n      .set('Access-Control-Allow-Origin', env.origin)\n      .set('Access-Control-Allow-Methods', 'GET,POST,PUT,DELETE,OPTIONS')\n      .set(\n        'Access-Control-Allow-Headers',\n        'Accept, Cache-Control, Pragma, Origin, Authorization, Content-Type, X-Requested-With, sentry-trace, baggage'\n      )\n      .set('Access-Control-Allow-Credentials', 'true'),\n  })\n\n  return next(req).pipe(\n    catchError((err: Error) => {\n      if (env.environment !== 'production') {\n        console.log(err)\n      }\n      return throwError(() => err)\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/account.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAccount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  full_name: null,\n  sex: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/types/interfaces/authenticated-user.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialAuthenticatedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticatedUser\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: null,\n  vk_id: null,\n  username: null,\n  email: null,\n  roles: [],\n  avatar: null,\n  vk_avatar: null,\n  first_name: null,\n  last_name: null,\n  sex: null,\n  full_name: null,\n  token: null,\n  birthday: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOut500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/animations/in-out-grid.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation200\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid200', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '200ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inOutGridAnimation500\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('inOutGrid500', [\n  transition(':enter', [\n    style({\n      opacity: 0,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 1,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n  transition(':leave', [\n    style({\n      opacity: 1,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    animate(\n      '500ms ease-in',\n      style({\n        opacity: 0,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      })\n    ),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    src/app/common/components/nav/nav.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        protectedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    url: '/',\n    title: 'Дашборд',\n    icon: 'tuiIconAirplayLarge',\n    exact: true,\n  },\n  {\n    url: '/memories',\n    title: 'Воспоминания',\n    icon: 'tuiIconCalendarLarge',\n  },\n  {\n    url: '/events',\n    title: 'События',\n    icon: '/images/cake.svg',\n    customIcon: true,\n  },\n  {\n    url: '/timelines',\n    title: 'Таймлайны',\n    icon: 'tuiIconChartLineLarge',\n  },\n  {\n    url: '/chats',\n    title: 'Чаты',\n    icon: 'tuiIconMessageCircleLarge',\n  },\n  {\n    url: '/uploads',\n    title: 'Файлы',\n    icon: '/images/files.svg',\n    customIcon: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/profile/profile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sexIcons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  0: '/images/tor.svg',\n  1: '/images/man.svg',\n  2: '/images/woman.svg',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/mutations/update-upload-by-id.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UpdateUploadByIdQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  mutation updateUploadById($data: UploadUpdateInput!, $id: String!) {\n    updateUpload(data: $data, where: { id: $id }) {\n      id\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n    src/app/core/graphql/queries/uploads.gql.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UploadsQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : gql`\n  query uploads(\n    $size: Float!\n    $page: Float!\n    $owner: [String!]\n    $name: String\n    $ext: [String!]\n    $permissions: [Permission!]\n  ) {\n    uploads(\n      filters: {\n        owner: { username: { in: $owner } }\n        name: { contains: $name }\n        ext: { in: $ext }\n        permissions: { hasEvery: $permissions }\n      }\n      size: $size\n      page: $page\n    ) {\n      id\n      name\n      ext\n      file_name\n      url\n      permissions\n      owner {\n        id\n        username\n        avatar {\n          url\n        }\n        vk_avatar\n        first_name\n        last_name\n      }\n      created_at\n    }\n  }\n`\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
